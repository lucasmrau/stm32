
STM32H7B3I_EVAL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001d96c  080002b0  080002b0  000102b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001728  0801dc1c  0801dc1c  0002dc1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000018  0801f344  0801f344  0002f344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801f35c  0801f35c  00110980  2**0
                  CONTENTS
  5 .ARM          00000000  0801f35c  0801f35c  00110980  2**0
                  CONTENTS
  6 .preinit_array 00000000  0801f35c  0801f35c  00110980  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000014  0801f35c  0801f35c  0002f35c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801f370  0801f370  0002f370  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000128  24000000  0801f378  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000b318  24000128  0801f4a0  00040128  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2400b440  0801f4a0  0004b440  2**0
                  ALLOC
 12 .ARM.attributes 0000002e  00000000  00000000  00110980  2**0
                  CONTENTS, READONLY
 13 FontFlashSection 0000077c  0801f4a0  0801f4a0  0003f4a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 TextFlashSection 00000018  0801fc1c  0801fc1c  0003fc1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 ExtFlashSection 000d0980  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .comment      000000c2  00000000  00000000  001109ae  2**0
                  CONTENTS, READONLY
 17 .debug_info   000a9f50  00000000  00000000  00110a70  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00013fb7  00000000  00000000  001ba9c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002fd8  00000000  00000000  001ce978  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 0000328c  00000000  00000000  001d1950  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_macro  00041c29  00000000  00000000  001d4bdc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line   00059144  00000000  00000000  00216805  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_str    00176cde  00000000  00000000  0026f949  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_frame  00008fe4  00000000  00000000  003e6628  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_loclists 0001c940  00000000  00000000  003ef60c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_line_str 0000007d  00000000  00000000  0040bf4c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002b0 <__do_global_dtors_aux>:
 80002b0:	b510      	push	{r4, lr}
 80002b2:	4c05      	ldr	r4, [pc, #20]	; (80002c8 <__do_global_dtors_aux+0x18>)
 80002b4:	7823      	ldrb	r3, [r4, #0]
 80002b6:	b933      	cbnz	r3, 80002c6 <__do_global_dtors_aux+0x16>
 80002b8:	4b04      	ldr	r3, [pc, #16]	; (80002cc <__do_global_dtors_aux+0x1c>)
 80002ba:	b113      	cbz	r3, 80002c2 <__do_global_dtors_aux+0x12>
 80002bc:	4804      	ldr	r0, [pc, #16]	; (80002d0 <__do_global_dtors_aux+0x20>)
 80002be:	f3af 8000 	nop.w
 80002c2:	2301      	movs	r3, #1
 80002c4:	7023      	strb	r3, [r4, #0]
 80002c6:	bd10      	pop	{r4, pc}
 80002c8:	24000128 	.word	0x24000128
 80002cc:	00000000 	.word	0x00000000
 80002d0:	0801dc04 	.word	0x0801dc04

080002d4 <frame_dummy>:
 80002d4:	b508      	push	{r3, lr}
 80002d6:	4b03      	ldr	r3, [pc, #12]	; (80002e4 <frame_dummy+0x10>)
 80002d8:	b11b      	cbz	r3, 80002e2 <frame_dummy+0xe>
 80002da:	4903      	ldr	r1, [pc, #12]	; (80002e8 <frame_dummy+0x14>)
 80002dc:	4803      	ldr	r0, [pc, #12]	; (80002ec <frame_dummy+0x18>)
 80002de:	f3af 8000 	nop.w
 80002e2:	bd08      	pop	{r3, pc}
 80002e4:	00000000 	.word	0x00000000
 80002e8:	2400012c 	.word	0x2400012c
 80002ec:	0801dc04 	.word	0x0801dc04

080002f0 <memchr>:
 80002f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80002f4:	2a10      	cmp	r2, #16
 80002f6:	db2b      	blt.n	8000350 <memchr+0x60>
 80002f8:	f010 0f07 	tst.w	r0, #7
 80002fc:	d008      	beq.n	8000310 <memchr+0x20>
 80002fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000302:	3a01      	subs	r2, #1
 8000304:	428b      	cmp	r3, r1
 8000306:	d02d      	beq.n	8000364 <memchr+0x74>
 8000308:	f010 0f07 	tst.w	r0, #7
 800030c:	b342      	cbz	r2, 8000360 <memchr+0x70>
 800030e:	d1f6      	bne.n	80002fe <memchr+0xe>
 8000310:	b4f0      	push	{r4, r5, r6, r7}
 8000312:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000316:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800031a:	f022 0407 	bic.w	r4, r2, #7
 800031e:	f07f 0700 	mvns.w	r7, #0
 8000322:	2300      	movs	r3, #0
 8000324:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000328:	3c08      	subs	r4, #8
 800032a:	ea85 0501 	eor.w	r5, r5, r1
 800032e:	ea86 0601 	eor.w	r6, r6, r1
 8000332:	fa85 f547 	uadd8	r5, r5, r7
 8000336:	faa3 f587 	sel	r5, r3, r7
 800033a:	fa86 f647 	uadd8	r6, r6, r7
 800033e:	faa5 f687 	sel	r6, r5, r7
 8000342:	b98e      	cbnz	r6, 8000368 <memchr+0x78>
 8000344:	d1ee      	bne.n	8000324 <memchr+0x34>
 8000346:	bcf0      	pop	{r4, r5, r6, r7}
 8000348:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800034c:	f002 0207 	and.w	r2, r2, #7
 8000350:	b132      	cbz	r2, 8000360 <memchr+0x70>
 8000352:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000356:	3a01      	subs	r2, #1
 8000358:	ea83 0301 	eor.w	r3, r3, r1
 800035c:	b113      	cbz	r3, 8000364 <memchr+0x74>
 800035e:	d1f8      	bne.n	8000352 <memchr+0x62>
 8000360:	2000      	movs	r0, #0
 8000362:	4770      	bx	lr
 8000364:	3801      	subs	r0, #1
 8000366:	4770      	bx	lr
 8000368:	2d00      	cmp	r5, #0
 800036a:	bf06      	itte	eq
 800036c:	4635      	moveq	r5, r6
 800036e:	3803      	subeq	r0, #3
 8000370:	3807      	subne	r0, #7
 8000372:	f015 0f01 	tst.w	r5, #1
 8000376:	d107      	bne.n	8000388 <memchr+0x98>
 8000378:	3001      	adds	r0, #1
 800037a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800037e:	bf02      	ittt	eq
 8000380:	3001      	addeq	r0, #1
 8000382:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000386:	3001      	addeq	r0, #1
 8000388:	bcf0      	pop	{r4, r5, r6, r7}
 800038a:	3801      	subs	r0, #1
 800038c:	4770      	bx	lr
 800038e:	bf00      	nop

08000390 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8000390:	4901      	ldr	r1, [pc, #4]	; (8000398 <vApplicationIdleHook+0x8>)
 8000392:	2000      	movs	r0, #0
 8000394:	f009 be84 	b.w	800a0a0 <vTaskSetApplicationTaskTag>
 8000398:	080015e5 	.word	0x080015e5

0800039c <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 800039c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 800039e:	2064      	movs	r0, #100	; 0x64
 80003a0:	f008 fa39 	bl	8008816 <osDelay>
  for(;;)
 80003a4:	e7fb      	b.n	800039e <StartDefaultTask+0x2>
	...

080003a8 <SystemClock_Config>:
{
 80003a8:	b500      	push	{lr}
 80003aa:	b09d      	sub	sp, #116	; 0x74
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80003ac:	224c      	movs	r2, #76	; 0x4c
 80003ae:	2100      	movs	r1, #0
 80003b0:	a809      	add	r0, sp, #36	; 0x24
 80003b2:	f01c fe02 	bl	801cfba <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80003b6:	2220      	movs	r2, #32
 80003b8:	2100      	movs	r1, #0
 80003ba:	a801      	add	r0, sp, #4
 80003bc:	f01c fdfd 	bl	801cfba <memset>
  HAL_PWREx_ConfigSupply(PWR_DIRECT_SMPS_SUPPLY);
 80003c0:	2004      	movs	r0, #4
 80003c2:	f006 fc69 	bl	8006c98 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 80003c6:	2300      	movs	r3, #0
 80003c8:	9300      	str	r3, [sp, #0]
 80003ca:	4b26      	ldr	r3, [pc, #152]	; (8000464 <SystemClock_Config+0xbc>)
 80003cc:	699a      	ldr	r2, [r3, #24]
 80003ce:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80003d2:	619a      	str	r2, [r3, #24]
 80003d4:	699a      	ldr	r2, [r3, #24]
 80003d6:	f402 4240 	and.w	r2, r2, #49152	; 0xc000
 80003da:	9200      	str	r2, [sp, #0]
 80003dc:	9a00      	ldr	r2, [sp, #0]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80003de:	699a      	ldr	r2, [r3, #24]
 80003e0:	0492      	lsls	r2, r2, #18
 80003e2:	d5fc      	bpl.n	80003de <SystemClock_Config+0x36>
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 80003e4:	4a20      	ldr	r2, [pc, #128]	; (8000468 <SystemClock_Config+0xc0>)
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80003e6:	2101      	movs	r1, #1
  RCC_OscInitStruct.PLL.PLLN = 280;
 80003e8:	200c      	movs	r0, #12
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80003ea:	f04f 0c04 	mov.w	ip, #4
  __HAL_RCC_PLL_PLLSOURCE_CONFIG(RCC_PLLSOURCE_HSE);
 80003ee:	6a93      	ldr	r3, [r2, #40]	; 0x28
 80003f0:	f023 0303 	bic.w	r3, r3, #3
 80003f4:	f043 0302 	orr.w	r3, r3, #2
 80003f8:	6293      	str	r3, [r2, #40]	; 0x28
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80003fa:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  RCC_OscInitStruct.PLL.PLLN = 280;
 80003fe:	f44f 728c 	mov.w	r2, #280	; 0x118
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000402:	e9cd 1309 	strd	r1, r3, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000406:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000408:	e9cd 3312 	strd	r3, r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 800040c:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000410:	9318      	str	r3, [sp, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000412:	2300      	movs	r3, #0
  RCC_OscInitStruct.PLL.PLLN = 280;
 8000414:	e9cd 0214 	strd	r0, r2, [sp, #80]	; 0x50
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000418:	a809      	add	r0, sp, #36	; 0x24
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 800041a:	931b      	str	r3, [sp, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 800041c:	e9cd c319 	strd	ip, r3, [sp, #100]	; 0x64
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000420:	f006 fc76 	bl	8006d10 <HAL_RCC_OscConfig>
 8000424:	b108      	cbz	r0, 800042a <SystemClock_Config+0x82>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000426:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000428:	e7fe      	b.n	8000428 <SystemClock_Config+0x80>
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800042a:	223f      	movs	r2, #63	; 0x3f
 800042c:	2303      	movs	r3, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800042e:	2107      	movs	r1, #7
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000430:	e9cd 2301 	strd	r2, r3, [sp, #4]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000434:	2340      	movs	r3, #64	; 0x40
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8000436:	f44f 6280 	mov.w	r2, #1024	; 0x400
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 800043a:	e9cd 0003 	strd	r0, r0, [sp, #12]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 800043e:	a801      	add	r0, sp, #4
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8000440:	e9cd 3305 	strd	r3, r3, [sp, #20]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8000444:	e9cd 2307 	strd	r2, r3, [sp, #28]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8000448:	f006 ffda 	bl	8007400 <HAL_RCC_ClockConfig>
 800044c:	b108      	cbz	r0, 8000452 <SystemClock_Config+0xaa>
 800044e:	b672      	cpsid	i
  while (1)
 8000450:	e7fe      	b.n	8000450 <SystemClock_Config+0xa8>
  HAL_RCC_MCOConfig(RCC_MCO1, RCC_MCO1SOURCE_HSE, RCC_MCODIV_1);
 8000452:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8000456:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
 800045a:	f006 fee1 	bl	8007220 <HAL_RCC_MCOConfig>
}
 800045e:	b01d      	add	sp, #116	; 0x74
 8000460:	f85d fb04 	ldr.w	pc, [sp], #4
 8000464:	58024800 	.word	0x58024800
 8000468:	58024400 	.word	0x58024400

0800046c <main>:
{
 800046c:	b580      	push	{r7, lr}
 800046e:	b09c      	sub	sp, #112	; 0x70
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000470:	2210      	movs	r2, #16
 8000472:	2100      	movs	r1, #0
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8000474:	2601      	movs	r6, #1
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8000476:	a80f      	add	r0, sp, #60	; 0x3c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 8000478:	2400      	movs	r4, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 800047a:	f01c fd9e 	bl	801cfba <memset>
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 800047e:	271c      	movs	r7, #28
  HAL_MPU_Disable();
 8000480:	f004 fa00 	bl	8004884 <HAL_MPU_Disable>
  MPU_InitStruct.Size = MPU_REGION_SIZE_1MB;
 8000484:	f04f 5010 	mov.w	r0, #603979776	; 0x24000000
 8000488:	4bbb      	ldr	r3, [pc, #748]	; (8000778 <main+0x30c>)
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 800048a:	2503      	movs	r5, #3
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 800048c:	f8ad 603c 	strh.w	r6, [sp, #60]	; 0x3c
  MPU_InitStruct.Size = MPU_REGION_SIZE_1MB;
 8000490:	e9cd 0310 	strd	r0, r3, [sp, #64]	; 0x40
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 8000494:	f04f 1301 	mov.w	r3, #65537	; 0x10001
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8000498:	a80f      	add	r0, sp, #60	; 0x3c
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 800049a:	9312      	str	r3, [sp, #72]	; 0x48
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800049c:	f004 fa10 	bl	80048c0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
 80004a0:	f04f 4310 	mov.w	r3, #2415919104	; 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004a4:	a80f      	add	r0, sp, #60	; 0x3c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80004a6:	f88d 4047 	strb.w	r4, [sp, #71]	; 0x47
  MPU_InitStruct.BaseAddress = 0x90000000;
 80004aa:	9310      	str	r3, [sp, #64]	; 0x40
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 80004ac:	f88d 404a 	strb.w	r4, [sp, #74]	; 0x4a
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 80004b0:	f88d 603d 	strb.w	r6, [sp, #61]	; 0x3d
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 80004b4:	f88d 7044 	strb.w	r7, [sp, #68]	; 0x44
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004b8:	f004 fa02 	bl	80048c0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 80004bc:	2302      	movs	r3, #2
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004be:	a80f      	add	r0, sp, #60	; 0x3c
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 80004c0:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
 80004c4:	f88d 303d 	strb.w	r3, [sp, #61]	; 0x3d
  MPU_InitStruct.Size = MPU_REGION_SIZE_64MB;
 80004c8:	2319      	movs	r3, #25
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80004ca:	f88d 604a 	strb.w	r6, [sp, #74]	; 0x4a
  MPU_InitStruct.Size = MPU_REGION_SIZE_64MB;
 80004ce:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004d2:	f004 f9f5 	bl	80048c0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0xD0000000;
 80004d6:	f04f 4350 	mov.w	r3, #3489660928	; 0xd0000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004da:	a80f      	add	r0, sp, #60	; 0x3c
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 80004dc:	f88d 4047 	strb.w	r4, [sp, #71]	; 0x47
  MPU_InitStruct.BaseAddress = 0xD0000000;
 80004e0:	9310      	str	r3, [sp, #64]	; 0x40
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 80004e2:	f88d 404a 	strb.w	r4, [sp, #74]	; 0x4a
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 80004e6:	2404      	movs	r4, #4
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
 80004e8:	f88d 503d 	strb.w	r5, [sp, #61]	; 0x3d
  MPU_InitStruct.Size = MPU_REGION_SIZE_512MB;
 80004ec:	f88d 7044 	strb.w	r7, [sp, #68]	; 0x44
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004f0:	f004 f9e6 	bl	80048c0 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 80004f4:	2318      	movs	r3, #24
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80004f6:	a80f      	add	r0, sp, #60	; 0x3c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
 80004f8:	f88d 403d 	strb.w	r4, [sp, #61]	; 0x3d
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
 80004fc:	f88d 3044 	strb.w	r3, [sp, #68]	; 0x44
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8000500:	f240 1301 	movw	r3, #257	; 0x101
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 8000504:	f88d 5047 	strb.w	r5, [sp, #71]	; 0x47
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8000508:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 800050c:	f004 f9d8 	bl	80048c0 <HAL_MPU_ConfigRegion>
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 8000510:	4620      	mov	r0, r4
 8000512:	f004 f9c5 	bl	80048a0 <HAL_MPU_Enable>
  \details Turns on I-Cache
  */
__STATIC_FORCEINLINE void SCB_EnableICache (void)
{
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
 8000516:	4b99      	ldr	r3, [pc, #612]	; (800077c <main+0x310>)
 8000518:	695a      	ldr	r2, [r3, #20]
 800051a:	f412 3200 	ands.w	r2, r2, #131072	; 0x20000
 800051e:	d111      	bne.n	8000544 <main+0xd8>
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000520:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000524:	f3bf 8f6f 	isb	sy

    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000528:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 800052c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000530:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000534:	695a      	ldr	r2, [r3, #20]
 8000536:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800053a:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800053c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000540:	f3bf 8f6f 	isb	sy
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
 8000544:	4a8d      	ldr	r2, [pc, #564]	; (800077c <main+0x310>)
 8000546:	6953      	ldr	r3, [r2, #20]
 8000548:	f413 3380 	ands.w	r3, r3, #65536	; 0x10000
 800054c:	d123      	bne.n	8000596 <main+0x12a>

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800054e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8000552:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 8000556:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800055a:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800055e:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8000562:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8000566:	015b      	lsls	r3, r3, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000568:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800056c:	4601      	mov	r1, r0
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 800056e:	ea46 7581 	orr.w	r5, r6, r1, lsl #30
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 8000572:	3901      	subs	r1, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8000574:	f8c2 5260 	str.w	r5, [r2, #608]	; 0x260
      } while (ways-- != 0U);
 8000578:	d2f9      	bcs.n	800056e <main+0x102>
    } while(sets-- != 0U);
 800057a:	3b20      	subs	r3, #32
 800057c:	f113 0f20 	cmn.w	r3, #32
 8000580:	d1f2      	bne.n	8000568 <main+0xfc>
 8000582:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8000586:	6953      	ldr	r3, [r2, #20]
 8000588:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800058c:	6153      	str	r3, [r2, #20]
 800058e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000592:	f3bf 8f6f 	isb	sy
  HAL_Init();
 8000596:	f004 f8bf 	bl	8004718 <HAL_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800059a:	2400      	movs	r4, #0
  SystemClock_Config();
 800059c:	f7ff ff04 	bl	80003a8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80005a0:	2214      	movs	r2, #20
 80005a2:	2100      	movs	r1, #0
 80005a4:	a80f      	add	r0, sp, #60	; 0x3c
 80005a6:	f01c fd08 	bl	801cfba <memset>
  __HAL_RCC_GPIOI_CLK_ENABLE();
 80005aa:	4b75      	ldr	r3, [pc, #468]	; (8000780 <main+0x314>)
  HAL_GPIO_WritePin(GPIOG, MCU_ACTIVE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80005ac:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80005b0:	4874      	ldr	r0, [pc, #464]	; (8000784 <main+0x318>)
  __HAL_RCC_GPIOI_CLK_ENABLE();
 80005b2:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80005b6:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80005b8:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80005bc:	2702      	movs	r7, #2
  __HAL_RCC_GPIOI_CLK_ENABLE();
 80005be:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80005c2:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 80005c6:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 80005ca:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80005ce:	9204      	str	r2, [sp, #16]
 80005d0:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80005d2:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 80005d6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80005da:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 80005de:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 80005e2:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80005e6:	9205      	str	r2, [sp, #20]
 80005e8:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 80005ea:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 80005ee:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80005f2:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 80005f6:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 80005fa:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 80005fe:	9206      	str	r2, [sp, #24]
 8000600:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000602:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000606:	f042 0208 	orr.w	r2, r2, #8
 800060a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 800060e:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000612:	f002 0208 	and.w	r2, r2, #8
 8000616:	9207      	str	r2, [sp, #28]
 8000618:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800061a:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800061e:	f042 0210 	orr.w	r2, r2, #16
 8000622:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000626:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800062a:	f002 0210 	and.w	r2, r2, #16
 800062e:	9208      	str	r2, [sp, #32]
 8000630:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000632:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000636:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800063a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 800063e:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000642:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8000646:	9209      	str	r2, [sp, #36]	; 0x24
 8000648:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800064a:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800064e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000652:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000656:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800065a:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800065e:	920a      	str	r2, [sp, #40]	; 0x28
 8000660:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000662:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000666:	f042 0220 	orr.w	r2, r2, #32
 800066a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 800066e:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000672:	f002 0220 	and.w	r2, r2, #32
 8000676:	920b      	str	r2, [sp, #44]	; 0x2c
 8000678:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800067a:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800067e:	f042 0201 	orr.w	r2, r2, #1
 8000682:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000686:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800068a:	f002 0201 	and.w	r2, r2, #1
 800068e:	920c      	str	r2, [sp, #48]	; 0x30
 8000690:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000692:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000696:	f042 0204 	orr.w	r2, r2, #4
 800069a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 800069e:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 80006a2:	f002 0204 	and.w	r2, r2, #4
 80006a6:	920d      	str	r2, [sp, #52]	; 0x34
 80006a8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80006aa:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 80006ae:	f042 0202 	orr.w	r2, r2, #2
 80006b2:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
  HAL_GPIO_WritePin(GPIOG, MCU_ACTIVE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80006b6:	2200      	movs	r2, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80006b8:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 80006bc:	f003 0302 	and.w	r3, r3, #2
 80006c0:	930e      	str	r3, [sp, #56]	; 0x38
 80006c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  HAL_GPIO_WritePin(GPIOG, MCU_ACTIVE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 80006c4:	f004 fe14 	bl	80052f0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, VSYNC_FREQ_Pin|LCD_BL_CTRL_Pin|LCD_ON_OFF_Pin, GPIO_PIN_RESET);
 80006c8:	2200      	movs	r2, #0
 80006ca:	2116      	movs	r1, #22
 80006cc:	482e      	ldr	r0, [pc, #184]	; (8000788 <main+0x31c>)
 80006ce:	f004 fe0f 	bl	80052f0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, GPIO_PIN_RESET);
 80006d2:	2200      	movs	r2, #0
 80006d4:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80006d8:	482c      	ldr	r0, [pc, #176]	; (800078c <main+0x320>)
 80006da:	f004 fe09 	bl	80052f0 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006de:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80006e2:	a90f      	add	r1, sp, #60	; 0x3c
 80006e4:	4827      	ldr	r0, [pc, #156]	; (8000784 <main+0x318>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006e6:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80006ea:	e9cd 4811 	strd	r4, r8, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80006ee:	f004 fc6f 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80006f2:	f44f 7380 	mov.w	r3, #256	; 0x100
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80006f6:	a90f      	add	r1, sp, #60	; 0x3c
 80006f8:	4823      	ldr	r0, [pc, #140]	; (8000788 <main+0x31c>)
  GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 80006fa:	9413      	str	r4, [sp, #76]	; 0x4c
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80006fc:	e9cd 370f 	strd	r3, r7, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000700:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000704:	f004 fc64 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 8000708:	2310      	movs	r3, #16
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 800070a:	a90f      	add	r1, sp, #60	; 0x3c
 800070c:	481e      	ldr	r0, [pc, #120]	; (8000788 <main+0x31c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800070e:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000712:	e9cd 4811 	strd	r4, r8, [sp, #68]	; 0x44
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 8000716:	f004 fc5b 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin;
 800071a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
  HAL_GPIO_Init(FRAME_RATE_GPIO_Port, &GPIO_InitStruct);
 800071e:	a90f      	add	r1, sp, #60	; 0x3c
 8000720:	481a      	ldr	r0, [pc, #104]	; (800078c <main+0x320>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000722:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000726:	e9cd 4811 	strd	r4, r8, [sp, #68]	; 0x44
  HAL_GPIO_Init(FRAME_RATE_GPIO_Port, &GPIO_InitStruct);
 800072a:	f004 fc51 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_BL_CTRL_Pin|LCD_ON_OFF_Pin;
 800072e:	2306      	movs	r3, #6
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000730:	4815      	ldr	r0, [pc, #84]	; (8000788 <main+0x31c>)
 8000732:	a90f      	add	r1, sp, #60	; 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000734:	e9cd 360f 	strd	r3, r6, [sp, #60]	; 0x3c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000738:	e9cd 4411 	strd	r4, r4, [sp, #68]	; 0x44
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800073c:	f004 fc48 	bl	8004fd0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8000740:	4813      	ldr	r0, [pc, #76]	; (8000790 <main+0x324>)
 8000742:	4b14      	ldr	r3, [pc, #80]	; (8000794 <main+0x328>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000744:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
 8000746:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000748:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 800074a:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800074e:	f004 f8e3 	bl	8004918 <HAL_CRC_Init>
 8000752:	b108      	cbz	r0, 8000758 <main+0x2ec>
  __ASM volatile ("cpsid i" : : : "memory");
 8000754:	b672      	cpsid	i
  while (1)
 8000756:	e7fe      	b.n	8000756 <main+0x2ea>
  hdma2d.Instance = DMA2D;
 8000758:	4b0f      	ldr	r3, [pc, #60]	; (8000798 <main+0x32c>)
  hdma2d.Init.Mode = DMA2D_R2M;
 800075a:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800075e:	490f      	ldr	r1, [pc, #60]	; (800079c <main+0x330>)
  hdma2d.Init.OutputOffset = 0;
 8000760:	e9c3 7002 	strd	r7, r0, [r3, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000764:	4618      	mov	r0, r3
  hdma2d.Init.Mode = DMA2D_R2M;
 8000766:	e9c3 1200 	strd	r1, r2, [r3]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800076a:	f004 fb67 	bl	8004e3c <HAL_DMA2D_Init>
 800076e:	4605      	mov	r5, r0
 8000770:	b1b0      	cbz	r0, 80007a0 <main+0x334>
 8000772:	b672      	cpsid	i
  while (1)
 8000774:	e7fe      	b.n	8000774 <main+0x308>
 8000776:	bf00      	nop
 8000778:	03000013 	.word	0x03000013
 800077c:	e000ed00 	.word	0xe000ed00
 8000780:	58024400 	.word	0x58024400
 8000784:	58021800 	.word	0x58021800
 8000788:	58020000 	.word	0x58020000
 800078c:	58020400 	.word	0x58020400
 8000790:	2400014c 	.word	0x2400014c
 8000794:	40023000 	.word	0x40023000
 8000798:	24000170 	.word	0x24000170
 800079c:	52001000 	.word	0x52001000
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80007a0:	2234      	movs	r2, #52	; 0x34
 80007a2:	4601      	mov	r1, r0
 80007a4:	a80f      	add	r0, sp, #60	; 0x3c
  hltdc.Instance = LTDC;
 80007a6:	4c71      	ldr	r4, [pc, #452]	; (800096c <main+0x500>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80007a8:	f01c fc07 	bl	801cfba <memset>
  hltdc.Instance = LTDC;
 80007ac:	4b70      	ldr	r3, [pc, #448]	; (8000970 <main+0x504>)
  hltdc.Init.VerticalSync = 22;
 80007ae:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
  hltdc.Init.AccumulatedVBP = 24;
 80007b2:	f04f 0918 	mov.w	r9, #24
  hltdc.Init.AccumulatedActiveH = 504;
 80007b6:	f240 3e4f 	movw	lr, #847	; 0x34f
  hltdc.Init.TotalHeigh = 526;
 80007ba:	f240 4a21 	movw	sl, #1057	; 0x421
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80007be:	4620      	mov	r0, r4
  hltdc.Init.Backcolor.Blue = 0;
 80007c0:	86a5      	strh	r5, [r4, #52]	; 0x34
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80007c2:	6125      	str	r5, [r4, #16]
  hltdc.Init.Backcolor.Red = 0;
 80007c4:	f884 5036 	strb.w	r5, [r4, #54]	; 0x36
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80007c8:	e9c4 3500 	strd	r3, r5, [r4]
  hltdc.Init.VerticalSync = 22;
 80007cc:	2316      	movs	r3, #22
 80007ce:	e9c4 c305 	strd	ip, r3, [r4, #20]
  hltdc.Init.AccumulatedVBP = 24;
 80007d2:	232f      	movs	r3, #47	; 0x2f
 80007d4:	e9c4 3907 	strd	r3, r9, [r4, #28]
  hltdc.Init.AccumulatedActiveH = 504;
 80007d8:	f44f 73fc 	mov.w	r3, #504	; 0x1f8
 80007dc:	e9c4 e309 	strd	lr, r3, [r4, #36]	; 0x24
  hltdc.Init.TotalHeigh = 526;
 80007e0:	f240 230e 	movw	r3, #526	; 0x20e
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80007e4:	e9c4 5502 	strd	r5, r5, [r4, #8]
  hltdc.Init.TotalHeigh = 526;
 80007e8:	e9c4 a30b 	strd	sl, r3, [r4, #44]	; 0x2c
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80007ec:	f005 f9d0 	bl	8005b90 <HAL_LTDC_Init>
 80007f0:	4602      	mov	r2, r0
 80007f2:	b108      	cbz	r0, 80007f8 <main+0x38c>
 80007f4:	b672      	cpsid	i
  while (1)
 80007f6:	e7fe      	b.n	80007f6 <main+0x38a>
  pLayerCfg.WindowX1 = 800;
 80007f8:	f44f 7148 	mov.w	r1, #800	; 0x320
  pLayerCfg.WindowX0 = 0;
 80007fc:	900f      	str	r0, [sp, #60]	; 0x3c
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80007fe:	f44f 6580 	mov.w	r5, #1024	; 0x400
  pLayerCfg.WindowY1 = 480;
 8000802:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  pLayerCfg.Backcolor.Blue = 0;
 8000806:	f8ad 206c 	strh.w	r2, [sp, #108]	; 0x6c
  pLayerCfg.ImageHeight = 480;
 800080a:	931a      	str	r3, [sp, #104]	; 0x68
  pLayerCfg.Backcolor.Red = 0;
 800080c:	f88d 206e 	strb.w	r2, [sp, #110]	; 0x6e
  pLayerCfg.WindowY0 = 0;
 8000810:	e9cd 1010 	strd	r1, r0, [sp, #64]	; 0x40
  pLayerCfg.Alpha = 255;
 8000814:	20ff      	movs	r0, #255	; 0xff
  pLayerCfg.Alpha0 = 0;
 8000816:	e9cd 0214 	strd	r0, r2, [sp, #80]	; 0x50
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800081a:	2005      	movs	r0, #5
  pLayerCfg.ImageWidth = 800;
 800081c:	e9cd 2118 	strd	r2, r1, [sp, #96]	; 0x60
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000820:	e9cd 5016 	strd	r5, r0, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000824:	a90f      	add	r1, sp, #60	; 0x3c
 8000826:	4620      	mov	r0, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000828:	e9cd 3712 	strd	r3, r7, [sp, #72]	; 0x48
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800082c:	f005 fa7b 	bl	8005d26 <HAL_LTDC_ConfigLayer>
 8000830:	4605      	mov	r5, r0
 8000832:	b108      	cbz	r0, 8000838 <main+0x3cc>
 8000834:	b672      	cpsid	i
  while (1)
 8000836:	e7fe      	b.n	8000836 <main+0x3ca>
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000838:	464a      	mov	r2, r9
 800083a:	4601      	mov	r1, r0
 800083c:	a80f      	add	r0, sp, #60	; 0x3c
  hospi1.Instance = OCTOSPI1;
 800083e:	4c4d      	ldr	r4, [pc, #308]	; (8000974 <main+0x508>)
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8000840:	f01c fbbb 	bl	801cfba <memset>
  hospi1.Init.FifoThreshold = 4;
 8000844:	f04f 0904 	mov.w	r9, #4
 8000848:	4b4b      	ldr	r3, [pc, #300]	; (8000978 <main+0x50c>)
  hospi1.Init.DeviceSize = 32;
 800084a:	f04f 0a20 	mov.w	sl, #32
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 800084e:	4620      	mov	r0, r4
  hospi1.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 8000850:	60a5      	str	r5, [r4, #8]
  hospi1.Init.Refresh = 0;
 8000852:	63e5      	str	r5, [r4, #60]	; 0x3c
  hospi1.Init.FifoThreshold = 4;
 8000854:	e9c4 3900 	strd	r3, r9, [r4]
  hospi1.Init.DeviceSize = 32;
 8000858:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800085c:	e9c4 3a03 	strd	r3, sl, [r4, #12]
  hospi1.Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_ENABLE;
 8000860:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  hospi1.Init.ChipSelectBoundary = 0;
 8000864:	e9c4 350b 	strd	r3, r5, [r4, #44]	; 0x2c
  hospi1.Init.DelayBlockBypass = HAL_OSPI_DELAY_BLOCK_BYPASSED;
 8000868:	2308      	movs	r3, #8
  hospi1.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 800086a:	e9c4 7505 	strd	r7, r5, [r4, #20]
  hospi1.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 800086e:	e9c4 5507 	strd	r5, r5, [r4, #28]
  hospi1.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8000872:	e9c4 8509 	strd	r8, r5, [r4, #36]	; 0x24
  hospi1.Init.MaxTran = 0;
 8000876:	e9c4 350d 	strd	r3, r5, [r4, #52]	; 0x34
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 800087a:	f005 fc85 	bl	8006188 <HAL_OSPI_Init>
 800087e:	b108      	cbz	r0, 8000884 <main+0x418>
 8000880:	b672      	cpsid	i
  while (1)
 8000882:	e7fe      	b.n	8000882 <main+0x416>
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000884:	f04f 1301 	mov.w	r3, #65537	; 0x10001
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8000888:	f241 3288 	movw	r2, #5000	; 0x1388
 800088c:	a90f      	add	r1, sp, #60	; 0x3c
 800088e:	4620      	mov	r0, r4
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_LOW;
 8000890:	9312      	str	r3, [sp, #72]	; 0x48
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_1_HIGH;
 8000892:	f503 037f 	add.w	r3, r3, #16711680	; 0xff0000
  sOspiManagerCfg.NCSPort = 1;
 8000896:	9611      	str	r6, [sp, #68]	; 0x44
  sOspiManagerCfg.IOHighPort = HAL_OSPIM_IOPORT_1_HIGH;
 8000898:	9313      	str	r3, [sp, #76]	; 0x4c
  sOspiManagerCfg.DQSPort = 1;
 800089a:	e9cd 660f 	strd	r6, r6, [sp, #60]	; 0x3c
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800089e:	f005 ff71 	bl	8006784 <HAL_OSPIM_Config>
 80008a2:	b108      	cbz	r0, 80008a8 <main+0x43c>
 80008a4:	b672      	cpsid	i
  while (1)
 80008a6:	e7fe      	b.n	80008a6 <main+0x43a>
  if (HAL_OSPI_DeInit(&hospi1) != HAL_OK)
 80008a8:	4620      	mov	r0, r4
 80008aa:	f005 fce1 	bl	8006270 <HAL_OSPI_DeInit>
 80008ae:	4604      	mov	r4, r0
 80008b0:	b108      	cbz	r0, 80008b6 <main+0x44a>
 80008b2:	b672      	cpsid	i
  while (1)
 80008b4:	e7fe      	b.n	80008b4 <main+0x448>
  BSP_OSPI_NOR_DeInit(0);
 80008b6:	f003 f9d3 	bl	8003c60 <BSP_OSPI_NOR_DeInit>
  Flash.InterfaceMode = BSP_OSPI_NOR_OPI_MODE;
 80008ba:	f240 1301 	movw	r3, #257	; 0x101
  RetVal = BSP_OSPI_NOR_Init(0, &Flash);
 80008be:	a903      	add	r1, sp, #12
 80008c0:	4620      	mov	r0, r4
  Flash.InterfaceMode = BSP_OSPI_NOR_OPI_MODE;
 80008c2:	f8ad 300c 	strh.w	r3, [sp, #12]
  RetVal = BSP_OSPI_NOR_Init(0, &Flash);
 80008c6:	f003 faad 	bl	8003e24 <BSP_OSPI_NOR_Init>
  if (RetVal != BSP_ERROR_NONE)
 80008ca:	b108      	cbz	r0, 80008d0 <main+0x464>
 80008cc:	b672      	cpsid	i
  while (1)
 80008ce:	e7fe      	b.n	80008ce <main+0x462>
  RetVal = BSP_OSPI_NOR_EnableMemoryMappedMode(0);
 80008d0:	f003 f98e 	bl	8003bf0 <BSP_OSPI_NOR_EnableMemoryMappedMode>
  if (RetVal != BSP_ERROR_NONE)
 80008d4:	b108      	cbz	r0, 80008da <main+0x46e>
 80008d6:	b672      	cpsid	i
  while (1)
 80008d8:	e7fe      	b.n	80008d8 <main+0x46c>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
 80008da:	4b28      	ldr	r3, [pc, #160]	; (800097c <main+0x510>)
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80008dc:	2140      	movs	r1, #64	; 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
 80008de:	4a28      	ldr	r2, [pc, #160]	; (8000980 <main+0x514>)
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 80008e0:	f8c3 a010 	str.w	sl, [r3, #16]
  SdramTiming.LoadToActiveDelay = 2;
 80008e4:	970f      	str	r7, [sp, #60]	; 0x3c
  hsdram2.Init.SDBank = FMC_SDRAM_BANK2;
 80008e6:	e9c3 2600 	strd	r2, r6, [r3]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80008ea:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram2.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80008ee:	e9c3 0007 	strd	r0, r0, [r3, #28]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80008f2:	e9c3 1205 	strd	r1, r2, [r3, #20]
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 80008f6:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 80008fa:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
 80008fe:	a90f      	add	r1, sp, #60	; 0x3c
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8000900:	e9c3 0209 	strd	r0, r2, [r3, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000904:	2207      	movs	r2, #7
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
 8000906:	4618      	mov	r0, r3
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8000908:	e9c3 6902 	strd	r6, r9, [r3, #8]
  SdramTiming.SelfRefreshTime = 4;
 800090c:	e9cd 2910 	strd	r2, r9, [sp, #64]	; 0x40
  SdramTiming.WriteRecoveryTime = 3;
 8000910:	e9cd 2812 	strd	r2, r8, [sp, #72]	; 0x48
  SdramTiming.RCDDelay = 2;
 8000914:	e9cd 7714 	strd	r7, r7, [sp, #80]	; 0x50
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
 8000918:	f007 fc6a 	bl	80081f0 <HAL_SDRAM_Init>
 800091c:	b108      	cbz	r0, 8000922 <main+0x4b6>
 800091e:	b672      	cpsid	i
  while (1)
 8000920:	e7fe      	b.n	8000920 <main+0x4b4>
  if (HAL_SDRAM_DeInit(&hsdram2) != HAL_OK)
 8000922:	4816      	ldr	r0, [pc, #88]	; (800097c <main+0x510>)
 8000924:	f007 fc8c 	bl	8008240 <HAL_SDRAM_DeInit>
 8000928:	4604      	mov	r4, r0
 800092a:	b108      	cbz	r0, 8000930 <main+0x4c4>
 800092c:	b672      	cpsid	i
  while (1)
 800092e:	e7fe      	b.n	800092e <main+0x4c2>
  BSP_SDRAM_DeInit(0);
 8000930:	f003 fbec 	bl	800410c <BSP_SDRAM_DeInit>
  if (BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
 8000934:	4620      	mov	r0, r4
 8000936:	f003 fdb1 	bl	800449c <BSP_SDRAM_Init>
 800093a:	b108      	cbz	r0, 8000940 <main+0x4d4>
 800093c:	b672      	cpsid	i
  while (1)
 800093e:	e7fe      	b.n	800093e <main+0x4d2>
 8000940:	9001      	str	r0, [sp, #4]
  MX_TouchGFX_Init();
 8000942:	f000 fc0e 	bl	8001162 <MX_TouchGFX_Init>
  osKernelInitialize();
 8000946:	f007 fef3 	bl	8008730 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800094a:	4a0e      	ldr	r2, [pc, #56]	; (8000984 <main+0x518>)
 800094c:	9901      	ldr	r1, [sp, #4]
 800094e:	480e      	ldr	r0, [pc, #56]	; (8000988 <main+0x51c>)
 8000950:	f007 ff1a 	bl	8008788 <osThreadNew>
 8000954:	4b0d      	ldr	r3, [pc, #52]	; (800098c <main+0x520>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8000956:	4a0e      	ldr	r2, [pc, #56]	; (8000990 <main+0x524>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8000958:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800095a:	9901      	ldr	r1, [sp, #4]
 800095c:	480d      	ldr	r0, [pc, #52]	; (8000994 <main+0x528>)
 800095e:	f007 ff13 	bl	8008788 <osThreadNew>
 8000962:	4b0d      	ldr	r3, [pc, #52]	; (8000998 <main+0x52c>)
 8000964:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8000966:	f007 fef5 	bl	8008754 <osKernelStart>
  while (1)
 800096a:	e7fe      	b.n	800096a <main+0x4fe>
 800096c:	240001d8 	.word	0x240001d8
 8000970:	50001000 	.word	0x50001000
 8000974:	24000280 	.word	0x24000280
 8000978:	52005000 	.word	0x52005000
 800097c:	240002dc 	.word	0x240002dc
 8000980:	52004140 	.word	0x52004140
 8000984:	0801dc9c 	.word	0x0801dc9c
 8000988:	0800039d 	.word	0x0800039d
 800098c:	24000148 	.word	0x24000148
 8000990:	0801dc78 	.word	0x0801dc78
 8000994:	08001167 	.word	0x08001167
 8000998:	24000144 	.word	0x24000144

0800099c <HAL_TIM_PeriodElapsedCallback>:
  if (htim->Instance == TIM6) {
 800099c:	6802      	ldr	r2, [r0, #0]
 800099e:	4b03      	ldr	r3, [pc, #12]	; (80009ac <HAL_TIM_PeriodElapsedCallback+0x10>)
 80009a0:	429a      	cmp	r2, r3
 80009a2:	d101      	bne.n	80009a8 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80009a4:	f003 bee6 	b.w	8004774 <HAL_IncTick>
}
 80009a8:	4770      	bx	lr
 80009aa:	bf00      	nop
 80009ac:	40001000 	.word	0x40001000

080009b0 <Error_Handler>:
 80009b0:	b672      	cpsid	i
  while (1)
 80009b2:	e7fe      	b.n	80009b2 <Error_Handler+0x2>

080009b4 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80009b4:	4b0a      	ldr	r3, [pc, #40]	; (80009e0 <HAL_MspInit+0x2c>)
{
 80009b6:	b082      	sub	sp, #8

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80009b8:	210f      	movs	r1, #15
 80009ba:	f06f 0001 	mvn.w	r0, #1
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80009be:	f8d3 2154 	ldr.w	r2, [r3, #340]	; 0x154
 80009c2:	f042 0202 	orr.w	r2, r2, #2
 80009c6:	f8c3 2154 	str.w	r2, [r3, #340]	; 0x154
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80009ca:	2200      	movs	r2, #0
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80009cc:	f8d3 3154 	ldr.w	r3, [r3, #340]	; 0x154
 80009d0:	f003 0302 	and.w	r3, r3, #2
 80009d4:	9301      	str	r3, [sp, #4]
 80009d6:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80009d8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80009da:	f003 bf01 	b.w	80047e0 <HAL_NVIC_SetPriority>
 80009de:	bf00      	nop
 80009e0:	58024400 	.word	0x58024400

080009e4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80009e4:	6802      	ldr	r2, [r0, #0]
{
 80009e6:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80009e8:	4b08      	ldr	r3, [pc, #32]	; (8000a0c <HAL_CRC_MspInit+0x28>)
 80009ea:	429a      	cmp	r2, r3
 80009ec:	d10c      	bne.n	8000a08 <HAL_CRC_MspInit+0x24>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80009ee:	4b08      	ldr	r3, [pc, #32]	; (8000a10 <HAL_CRC_MspInit+0x2c>)
 80009f0:	f8d3 2138 	ldr.w	r2, [r3, #312]	; 0x138
 80009f4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80009f8:	f8c3 2138 	str.w	r2, [r3, #312]	; 0x138
 80009fc:	f8d3 3138 	ldr.w	r3, [r3, #312]	; 0x138
 8000a00:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000a04:	9301      	str	r3, [sp, #4]
 8000a06:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000a08:	b002      	add	sp, #8
 8000a0a:	4770      	bx	lr
 8000a0c:	40023000 	.word	0x40023000
 8000a10:	58024400 	.word	0x58024400

08000a14 <HAL_DMA2D_MspInit>:
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
 8000a14:	4b0f      	ldr	r3, [pc, #60]	; (8000a54 <HAL_DMA2D_MspInit+0x40>)
{
 8000a16:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8000a18:	6802      	ldr	r2, [r0, #0]
 8000a1a:	429a      	cmp	r2, r3
 8000a1c:	d117      	bne.n	8000a4e <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000a1e:	4b0e      	ldr	r3, [pc, #56]	; (8000a58 <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 9, 0);
 8000a20:	2109      	movs	r1, #9
 8000a22:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000a24:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8000a28:	f042 0210 	orr.w	r2, r2, #16
 8000a2c:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    HAL_NVIC_SetPriority(DMA2D_IRQn, 9, 0);
 8000a30:	2200      	movs	r2, #0
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000a32:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8000a36:	f003 0310 	and.w	r3, r3, #16
 8000a3a:	9301      	str	r3, [sp, #4]
 8000a3c:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 9, 0);
 8000a3e:	f003 fecf 	bl	80047e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000a42:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8000a44:	b003      	add	sp, #12
 8000a46:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000a4a:	f003 befb 	b.w	8004844 <HAL_NVIC_EnableIRQ>
}
 8000a4e:	b003      	add	sp, #12
 8000a50:	f85d fb04 	ldr.w	pc, [sp], #4
 8000a54:	52001000 	.word	0x52001000
 8000a58:	58024400 	.word	0x58024400

08000a5c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8000a5c:	b5f0      	push	{r4, r5, r6, r7, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a5e:	2214      	movs	r2, #20
{
 8000a60:	b0b9      	sub	sp, #228	; 0xe4
 8000a62:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a64:	2100      	movs	r1, #0
 8000a66:	eb0d 0002 	add.w	r0, sp, r2
 8000a6a:	f01c faa6 	bl	801cfba <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000a6e:	22b8      	movs	r2, #184	; 0xb8
 8000a70:	2100      	movs	r1, #0
 8000a72:	a80a      	add	r0, sp, #40	; 0x28
 8000a74:	f01c faa1 	bl	801cfba <memset>
  if(hltdc->Instance==LTDC)
 8000a78:	6822      	ldr	r2, [r4, #0]
 8000a7a:	4b41      	ldr	r3, [pc, #260]	; (8000b80 <HAL_LTDC_MspInit+0x124>)
 8000a7c:	429a      	cmp	r2, r3
 8000a7e:	d17d      	bne.n	8000b7c <HAL_LTDC_MspInit+0x120>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000a80:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
    PeriphClkInitStruct.PLL3.PLL3M = 24;
    PeriphClkInitStruct.PLL3.PLL3N = 288;
 8000a84:	2118      	movs	r1, #24
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
    PeriphClkInitStruct.PLL3.PLL3R = 9;
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_0;
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000a86:	a80a      	add	r0, sp, #40	; 0x28
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000a88:	930a      	str	r3, [sp, #40]	; 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 288;
 8000a8a:	f44f 7390 	mov.w	r3, #288	; 0x120
 8000a8e:	e9cd 1313 	strd	r1, r3, [sp, #76]	; 0x4c
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 8000a92:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 8000a94:	e9cd 3315 	strd	r3, r3, [sp, #84]	; 0x54
    PeriphClkInitStruct.PLL3.PLL3R = 9;
 8000a98:	2309      	movs	r3, #9
 8000a9a:	9317      	str	r3, [sp, #92]	; 0x5c
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOMEDIUM;
 8000a9c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8000aa0:	9319      	str	r3, [sp, #100]	; 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000aa2:	f006 ff21 	bl	80078e8 <HAL_RCCEx_PeriphCLKConfig>
 8000aa6:	b108      	cbz	r0, 8000aac <HAL_LTDC_MspInit+0x50>
    {
      Error_Handler();
 8000aa8:	f7ff ff82 	bl	80009b0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000aac:	4b35      	ldr	r3, [pc, #212]	; (8000b84 <HAL_LTDC_MspInit+0x128>)
    PJ2     ------> LTDC_R3
    PJ3     ------> LTDC_R4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_3|GPIO_PIN_4
                          |GPIO_PIN_7|GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000aae:	2502      	movs	r5, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ab0:	2400      	movs	r4, #0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ab2:	260e      	movs	r6, #14
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ab4:	f8d3 2144 	ldr.w	r2, [r3, #324]	; 0x144
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ab8:	2703      	movs	r7, #3
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000aba:	a905      	add	r1, sp, #20
 8000abc:	4832      	ldr	r0, [pc, #200]	; (8000b88 <HAL_LTDC_MspInit+0x12c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000abe:	f042 0208 	orr.w	r2, r2, #8
 8000ac2:	f8c3 2144 	str.w	r2, [r3, #324]	; 0x144
 8000ac6:	f8d3 2144 	ldr.w	r2, [r3, #324]	; 0x144
 8000aca:	f002 0208 	and.w	r2, r2, #8
 8000ace:	9201      	str	r2, [sp, #4]
 8000ad0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000ad2:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000ad6:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000ada:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000ade:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000ae2:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8000ae6:	9202      	str	r2, [sp, #8]
 8000ae8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000aea:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000aee:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000af2:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000af6:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000afa:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8000afe:	9203      	str	r2, [sp, #12]
 8000b00:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000b02:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000b06:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000b0a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000b0e:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000b12:	9609      	str	r6, [sp, #36]	; 0x24
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000b14:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000b18:	9304      	str	r3, [sp, #16]
 8000b1a:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000b1c:	23ff      	movs	r3, #255	; 0xff
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b1e:	e9cd 4707 	strd	r4, r7, [sp, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000b22:	e9cd 3505 	strd	r3, r5, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000b26:	f004 fa53 	bl	8004fd0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_11|GPIO_PIN_10|GPIO_PIN_9
 8000b2a:	f648 637c 	movw	r3, #36476	; 0x8e7c
                          |GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000b2e:	a905      	add	r1, sp, #20
 8000b30:	4816      	ldr	r0, [pc, #88]	; (8000b8c <HAL_LTDC_MspInit+0x130>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000b32:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000b34:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b38:	e9cd 4707 	strd	r4, r7, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000b3c:	f004 fa48 	bl	8004fd0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_14|GPIO_PIN_13;
 8000b40:	f44f 43e0 	mov.w	r3, #28672	; 0x7000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000b44:	a905      	add	r1, sp, #20
 8000b46:	4812      	ldr	r0, [pc, #72]	; (8000b90 <HAL_LTDC_MspInit+0x134>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000b48:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000b4a:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000b4e:	e9cd 4707 	strd	r4, r7, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000b52:	f004 fa3d 	bl	8004fd0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8000b56:	f44f 4300 	mov.w	r3, #32768	; 0x8000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000b5a:	a905      	add	r1, sp, #20
 8000b5c:	480c      	ldr	r0, [pc, #48]	; (8000b90 <HAL_LTDC_MspInit+0x134>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000b5e:	9609      	str	r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000b60:	e9cd 3505 	strd	r3, r5, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000b64:	e9cd 4507 	strd	r4, r5, [sp, #28]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000b68:	f004 fa32 	bl	8004fd0 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 9, 0);
 8000b6c:	2058      	movs	r0, #88	; 0x58
 8000b6e:	4622      	mov	r2, r4
 8000b70:	2109      	movs	r1, #9
 8000b72:	f003 fe35 	bl	80047e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000b76:	2058      	movs	r0, #88	; 0x58
 8000b78:	f003 fe64 	bl	8004844 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8000b7c:	b039      	add	sp, #228	; 0xe4
 8000b7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b80:	50001000 	.word	0x50001000
 8000b84:	58024400 	.word	0x58024400
 8000b88:	58022800 	.word	0x58022800
 8000b8c:	58022400 	.word	0x58022400
 8000b90:	58022000 	.word	0x58022000

08000b94 <HAL_OSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspInit(OSPI_HandleTypeDef* hospi)
{
 8000b94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000b98:	b0bd      	sub	sp, #244	; 0xf4
 8000b9a:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b9c:	2214      	movs	r2, #20
 8000b9e:	2100      	movs	r1, #0
 8000ba0:	a809      	add	r0, sp, #36	; 0x24
 8000ba2:	f01c fa0a 	bl	801cfba <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ba6:	22b8      	movs	r2, #184	; 0xb8
 8000ba8:	2100      	movs	r1, #0
 8000baa:	a80e      	add	r0, sp, #56	; 0x38
 8000bac:	f01c fa05 	bl	801cfba <memset>
  if(hospi->Instance==OCTOSPI1)
 8000bb0:	6822      	ldr	r2, [r4, #0]
 8000bb2:	4b65      	ldr	r3, [pc, #404]	; (8000d48 <HAL_OSPI_MspInit+0x1b4>)
 8000bb4:	429a      	cmp	r2, r3
 8000bb6:	f040 80c3 	bne.w	8000d40 <HAL_OSPI_MspInit+0x1ac>

  /* USER CODE END OCTOSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 8000bba:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_D1HCLK;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000bbe:	a80e      	add	r0, sp, #56	; 0x38
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 8000bc0:	930e      	str	r3, [sp, #56]	; 0x38
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000bc2:	f006 fe91 	bl	80078e8 <HAL_RCCEx_PeriphCLKConfig>
 8000bc6:	b108      	cbz	r0, 8000bcc <HAL_OSPI_MspInit+0x38>
    {
      Error_Handler();
 8000bc8:	f7ff fef2 	bl	80009b0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 8000bcc:	4b5f      	ldr	r3, [pc, #380]	; (8000d4c <HAL_OSPI_MspInit+0x1b8>)
    PB2     ------> OCTOSPIM_P1_CLK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_14;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000bce:	2400      	movs	r4, #0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000bd0:	2602      	movs	r6, #2
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000bd2:	2503      	movs	r5, #3
    __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 8000bd4:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000bd8:	f04f 0809 	mov.w	r8, #9

    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000bdc:	270a      	movs	r7, #10
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000bde:	a909      	add	r1, sp, #36	; 0x24
    __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 8000be0:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000be4:	485a      	ldr	r0, [pc, #360]	; (8000d50 <HAL_OSPI_MspInit+0x1bc>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8000be6:	f04f 0940 	mov.w	r9, #64	; 0x40
    __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 8000bea:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
 8000bee:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8000bf2:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 8000bf6:	9201      	str	r2, [sp, #4]
 8000bf8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8000bfa:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8000bfe:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000c02:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
 8000c06:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8000c0a:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8000c0e:	9202      	str	r2, [sp, #8]
 8000c10:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000c12:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c16:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8000c1a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000c1e:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c22:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8000c26:	9203      	str	r2, [sp, #12]
 8000c28:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000c2a:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c2e:	f042 0208 	orr.w	r2, r2, #8
 8000c32:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000c36:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c3a:	f002 0208 	and.w	r2, r2, #8
 8000c3e:	9204      	str	r2, [sp, #16]
 8000c40:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000c42:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c46:	f042 0220 	orr.w	r2, r2, #32
 8000c4a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000c4e:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c52:	f002 0220 	and.w	r2, r2, #32
 8000c56:	9205      	str	r2, [sp, #20]
 8000c58:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c5a:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c5e:	f042 0204 	orr.w	r2, r2, #4
 8000c62:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000c66:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c6a:	f002 0204 	and.w	r2, r2, #4
 8000c6e:	9206      	str	r2, [sp, #24]
 8000c70:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c72:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c76:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000c7a:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000c7e:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c82:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8000c86:	9207      	str	r2, [sp, #28]
 8000c88:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c8a:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8000c8e:	f042 0202 	orr.w	r2, r2, #2
 8000c92:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8000c96:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000c9a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000c9e:	f003 0302 	and.w	r3, r3, #2
 8000ca2:	9308      	str	r3, [sp, #32]
 8000ca4:	9b08      	ldr	r3, [sp, #32]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ca6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000caa:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cae:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cb2:	f004 f98d 	bl	8004fd0 <HAL_GPIO_Init>
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cb6:	a909      	add	r1, sp, #36	; 0x24
 8000cb8:	4826      	ldr	r0, [pc, #152]	; (8000d54 <HAL_OSPI_MspInit+0x1c0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000cba:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cbc:	e9cd 9609 	strd	r9, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cc0:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000cc4:	f004 f984 	bl	8004fd0 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cc8:	a909      	add	r1, sp, #36	; 0x24
 8000cca:	4821      	ldr	r0, [pc, #132]	; (8000d50 <HAL_OSPI_MspInit+0x1bc>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000ccc:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cce:	e9cd 9609 	strd	r9, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cd2:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cd6:	f004 f97b 	bl	8004fd0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8000cda:	f44f 7370 	mov.w	r3, #960	; 0x3c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000cde:	a909      	add	r1, sp, #36	; 0x24
 8000ce0:	481d      	ldr	r0, [pc, #116]	; (8000d58 <HAL_OSPI_MspInit+0x1c4>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000ce2:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ce4:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ce8:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000cec:	f004 f970 	bl	8004fd0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_5;
 8000cf0:	2322      	movs	r3, #34	; 0x22
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cf2:	a909      	add	r1, sp, #36	; 0x24
 8000cf4:	4819      	ldr	r0, [pc, #100]	; (8000d5c <HAL_OSPI_MspInit+0x1c8>)
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8000cf6:	970d      	str	r7, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cf8:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000cfc:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000d00:	f004 f966 	bl	8004fd0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000d04:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d06:	a909      	add	r1, sp, #36	; 0x24
 8000d08:	4815      	ldr	r0, [pc, #84]	; (8000d60 <HAL_OSPI_MspInit+0x1cc>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000d0a:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d0e:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d12:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000d16:	f004 f95b 	bl	8004fd0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000d1a:	2304      	movs	r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d1c:	a909      	add	r1, sp, #36	; 0x24
 8000d1e:	4811      	ldr	r0, [pc, #68]	; (8000d64 <HAL_OSPI_MspInit+0x1d0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8000d20:	f8cd 8034 	str.w	r8, [sp, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000d24:	e9cd 3609 	strd	r3, r6, [sp, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000d28:	e9cd 450b 	strd	r4, r5, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d2c:	f004 f950 	bl	8004fd0 <HAL_GPIO_Init>

    /* OCTOSPI1 interrupt Init */
    HAL_NVIC_SetPriority(OCTOSPI1_IRQn, 6, 0);
 8000d30:	205c      	movs	r0, #92	; 0x5c
 8000d32:	4622      	mov	r2, r4
 8000d34:	2106      	movs	r1, #6
 8000d36:	f003 fd53 	bl	80047e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(OCTOSPI1_IRQn);
 8000d3a:	205c      	movs	r0, #92	; 0x5c
 8000d3c:	f003 fd82 	bl	8004844 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN OCTOSPI1_MspInit 1 */

  /* USER CODE END OCTOSPI1_MspInit 1 */
  }

}
 8000d40:	b03d      	add	sp, #244	; 0xf4
 8000d42:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000d46:	bf00      	nop
 8000d48:	52005000 	.word	0x52005000
 8000d4c:	58024400 	.word	0x58024400
 8000d50:	58021800 	.word	0x58021800
 8000d54:	58020c00 	.word	0x58020c00
 8000d58:	58021400 	.word	0x58021400
 8000d5c:	58020800 	.word	0x58020800
 8000d60:	58021c00 	.word	0x58021c00
 8000d64:	58020400 	.word	0x58020400

08000d68 <HAL_OSPI_MspDeInit>:
* @param hospi: OSPI handle pointer
* @retval None
*/
void HAL_OSPI_MspDeInit(OSPI_HandleTypeDef* hospi)
{
  if(hospi->Instance==OCTOSPI1)
 8000d68:	6802      	ldr	r2, [r0, #0]
{
 8000d6a:	b508      	push	{r3, lr}
  if(hospi->Instance==OCTOSPI1)
 8000d6c:	4b17      	ldr	r3, [pc, #92]	; (8000dcc <HAL_OSPI_MspDeInit+0x64>)
 8000d6e:	429a      	cmp	r2, r3
 8000d70:	d12b      	bne.n	8000dca <HAL_OSPI_MspDeInit+0x62>
  {
  /* USER CODE BEGIN OCTOSPI1_MspDeInit 0 */

  /* USER CODE END OCTOSPI1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_OCTOSPIM_CLK_DISABLE();
 8000d72:	4b17      	ldr	r3, [pc, #92]	; (8000dd0 <HAL_OSPI_MspDeInit+0x68>)
    PC1     ------> OCTOSPIM_P1_IO4
    PH3     ------> OCTOSPIM_P1_IO5
    PC5     ------> OCTOSPIM_P1_DQS
    PB2     ------> OCTOSPIM_P1_CLK
    */
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_14|GPIO_PIN_6);
 8000d74:	f244 0140 	movw	r1, #16448	; 0x4040
 8000d78:	4816      	ldr	r0, [pc, #88]	; (8000dd4 <HAL_OSPI_MspDeInit+0x6c>)
    __HAL_RCC_OCTOSPIM_CLK_DISABLE();
 8000d7a:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8000d7e:	f422 1200 	bic.w	r2, r2, #2097152	; 0x200000
 8000d82:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    __HAL_RCC_OSPI1_CLK_DISABLE();
 8000d86:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8000d8a:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8000d8e:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_14|GPIO_PIN_6);
 8000d92:	f004 fa07 	bl	80051a4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_6);
 8000d96:	2140      	movs	r1, #64	; 0x40
 8000d98:	480f      	ldr	r0, [pc, #60]	; (8000dd8 <HAL_OSPI_MspDeInit+0x70>)
 8000d9a:	f004 fa03 	bl	80051a4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9);
 8000d9e:	f44f 7170 	mov.w	r1, #960	; 0x3c0
 8000da2:	480e      	ldr	r0, [pc, #56]	; (8000ddc <HAL_OSPI_MspDeInit+0x74>)
 8000da4:	f004 f9fe 	bl	80051a4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_1|GPIO_PIN_5);
 8000da8:	2122      	movs	r1, #34	; 0x22
 8000daa:	480d      	ldr	r0, [pc, #52]	; (8000de0 <HAL_OSPI_MspDeInit+0x78>)
 8000dac:	f004 f9fa 	bl	80051a4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_3);
 8000db0:	2108      	movs	r1, #8
 8000db2:	480c      	ldr	r0, [pc, #48]	; (8000de4 <HAL_OSPI_MspDeInit+0x7c>)
 8000db4:	f004 f9f6 	bl	80051a4 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 8000db8:	480b      	ldr	r0, [pc, #44]	; (8000de8 <HAL_OSPI_MspDeInit+0x80>)
 8000dba:	2104      	movs	r1, #4
 8000dbc:	f004 f9f2 	bl	80051a4 <HAL_GPIO_DeInit>

    /* OCTOSPI1 interrupt DeInit */
    HAL_NVIC_DisableIRQ(OCTOSPI1_IRQn);
 8000dc0:	205c      	movs	r0, #92	; 0x5c
  /* USER CODE BEGIN OCTOSPI1_MspDeInit 1 */

  /* USER CODE END OCTOSPI1_MspDeInit 1 */
  }

}
 8000dc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_NVIC_DisableIRQ(OCTOSPI1_IRQn);
 8000dc6:	f003 bd4b 	b.w	8004860 <HAL_NVIC_DisableIRQ>
}
 8000dca:	bd08      	pop	{r3, pc}
 8000dcc:	52005000 	.word	0x52005000
 8000dd0:	58024400 	.word	0x58024400
 8000dd4:	58021800 	.word	0x58021800
 8000dd8:	58020c00 	.word	0x58020c00
 8000ddc:	58021400 	.word	0x58021400
 8000de0:	58020800 	.word	0x58020800
 8000de4:	58021c00 	.word	0x58021c00
 8000de8:	58020400 	.word	0x58020400

08000dec <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8000dec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000dee:	b0b5      	sub	sp, #212	; 0xd4
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8000df0:	2100      	movs	r1, #0
 8000df2:	2214      	movs	r2, #20
 8000df4:	a801      	add	r0, sp, #4
 8000df6:	f01c f8e0 	bl	801cfba <memset>
  if (FMC_Initialized) {
 8000dfa:	4b39      	ldr	r3, [pc, #228]	; (8000ee0 <HAL_SDRAM_MspInit+0xf4>)
 8000dfc:	6819      	ldr	r1, [r3, #0]
 8000dfe:	2900      	cmp	r1, #0
 8000e00:	d16b      	bne.n	8000eda <HAL_SDRAM_MspInit+0xee>
  FMC_Initialized = 1;
 8000e02:	2201      	movs	r2, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000e04:	a807      	add	r0, sp, #28
  FMC_Initialized = 1;
 8000e06:	601a      	str	r2, [r3, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000e08:	22b4      	movs	r2, #180	; 0xb4
 8000e0a:	f01c f8d6 	bl	801cfba <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 8000e0e:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e12:	a806      	add	r0, sp, #24
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 8000e14:	9306      	str	r3, [sp, #24]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e16:	f006 fd67 	bl	80078e8 <HAL_RCCEx_PeriphCLKConfig>
 8000e1a:	b108      	cbz	r0, 8000e20 <HAL_SDRAM_MspInit+0x34>
      Error_Handler();
 8000e1c:	f7ff fdc8 	bl	80009b0 <Error_Handler>
  __HAL_RCC_FMC_CLK_ENABLE();
 8000e20:	4b30      	ldr	r3, [pc, #192]	; (8000ee4 <HAL_SDRAM_MspInit+0xf8>)
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e22:	2702      	movs	r7, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e24:	2600      	movs	r6, #0
 8000e26:	2503      	movs	r5, #3
  __HAL_RCC_FMC_CLK_ENABLE();
 8000e28:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000e2c:	240c      	movs	r4, #12
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000e2e:	a901      	add	r1, sp, #4
 8000e30:	482d      	ldr	r0, [pc, #180]	; (8000ee8 <HAL_SDRAM_MspInit+0xfc>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8000e32:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000e36:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
 8000e3a:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000e3e:	9405      	str	r4, [sp, #20]
  __HAL_RCC_FMC_CLK_ENABLE();
 8000e40:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000e44:	9300      	str	r3, [sp, #0]
 8000e46:	9b00      	ldr	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e48:	f240 63ff 	movw	r3, #1791	; 0x6ff
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e4c:	e9cd 6503 	strd	r6, r5, [sp, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e50:	e9cd 3701 	strd	r3, r7, [sp, #4]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000e54:	f004 f8bc 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
 8000e58:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000e5c:	a901      	add	r1, sp, #4
 8000e5e:	4823      	ldr	r0, [pc, #140]	; (8000eec <HAL_SDRAM_MspInit+0x100>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000e60:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e62:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e66:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000e6a:	f004 f8b1 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_14|GPIO_PIN_15
 8000e6e:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000e72:	a901      	add	r1, sp, #4
 8000e74:	481e      	ldr	r0, [pc, #120]	; (8000ef0 <HAL_SDRAM_MspInit+0x104>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000e76:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e78:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e7c:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000e80:	f004 f8a6 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_12|GPIO_PIN_7
 8000e84:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000e88:	a901      	add	r1, sp, #4
 8000e8a:	481a      	ldr	r0, [pc, #104]	; (8000ef4 <HAL_SDRAM_MspInit+0x108>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000e8c:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000e8e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000e92:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000e96:	f004 f89b 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_12
 8000e9a:	f64f 73c0 	movw	r3, #65472	; 0xffc0
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000e9e:	a901      	add	r1, sp, #4
 8000ea0:	4815      	ldr	r0, [pc, #84]	; (8000ef8 <HAL_SDRAM_MspInit+0x10c>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000ea2:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ea4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ea8:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000eac:	f004 f890 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4
 8000eb0:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000eb4:	a901      	add	r1, sp, #4
 8000eb6:	4811      	ldr	r0, [pc, #68]	; (8000efc <HAL_SDRAM_MspInit+0x110>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000eb8:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000eba:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ebe:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000ec2:	f004 f885 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8000ec6:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ec8:	a901      	add	r1, sp, #4
 8000eca:	480d      	ldr	r0, [pc, #52]	; (8000f00 <HAL_SDRAM_MspInit+0x114>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000ecc:	9405      	str	r4, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ece:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000ed2:	e9cd 6503 	strd	r6, r5, [sp, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000ed6:	f004 f87b 	bl	8004fd0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8000eda:	b035      	add	sp, #212	; 0xd4
 8000edc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000ede:	bf00      	nop
 8000ee0:	24000314 	.word	0x24000314
 8000ee4:	58024400 	.word	0x58024400
 8000ee8:	58022000 	.word	0x58022000
 8000eec:	58021800 	.word	0x58021800
 8000ef0:	58020c00 	.word	0x58020c00
 8000ef4:	58021000 	.word	0x58021000
 8000ef8:	58021c00 	.word	0x58021c00
 8000efc:	58021400 	.word	0x58021400
 8000f00:	58020000 	.word	0x58020000

08000f04 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8000f04:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8000f06:	4b18      	ldr	r3, [pc, #96]	; (8000f68 <HAL_SDRAM_MspDeInit+0x64>)
 8000f08:	681a      	ldr	r2, [r3, #0]
 8000f0a:	bb62      	cbnz	r2, 8000f66 <HAL_SDRAM_MspDeInit+0x62>
  FMC_DeInitialized = 1;
 8000f0c:	2201      	movs	r2, #1
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_5|GPIO_PIN_6
 8000f0e:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8000f12:	4816      	ldr	r0, [pc, #88]	; (8000f6c <HAL_SDRAM_MspDeInit+0x68>)
  FMC_DeInitialized = 1;
 8000f14:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8000f16:	4a16      	ldr	r2, [pc, #88]	; (8000f70 <HAL_SDRAM_MspDeInit+0x6c>)
 8000f18:	f8d2 3134 	ldr.w	r3, [r2, #308]	; 0x134
 8000f1c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000f20:	f8c2 3134 	str.w	r3, [r2, #308]	; 0x134
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_5|GPIO_PIN_6
 8000f24:	f004 f93e 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
 8000f28:	f248 1133 	movw	r1, #33075	; 0x8133
 8000f2c:	4811      	ldr	r0, [pc, #68]	; (8000f74 <HAL_SDRAM_MspDeInit+0x70>)
 8000f2e:	f004 f939 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_14|GPIO_PIN_15
 8000f32:	f24c 7103 	movw	r1, #50947	; 0xc703
 8000f36:	4810      	ldr	r0, [pc, #64]	; (8000f78 <HAL_SDRAM_MspDeInit+0x74>)
 8000f38:	f004 f934 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_12|GPIO_PIN_7
 8000f3c:	f64f 7183 	movw	r1, #65411	; 0xff83
 8000f40:	480e      	ldr	r0, [pc, #56]	; (8000f7c <HAL_SDRAM_MspDeInit+0x78>)
 8000f42:	f004 f92f 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_13|GPIO_PIN_12
 8000f46:	f64f 71c0 	movw	r1, #65472	; 0xffc0
 8000f4a:	480d      	ldr	r0, [pc, #52]	; (8000f80 <HAL_SDRAM_MspDeInit+0x7c>)
 8000f4c:	f004 f92a 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4
 8000f50:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8000f54:	480b      	ldr	r0, [pc, #44]	; (8000f84 <HAL_SDRAM_MspDeInit+0x80>)
 8000f56:	f004 f925 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOA, GPIO_PIN_7);
 8000f5a:	2180      	movs	r1, #128	; 0x80
 8000f5c:	480a      	ldr	r0, [pc, #40]	; (8000f88 <HAL_SDRAM_MspDeInit+0x84>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8000f5e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOA, GPIO_PIN_7);
 8000f62:	f004 b91f 	b.w	80051a4 <HAL_GPIO_DeInit>
}
 8000f66:	bd08      	pop	{r3, pc}
 8000f68:	24000310 	.word	0x24000310
 8000f6c:	58022000 	.word	0x58022000
 8000f70:	58024400 	.word	0x58024400
 8000f74:	58021800 	.word	0x58021800
 8000f78:	58020c00 	.word	0x58020c00
 8000f7c:	58021000 	.word	0x58021000
 8000f80:	58021c00 	.word	0x58021c00
 8000f84:	58021400 	.word	0x58021400
 8000f88:	58020000 	.word	0x58020000

08000f8c <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;

  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;
/*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000f8c:	280f      	cmp	r0, #15
{
 8000f8e:	b510      	push	{r4, lr}
 8000f90:	4604      	mov	r4, r0
 8000f92:	b08a      	sub	sp, #40	; 0x28
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8000f94:	d902      	bls.n	8000f9c <HAL_InitTick+0x10>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
    uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
 8000f96:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
 8000f98:	b00a      	add	sp, #40	; 0x28
 8000f9a:	bd10      	pop	{r4, pc}
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0U);
 8000f9c:	4601      	mov	r1, r0
 8000f9e:	2200      	movs	r2, #0
 8000fa0:	2036      	movs	r0, #54	; 0x36
 8000fa2:	f003 fc1d 	bl	80047e0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8000fa6:	2036      	movs	r0, #54	; 0x36
 8000fa8:	f003 fc4c 	bl	8004844 <HAL_NVIC_EnableIRQ>
    uwTickPrio = TickPriority;
 8000fac:	4b18      	ldr	r3, [pc, #96]	; (8001010 <HAL_InitTick+0x84>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000fae:	4669      	mov	r1, sp
 8000fb0:	a802      	add	r0, sp, #8
    uwTickPrio = TickPriority;
 8000fb2:	601c      	str	r4, [r3, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
 8000fb4:	4b17      	ldr	r3, [pc, #92]	; (8001014 <HAL_InitTick+0x88>)
 8000fb6:	f8d3 2148 	ldr.w	r2, [r3, #328]	; 0x148
 8000fba:	f042 0210 	orr.w	r2, r2, #16
 8000fbe:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
 8000fc2:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8000fc6:	f003 0310 	and.w	r3, r3, #16
 8000fca:	9301      	str	r3, [sp, #4]
 8000fcc:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8000fce:	f006 fb71 	bl	80076b4 <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8000fd2:	9b07      	ldr	r3, [sp, #28]
 8000fd4:	b9c3      	cbnz	r3, 8001008 <HAL_InitTick+0x7c>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8000fd6:	f006 fb5b 	bl	8007690 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8000fda:	4c0f      	ldr	r4, [pc, #60]	; (8001018 <HAL_InitTick+0x8c>)
 8000fdc:	4b0f      	ldr	r3, [pc, #60]	; (800101c <HAL_InitTick+0x90>)
 8000fde:	6023      	str	r3, [r4, #0]
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8000fe0:	f240 33e7 	movw	r3, #999	; 0x3e7
 8000fe4:	60e3      	str	r3, [r4, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8000fe6:	4b0e      	ldr	r3, [pc, #56]	; (8001020 <HAL_InitTick+0x94>)
 8000fe8:	fbb0 f0f3 	udiv	r0, r0, r3
 8000fec:	3801      	subs	r0, #1
  htim6.Init.ClockDivision = 0;
 8000fee:	2300      	movs	r3, #0
  htim6.Init.Prescaler = uwPrescalerValue;
 8000ff0:	6060      	str	r0, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8000ff2:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8000ff4:	6123      	str	r3, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ff6:	60a3      	str	r3, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8000ff8:	f007 fac0 	bl	800857c <HAL_TIM_Base_Init>
 8000ffc:	2800      	cmp	r0, #0
 8000ffe:	d1ca      	bne.n	8000f96 <HAL_InitTick+0xa>
    return HAL_TIM_Base_Start_IT(&htim6);
 8001000:	4620      	mov	r0, r4
 8001002:	f007 f963 	bl	80082cc <HAL_TIM_Base_Start_IT>
 8001006:	e7c7      	b.n	8000f98 <HAL_InitTick+0xc>
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8001008:	f006 fb42 	bl	8007690 <HAL_RCC_GetPCLK1Freq>
 800100c:	0040      	lsls	r0, r0, #1
 800100e:	e7e4      	b.n	8000fda <HAL_InitTick+0x4e>
 8001010:	24000048 	.word	0x24000048
 8001014:	58024400 	.word	0x58024400
 8001018:	24000318 	.word	0x24000318
 800101c:	40001000 	.word	0x40001000
 8001020:	000f4240 	.word	0x000f4240

08001024 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8001024:	e7fe      	b.n	8001024 <NMI_Handler>

08001026 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001026:	e7fe      	b.n	8001026 <HardFault_Handler>

08001028 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001028:	e7fe      	b.n	8001028 <MemManage_Handler>

0800102a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800102a:	e7fe      	b.n	800102a <BusFault_Handler>

0800102c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800102c:	e7fe      	b.n	800102c <UsageFault_Handler>

0800102e <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800102e:	4770      	bx	lr

08001030 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8001030:	4801      	ldr	r0, [pc, #4]	; (8001038 <TIM6_DAC_IRQHandler+0x8>)
 8001032:	f007 b98d 	b.w	8008350 <HAL_TIM_IRQHandler>
 8001036:	bf00      	nop
 8001038:	24000318 	.word	0x24000318

0800103c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800103c:	4801      	ldr	r0, [pc, #4]	; (8001044 <LTDC_IRQHandler+0x8>)
 800103e:	f004 be15 	b.w	8005c6c <HAL_LTDC_IRQHandler>
 8001042:	bf00      	nop
 8001044:	240001d8 	.word	0x240001d8

08001048 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001048:	4801      	ldr	r0, [pc, #4]	; (8001050 <DMA2D_IRQHandler+0x8>)
 800104a:	f003 bf36 	b.w	8004eba <HAL_DMA2D_IRQHandler>
 800104e:	bf00      	nop
 8001050:	24000170 	.word	0x24000170

08001054 <OCTOSPI1_IRQHandler>:
void OCTOSPI1_IRQHandler(void)
{
  /* USER CODE BEGIN OCTOSPI1_IRQn 0 */

  /* USER CODE END OCTOSPI1_IRQn 0 */
  HAL_OSPI_IRQHandler(&hospi1);
 8001054:	4801      	ldr	r0, [pc, #4]	; (800105c <OCTOSPI1_IRQHandler+0x8>)
 8001056:	f005 baa9 	b.w	80065ac <HAL_OSPI_IRQHandler>
 800105a:	bf00      	nop
 800105c:	24000280 	.word	0x24000280

08001060 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001060:	2001      	movs	r0, #1
 8001062:	4770      	bx	lr

08001064 <_kill>:

int _kill(int pid, int sig)
{
 8001064:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001066:	f01c f84b 	bl	801d100 <__errno>
 800106a:	2316      	movs	r3, #22
 800106c:	6003      	str	r3, [r0, #0]
	return -1;
}
 800106e:	f04f 30ff 	mov.w	r0, #4294967295
 8001072:	bd08      	pop	{r3, pc}

08001074 <_exit>:

void _exit (int status)
{
 8001074:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001076:	f01c f843 	bl	801d100 <__errno>
 800107a:	2316      	movs	r3, #22
 800107c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800107e:	e7fe      	b.n	800107e <_exit+0xa>

08001080 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001080:	b570      	push	{r4, r5, r6, lr}
 8001082:	460d      	mov	r5, r1
 8001084:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001086:	460e      	mov	r6, r1
 8001088:	1b73      	subs	r3, r6, r5
 800108a:	429c      	cmp	r4, r3
 800108c:	dc01      	bgt.n	8001092 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800108e:	4620      	mov	r0, r4
 8001090:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001092:	f3af 8000 	nop.w
 8001096:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800109a:	e7f5      	b.n	8001088 <_read+0x8>

0800109c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800109c:	b570      	push	{r4, r5, r6, lr}
 800109e:	460d      	mov	r5, r1
 80010a0:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010a2:	460e      	mov	r6, r1
 80010a4:	1b73      	subs	r3, r6, r5
 80010a6:	429c      	cmp	r4, r3
 80010a8:	dc01      	bgt.n	80010ae <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 80010aa:	4620      	mov	r0, r4
 80010ac:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 80010ae:	f816 0b01 	ldrb.w	r0, [r6], #1
 80010b2:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80010b6:	e7f5      	b.n	80010a4 <_write+0x8>

080010b8 <_close>:

int _close(int file)
{
	return -1;
}
 80010b8:	f04f 30ff 	mov.w	r0, #4294967295
 80010bc:	4770      	bx	lr

080010be <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80010be:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	return 0;
}
 80010c2:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
 80010c4:	604b      	str	r3, [r1, #4]
}
 80010c6:	4770      	bx	lr

080010c8 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80010c8:	2001      	movs	r0, #1
 80010ca:	4770      	bx	lr

080010cc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80010cc:	2000      	movs	r0, #0
 80010ce:	4770      	bx	lr

080010d0 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80010d0:	4a0b      	ldr	r2, [pc, #44]	; (8001100 <_sbrk+0x30>)
{
 80010d2:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 80010d4:	6811      	ldr	r1, [r2, #0]
{
 80010d6:	b510      	push	{r4, lr}
  if (NULL == __sbrk_heap_end)
 80010d8:	b909      	cbnz	r1, 80010de <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 80010da:	490a      	ldr	r1, [pc, #40]	; (8001104 <_sbrk+0x34>)
 80010dc:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80010de:	6810      	ldr	r0, [r2, #0]
 80010e0:	4909      	ldr	r1, [pc, #36]	; (8001108 <_sbrk+0x38>)
 80010e2:	4c0a      	ldr	r4, [pc, #40]	; (800110c <_sbrk+0x3c>)
 80010e4:	4403      	add	r3, r0
 80010e6:	1b09      	subs	r1, r1, r4
 80010e8:	428b      	cmp	r3, r1
 80010ea:	d906      	bls.n	80010fa <_sbrk+0x2a>
  {
    errno = ENOMEM;
 80010ec:	f01c f808 	bl	801d100 <__errno>
 80010f0:	230c      	movs	r3, #12
 80010f2:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80010f4:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 80010f8:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 80010fa:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 80010fc:	e7fc      	b.n	80010f8 <_sbrk+0x28>
 80010fe:	bf00      	nop
 8001100:	24000364 	.word	0x24000364
 8001104:	2400b440 	.word	0x2400b440
 8001108:	24100000 	.word	0x24100000
 800110c:	00001000 	.word	0x00001000

08001110 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8001110:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001148 <LoopFillZerobss+0x10>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8001114:	f003 faaa 	bl	800466c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 8001118:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800111a:	e003      	b.n	8001124 <LoopCopyDataInit>

0800111c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800111c:	4b0b      	ldr	r3, [pc, #44]	; (800114c <LoopFillZerobss+0x14>)
  ldr  r3, [r3, r1]
 800111e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001120:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001122:	3104      	adds	r1, #4

08001124 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001124:	480a      	ldr	r0, [pc, #40]	; (8001150 <LoopFillZerobss+0x18>)
  ldr  r3, =_edata
 8001126:	4b0b      	ldr	r3, [pc, #44]	; (8001154 <LoopFillZerobss+0x1c>)
  adds  r2, r0, r1
 8001128:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800112a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 800112c:	d3f6      	bcc.n	800111c <CopyDataInit>
  ldr  r2, =_sbss
 800112e:	4a0a      	ldr	r2, [pc, #40]	; (8001158 <LoopFillZerobss+0x20>)
  b  LoopFillZerobss
 8001130:	e002      	b.n	8001138 <LoopFillZerobss>

08001132 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 8001132:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001134:	f842 3b04 	str.w	r3, [r2], #4

08001138 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001138:	4b08      	ldr	r3, [pc, #32]	; (800115c <LoopFillZerobss+0x24>)
  cmp  r2, r3
 800113a:	429a      	cmp	r2, r3
  bcc  FillZerobss
 800113c:	d3f9      	bcc.n	8001132 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800113e:	f01b ffe5 	bl	801d10c <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001142:	f7ff f993 	bl	800046c <main>
  bx  lr
 8001146:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001148:	24100000 	.word	0x24100000
  ldr  r3, =_sidata
 800114c:	0801f378 	.word	0x0801f378
  ldr  r0, =_sdata
 8001150:	24000000 	.word	0x24000000
  ldr  r3, =_edata
 8001154:	24000128 	.word	0x24000128
  ldr  r2, =_sbss
 8001158:	24000128 	.word	0x24000128
  ldr  r3, = _ebss
 800115c:	2400b440 	.word	0x2400b440

08001160 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001160:	e7fe      	b.n	8001160 <ADC_IRQHandler>

08001162 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 8001162:	f000 bcd9 	b.w	8001b18 <touchgfx_init>

08001166 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8001166:	f000 bd47 	b.w	8001bf8 <touchgfx_taskEntry>

0800116a <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 800116a:	6840      	ldr	r0, [r0, #4]
    }
 800116c:	4770      	bx	lr

0800116e <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 800116e:	6041      	str	r1, [r0, #4]
    }
 8001170:	4770      	bx	lr
	...

08001174 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8001174:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8001178:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 800117c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001180:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
 8001184:	4b05      	ldr	r3, [pc, #20]	; (800119c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
 8001186:	4a06      	ldr	r2, [pc, #24]	; (80011a0 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
 8001188:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	; 0xfb0
 800118c:	430a      	orrs	r2, r1
 800118e:	f8c3 2fb0 	str.w	r2, [r3, #4016]	; 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
 8001192:	681a      	ldr	r2, [r3, #0]
 8001194:	f042 0201 	orr.w	r2, r2, #1
 8001198:	601a      	str	r2, [r3, #0]
}
 800119a:	4770      	bx	lr
 800119c:	e0001000 	.word	0xe0001000
 80011a0:	c5acce55 	.word	0xc5acce55

080011a4 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 80011a4:	1a51      	subs	r1, r2, r1
 80011a6:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 80011aa:	fbb1 f0f3 	udiv	r0, r1, r3
 80011ae:	4770      	bx	lr

080011b0 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 80011b0:	4b01      	ldr	r3, [pc, #4]	; (80011b8 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 80011b2:	6858      	ldr	r0, [r3, #4]
}
 80011b4:	4770      	bx	lr
 80011b6:	bf00      	nop
 80011b8:	e0001000 	.word	0xe0001000

080011bc <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 80011bc:	4770      	bx	lr

080011be <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 80011be:	b510      	push	{r4, lr}
 80011c0:	4604      	mov	r4, r0
 80011c2:	210c      	movs	r1, #12
 80011c4:	f01b fcc5 	bl	801cb52 <_ZdlPvj>
 80011c8:	4620      	mov	r0, r4
 80011ca:	bd10      	pop	{r4, pc}

080011cc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80011cc:	6803      	ldr	r3, [r0, #0]
{
 80011ce:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80011d0:	691b      	ldr	r3, [r3, #16]
{
 80011d2:	4604      	mov	r4, r0
    if (active) //idle task sched out
 80011d4:	b131      	cbz	r1, 80011e4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 80011d6:	4798      	blx	r3
 80011d8:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 80011da:	6863      	ldr	r3, [r4, #4]
 80011dc:	1a9b      	subs	r3, r3, r2
 80011de:	4418      	add	r0, r3
 80011e0:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 80011e2:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 80011e4:	4798      	blx	r3
 80011e6:	60a0      	str	r0, [r4, #8]
}
 80011e8:	e7fb      	b.n	80011e2 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

080011ea <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80011ea:	4770      	bx	lr

080011ec <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h7b3i_eval_ts.h"

void STM32TouchController::init()
{
 80011ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    * Initialize touch controller and driver
    *
    */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_Y;
    hTS.Accuracy = 0;
 80011ee:	2304      	movs	r3, #4
 80011f0:	2000      	movs	r0, #0
    hTS.Width = 800;
    hTS.Height = 480;
 80011f2:	f44f 7248 	mov.w	r2, #800	; 0x320
    BSP_TS_Init(0, &hTS);
 80011f6:	4669      	mov	r1, sp
    hTS.Accuracy = 0;
 80011f8:	e9cd 3002 	strd	r3, r0, [sp, #8]
    hTS.Height = 480;
 80011fc:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8001200:	e9cd 2300 	strd	r2, r3, [sp]
    BSP_TS_Init(0, &hTS);
 8001204:	f003 f94e 	bl	80044a4 <BSP_TS_Init>
}
 8001208:	b005      	add	sp, #20
 800120a:	f85d fb04 	ldr.w	pc, [sp], #4

0800120e <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800120e:	b530      	push	{r4, r5, lr}
 8001210:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
 8001212:	2000      	movs	r0, #0
{
 8001214:	460d      	mov	r5, r1
 8001216:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
 8001218:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
 800121a:	9003      	str	r0, [sp, #12]
 800121c:	e9cd 0001 	strd	r0, r0, [sp, #4]
    BSP_TS_GetState(0, &TS_State);
 8001220:	f003 f9c2 	bl	80045a8 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
 8001224:	9801      	ldr	r0, [sp, #4]
 8001226:	b120      	cbz	r0, 8001232 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
 8001228:	9b02      	ldr	r3, [sp, #8]
        y = TS_State.TouchY;
        return true;
 800122a:	2001      	movs	r0, #1
        x = TS_State.TouchX;
 800122c:	602b      	str	r3, [r5, #0]
        y = TS_State.TouchY;
 800122e:	9b03      	ldr	r3, [sp, #12]
 8001230:	6023      	str	r3, [r4, #0]
    }

    return false;
}
 8001232:	b005      	add	sp, #20
 8001234:	bd30      	pop	{r4, r5, pc}

08001236 <_ZN20STM32TouchControllerD0Ev>:
 8001236:	b510      	push	{r4, lr}
 8001238:	4604      	mov	r4, r0
 800123a:	2104      	movs	r1, #4
 800123c:	f01b fc89 	bl	801cb52 <_ZdlPvj>
 8001240:	4620      	mov	r0, r4
 8001242:	bd10      	pop	{r4, pc}

08001244 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001244:	2803      	cmp	r0, #3
 8001246:	d826      	bhi.n	8001296 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x52>
 8001248:	e8df f000 	tbb	[pc, r0]
 800124c:	1d140b02 	.word	0x1d140b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001250:	4b11      	ldr	r3, [pc, #68]	; (8001298 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8001252:	2110      	movs	r1, #16
 8001254:	4811      	ldr	r0, [pc, #68]	; (800129c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 8001256:	681a      	ldr	r2, [r3, #0]
 8001258:	fab2 f282 	clz	r2, r2
 800125c:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800125e:	f004 b847 	b.w	80052f0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001262:	4b0d      	ldr	r3, [pc, #52]	; (8001298 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8001264:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001268:	685a      	ldr	r2, [r3, #4]
 800126a:	fab2 f282 	clz	r2, r2
 800126e:	0952      	lsrs	r2, r2, #5
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001270:	480b      	ldr	r0, [pc, #44]	; (80012a0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
 8001272:	e7f4      	b.n	800125e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001274:	4b08      	ldr	r3, [pc, #32]	; (8001298 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8001276:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800127a:	480a      	ldr	r0, [pc, #40]	; (80012a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
 800127c:	689a      	ldr	r2, [r3, #8]
 800127e:	fab2 f282 	clz	r2, r2
 8001282:	0952      	lsrs	r2, r2, #5
 8001284:	e7eb      	b.n	800125e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001286:	4b04      	ldr	r3, [pc, #16]	; (8001298 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
 8001288:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800128c:	68da      	ldr	r2, [r3, #12]
 800128e:	fab2 f282 	clz	r2, r2
 8001292:	0952      	lsrs	r2, r2, #5
 8001294:	e7ec      	b.n	8001270 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>
#endif
        break;
    }
}
 8001296:	4770      	bx	lr
 8001298:	24000368 	.word	0x24000368
 800129c:	58020000 	.word	0x58020000
 80012a0:	58021800 	.word	0x58021800
 80012a4:	58020400 	.word	0x58020400

080012a8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80012a8:	2803      	cmp	r0, #3
 80012aa:	d826      	bhi.n	80012fa <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x52>
 80012ac:	e8df f000 	tbb	[pc, r0]
 80012b0:	1d140b02 	.word	0x1d140b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80012b4:	4b11      	ldr	r3, [pc, #68]	; (80012fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80012b6:	2110      	movs	r1, #16
 80012b8:	4811      	ldr	r0, [pc, #68]	; (8001300 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 80012ba:	681a      	ldr	r2, [r3, #0]
 80012bc:	3a00      	subs	r2, #0
 80012be:	bf18      	it	ne
 80012c0:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80012c2:	f004 b815 	b.w	80052f0 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80012c6:	4b0d      	ldr	r3, [pc, #52]	; (80012fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80012c8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80012cc:	685a      	ldr	r2, [r3, #4]
 80012ce:	3a00      	subs	r2, #0
 80012d0:	bf18      	it	ne
 80012d2:	2201      	movne	r2, #1
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80012d4:	480b      	ldr	r0, [pc, #44]	; (8001304 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
 80012d6:	e7f4      	b.n	80012c2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80012d8:	4b08      	ldr	r3, [pc, #32]	; (80012fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80012da:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80012de:	480a      	ldr	r0, [pc, #40]	; (8001308 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
 80012e0:	689a      	ldr	r2, [r3, #8]
 80012e2:	3a00      	subs	r2, #0
 80012e4:	bf18      	it	ne
 80012e6:	2201      	movne	r2, #1
 80012e8:	e7eb      	b.n	80012c2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80012ea:	4b04      	ldr	r3, [pc, #16]	; (80012fc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
 80012ec:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80012f0:	68da      	ldr	r2, [r3, #12]
 80012f2:	3a00      	subs	r2, #0
 80012f4:	bf18      	it	ne
 80012f6:	2201      	movne	r2, #1
 80012f8:	e7ec      	b.n	80012d4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>
#endif
        break;
    }
}
 80012fa:	4770      	bx	lr
 80012fc:	24000368 	.word	0x24000368
 8001300:	58020000 	.word	0x58020000
 8001304:	58021800 	.word	0x58021800
 8001308:	58020400 	.word	0x58020400

0800130c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 800130c:	2803      	cmp	r0, #3
 800130e:	d812      	bhi.n	8001336 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 8001310:	e8df f000 	tbb	[pc, r0]
 8001314:	0e0a0602 	.word	0x0e0a0602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001318:	2110      	movs	r1, #16
 800131a:	4807      	ldr	r0, [pc, #28]	; (8001338 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800131c:	f003 bfed 	b.w	80052fa <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001320:	f44f 5100 	mov.w	r1, #8192	; 0x2000
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001324:	4805      	ldr	r0, [pc, #20]	; (800133c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
 8001326:	e7f9      	b.n	800131c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001328:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800132c:	4804      	ldr	r0, [pc, #16]	; (8001340 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
 800132e:	e7f5      	b.n	800131c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001330:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001334:	e7f6      	b.n	8001324 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001336:	4770      	bx	lr
 8001338:	58020000 	.word	0x58020000
 800133c:	58021800 	.word	0x58021800
 8001340:	58020400 	.word	0x58020400

08001344 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001344:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001346:	2803      	cmp	r0, #3
 8001348:	d816      	bhi.n	8001378 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>
 800134a:	e8df f000 	tbb	[pc, r0]
 800134e:	0a02      	.short	0x0a02
 8001350:	120e      	.short	0x120e
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001352:	2110      	movs	r1, #16
 8001354:	4809      	ldr	r0, [pc, #36]	; (800137c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001356:	f003 ffc5 	bl	80052e4 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 800135a:	1e43      	subs	r3, r0, #1
 800135c:	4258      	negs	r0, r3
 800135e:	4158      	adcs	r0, r3
 8001360:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001362:	f44f 5100 	mov.w	r1, #8192	; 0x2000
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001366:	4806      	ldr	r0, [pc, #24]	; (8001380 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x3c>)
 8001368:	e7f5      	b.n	8001356 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 800136a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800136e:	4805      	ldr	r0, [pc, #20]	; (8001384 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x40>)
 8001370:	e7f1      	b.n	8001356 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001372:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001376:	e7f6      	b.n	8001366 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x22>
    switch (id)
 8001378:	2000      	movs	r0, #0
 800137a:	e7ee      	b.n	800135a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 800137c:	58020000 	.word	0x58020000
 8001380:	58021800 	.word	0x58021800
 8001384:	58020400 	.word	0x58020400

08001388 <_ZN8touchgfx4GPIO4initEv>:
{
 8001388:	b570      	push	{r4, r5, r6, lr}
 800138a:	4d08      	ldr	r5, [pc, #32]	; (80013ac <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 800138c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 800138e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001390:	b2e0      	uxtb	r0, r4
 8001392:	f7ff ffd7 	bl	8001344 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8001396:	b118      	cbz	r0, 80013a0 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8001398:	682b      	ldr	r3, [r5, #0]
 800139a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 800139c:	bf18      	it	ne
 800139e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80013a0:	3401      	adds	r4, #1
 80013a2:	3504      	adds	r5, #4
 80013a4:	2c05      	cmp	r4, #5
 80013a6:	d1f3      	bne.n	8001390 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80013a8:	bd70      	pop	{r4, r5, r6, pc}
 80013aa:	bf00      	nop
 80013ac:	24000368 	.word	0x24000368

080013b0 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80013b0:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80013b2:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 80013b6:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 80013ba:	4770      	bx	lr

080013bc <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80013bc:	2000      	movs	r0, #0
 80013be:	4770      	bx	lr

080013c0 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80013c0:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80013c2:	3900      	subs	r1, #0
 80013c4:	4b02      	ldr	r3, [pc, #8]	; (80013d0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
 80013c6:	bf18      	it	ne
 80013c8:	2101      	movne	r1, #1
 80013ca:	7019      	strb	r1, [r3, #0]
    }
 80013cc:	4770      	bx	lr
 80013ce:	bf00      	nop
 80013d0:	2400b05f 	.word	0x2400b05f

080013d4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80013d4:	2000      	movs	r0, #0
 80013d6:	4770      	bx	lr

080013d8 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80013d8:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80013da:	b10b      	cbz	r3, 80013e0 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80013dc:	4608      	mov	r0, r1
 80013de:	4718      	bx	r3
        }
    }
 80013e0:	4770      	bx	lr

080013e2 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80013e2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80013e6:	4770      	bx	lr

080013e8 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80013e8:	6840      	ldr	r0, [r0, #4]
 80013ea:	6803      	ldr	r3, [r0, #0]
 80013ec:	699b      	ldr	r3, [r3, #24]
 80013ee:	4718      	bx	r3

080013f0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80013f0:	4770      	bx	lr
	...

080013f4 <_ZN11TouchGFXHAL10initializeEv>:
#include "task.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 80013f4:	b538      	push	{r3, r4, r5, lr}
 80013f6:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 80013f8:	f000 fca6 	bl	8001d48 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD00C0000, (void*)0xD0180000);
 80013fc:	4a0a      	ldr	r2, [pc, #40]	; (8001428 <_ZN11TouchGFXHAL10initializeEv+0x34>)
 80013fe:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 8001402:	6823      	ldr	r3, [r4, #0]
 8001404:	4620      	mov	r0, r4
 8001406:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800140a:	4b08      	ldr	r3, [pc, #32]	; (800142c <_ZN11TouchGFXHAL10initializeEv+0x38>)
 800140c:	47a8      	blx	r5
    GPIO::init();
    instrumentation.init();
 800140e:	f104 057c 	add.w	r5, r4, #124	; 0x7c
    GPIO::init();
 8001412:	f7ff ffb9 	bl	8001388 <_ZN8touchgfx4GPIO4initEv>
    instrumentation.init();
 8001416:	4628      	mov	r0, r5
 8001418:	f7ff feac 	bl	8001174 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 800141c:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
 800141e:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
 8001420:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
    setMCUInstrumentation(&instrumentation);
    enableMCULoadCalculation(true);
}
 8001424:	bd38      	pop	{r3, r4, r5, pc}
 8001426:	bf00      	nop
 8001428:	d00c0000 	.word	0xd00c0000
 800142c:	d0180000 	.word	0xd0180000

08001430 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001430:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8001432:	6803      	ldr	r3, [r0, #0]
{
 8001434:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8001436:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800143a:	4798      	blx	r3
    enableInterrupts();
 800143c:	6823      	ldr	r3, [r4, #0]
 800143e:	4620      	mov	r0, r4
 8001440:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8001442:	4798      	blx	r3

    OSWrappers::waitForVSync();
 8001444:	f000 f926 	bl	8001694 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001448:	6823      	ldr	r3, [r4, #0]
 800144a:	4620      	mov	r0, r4
 800144c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800144e:	4798      	blx	r3

    /* Assert display enable LCD_DISP_CTRL pin */
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, GPIO_PIN_SET);
 8001450:	2201      	movs	r2, #1
 8001452:	2104      	movs	r1, #4
 8001454:	4807      	ldr	r0, [pc, #28]	; (8001474 <_ZN11TouchGFXHAL9taskEntryEv+0x44>)
 8001456:	f003 ff4b 	bl	80052f0 <HAL_GPIO_WritePin>
    /* Assert back light LCD_BL_CTRL pin */
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, GPIO_PIN_SET);
 800145a:	2201      	movs	r2, #1
 800145c:	2102      	movs	r1, #2
 800145e:	4805      	ldr	r0, [pc, #20]	; (8001474 <_ZN11TouchGFXHAL9taskEntryEv+0x44>)
 8001460:	f003 ff46 	bl	80052f0 <HAL_GPIO_WritePin>

    for (;;)
    {
        OSWrappers::waitForVSync();
 8001464:	f000 f916 	bl	8001694 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001468:	6823      	ldr	r3, [r4, #0]
 800146a:	4620      	mov	r0, r4
 800146c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800146e:	4798      	blx	r3
    for (;;)
 8001470:	e7f8      	b.n	8001464 <_ZN11TouchGFXHAL9taskEntryEv+0x34>
 8001472:	bf00      	nop
 8001474:	58020000 	.word	0x58020000

08001478 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8001478:	b510      	push	{r4, lr}
 800147a:	4604      	mov	r4, r0
        swapFrameBuffers();
 800147c:	f00a fad0 	bl	800ba20 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001480:	6823      	ldr	r3, [r4, #0]
 8001482:	4620      	mov	r0, r4
 8001484:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8001488:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 800148c:	4718      	bx	r3

0800148e <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800148e:	f000 bc4d 	b.w	8001d2c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

08001492 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001492:	f000 bc51 	b.w	8001d38 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
	...

08001498 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8001498:	b570      	push	{r4, r5, r6, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800149a:	f000 fcab 	bl	8001df4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 800149e:	4910      	ldr	r1, [pc, #64]	; (80014e0 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x48>)
 80014a0:	2300      	movs	r3, #0
 80014a2:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80014a6:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
 80014aa:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80014ae:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80014b2:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80014b6:	f3c3 334e 	ubfx	r3, r3, #13, #15
 80014ba:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80014bc:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80014c0:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80014c2:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 80014c6:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80014c8:	f8c1 5274 	str.w	r5, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 80014cc:	d2f9      	bcs.n	80014c2 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2a>
    } while(sets-- != 0U);
 80014ce:	3b20      	subs	r3, #32
 80014d0:	f113 0f20 	cmn.w	r3, #32
 80014d4:	d1f2      	bne.n	80014bc <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x24>
 80014d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80014da:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
 80014de:	bd70      	pop	{r4, r5, r6, pc}
 80014e0:	e000ed00 	.word	0xe000ed00

080014e4 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80014e4:	f000 bbfe 	b.w	8001ce4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080014e8 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80014e8:	f000 bca6 	b.w	8001e38 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080014ec <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80014ec:	f000 bc90 	b.w	8001e10 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080014f0 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80014f0:	f000 bc02 	b.w	8001cf8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080014f4 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80014f4:	f009 bcfc 	b.w	800aef0 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080014f8 <_ZN11TouchGFXHALD0Ev>:
 80014f8:	b510      	push	{r4, lr}
 80014fa:	4604      	mov	r4, r0
 80014fc:	2188      	movs	r1, #136	; 0x88
 80014fe:	f01b fb28 	bl	801cb52 <_ZdlPvj>
 8001502:	4620      	mov	r0, r4
 8001504:	bd10      	pop	{r4, pc}

08001506 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8001506:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800150a:	b11b      	cbz	r3, 8001514 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 800150c:	6840      	ldr	r0, [r0, #4]
 800150e:	6803      	ldr	r3, [r0, #0]
 8001510:	681b      	ldr	r3, [r3, #0]
 8001512:	4718      	bx	r3
    }
 8001514:	4618      	mov	r0, r3
 8001516:	4770      	bx	lr

08001518 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8001518:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
        {
            if (DISPLAY_ROTATION == rotate0)
 800151c:	4b0d      	ldr	r3, [pc, #52]	; (8001554 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
    virtual void performDisplayOrientationChange()
 800151e:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8001520:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8001524:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001526:	428c      	cmp	r4, r1
 8001528:	d009      	beq.n	800153e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800152a:	b93a      	cbnz	r2, 800153c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800152c:	490a      	ldr	r1, [pc, #40]	; (8001558 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800152e:	4a0b      	ldr	r2, [pc, #44]	; (800155c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001530:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001532:	8814      	ldrh	r4, [r2, #0]
                DISPLAY_WIDTH = tmp;
 8001534:	8010      	strh	r0, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 8001536:	2201      	movs	r2, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001538:	800c      	strh	r4, [r1, #0]
        else if (DISPLAY_ROTATION != rotate0)
        {
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
 800153a:	701a      	strb	r2, [r3, #0]
        }
    }
 800153c:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800153e:	2a00      	cmp	r2, #0
 8001540:	d0fc      	beq.n	800153c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001542:	4a06      	ldr	r2, [pc, #24]	; (800155c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001544:	4904      	ldr	r1, [pc, #16]	; (8001558 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001546:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001548:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800154a:	800c      	strh	r4, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800154c:	8010      	strh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800154e:	2200      	movs	r2, #0
 8001550:	e7f3      	b.n	800153a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001552:	bf00      	nop
 8001554:	2400b058 	.word	0x2400b058
 8001558:	2400b056 	.word	0x2400b056
 800155c:	2400b054 	.word	0x2400b054

08001560 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8001560:	b570      	push	{r4, r5, r6, lr}
 8001562:	460d      	mov	r5, r1
 8001564:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001566:	b935      	cbnz	r5, 8001576 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001568:	4b09      	ldr	r3, [pc, #36]	; (8001590 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800156a:	f240 21d2 	movw	r1, #722	; 0x2d2
 800156e:	4a09      	ldr	r2, [pc, #36]	; (8001594 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001570:	4809      	ldr	r0, [pc, #36]	; (8001598 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8001572:	f01b fb1d 	bl	801cbb0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001576:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800157a:	3a00      	subs	r2, #0
 800157c:	4b07      	ldr	r3, [pc, #28]	; (800159c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 800157e:	bf18      	it	ne
 8001580:	2201      	movne	r2, #1
 8001582:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001584:	6803      	ldr	r3, [r0, #0]
    }
 8001586:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800158a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800158e:	4718      	bx	r3
 8001590:	0801dd00 	.word	0x0801dd00
 8001594:	0801dd38 	.word	0x0801dd38
 8001598:	0801dd86 	.word	0x0801dd86
 800159c:	2400b05e 	.word	0x2400b05e

080015a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80015a0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80015a2:	4b09      	ldr	r3, [pc, #36]	; (80015c8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80015a4:	881b      	ldrh	r3, [r3, #0]
 80015a6:	428b      	cmp	r3, r1
 80015a8:	d803      	bhi.n	80015b2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80015aa:	4b08      	ldr	r3, [pc, #32]	; (80015cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80015ac:	881b      	ldrh	r3, [r3, #0]
 80015ae:	4293      	cmp	r3, r2
 80015b0:	d905      	bls.n	80015be <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80015b2:	4b07      	ldr	r3, [pc, #28]	; (80015d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80015b4:	219e      	movs	r1, #158	; 0x9e
 80015b6:	4a07      	ldr	r2, [pc, #28]	; (80015d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80015b8:	4807      	ldr	r0, [pc, #28]	; (80015d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80015ba:	f01b faf9 	bl	801cbb0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80015be:	4b07      	ldr	r3, [pc, #28]	; (80015dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80015c0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80015c2:	4b07      	ldr	r3, [pc, #28]	; (80015e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80015c4:	801a      	strh	r2, [r3, #0]
    }
 80015c6:	bd08      	pop	{r3, pc}
 80015c8:	2400b054 	.word	0x2400b054
 80015cc:	2400b056 	.word	0x2400b056
 80015d0:	0801ddcb 	.word	0x0801ddcb
 80015d4:	0801de2e 	.word	0x0801de2e
 80015d8:	0801dd86 	.word	0x0801dd86
 80015dc:	2400b05a 	.word	0x2400b05a
 80015e0:	2400b05c 	.word	0x2400b05c

080015e4 <IdleTaskHook>:

/* USER CODE BEGIN extern C functions */
extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
 80015e4:	4601      	mov	r1, r0
 80015e6:	b508      	push	{r3, lr}
        return instance;
 80015e8:	4b03      	ldr	r3, [pc, #12]	; (80015f8 <IdleTaskHook+0x14>)
 80015ea:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 80015ec:	b101      	cbz	r1, 80015f0 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80015ee:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80015f0:	f00a fa30 	bl	800ba54 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 80015f4:	2001      	movs	r0, #1
 80015f6:	bd08      	pop	{r3, pc}
 80015f8:	2400b060 	.word	0x2400b060

080015fc <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80015fc:	2101      	movs	r1, #1
 80015fe:	2200      	movs	r2, #0
{
 8001600:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001602:	4608      	mov	r0, r1
 8001604:	f007 f913 	bl	800882e <osSemaphoreNew>
 8001608:	4b0a      	ldr	r3, [pc, #40]	; (8001634 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 800160a:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 800160c:	b928      	cbnz	r0, 800161a <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800160e:	4b0a      	ldr	r3, [pc, #40]	; (8001638 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8001610:	2128      	movs	r1, #40	; 0x28
 8001612:	4a0a      	ldr	r2, [pc, #40]	; (800163c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001614:	480a      	ldr	r0, [pc, #40]	; (8001640 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001616:	f01b facb 	bl	801cbb0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 800161a:	2200      	movs	r2, #0
 800161c:	2104      	movs	r1, #4
 800161e:	2001      	movs	r0, #1
 8001620:	f007 f9a2 	bl	8008968 <osMessageQueueNew>
 8001624:	4b07      	ldr	r3, [pc, #28]	; (8001644 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001626:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001628:	b918      	cbnz	r0, 8001632 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 800162a:	4b07      	ldr	r3, [pc, #28]	; (8001648 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 800162c:	212c      	movs	r1, #44	; 0x2c
 800162e:	4a03      	ldr	r2, [pc, #12]	; (800163c <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8001630:	e7f0      	b.n	8001614 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8001632:	bd08      	pop	{r3, pc}
 8001634:	2400037c 	.word	0x2400037c
 8001638:	0801df4c 	.word	0x0801df4c
 800163c:	0801df95 	.word	0x0801df95
 8001640:	0801dfc4 	.word	0x0801dfc4
 8001644:	24000378 	.word	0x24000378
 8001648:	0801e022 	.word	0x0801e022

0800164c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 800164c:	4b02      	ldr	r3, [pc, #8]	; (8001658 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800164e:	f04f 31ff 	mov.w	r1, #4294967295
 8001652:	6818      	ldr	r0, [r3, #0]
 8001654:	f007 b935 	b.w	80088c2 <osSemaphoreAcquire>
 8001658:	2400037c 	.word	0x2400037c

0800165c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 800165c:	4b01      	ldr	r3, [pc, #4]	; (8001664 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800165e:	6818      	ldr	r0, [r3, #0]
 8001660:	f007 b95a 	b.w	8008918 <osSemaphoreRelease>
 8001664:	2400037c 	.word	0x2400037c

08001668 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001668:	4b02      	ldr	r3, [pc, #8]	; (8001674 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800166a:	2100      	movs	r1, #0
 800166c:	6818      	ldr	r0, [r3, #0]
 800166e:	f007 b928 	b.w	80088c2 <osSemaphoreAcquire>
 8001672:	bf00      	nop
 8001674:	2400037c 	.word	0x2400037c

08001678 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001678:	f7ff bff0 	b.w	800165c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800167c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 800167c:	2300      	movs	r3, #0
 800167e:	4803      	ldr	r0, [pc, #12]	; (800168c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001680:	4903      	ldr	r1, [pc, #12]	; (8001690 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001682:	461a      	mov	r2, r3
 8001684:	6800      	ldr	r0, [r0, #0]
 8001686:	f007 b9aa 	b.w	80089de <osMessageQueuePut>
 800168a:	bf00      	nop
 800168c:	24000378 	.word	0x24000378
 8001690:	24000004 	.word	0x24000004

08001694 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001694:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8001696:	2300      	movs	r3, #0
 8001698:	4c07      	ldr	r4, [pc, #28]	; (80016b8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800169a:	a901      	add	r1, sp, #4
 800169c:	461a      	mov	r2, r3
 800169e:	6820      	ldr	r0, [r4, #0]
 80016a0:	f007 f9cd 	bl	8008a3e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80016a4:	f04f 33ff 	mov.w	r3, #4294967295
 80016a8:	2200      	movs	r2, #0
 80016aa:	a901      	add	r1, sp, #4
 80016ac:	6820      	ldr	r0, [r4, #0]
 80016ae:	f007 f9c6 	bl	8008a3e <osMessageQueueGet>
}
 80016b2:	b002      	add	sp, #8
 80016b4:	bd10      	pop	{r4, pc}
 80016b6:	bf00      	nop
 80016b8:	24000378 	.word	0x24000378

080016bc <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80016bc:	6803      	ldr	r3, [r0, #0]
 80016be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016c0:	4718      	bx	r3

080016c2 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80016c2:	2001      	movs	r0, #1
 80016c4:	4770      	bx	lr

080016c6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80016c6:	6803      	ldr	r3, [r0, #0]
 80016c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80016ca:	4718      	bx	r3

080016cc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80016cc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 80016d0:	4770      	bx	lr
	...

080016d4 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 80016d4:	4b05      	ldr	r3, [pc, #20]	; (80016ec <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80016d6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80016da:	6003      	str	r3, [r0, #0]
 80016dc:	4b04      	ldr	r3, [pc, #16]	; (80016f0 <_ZN8STM32DMAD1Ev+0x1c>)
 80016de:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80016e2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80016e6:	f3bf 8f6f 	isb	sy
}
 80016ea:	4770      	bx	lr
 80016ec:	0801e1d0 	.word	0x0801e1d0
 80016f0:	e000e100 	.word	0xe000e100

080016f4 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 80016f4:	b510      	push	{r4, lr}
 80016f6:	4604      	mov	r4, r0
}
 80016f8:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 80016fc:	f7ff ffea 	bl	80016d4 <_ZN8STM32DMAD1Ev>
 8001700:	4620      	mov	r0, r4
 8001702:	f01b fa26 	bl	801cb52 <_ZdlPvj>
 8001706:	4620      	mov	r0, r4
 8001708:	bd10      	pop	{r4, pc}
	...

0800170c <_ZN8STM32DMA10initializeEv>:
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800170c:	4b0f      	ldr	r3, [pc, #60]	; (800174c <_ZN8STM32DMA10initializeEv+0x40>)
{
 800170e:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001710:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8001714:	f042 0210 	orr.w	r2, r2, #16
 8001718:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
 800171c:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8001720:	f002 0210 	and.w	r2, r2, #16
 8001724:	9201      	str	r2, [sp, #4]
 8001726:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001728:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 800172a:	f042 0210 	orr.w	r2, r2, #16
 800172e:	67da      	str	r2, [r3, #124]	; 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001730:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8001732:	f022 0210 	bic.w	r2, r2, #16
 8001736:	67da      	str	r2, [r3, #124]	; 0x7c
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001738:	4b05      	ldr	r3, [pc, #20]	; (8001750 <_ZN8STM32DMA10initializeEv+0x44>)
 800173a:	4a06      	ldr	r2, [pc, #24]	; (8001754 <_ZN8STM32DMA10initializeEv+0x48>)
 800173c:	621a      	str	r2, [r3, #32]
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800173e:	4b06      	ldr	r3, [pc, #24]	; (8001758 <_ZN8STM32DMA10initializeEv+0x4c>)
 8001740:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001744:	609a      	str	r2, [r3, #8]
}
 8001746:	b002      	add	sp, #8
 8001748:	4770      	bx	lr
 800174a:	bf00      	nop
 800174c:	58024400 	.word	0x58024400
 8001750:	24000170 	.word	0x24000170
 8001754:	0800175d 	.word	0x0800175d
 8001758:	e000e100 	.word	0xe000e100

0800175c <DMA2D_XferCpltCallback>:
 800175c:	4b02      	ldr	r3, [pc, #8]	; (8001768 <DMA2D_XferCpltCallback+0xc>)
 800175e:	681b      	ldr	r3, [r3, #0]
 8001760:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001762:	6803      	ldr	r3, [r0, #0]
 8001764:	695b      	ldr	r3, [r3, #20]
 8001766:	4718      	bx	r3
 8001768:	2400b060 	.word	0x2400b060

0800176c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800176c:	b570      	push	{r4, r5, r6, lr}
 800176e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001770:	4b0a      	ldr	r3, [pc, #40]	; (800179c <_ZN8STM32DMAC1Ev+0x30>)
 8001772:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001774:	2600      	movs	r6, #0
 8001776:	4625      	mov	r5, r4
 8001778:	2260      	movs	r2, #96	; 0x60
 800177a:	6060      	str	r0, [r4, #4]
 800177c:	7226      	strb	r6, [r4, #8]
 800177e:	7266      	strb	r6, [r4, #9]
 8001780:	f845 3b20 	str.w	r3, [r5], #32
 8001784:	4629      	mov	r1, r5
 8001786:	f00a faa1 	bl	800bccc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800178a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800178e:	60ee      	str	r6, [r5, #12]
 8001790:	3524      	adds	r5, #36	; 0x24
 8001792:	42ab      	cmp	r3, r5
 8001794:	d1fb      	bne.n	800178e <_ZN8STM32DMAC1Ev+0x22>
}
 8001796:	4620      	mov	r0, r4
 8001798:	bd70      	pop	{r4, r5, r6, pc}
 800179a:	bf00      	nop
 800179c:	0801e1d0 	.word	0x0801e1d0

080017a0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80017a0:	b508      	push	{r3, lr}
    switch (format)
 80017a2:	290b      	cmp	r1, #11
 80017a4:	d80b      	bhi.n	80017be <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 80017a6:	e8df f001 	tbb	[pc, r1]
 80017aa:	0612      	.short	0x0612
 80017ac:	0a0a0a10 	.word	0x0a0a0a10
 80017b0:	0808080a 	.word	0x0808080a
 80017b4:	0808      	.short	0x0808
 80017b6:	2001      	movs	r0, #1
}
 80017b8:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80017ba:	2005      	movs	r0, #5
        break;
 80017bc:	e7fc      	b.n	80017b8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 80017be:	4b05      	ldr	r3, [pc, #20]	; (80017d4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80017c0:	2166      	movs	r1, #102	; 0x66
 80017c2:	4a05      	ldr	r2, [pc, #20]	; (80017d8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 80017c4:	4805      	ldr	r0, [pc, #20]	; (80017dc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 80017c6:	f01b f9f3 	bl	801cbb0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80017ca:	2000      	movs	r0, #0
 80017cc:	e7f4      	b.n	80017b8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80017ce:	2002      	movs	r0, #2
    return dma2dColorMode;
 80017d0:	e7f2      	b.n	80017b8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 80017d2:	bf00      	nop
 80017d4:	0801e064 	.word	0x0801e064
 80017d8:	0801e07f 	.word	0x0801e07f
 80017dc:	0801e0c9 	.word	0x0801e0c9

080017e0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80017e0:	b508      	push	{r3, lr}
    switch (format)
 80017e2:	290a      	cmp	r1, #10
 80017e4:	d809      	bhi.n	80017fa <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 80017e6:	e8df f001 	tbb	[pc, r1]
 80017ea:	0610      	.short	0x0610
 80017ec:	0808080e 	.word	0x0808080e
 80017f0:	06060608 	.word	0x06060608
 80017f4:	06          	.byte	0x06
 80017f5:	00          	.byte	0x00
 80017f6:	2001      	movs	r0, #1
}
 80017f8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80017fa:	4b05      	ldr	r3, [pc, #20]	; (8001810 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 80017fc:	2187      	movs	r1, #135	; 0x87
 80017fe:	4a05      	ldr	r2, [pc, #20]	; (8001814 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001800:	4805      	ldr	r0, [pc, #20]	; (8001818 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001802:	f01b f9d5 	bl	801cbb0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8001806:	2000      	movs	r0, #0
 8001808:	e7f6      	b.n	80017f8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800180a:	2002      	movs	r0, #2
    return dma2dColorMode;
 800180c:	e7f4      	b.n	80017f8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800180e:	bf00      	nop
 8001810:	0801e064 	.word	0x0801e064
 8001814:	0801e125 	.word	0x0801e125
 8001818:	0801e0c9 	.word	0x0801e0c9

0800181c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 800181c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001820:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8001824:	460c      	mov	r4, r1
 8001826:	4607      	mov	r7, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001828:	4641      	mov	r1, r8
 800182a:	f7ff ffb9 	bl	80017a0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800182e:	f894 901e 	ldrb.w	r9, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001832:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001834:	4638      	mov	r0, r7
 8001836:	4649      	mov	r1, r9
 8001838:	f7ff ffb2 	bl	80017a0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800183c:	4649      	mov	r1, r9
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800183e:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001840:	4638      	mov	r0, r7
 8001842:	f7ff ffcd 	bl	80017e0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001846:	8aa1      	ldrh	r1, [r4, #20]
 8001848:	8b62      	ldrh	r2, [r4, #26]
 800184a:	4b43      	ldr	r3, [pc, #268]	; (8001958 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 800184c:	1a52      	subs	r2, r2, r1
 800184e:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001850:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001852:	8b22      	ldrh	r2, [r4, #24]
 8001854:	1a52      	subs	r2, r2, r1
 8001856:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001858:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800185a:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800185c:	ea42 4201 	orr.w	r2, r2, r1, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001860:	6920      	ldr	r0, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001862:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001864:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001866:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001868:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800186a:	6827      	ldr	r7, [r4, #0]
 800186c:	2f80      	cmp	r7, #128	; 0x80
 800186e:	d028      	beq.n	80018c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 8001870:	7f22      	ldrb	r2, [r4, #28]
 8001872:	d80f      	bhi.n	8001894 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 8001874:	2f20      	cmp	r7, #32
 8001876:	d065      	beq.n	8001944 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001878:	2f40      	cmp	r7, #64	; 0x40
 800187a:	d063      	beq.n	8001944 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 800187c:	2f04      	cmp	r7, #4
 800187e:	d01a      	beq.n	80018b6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9a>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001880:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8001884:	4b34      	ldr	r3, [pc, #208]	; (8001958 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001886:	45c8      	cmp	r8, r9
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001888:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 800188c:	61dd      	str	r5, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 800188e:	d05f      	beq.n	8001950 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x134>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001890:	4a32      	ldr	r2, [pc, #200]	; (800195c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001892:	e044      	b.n	800191e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
    switch (blitOp.operation)
 8001894:	f5b7 7f80 	cmp.w	r7, #256	; 0x100
 8001898:	d004      	beq.n	80018a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 800189a:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 800189e:	d1ef      	bne.n	8001880 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x64>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018a0:	492f      	ldr	r1, [pc, #188]	; (8001960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 80018a2:	e000      	b.n	80018a6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018a4:	492f      	ldr	r1, [pc, #188]	; (8001964 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018a6:	ea41 6202 	orr.w	r2, r1, r2, lsl #24
 80018aa:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 80018ac:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80018ae:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018b0:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018b2:	6158      	str	r0, [r3, #20]
 80018b4:	e032      	b.n	800191c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018b6:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 80018ba:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018be:	61da      	str	r2, [r3, #28]
 80018c0:	e7f6      	b.n	80018b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 80018c2:	68a7      	ldr	r7, [r4, #8]
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 80018c4:	1d3a      	adds	r2, r7, #4
 80018c6:	62da      	str	r2, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018c8:	7f21      	ldrb	r1, [r4, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 80018ca:	783a      	ldrb	r2, [r7, #0]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018cc:	ea45 6501 	orr.w	r5, r5, r1, lsl #24
 80018d0:	f445 3500 	orr.w	r5, r5, #131072	; 0x20000
 80018d4:	61dd      	str	r5, [r3, #28]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018d6:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018d8:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 80018da:	b142      	cbz	r2, 80018ee <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 80018dc:	2a01      	cmp	r2, #1
 80018de:	d021      	beq.n	8001924 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x108>
                assert(0 && "Unsupported format");
 80018e0:	4b21      	ldr	r3, [pc, #132]	; (8001968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
 80018e2:	f240 1111 	movw	r1, #273	; 0x111
 80018e6:	4a21      	ldr	r2, [pc, #132]	; (800196c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>)
 80018e8:	4821      	ldr	r0, [pc, #132]	; (8001970 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x154>)
 80018ea:	f01b f961 	bl	801cbb0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80018ee:	69da      	ldr	r2, [r3, #28]
 80018f0:	8879      	ldrh	r1, [r7, #2]
 80018f2:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80018f6:	3901      	subs	r1, #1
 80018f8:	f022 0210 	bic.w	r2, r2, #16
 80018fc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
            bool blend = true;
 8001900:	2101      	movs	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001902:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8001904:	4b14      	ldr	r3, [pc, #80]	; (8001958 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001906:	69da      	ldr	r2, [r3, #28]
 8001908:	f042 0220 	orr.w	r2, r2, #32
 800190c:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800190e:	69da      	ldr	r2, [r3, #28]
 8001910:	0692      	lsls	r2, r2, #26
 8001912:	d4fc      	bmi.n	800190e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8001914:	2210      	movs	r2, #16
 8001916:	609a      	str	r2, [r3, #8]
            if (blend)
 8001918:	2900      	cmp	r1, #0
 800191a:	d0b9      	beq.n	8001890 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x74>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 800191c:	4a15      	ldr	r2, [pc, #84]	; (8001974 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x158>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800191e:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8001920:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001924:	69da      	ldr	r2, [r3, #28]
                if (blitOp.alpha == 255)
 8001926:	39ff      	subs	r1, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001928:	8878      	ldrh	r0, [r7, #2]
 800192a:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
                if (blitOp.alpha == 255)
 800192e:	bf18      	it	ne
 8001930:	2101      	movne	r1, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001932:	3801      	subs	r0, #1
 8001934:	f022 0210 	bic.w	r2, r2, #16
 8001938:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800193c:	f042 0210 	orr.w	r2, r2, #16
 8001940:	61da      	str	r2, [r3, #28]
                break;
 8001942:	e7df      	b.n	8001904 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe8>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001944:	ea45 6202 	orr.w	r2, r5, r2, lsl #24
 8001948:	4b03      	ldr	r3, [pc, #12]	; (8001958 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 800194a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800194e:	e7b6      	b.n	80018be <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001950:	f240 2201 	movw	r2, #513	; 0x201
 8001954:	e7e3      	b.n	800191e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 8001956:	bf00      	nop
 8001958:	52001000 	.word	0x52001000
 800195c:	00010201 	.word	0x00010201
 8001960:	00020009 	.word	0x00020009
 8001964:	0002000a 	.word	0x0002000a
 8001968:	0801e170 	.word	0x0801e170
 800196c:	0801e18a 	.word	0x0801e18a
 8001970:	0801e0c9 	.word	0x0801e0c9
 8001974:	00020201 	.word	0x00020201

08001978 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001978:	b538      	push	{r3, r4, r5, lr}
 800197a:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800197c:	7f89      	ldrb	r1, [r1, #30]
 800197e:	f7ff ff2f 	bl	80017e0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001982:	4b17      	ldr	r3, [pc, #92]	; (80019e0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001984:	8aa5      	ldrh	r5, [r4, #20]
 8001986:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001988:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800198a:	ea42 4205 	orr.w	r2, r2, r5, lsl #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800198e:	6921      	ldr	r1, [r4, #16]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001990:	645a      	str	r2, [r3, #68]	; 0x44

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001992:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001994:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001996:	1b52      	subs	r2, r2, r5
 8001998:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800199a:	6825      	ldr	r5, [r4, #0]
 800199c:	2d08      	cmp	r5, #8
 800199e:	d10e      	bne.n	80019be <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019a0:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019a2:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80019a4:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80019a6:	4a0f      	ldr	r2, [pc, #60]	; (80019e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80019a8:	7f20      	ldrb	r0, [r4, #28]
 80019aa:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80019ae:	61da      	str	r2, [r3, #28]
 80019b0:	68e2      	ldr	r2, [r4, #12]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80019b2:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80019b4:	4a0c      	ldr	r2, [pc, #48]	; (80019e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019b6:	6159      	str	r1, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019b8:	60d9      	str	r1, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80019ba:	601a      	str	r2, [r3, #0]
    }
}
 80019bc:	bd38      	pop	{r3, r4, r5, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80019be:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80019c0:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80019c2:	611a      	str	r2, [r3, #16]
 80019c4:	68e1      	ldr	r1, [r4, #12]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 80019c6:	0a0a      	lsrs	r2, r1, #8
 80019c8:	0948      	lsrs	r0, r1, #5
 80019ca:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80019ce:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80019d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80019d6:	4302      	orrs	r2, r0
 80019d8:	430a      	orrs	r2, r1
 80019da:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80019dc:	4a03      	ldr	r2, [pc, #12]	; (80019ec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80019de:	e7ec      	b.n	80019ba <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80019e0:	52001000 	.word	0x52001000
 80019e4:	00010009 	.word	0x00010009
 80019e8:	00020201 	.word	0x00020201
 80019ec:	00030201 	.word	0x00030201

080019f0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80019f0:	2001      	movs	r0, #1
 80019f2:	4770      	bx	lr

080019f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80019f4:	200c      	movs	r0, #12
 80019f6:	4770      	bx	lr

080019f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80019f8:	230c      	movs	r3, #12
 80019fa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80019fe:	3008      	adds	r0, #8
 8001a00:	4770      	bx	lr

08001a02 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001a02:	230c      	movs	r3, #12
 8001a04:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001a08:	3008      	adds	r0, #8
 8001a0a:	4770      	bx	lr

08001a0c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001a0c:	2001      	movs	r0, #1
 8001a0e:	4770      	bx	lr

08001a10 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001a10:	f44f 700a 	mov.w	r0, #552	; 0x228
 8001a14:	4770      	bx	lr

08001a16 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a16:	f44f 730a 	mov.w	r3, #552	; 0x228
 8001a1a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001a1e:	3008      	adds	r0, #8
 8001a20:	4770      	bx	lr

08001a22 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a22:	f44f 730a 	mov.w	r3, #552	; 0x228
 8001a26:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001a2a:	3008      	adds	r0, #8
 8001a2c:	4770      	bx	lr

08001a2e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001a2e:	2001      	movs	r0, #1
 8001a30:	4770      	bx	lr

08001a32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001a32:	2010      	movs	r0, #16
 8001a34:	4770      	bx	lr

08001a36 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a36:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001a3a:	3008      	adds	r0, #8
 8001a3c:	4770      	bx	lr

08001a3e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a3e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001a42:	3008      	adds	r0, #8
 8001a44:	4770      	bx	lr

08001a46 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8001a46:	4608      	mov	r0, r1
 8001a48:	f000 bbc4 	b.w	80021d4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08001a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001a4c:	4b03      	ldr	r3, [pc, #12]	; (8001a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001a4e:	b510      	push	{r4, lr}
 8001a50:	4604      	mov	r4, r0
 8001a52:	6003      	str	r3, [r0, #0]
 8001a54:	f008 ff9b 	bl	800a98e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a58:	4620      	mov	r0, r4
 8001a5a:	bd10      	pop	{r4, pc}
 8001a5c:	0801e288 	.word	0x0801e288

08001a60 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a60:	b510      	push	{r4, lr}
 8001a62:	4604      	mov	r4, r0
 8001a64:	f7ff fff2 	bl	8001a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a68:	2114      	movs	r1, #20
 8001a6a:	4620      	mov	r0, r4
 8001a6c:	f01b f871 	bl	801cb52 <_ZdlPvj>
 8001a70:	4620      	mov	r0, r4
 8001a72:	bd10      	pop	{r4, pc}

08001a74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001a74:	4b03      	ldr	r3, [pc, #12]	; (8001a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001a76:	b510      	push	{r4, lr}
 8001a78:	4604      	mov	r4, r0
 8001a7a:	6003      	str	r3, [r0, #0]
 8001a7c:	f008 ff87 	bl	800a98e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a80:	4620      	mov	r0, r4
 8001a82:	bd10      	pop	{r4, pc}
 8001a84:	0801e254 	.word	0x0801e254

08001a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a88:	b510      	push	{r4, lr}
 8001a8a:	4604      	mov	r4, r0
 8001a8c:	f7ff fff2 	bl	8001a74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a90:	f44f 710c 	mov.w	r1, #560	; 0x230
 8001a94:	4620      	mov	r0, r4
 8001a96:	f01b f85c 	bl	801cb52 <_ZdlPvj>
 8001a9a:	4620      	mov	r0, r4
 8001a9c:	bd10      	pop	{r4, pc}
	...

08001aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001aa0:	4b03      	ldr	r3, [pc, #12]	; (8001ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001aa2:	b510      	push	{r4, lr}
 8001aa4:	4604      	mov	r4, r0
 8001aa6:	6003      	str	r3, [r0, #0]
 8001aa8:	f008 ff71 	bl	800a98e <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001aac:	4620      	mov	r0, r4
 8001aae:	bd10      	pop	{r4, pc}
 8001ab0:	0801e220 	.word	0x0801e220

08001ab4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ab4:	b510      	push	{r4, lr}
 8001ab6:	4604      	mov	r4, r0
 8001ab8:	f7ff fff2 	bl	8001aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001abc:	2118      	movs	r1, #24
 8001abe:	4620      	mov	r0, r4
 8001ac0:	f01b f847 	bl	801cb52 <_ZdlPvj>
 8001ac4:	4620      	mov	r0, r4
 8001ac6:	bd10      	pop	{r4, pc}

08001ac8 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001ac8:	4b08      	ldr	r3, [pc, #32]	; (8001aec <_ZN12FrontendHeapD1Ev+0x24>)
 8001aca:	b510      	push	{r4, lr}
 8001acc:	4604      	mov	r4, r0
 8001ace:	6003      	str	r3, [r0, #0]
 8001ad0:	f500 7017 	add.w	r0, r0, #604	; 0x25c
 8001ad4:	f7ff ffba 	bl	8001a4c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ad8:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001adc:	f7ff ffca 	bl	8001a74 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ae0:	f104 0014 	add.w	r0, r4, #20
 8001ae4:	f7ff ffdc 	bl	8001aa0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ae8:	4620      	mov	r0, r4
 8001aea:	bd10      	pop	{r4, pc}
 8001aec:	0801e2bc 	.word	0x0801e2bc

08001af0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001af0:	b508      	push	{r3, lr}
 8001af2:	4802      	ldr	r0, [pc, #8]	; (8001afc <__tcf_0+0xc>)
 8001af4:	f7ff ffe8 	bl	8001ac8 <_ZN12FrontendHeapD1Ev>
 8001af8:	bd08      	pop	{r3, pc}
 8001afa:	bf00      	nop
 8001afc:	24000384 	.word	0x24000384

08001b00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001b00:	b510      	push	{r4, lr}
 8001b02:	4604      	mov	r4, r0
 8001b04:	f7ff ffe0 	bl	8001ac8 <_ZN12FrontendHeapD1Ev>
 8001b08:	f44f 7173 	mov.w	r1, #972	; 0x3cc
 8001b0c:	4620      	mov	r0, r4
 8001b0e:	f01b f820 	bl	801cb52 <_ZdlPvj>
 8001b12:	4620      	mov	r0, r4
 8001b14:	bd10      	pop	{r4, pc}
	...

08001b18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8001b18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001b1c:	f000 f9e4 	bl	8001ee8 <_ZN14BitmapDatabase11getInstanceEv>
 8001b20:	2400      	movs	r4, #0
 8001b22:	4605      	mov	r5, r0
 8001b24:	f000 f9e4 	bl	8001ef0 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001b28:	4623      	mov	r3, r4
 8001b2a:	4601      	mov	r1, r0
 8001b2c:	4622      	mov	r2, r4
 8001b2e:	4628      	mov	r0, r5
 8001b30:	9400      	str	r4, [sp, #0]
 8001b32:	f00f fa17 	bl	8010f64 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001b36:	4b25      	ldr	r3, [pc, #148]	; (8001bcc <touchgfx_init+0xb4>)
 8001b38:	4a25      	ldr	r2, [pc, #148]	; (8001bd0 <touchgfx_init+0xb8>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001b3a:	4620      	mov	r0, r4
        static FrontendHeap instance;
 8001b3c:	4d25      	ldr	r5, [pc, #148]	; (8001bd4 <touchgfx_init+0xbc>)
 8001b3e:	601a      	str	r2, [r3, #0]
 8001b40:	f001 f812 	bl	8002b68 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001b44:	4824      	ldr	r0, [pc, #144]	; (8001bd8 <touchgfx_init+0xc0>)
 8001b46:	f00f f975 	bl	8010e34 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001b4a:	682b      	ldr	r3, [r5, #0]
 8001b4c:	f3bf 8f5b 	dmb	ish
 8001b50:	07db      	lsls	r3, r3, #31
 8001b52:	d435      	bmi.n	8001bc0 <touchgfx_init+0xa8>
 8001b54:	4628      	mov	r0, r5
 8001b56:	f01a fffe 	bl	801cb56 <__cxa_guard_acquire>
 8001b5a:	b388      	cbz	r0, 8001bc0 <touchgfx_init+0xa8>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
 8001b5c:	4c1f      	ldr	r4, [pc, #124]	; (8001bdc <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001b5e:	4b20      	ldr	r3, [pc, #128]	; (8001be0 <touchgfx_init+0xc8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001b60:	f504 761d 	add.w	r6, r4, #628	; 0x274
        : presenterStorage(pres),
 8001b64:	f104 0014 	add.w	r0, r4, #20
          screenStorage(scr),
 8001b68:	f104 082c 	add.w	r8, r4, #44	; 0x2c
          transitionStorage(tra),
 8001b6c:	f504 7717 	add.w	r7, r4, #604	; 0x25c
 8001b70:	6023      	str	r3, [r4, #0]
        : presenterStorage(pres),
 8001b72:	6060      	str	r0, [r4, #4]
          screenStorage(scr),
 8001b74:	f8c4 8008 	str.w	r8, [r4, #8]
          transitionStorage(tra),
 8001b78:	60e7      	str	r7, [r4, #12]
          frontendApplication(app)
 8001b7a:	6126      	str	r6, [r4, #16]
 8001b7c:	f008 ff08 	bl	800a990 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b80:	4b18      	ldr	r3, [pc, #96]	; (8001be4 <touchgfx_init+0xcc>)
 8001b82:	4640      	mov	r0, r8
 8001b84:	6163      	str	r3, [r4, #20]
 8001b86:	f008 ff03 	bl	800a990 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b8a:	4b17      	ldr	r3, [pc, #92]	; (8001be8 <touchgfx_init+0xd0>)
 8001b8c:	4638      	mov	r0, r7
 8001b8e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001b90:	f008 fefe 	bl	800a990 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b94:	4b15      	ldr	r3, [pc, #84]	; (8001bec <touchgfx_init+0xd4>)
 8001b96:	f504 701c 	add.w	r0, r4, #624	; 0x270
 8001b9a:	f8c4 325c 	str.w	r3, [r4, #604]	; 0x25c
 8001b9e:	f001 f85f 	bl	8002c60 <_ZN5ModelC1Ev>
 8001ba2:	4622      	mov	r2, r4
 8001ba4:	f504 711c 	add.w	r1, r4, #624	; 0x270
 8001ba8:	4630      	mov	r0, r6
 8001baa:	f001 f84f 	bl	8002c4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001bae:	4630      	mov	r0, r6
 8001bb0:	f000 fb10 	bl	80021d4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8001bb4:	480e      	ldr	r0, [pc, #56]	; (8001bf0 <touchgfx_init+0xd8>)
 8001bb6:	f01b f819 	bl	801cbec <atexit>
 8001bba:	4628      	mov	r0, r5
 8001bbc:	f01a ffd7 	bl	801cb6e <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001bc0:	480c      	ldr	r0, [pc, #48]	; (8001bf4 <touchgfx_init+0xdc>)
}
 8001bc2:	b002      	add	sp, #8
 8001bc4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001bc8:	f7ff bc14 	b.w	80013f4 <_ZN11TouchGFXHAL10initializeEv>
 8001bcc:	2400b0bc 	.word	0x2400b0bc
 8001bd0:	2400157c 	.word	0x2400157c
 8001bd4:	24000380 	.word	0x24000380
 8001bd8:	24000008 	.word	0x24000008
 8001bdc:	24000384 	.word	0x24000384
 8001be0:	0801e2bc 	.word	0x0801e2bc
 8001be4:	0801e220 	.word	0x0801e220
 8001be8:	0801e254 	.word	0x0801e254
 8001bec:	0801e288 	.word	0x0801e288
 8001bf0:	08001af1 	.word	0x08001af1
 8001bf4:	240014f4 	.word	0x240014f4

08001bf8 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001bf8:	4801      	ldr	r0, [pc, #4]	; (8001c00 <touchgfx_taskEntry+0x8>)
 8001bfa:	f7ff bc19 	b.w	8001430 <_ZN11TouchGFXHAL9taskEntryEv>
 8001bfe:	bf00      	nop
 8001c00:	240014f4 	.word	0x240014f4

08001c04 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001c04:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001c06:	4e26      	ldr	r6, [pc, #152]	; (8001ca0 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
{
public:

    STM32TouchController() {}
 8001c08:	4b26      	ldr	r3, [pc, #152]	; (8001ca4 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 8001c0a:	4c27      	ldr	r4, [pc, #156]	; (8001ca8 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 8001c0c:	4630      	mov	r0, r6
static LCD16bpp display;
 8001c0e:	4d27      	ldr	r5, [pc, #156]	; (8001cac <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001c10:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001c12:	f7ff fdab 	bl	800176c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001c16:	4628      	mov	r0, r5
 8001c18:	f012 fab0 	bl	801417c <_ZN8touchgfx8LCD16bppC1Ev>
        : dma(dmaInterface),
 8001c1c:	4b24      	ldr	r3, [pc, #144]	; (8001cb0 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          mcuInstrumentation(0),
 8001c1e:	2200      	movs	r2, #0
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8001c20:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c24:	4823      	ldr	r0, [pc, #140]	; (8001cb4 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001c26:	861a      	strh	r2, [r3, #48]	; 0x30
          lastY(0),
 8001c28:	661a      	str	r2, [r3, #96]	; 0x60
          updateMCULoad(0),
 8001c2a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
          cc_begin(0),
 8001c2e:	671a      	str	r2, [r3, #112]	; 0x70
          touchController(touchCtrl),
 8001c30:	60dc      	str	r4, [r3, #12]
          auxiliaryLCD(0),
 8001c32:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
          touchSampleRate(1),
 8001c36:	4920      	ldr	r1, [pc, #128]	; (8001cb8 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          vSyncCompensationEnabled(false),
 8001c38:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8001c3c:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001c40:	6759      	str	r1, [r3, #116]	; 0x74
          lastRenderMethod(HARDWARE)
 8001c42:	2101      	movs	r1, #1
 8001c44:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001c48:	491c      	ldr	r1, [pc, #112]	; (8001cbc <_GLOBAL__sub_I_touchgfx_init+0xb8>)
 8001c4a:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c4c:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001c50:	8001      	strh	r1, [r0, #0]
 8001c52:	481b      	ldr	r0, [pc, #108]	; (8001cc0 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001c54:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c56:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8001c5a:	481a      	ldr	r0, [pc, #104]	; (8001cc4 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          buttonController(0),
 8001c5c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001c60:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001c64:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001c68:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
          frameBuffer0(0),
 8001c6c:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
          frameBuffer2(0),
 8001c70:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001c74:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
          lastX(0),
 8001c78:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
          lcdRef(display),
 8001c7c:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c80:	8001      	strh	r1, [r0, #0]
 8001c82:	4811      	ldr	r0, [pc, #68]	; (8001cc8 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
        : cc_consumed(0),
 8001c84:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8001c88:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001c8a:	4910      	ldr	r1, [pc, #64]	; (8001ccc <_GLOBAL__sub_I_touchgfx_init+0xc8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001c8c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        DISPLAY_ROTATION = rotate0;
 8001c90:	700a      	strb	r2, [r1, #0]
          cc_in(0)
 8001c92:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001c96:	490e      	ldr	r1, [pc, #56]	; (8001cd0 <_GLOBAL__sub_I_touchgfx_init+0xcc>)
 8001c98:	4a0e      	ldr	r2, [pc, #56]	; (8001cd4 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
 8001c9a:	6019      	str	r1, [r3, #0]
 8001c9c:	67da      	str	r2, [r3, #124]	; 0x7c
}
 8001c9e:	bd70      	pop	{r4, r5, r6, pc}
 8001ca0:	24000754 	.word	0x24000754
 8001ca4:	0801dcf0 	.word	0x0801dcf0
 8001ca8:	24000750 	.word	0x24000750
 8001cac:	24001580 	.word	0x24001580
 8001cb0:	240014f4 	.word	0x240014f4
 8001cb4:	2400b054 	.word	0x2400b054
 8001cb8:	01000001 	.word	0x01000001
 8001cbc:	2400b060 	.word	0x2400b060
 8001cc0:	2400b05a 	.word	0x2400b05a
 8001cc4:	2400b056 	.word	0x2400b056
 8001cc8:	2400b05c 	.word	0x2400b05c
 8001ccc:	2400b058 	.word	0x2400b058
 8001cd0:	0801de7c 	.word	0x0801de7c
 8001cd4:	0801dcc8 	.word	0x0801dcc8

08001cd8 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001cd8:	4801      	ldr	r0, [pc, #4]	; (8001ce0 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001cda:	f7ff bcfb 	b.w	80016d4 <_ZN8STM32DMAD1Ev>
 8001cde:	bf00      	nop
 8001ce0:	24000754 	.word	0x24000754

08001ce4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001ce4:	4b03      	ldr	r3, [pc, #12]	; (8001cf4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001ce6:	2290      	movs	r2, #144	; 0x90
 8001ce8:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001cec:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001cf0:	4770      	bx	lr
 8001cf2:	bf00      	nop
 8001cf4:	e000e100 	.word	0xe000e100

08001cf8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001cf8:	4a09      	ldr	r2, [pc, #36]	; (8001d20 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001cfa:	490a      	ldr	r1, [pc, #40]	; (8001d24 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001cfc:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001cfe:	480a      	ldr	r0, [pc, #40]	; (8001d28 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001d00:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001d04:	3b01      	subs	r3, #1
 8001d06:	b29b      	uxth	r3, r3
 8001d08:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001d0a:	6911      	ldr	r1, [r2, #16]
 8001d0c:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001d10:	3901      	subs	r1, #1
 8001d12:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001d14:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001d16:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001d18:	f043 0301 	orr.w	r3, r3, #1
 8001d1c:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001d1e:	4770      	bx	lr
 8001d20:	50001000 	.word	0x50001000
 8001d24:	240015fc 	.word	0x240015fc
 8001d28:	240015fa 	.word	0x240015fa

08001d2c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001d2c:	4b01      	ldr	r3, [pc, #4]	; (8001d34 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001d2e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8001d32:	4770      	bx	lr
 8001d34:	50001000 	.word	0x50001000

08001d38 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001d38:	4b02      	ldr	r3, [pc, #8]	; (8001d44 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001d3a:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001d3c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001d40:	625a      	str	r2, [r3, #36]	; 0x24
}
 8001d42:	4770      	bx	lr
 8001d44:	50001000 	.word	0x50001000

08001d48 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001d48:	b570      	push	{r4, r5, r6, lr}
 8001d4a:	4604      	mov	r4, r0
    HAL::initialize();
 8001d4c:	f009 f925 	bl	800af9a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001d50:	6823      	ldr	r3, [r4, #0]
 8001d52:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001d54:	f00c f99c 	bl	800e090 <_ZN8touchgfx11Application11getInstanceEv>
 8001d58:	4601      	mov	r1, r0
 8001d5a:	4620      	mov	r0, r4
 8001d5c:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD0200000, (void*)0);
 8001d5e:	6823      	ldr	r3, [r4, #0]
 8001d60:	4620      	mov	r0, r4
 8001d62:	4a05      	ldr	r2, [pc, #20]	; (8001d78 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001d64:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001d68:	f04f 4150 	mov.w	r1, #3489660928	; 0xd0000000
 8001d6c:	2300      	movs	r3, #0
 8001d6e:	46ac      	mov	ip, r5
}
 8001d70:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xD0000000, (void*)0xD0200000, (void*)0);
 8001d74:	4760      	bx	ip
 8001d76:	bf00      	nop
 8001d78:	d0200000 	.word	0xd0200000

08001d7c <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001d7c:	f009 b8f4 	b.w	800af68 <_ZN8touchgfx3HAL10beginFrameEv>

08001d80 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 8001d80:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 8001d84:	b113      	cbz	r3, 8001d8c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 8001d86:	4b02      	ldr	r3, [pc, #8]	; (8001d90 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 8001d88:	2201      	movs	r2, #1
 8001d8a:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 8001d8c:	f009 b8f8 	b.w	800af80 <_ZN8touchgfx3HAL8endFrameEv>
 8001d90:	240015f8 	.word	0x240015f8

08001d94 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
    }
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001d94:	f009 ba0d 	b.w	800b1b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001d98 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>:
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 8001d98:	4910      	ldr	r1, [pc, #64]	; (8001ddc <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x44>)
 8001d9a:	2300      	movs	r3, #0
}

void TouchGFXGeneratedHAL::InvalidateCache()
 8001d9c:	b570      	push	{r4, r5, r6, lr}
 8001d9e:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001da2:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
 8001da6:	f8d1 3080 	ldr.w	r3, [r1, #128]	; 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001daa:	f643 74e0 	movw	r4, #16352	; 0x3fe0
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001dae:	f3c3 00c9 	ubfx	r0, r3, #3, #10
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8001db2:	f3c3 334e 	ubfx	r3, r3, #13, #15
 8001db6:	015b      	lsls	r3, r3, #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001db8:	ea03 0604 	and.w	r6, r3, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 8001dbc:	4602      	mov	r2, r0
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001dbe:	ea46 7582 	orr.w	r5, r6, r2, lsl #30
      } while (ways-- != 0U);
 8001dc2:	3a01      	subs	r2, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8001dc4:	f8c1 5274 	str.w	r5, [r1, #628]	; 0x274
      } while (ways-- != 0U);
 8001dc8:	d2f9      	bcs.n	8001dbe <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x26>
    } while(sets-- != 0U);
 8001dca:	3b20      	subs	r3, #32
 8001dcc:	f113 0f20 	cmn.w	r3, #32
 8001dd0:	d1f2      	bne.n	8001db8 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0+0x20>
 8001dd2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001dd6:	f3bf 8f6f 	isb	sy
    // "System Core" settings for "Cortex M7" in CubeMX in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
    {
        SCB_CleanInvalidateDCache();
    }
}
 8001dda:	bd70      	pop	{r4, r5, r6, pc}
 8001ddc:	e000ed00 	.word	0xe000ed00

08001de0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001de0:	4b03      	ldr	r3, [pc, #12]	; (8001df0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x10>)
 8001de2:	695b      	ldr	r3, [r3, #20]
 8001de4:	03db      	lsls	r3, r3, #15
 8001de6:	d501      	bpl.n	8001dec <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xc>
 8001de8:	f7ff bfd6 	b.w	8001d98 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>
}
 8001dec:	4770      	bx	lr
 8001dee:	bf00      	nop
 8001df0:	e000ed00 	.word	0xe000ed00

08001df4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:
{
 8001df4:	b508      	push	{r3, lr}
    HAL::flushFrameBuffer(rect);
 8001df6:	f009 f881 	bl	800aefc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8001dfa:	4b04      	ldr	r3, [pc, #16]	; (8001e0c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x18>)
 8001dfc:	695b      	ldr	r3, [r3, #20]
 8001dfe:	03db      	lsls	r3, r3, #15
 8001e00:	d503      	bpl.n	8001e0a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x16>
}
 8001e02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001e06:	f7ff bfc7 	b.w	8001d98 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv.part.0>
 8001e0a:	bd08      	pop	{r3, pc}
 8001e0c:	e000ed00 	.word	0xe000ed00

08001e10 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e10:	4b08      	ldr	r3, [pc, #32]	; (8001e34 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001e12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001e16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e1e:	f3bf 8f6f 	isb	sy
 8001e22:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001e26:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001e2a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001e2e:	f3bf 8f6f 	isb	sy
}
 8001e32:	4770      	bx	lr
 8001e34:	e000e100 	.word	0xe000e100

08001e38 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001e38:	4b03      	ldr	r3, [pc, #12]	; (8001e48 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001e3a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001e3e:	609a      	str	r2, [r3, #8]
 8001e40:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001e44:	609a      	str	r2, [r3, #8]
}
 8001e46:	4770      	bx	lr
 8001e48:	e000e100 	.word	0xe000e100

08001e4c <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001e4c:	b510      	push	{r4, lr}
        return instance;
 8001e4e:	4c14      	ldr	r4, [pc, #80]	; (8001ea0 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001e50:	6823      	ldr	r3, [r4, #0]
 8001e52:	b323      	cbz	r3, 8001e9e <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001e54:	4b13      	ldr	r3, [pc, #76]	; (8001ea4 <HAL_LTDC_LineEventCallback+0x58>)
 8001e56:	4a14      	ldr	r2, [pc, #80]	; (8001ea8 <HAL_LTDC_LineEventCallback+0x5c>)
 8001e58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e5a:	8811      	ldrh	r1, [r2, #0]
 8001e5c:	428b      	cmp	r3, r1
 8001e5e:	d113      	bne.n	8001e88 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001e60:	4b12      	ldr	r3, [pc, #72]	; (8001eac <HAL_LTDC_LineEventCallback+0x60>)
 8001e62:	8819      	ldrh	r1, [r3, #0]
 8001e64:	f003 ff8c 	bl	8005d80 <HAL_LTDC_ProgramLineEvent>
 8001e68:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001e6a:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001e6e:	3301      	adds	r3, #1
 8001e70:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001e74:	f7ff fc02 	bl	800167c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001e78:	6820      	ldr	r0, [r4, #0]
 8001e7a:	f009 fdd1 	bl	800ba20 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8001e7e:	2000      	movs	r0, #0

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001e80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001e84:	f7ff b9de 	b.w	8001244 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001e88:	f003 ff7a 	bl	8005d80 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001e8c:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001e8e:	6803      	ldr	r3, [r0, #0]
 8001e90:	6a1b      	ldr	r3, [r3, #32]
 8001e92:	4798      	blx	r3
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001e94:	2000      	movs	r0, #0
    }
 8001e96:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001e9a:	f7ff ba05 	b.w	80012a8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001e9e:	bd10      	pop	{r4, pc}
 8001ea0:	2400b060 	.word	0x2400b060
 8001ea4:	50001000 	.word	0x50001000
 8001ea8:	240015fc 	.word	0x240015fc
 8001eac:	240015fa 	.word	0x240015fa

08001eb0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001eb0:	4770      	bx	lr

08001eb2 <_ZN23ApplicationFontProviderD0Ev>:
 8001eb2:	b510      	push	{r4, lr}
 8001eb4:	4604      	mov	r4, r0
 8001eb6:	2104      	movs	r1, #4
 8001eb8:	f01a fe4b 	bl	801cb52 <_ZdlPvj>
 8001ebc:	4620      	mov	r0, r4
 8001ebe:	bd10      	pop	{r4, pc}

08001ec0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001ec0:	2901      	cmp	r1, #1
{
 8001ec2:	b508      	push	{r3, lr}
    switch (typography)
 8001ec4:	d006      	beq.n	8001ed4 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001ec6:	2902      	cmp	r1, #2
 8001ec8:	d008      	beq.n	8001edc <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001eca:	b959      	cbnz	r1, 8001ee4 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::COUNTER:
        // verdana_27_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001ecc:	f000 fe98 	bl	8002c00 <_ZN17TypedTextDatabase8getFontsEv>
 8001ed0:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001ed2:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001ed4:	f000 fe94 	bl	8002c00 <_ZN17TypedTextDatabase8getFontsEv>
 8001ed8:	6840      	ldr	r0, [r0, #4]
 8001eda:	e7fa      	b.n	8001ed2 <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001edc:	f000 fe90 	bl	8002c00 <_ZN17TypedTextDatabase8getFontsEv>
 8001ee0:	6880      	ldr	r0, [r0, #8]
 8001ee2:	e7f6      	b.n	8001ed2 <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001ee4:	2000      	movs	r0, #0
 8001ee6:	e7f4      	b.n	8001ed2 <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001ee8 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001ee8:	4800      	ldr	r0, [pc, #0]	; (8001eec <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001eea:	4770      	bx	lr
 8001eec:	0801e2dc 	.word	0x0801e2dc

08001ef0 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001ef0:	2002      	movs	r0, #2
 8001ef2:	4770      	bx	lr

08001ef4 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001ef4:	b513      	push	{r0, r1, r4, lr}
 8001ef6:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001ef8:	b151      	cbz	r1, 8001f10 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001efa:	6803      	ldr	r3, [r0, #0]
 8001efc:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
 8001efe:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001f00:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001f04:	689c      	ldr	r4, [r3, #8]
 8001f06:	f10d 0303 	add.w	r3, sp, #3
 8001f0a:	47a0      	blx	r4
        return glyph;
    }
 8001f0c:	b002      	add	sp, #8
 8001f0e:	bd10      	pop	{r4, pc}
            return 0;
 8001f10:	4608      	mov	r0, r1
 8001f12:	e7fb      	b.n	8001f0c <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001f14 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001f14:	8940      	ldrh	r0, [r0, #10]
 8001f16:	4770      	bx	lr

08001f18 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001f18:	8980      	ldrh	r0, [r0, #12]
 8001f1a:	4770      	bx	lr

08001f1c <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8001f1c:	8880      	ldrh	r0, [r0, #4]
 8001f1e:	4770      	bx	lr

08001f20 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8001f20:	7983      	ldrb	r3, [r0, #6]
 8001f22:	8882      	ldrh	r2, [r0, #4]
 8001f24:	1898      	adds	r0, r3, r2
    }
 8001f26:	b280      	uxth	r0, r0
 8001f28:	4770      	bx	lr

08001f2a <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001f2a:	79c0      	ldrb	r0, [r0, #7]
    }
 8001f2c:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001f30:	4770      	bx	lr

08001f32 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001f32:	79c0      	ldrb	r0, [r0, #7]
    }
 8001f34:	09c0      	lsrs	r0, r0, #7
 8001f36:	4770      	bx	lr

08001f38 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8001f38:	4770      	bx	lr

08001f3a <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8001f3a:	b510      	push	{r4, lr}
 8001f3c:	4604      	mov	r4, r0
    }
 8001f3e:	2108      	movs	r1, #8
 8001f40:	f01a fe07 	bl	801cb52 <_ZdlPvj>
 8001f44:	4620      	mov	r0, r4
 8001f46:	bd10      	pop	{r4, pc}

08001f48 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8001f48:	4770      	bx	lr

08001f4a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8001f4a:	4770      	bx	lr

08001f4c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8001f4c:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8001f50:	6808      	ldr	r0, [r1, #0]
 8001f52:	6849      	ldr	r1, [r1, #4]
 8001f54:	c303      	stmia	r3!, {r0, r1}
    }
 8001f56:	4770      	bx	lr

08001f58 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8001f58:	4770      	bx	lr

08001f5a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8001f5a:	4770      	bx	lr

08001f5c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8001f5c:	6041      	str	r1, [r0, #4]
    }
 8001f5e:	4770      	bx	lr

08001f60 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8001f60:	4770      	bx	lr
	...

08001f64 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001f64:	4b06      	ldr	r3, [pc, #24]	; (8001f80 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8001f66:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8001f6a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8001f6e:	2300      	movs	r3, #0
 8001f70:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8001f74:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8001f78:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8001f7c:	4770      	bx	lr
 8001f7e:	bf00      	nop
 8001f80:	08002025 	.word	0x08002025

08001f84 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8001f84:	2301      	movs	r3, #1
 8001f86:	7203      	strb	r3, [r0, #8]
    }
 8001f88:	4770      	bx	lr

08001f8a <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8001f8a:	4770      	bx	lr

08001f8c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8001f8c:	4770      	bx	lr

08001f8e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8001f8e:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8001f90:	6841      	ldr	r1, [r0, #4]
    virtual void execute()
 8001f92:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8001f94:	68c2      	ldr	r2, [r0, #12]
 8001f96:	689b      	ldr	r3, [r3, #8]
 8001f98:	1054      	asrs	r4, r2, #1
 8001f9a:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8001f9e:	07d2      	lsls	r2, r2, #31
 8001fa0:	bf48      	it	mi
 8001fa2:	590a      	ldrmi	r2, [r1, r4]
    }
 8001fa4:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8001fa8:	bf48      	it	mi
 8001faa:	58d3      	ldrmi	r3, [r2, r3]
 8001fac:	4718      	bx	r3

08001fae <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8001fae:	6843      	ldr	r3, [r0, #4]
 8001fb0:	b12b      	cbz	r3, 8001fbe <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8001fb2:	6883      	ldr	r3, [r0, #8]
 8001fb4:	b92b      	cbnz	r3, 8001fc2 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8001fb6:	68c0      	ldr	r0, [r0, #12]
 8001fb8:	f000 0001 	and.w	r0, r0, #1
 8001fbc:	4770      	bx	lr
 8001fbe:	4618      	mov	r0, r3
 8001fc0:	4770      	bx	lr
 8001fc2:	2001      	movs	r0, #1
    }
 8001fc4:	4770      	bx	lr

08001fc6 <_ZN8touchgfx12NoTransitionD0Ev>:
 8001fc6:	b510      	push	{r4, lr}
 8001fc8:	4604      	mov	r4, r0
 8001fca:	210c      	movs	r1, #12
 8001fcc:	f01a fdc1 	bl	801cb52 <_ZdlPvj>
 8001fd0:	4620      	mov	r0, r4
 8001fd2:	bd10      	pop	{r4, pc}

08001fd4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8001fd4:	b510      	push	{r4, lr}
 8001fd6:	4604      	mov	r4, r0
 8001fd8:	2110      	movs	r1, #16
 8001fda:	f01a fdba 	bl	801cb52 <_ZdlPvj>
 8001fde:	4620      	mov	r0, r4
 8001fe0:	bd10      	pop	{r4, pc}

08001fe2 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8001fe2:	b510      	push	{r4, lr}
 8001fe4:	4604      	mov	r4, r0
 8001fe6:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8001fea:	f01a fdb2 	bl	801cb52 <_ZdlPvj>
 8001fee:	4620      	mov	r0, r4
 8001ff0:	bd10      	pop	{r4, pc}

08001ff2 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8001ff2:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 8001ff4:	f00c f84c 	bl	800e090 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8001ff8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8001ffc:	f00c bbee 	b.w	800e7dc <_ZN8touchgfx11Application10invalidateEv>

08002000 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002000:	b510      	push	{r4, lr}
 8002002:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002004:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8002008:	b158      	cbz	r0, 8002022 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800200a:	6803      	ldr	r3, [r0, #0]
 800200c:	68db      	ldr	r3, [r3, #12]
 800200e:	4798      	blx	r3
 8002010:	b138      	cbz	r0, 8002022 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002012:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8002016:	6803      	ldr	r3, [r0, #0]
 8002018:	689b      	ldr	r3, [r3, #8]
 800201a:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800201c:	2300      	movs	r3, #0
 800201e:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002022:	bd10      	pop	{r4, pc}

08002024 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002024:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002028:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 800202c:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800202e:	68a8      	ldr	r0, [r5, #8]
 8002030:	6803      	ldr	r3, [r0, #0]
 8002032:	6a1b      	ldr	r3, [r3, #32]
 8002034:	4798      	blx	r3
 8002036:	f5b0 7f0a 	cmp.w	r0, #552	; 0x228
 800203a:	d205      	bcs.n	8002048 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 800203c:	4b45      	ldr	r3, [pc, #276]	; (8002154 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 800203e:	21a3      	movs	r1, #163	; 0xa3
 8002040:	4a45      	ldr	r2, [pc, #276]	; (8002158 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002042:	4846      	ldr	r0, [pc, #280]	; (800215c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002044:	f01a fdb4 	bl	801cbb0 <__assert_func>
 8002048:	6868      	ldr	r0, [r5, #4]
 800204a:	6803      	ldr	r3, [r0, #0]
 800204c:	6a1b      	ldr	r3, [r3, #32]
 800204e:	4798      	blx	r3
 8002050:	280f      	cmp	r0, #15
 8002052:	d803      	bhi.n	800205c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002054:	4b42      	ldr	r3, [pc, #264]	; (8002160 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002056:	21a4      	movs	r1, #164	; 0xa4
 8002058:	4a3f      	ldr	r2, [pc, #252]	; (8002158 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800205a:	e7f2      	b.n	8002042 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800205c:	68e8      	ldr	r0, [r5, #12]
 800205e:	6803      	ldr	r3, [r0, #0]
 8002060:	6a1b      	ldr	r3, [r3, #32]
 8002062:	4798      	blx	r3
 8002064:	280b      	cmp	r0, #11
 8002066:	d803      	bhi.n	8002070 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002068:	4b3e      	ldr	r3, [pc, #248]	; (8002164 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800206a:	21a5      	movs	r1, #165	; 0xa5
 800206c:	4a3a      	ldr	r2, [pc, #232]	; (8002158 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800206e:	e7e8      	b.n	8002042 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002070:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800216c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002074:	f00c f80c 	bl	800e090 <_ZN8touchgfx11Application11getInstanceEv>
 8002078:	f00c f810 	bl	800e09c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800207c:	f8d9 0000 	ldr.w	r0, [r9]
 8002080:	b110      	cbz	r0, 8002088 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002082:	6803      	ldr	r3, [r0, #0]
 8002084:	68db      	ldr	r3, [r3, #12]
 8002086:	4798      	blx	r3
    if (*currentTrans)
 8002088:	f8d9 0000 	ldr.w	r0, [r9]
 800208c:	b110      	cbz	r0, 8002094 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800208e:	6803      	ldr	r3, [r0, #0]
 8002090:	681b      	ldr	r3, [r3, #0]
 8002092:	4798      	blx	r3
    if (*currentScreen)
 8002094:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002170 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002098:	f8d8 0000 	ldr.w	r0, [r8]
 800209c:	b110      	cbz	r0, 80020a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800209e:	6803      	ldr	r3, [r0, #0]
 80020a0:	695b      	ldr	r3, [r3, #20]
 80020a2:	4798      	blx	r3
    if (*currentPresenter)
 80020a4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80020a8:	b110      	cbz	r0, 80020b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80020aa:	6803      	ldr	r3, [r0, #0]
 80020ac:	685b      	ldr	r3, [r3, #4]
 80020ae:	4798      	blx	r3
    if (*currentScreen)
 80020b0:	f8d8 0000 	ldr.w	r0, [r8]
 80020b4:	b110      	cbz	r0, 80020bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80020b6:	6803      	ldr	r3, [r0, #0]
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	4798      	blx	r3
    if (*currentPresenter)
 80020bc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80020c0:	b110      	cbz	r0, 80020c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80020c2:	6803      	ldr	r3, [r0, #0]
 80020c4:	689b      	ldr	r3, [r3, #8]
 80020c6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80020c8:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80020ca:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
 80020cc:	f04f 0b00 	mov.w	fp, #0
 80020d0:	6803      	ldr	r3, [r0, #0]
 80020d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020d4:	4798      	blx	r3
 80020d6:	4b24      	ldr	r3, [pc, #144]	; (8002168 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80020d8:	4604      	mov	r4, r0
 80020da:	f8c0 b004 	str.w	fp, [r0, #4]
 80020de:	6003      	str	r3, [r0, #0]
 80020e0:	4659      	mov	r1, fp
 80020e2:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80020e6:	68a8      	ldr	r0, [r5, #8]
 80020e8:	6803      	ldr	r3, [r0, #0]
 80020ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020ec:	4798      	blx	r3
 80020ee:	4606      	mov	r6, r0
 80020f0:	f000 fe0e 	bl	8002d10 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80020f4:	6868      	ldr	r0, [r5, #4]
 80020f6:	4659      	mov	r1, fp
 80020f8:	6803      	ldr	r3, [r0, #0]
 80020fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80020fc:	4798      	blx	r3
 80020fe:	4605      	mov	r5, r0
 8002100:	4631      	mov	r1, r6
 8002102:	f000 fdbf 	bl	8002c84 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002106:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800210a:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800210e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002112:	b1e5      	cbz	r5, 800214e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002114:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002116:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800211a:	4630      	mov	r0, r6
 800211c:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 800211e:	f8c5 a008 	str.w	sl, [r5, #8]
 8002122:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002124:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002126:	4798      	blx	r3
    newPresenter->activate();
 8002128:	682b      	ldr	r3, [r5, #0]
 800212a:	4628      	mov	r0, r5
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002130:	4621      	mov	r1, r4
 8002132:	4630      	mov	r0, r6
 8002134:	f00d fb92 	bl	800f85c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002138:	6823      	ldr	r3, [r4, #0]
 800213a:	4620      	mov	r0, r4
 800213c:	691b      	ldr	r3, [r3, #16]
 800213e:	4798      	blx	r3
    newTransition->invalidate();
 8002140:	6823      	ldr	r3, [r4, #0]
 8002142:	4620      	mov	r0, r4
 8002144:	695b      	ldr	r3, [r3, #20]
}
 8002146:	b001      	add	sp, #4
 8002148:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800214c:	4718      	bx	r3
    model->bind(newPresenter);
 800214e:	462b      	mov	r3, r5
 8002150:	e7e1      	b.n	8002116 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002152:	bf00      	nop
 8002154:	0801e314 	.word	0x0801e314
 8002158:	0801e3a2 	.word	0x0801e3a2
 800215c:	0801e4a6 	.word	0x0801e4a6
 8002160:	0801e4ed 	.word	0x0801e4ed
 8002164:	0801e590 	.word	0x0801e590
 8002168:	0801e6a0 	.word	0x0801e6a0
 800216c:	2400b0a0 	.word	0x2400b0a0
 8002170:	2400b09c 	.word	0x2400b09c

08002174 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8002174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002176:	4604      	mov	r4, r0
 8002178:	4617      	mov	r7, r2
 800217a:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 800217c:	f00b ffaa 	bl	800e0d4 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002180:	4b10      	ldr	r3, [pc, #64]	; (80021c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
        : currentPresenter(0),
 8002182:	2500      	movs	r5, #0
        instance = this;
 8002184:	601c      	str	r4, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002186:	4629      	mov	r1, r5
      model(m)
 8002188:	4b0f      	ldr	r3, [pc, #60]	; (80021c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800218a:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
        return instance;
 800218e:	4e0f      	ldr	r6, [pc, #60]	; (80021cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 8002190:	6023      	str	r3, [r4, #0]
 8002192:	6830      	ldr	r0, [r6, #0]
        : pobject(0), pmemfun(0)
 8002194:	4b0e      	ldr	r3, [pc, #56]	; (80021d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8002196:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 800219a:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800219e:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80021a0:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
 80021a4:	689b      	ldr	r3, [r3, #8]
 80021a6:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80021a8:	4628      	mov	r0, r5
 80021aa:	f000 fcdd 	bl	8002b68 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80021ae:	6833      	ldr	r3, [r6, #0]
 80021b0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80021b4:	b10a      	cbz	r2, 80021ba <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 80021b6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80021b8:	b900      	cbnz	r0, 80021bc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 80021ba:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 80021bc:	f013 fdc5 	bl	8015d4a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 80021c0:	4620      	mov	r0, r4
 80021c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80021c4:	2400b0ac 	.word	0x2400b0ac
 80021c8:	0801e654 	.word	0x0801e654
 80021cc:	2400b060 	.word	0x2400b060
 80021d0:	0801e63c 	.word	0x0801e63c

080021d4 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80021d4:	4b06      	ldr	r3, [pc, #24]	; (80021f0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 80021d6:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80021da:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80021de:	2300      	movs	r3, #0
 80021e0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 80021e4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80021e8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 80021ec:	4770      	bx	lr
 80021ee:	bf00      	nop
 80021f0:	08002025 	.word	0x08002025

080021f4 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80021f4:	6a00      	ldr	r0, [r0, #32]
 80021f6:	4770      	bx	lr

080021f8 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80021f8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80021fa:	4770      	bx	lr

080021fc <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80021fc:	4770      	bx	lr

080021fe <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80021fe:	888b      	ldrh	r3, [r1, #4]
 8002200:	6980      	ldr	r0, [r0, #24]
 8002202:	0adb      	lsrs	r3, r3, #11
 8002204:	680a      	ldr	r2, [r1, #0]
 8002206:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800220a:	4410      	add	r0, r2
 800220c:	4770      	bx	lr

0800220e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800220e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002210:	b1c2      	cbz	r2, 8002244 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002212:	7b13      	ldrb	r3, [r2, #12]
 8002214:	b1b3      	cbz	r3, 8002244 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002216:	7b54      	ldrb	r4, [r2, #13]
 8002218:	7ad2      	ldrb	r2, [r2, #11]
 800221a:	0224      	lsls	r4, r4, #8
 800221c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002220:	4314      	orrs	r4, r2
 8002222:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002224:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002226:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 800222a:	8813      	ldrh	r3, [r2, #0]
 800222c:	428b      	cmp	r3, r1
 800222e:	d102      	bne.n	8002236 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8002230:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8002234:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8002236:	d805      	bhi.n	8002244 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002238:	3801      	subs	r0, #1
 800223a:	3204      	adds	r2, #4
 800223c:	b280      	uxth	r0, r0
 800223e:	2800      	cmp	r0, #0
 8002240:	d1f3      	bne.n	800222a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8002242:	e7f7      	b.n	8002234 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8002244:	2000      	movs	r0, #0
 8002246:	e7f5      	b.n	8002234 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08002248 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8002248:	b510      	push	{r4, lr}
 800224a:	4604      	mov	r4, r0
 800224c:	2128      	movs	r1, #40	; 0x28
 800224e:	f01a fc80 	bl	801cb52 <_ZdlPvj>
 8002252:	4620      	mov	r0, r4
 8002254:	bd10      	pop	{r4, pc}
	...

08002258 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002258:	b530      	push	{r4, r5, lr}
 800225a:	b089      	sub	sp, #36	; 0x24
 800225c:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800225e:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002262:	9506      	str	r5, [sp, #24]
 8002264:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002268:	9505      	str	r5, [sp, #20]
 800226a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800226e:	9504      	str	r5, [sp, #16]
 8002270:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002274:	9503      	str	r5, [sp, #12]
 8002276:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 800227a:	9502      	str	r5, [sp, #8]
 800227c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002280:	9501      	str	r5, [sp, #4]
 8002282:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002286:	9500      	str	r5, [sp, #0]
 8002288:	f00c ff48 	bl	800f11c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800228c:	4b06      	ldr	r3, [pc, #24]	; (80022a8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
}
 800228e:	4620      	mov	r0, r4
      arabicTable(formsTable)
 8002290:	6023      	str	r3, [r4, #0]
      glyphData(glyphDataInternalFlash),
 8002292:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002294:	61a3      	str	r3, [r4, #24]
      kerningData(kerningList),
 8002296:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002298:	61e3      	str	r3, [r4, #28]
      gsubTable(gsubData),
 800229a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800229c:	6223      	str	r3, [r4, #32]
      arabicTable(formsTable)
 800229e:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80022a0:	6263      	str	r3, [r4, #36]	; 0x24
}
 80022a2:	b009      	add	sp, #36	; 0x24
 80022a4:	bd30      	pop	{r4, r5, pc}
 80022a6:	bf00      	nop
 80022a8:	0801e6c4 	.word	0x0801e6c4

080022ac <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80022ac:	2000      	movs	r0, #0
 80022ae:	4770      	bx	lr

080022b0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80022b0:	8081      	strh	r1, [r0, #4]
    }
 80022b2:	4770      	bx	lr

080022b4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80022b4:	80c1      	strh	r1, [r0, #6]
    }
 80022b6:	4770      	bx	lr

080022b8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80022b8:	8101      	strh	r1, [r0, #8]
    }
 80022ba:	4770      	bx	lr

080022bc <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80022bc:	8141      	strh	r1, [r0, #10]
    }
 80022be:	4770      	bx	lr

080022c0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80022c0:	4770      	bx	lr

080022c2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80022c2:	4770      	bx	lr

080022c4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80022c4:	4770      	bx	lr

080022c6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80022c6:	4770      	bx	lr

080022c8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80022c8:	4770      	bx	lr

080022ca <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80022ca:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80022cc:	88c4      	ldrh	r4, [r0, #6]
 80022ce:	6803      	ldr	r3, [r0, #0]
 80022d0:	1b12      	subs	r2, r2, r4
 80022d2:	8884      	ldrh	r4, [r0, #4]
 80022d4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80022d6:	1b09      	subs	r1, r1, r4
 80022d8:	b212      	sxth	r2, r2
    }
 80022da:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80022de:	b209      	sxth	r1, r1
 80022e0:	4718      	bx	r3

080022e2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80022e2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80022e6:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80022e8:	f04f 33ff 	mov.w	r3, #4294967295
 80022ec:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80022ee:	6813      	ldr	r3, [r2, #0]
 80022f0:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80022f2:	6010      	str	r0, [r2, #0]
    }
 80022f4:	4770      	bx	lr

080022f6 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 80022f6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80022f8:	4770      	bx	lr

080022fa <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 80022fa:	4770      	bx	lr

080022fc <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80022fc:	4770      	bx	lr

080022fe <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80022fe:	4770      	bx	lr

08002300 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002300:	4770      	bx	lr

08002302 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002302:	4770      	bx	lr

08002304 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8002304:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002308:	b11a      	cbz	r2, 8002312 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800230a:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 800230e:	b102      	cbz	r2, 8002312 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8002310:	6018      	str	r0, [r3, #0]
        }
    }
 8002312:	4770      	bx	lr

08002314 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002314:	b530      	push	{r4, r5, lr}
 8002316:	b085      	sub	sp, #20
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002318:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
 800231a:	4604      	mov	r4, r0
        rect.width = width;
 800231c:	8101      	strh	r1, [r0, #8]
        boundingArea = calculateBoundingArea();
 800231e:	466d      	mov	r5, sp
 8002320:	4601      	mov	r1, r0
 8002322:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002326:	343c      	adds	r4, #60	; 0x3c
 8002328:	4628      	mov	r0, r5
 800232a:	4798      	blx	r3
 800232c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002330:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002334:	b005      	add	sp, #20
 8002336:	bd30      	pop	{r4, r5, pc}

08002338 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002338:	b530      	push	{r4, r5, lr}
 800233a:	b085      	sub	sp, #20
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800233c:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
 800233e:	4604      	mov	r4, r0
        rect.height = height;
 8002340:	8141      	strh	r1, [r0, #10]
        boundingArea = calculateBoundingArea();
 8002342:	466d      	mov	r5, sp
 8002344:	4601      	mov	r1, r0
 8002346:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800234a:	343c      	adds	r4, #60	; 0x3c
 800234c:	4628      	mov	r0, r5
 800234e:	4798      	blx	r3
 8002350:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002354:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002358:	b005      	add	sp, #20
 800235a:	bd30      	pop	{r4, r5, pc}

0800235c <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800235c:	2200      	movs	r2, #0
 800235e:	8002      	strh	r2, [r0, #0]
 8002360:	8042      	strh	r2, [r0, #2]
 8002362:	8082      	strh	r2, [r0, #4]
 8002364:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002366:	4770      	bx	lr

08002368 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002368:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800236c:	4770      	bx	lr

0800236e <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
    {
        setX(x);
 800236e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002370:	b570      	push	{r4, r5, r6, lr}
 8002372:	4604      	mov	r4, r0
        setX(x);
 8002374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002376:	4615      	mov	r5, r2
        setX(x);
 8002378:	4798      	blx	r3
        setBaselineY(baselineY);
 800237a:	6823      	ldr	r3, [r4, #0]
 800237c:	4620      	mov	r0, r4
 800237e:	4629      	mov	r1, r5
 8002380:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002382:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002386:	4718      	bx	r3

08002388 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002388:	2000      	movs	r0, #0
 800238a:	4770      	bx	lr

0800238c <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800238c:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800238e:	4770      	bx	lr

08002390 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002390:	4770      	bx	lr

08002392 <_ZN15Screen1ViewBase11downclickedEv>:
     * Virtual Action Handlers
     */
    virtual void downclicked()
    {
        // Override and implement this function in Screen1
    }
 8002392:	4770      	bx	lr

08002394 <_ZN15Screen1ViewBase9upclickedEv>:

    virtual void upclicked()
    {
        // Override and implement this function in Screen1
    }
 8002394:	4770      	bx	lr

08002396 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002396:	4770      	bx	lr

08002398 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002398:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800239c:	b14b      	cbz	r3, 80023b2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 800239e:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80023a2:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80023a4:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80023a6:	b13b      	cbz	r3, 80023b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80023a8:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80023ac:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80023ae:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80023b0:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80023b2:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80023b6:	e7f4      	b.n	80023a2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80023b8:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80023bc:	e7f6      	b.n	80023ac <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080023be <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80023be:	4770      	bx	lr

080023c0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 80023c0:	4770      	bx	lr

080023c2 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80023c2:	4770      	bx	lr

080023c4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80023c4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80023c6:	6844      	ldr	r4, [r0, #4]
    virtual void execute(T1 t1)
 80023c8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80023ca:	68c2      	ldr	r2, [r0, #12]
 80023cc:	689b      	ldr	r3, [r3, #8]
 80023ce:	1055      	asrs	r5, r2, #1
 80023d0:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80023d4:	07d2      	lsls	r2, r2, #31
 80023d6:	bf48      	it	mi
 80023d8:	5962      	ldrmi	r2, [r4, r5]
    }
 80023da:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80023dc:	bf48      	it	mi
 80023de:	58d3      	ldrmi	r3, [r2, r3]
 80023e0:	4718      	bx	r3

080023e2 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80023e2:	6843      	ldr	r3, [r0, #4]
 80023e4:	b12b      	cbz	r3, 80023f2 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80023e6:	6883      	ldr	r3, [r0, #8]
 80023e8:	b92b      	cbnz	r3, 80023f6 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80023ea:	68c0      	ldr	r0, [r0, #12]
 80023ec:	f000 0001 	and.w	r0, r0, #1
 80023f0:	4770      	bx	lr
 80023f2:	4618      	mov	r0, r3
 80023f4:	4770      	bx	lr
 80023f6:	2001      	movs	r0, #1
    }
 80023f8:	4770      	bx	lr

080023fa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80023fa:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 80023fe:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002402:	4770      	bx	lr

08002404 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002404:	b510      	push	{r4, lr}
 8002406:	4604      	mov	r4, r0
 8002408:	214c      	movs	r1, #76	; 0x4c
 800240a:	f01a fba2 	bl	801cb52 <_ZdlPvj>
 800240e:	4620      	mov	r0, r4
 8002410:	bd10      	pop	{r4, pc}

08002412 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002412:	b510      	push	{r4, lr}
 8002414:	4604      	mov	r4, r0
 8002416:	2178      	movs	r1, #120	; 0x78
 8002418:	f01a fb9b 	bl	801cb52 <_ZdlPvj>
 800241c:	4620      	mov	r0, r4
 800241e:	bd10      	pop	{r4, pc}

08002420 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002420:	b510      	push	{r4, lr}
 8002422:	4604      	mov	r4, r0
 8002424:	2110      	movs	r1, #16
 8002426:	f01a fb94 	bl	801cb52 <_ZdlPvj>
 800242a:	4620      	mov	r0, r4
 800242c:	bd10      	pop	{r4, pc}

0800242e <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 800242e:	b510      	push	{r4, lr}
 8002430:	4604      	mov	r4, r0
 8002432:	f44f 7109 	mov.w	r1, #548	; 0x224
 8002436:	f01a fb8c 	bl	801cb52 <_ZdlPvj>
 800243a:	4620      	mov	r0, r4
 800243c:	bd10      	pop	{r4, pc}

0800243e <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 800243e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002442:	b112      	cbz	r2, 800244a <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8002444:	6803      	ldr	r3, [r0, #0]
 8002446:	695b      	ldr	r3, [r3, #20]
 8002448:	4718      	bx	r3
    }
 800244a:	4770      	bx	lr

0800244c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800244c:	b510      	push	{r4, lr}
 800244e:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002450:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002452:	b150      	cbz	r0, 800246a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002454:	6803      	ldr	r3, [r0, #0]
 8002456:	68db      	ldr	r3, [r3, #12]
 8002458:	4798      	blx	r3
 800245a:	b130      	cbz	r0, 800246a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 800245c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800245e:	4621      	mov	r1, r4
 8002460:	6803      	ldr	r3, [r0, #0]
        }
    }
 8002462:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002466:	689b      	ldr	r3, [r3, #8]
 8002468:	4718      	bx	r3
    }
 800246a:	bd10      	pop	{r4, pc}

0800246c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
 800246c:	f500 7288 	add.w	r2, r0, #272	; 0x110
 8002470:	4291      	cmp	r1, r2
 8002472:	d102      	bne.n	800247a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //Interaction1
        //When flexButton1 clicked call virtual function
        //Call downclicked
        downclicked();
 8002474:	6803      	ldr	r3, [r0, #0]
 8002476:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &flexButton2)
    {
        //Interaction2
        //When flexButton2 clicked call virtual function
        //Call upclicked
        upclicked();
 8002478:	4718      	bx	r3
    else if (&src == &flexButton2)
 800247a:	f500 72c4 	add.w	r2, r0, #392	; 0x188
 800247e:	4291      	cmp	r1, r2
 8002480:	d102      	bne.n	8002488 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        upclicked();
 8002482:	6803      	ldr	r3, [r0, #0]
 8002484:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002486:	e7f7      	b.n	8002478 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002488:	4770      	bx	lr
	...

0800248c <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 800248c:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800248e:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002490:	6b5e      	ldr	r6, [r3, #52]	; 0x34
    virtual void setBaselineY(int16_t baselineY)
 8002492:	4604      	mov	r4, r0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002494:	4b11      	ldr	r3, [pc, #68]	; (80024dc <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002496:	b28d      	uxth	r5, r1
 8002498:	681b      	ldr	r3, [r3, #0]
 800249a:	b92b      	cbnz	r3, 80024a8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 800249c:	4b10      	ldr	r3, [pc, #64]	; (80024e0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 800249e:	216c      	movs	r1, #108	; 0x6c
 80024a0:	4a10      	ldr	r2, [pc, #64]	; (80024e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80024a2:	4811      	ldr	r0, [pc, #68]	; (80024e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80024a4:	f01a fb84 	bl	801cbb0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80024a8:	4910      	ldr	r1, [pc, #64]	; (80024ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80024aa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80024ac:	8809      	ldrh	r1, [r1, #0]
 80024ae:	4291      	cmp	r1, r2
 80024b0:	d803      	bhi.n	80024ba <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80024b2:	4b0f      	ldr	r3, [pc, #60]	; (80024f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80024b4:	216d      	movs	r1, #109	; 0x6d
 80024b6:	4a0b      	ldr	r2, [pc, #44]	; (80024e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80024b8:	e7f3      	b.n	80024a2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80024ba:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80024be:	4b0d      	ldr	r3, [pc, #52]	; (80024f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80024c0:	681b      	ldr	r3, [r3, #0]
 80024c2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80024c6:	6803      	ldr	r3, [r0, #0]
 80024c8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80024ca:	4798      	blx	r3
 80024cc:	1a28      	subs	r0, r5, r0
 80024ce:	4633      	mov	r3, r6
 80024d0:	b201      	sxth	r1, r0
 80024d2:	4620      	mov	r0, r4
    }
 80024d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 80024d8:	4718      	bx	r3
 80024da:	bf00      	nop
 80024dc:	2400b0b0 	.word	0x2400b0b0
 80024e0:	0801e714 	.word	0x0801e714
 80024e4:	0801e756 	.word	0x0801e756
 80024e8:	0801e791 	.word	0x0801e791
 80024ec:	2400b0b4 	.word	0x2400b0b4
 80024f0:	0801e7d8 	.word	0x0801e7d8
 80024f4:	2400b0b8 	.word	0x2400b0b8

080024f8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80024f8:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80024fa:	b570      	push	{r4, r5, r6, lr}
 80024fc:	4604      	mov	r4, r0
 80024fe:	460d      	mov	r5, r1
        return pressed;
 8002500:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002504:	b99b      	cbnz	r3, 800252e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002506:	b98e      	cbnz	r6, 800252c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002508:	fab3 f383 	clz	r3, r3
        handlePressedUpdated();
 800250c:	4620      	mov	r0, r4
 800250e:	095b      	lsrs	r3, r3, #5
 8002510:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8002514:	6823      	ldr	r3, [r4, #0]
 8002516:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800251a:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 800251c:	6823      	ldr	r3, [r4, #0]
 800251e:	4620      	mov	r0, r4
 8002520:	695b      	ldr	r3, [r3, #20]
 8002522:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002524:	b116      	cbz	r6, 800252c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002526:	792b      	ldrb	r3, [r5, #4]
 8002528:	2b01      	cmp	r3, #1
 800252a:	d003      	beq.n	8002534 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 800252c:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800252e:	2e00      	cmp	r6, #0
 8002530:	d0fc      	beq.n	800252c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002532:	e7e9      	b.n	8002508 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002534:	6823      	ldr	r3, [r4, #0]
 8002536:	4620      	mov	r0, r4
 8002538:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 800253c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002540:	4718      	bx	r3

08002542 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002542:	2200      	movs	r2, #0
 8002544:	f04f 31ff 	mov.w	r1, #4294967295
              text(0)
 8002548:	6082      	str	r2, [r0, #8]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800254a:	e9c0 2100 	strd	r2, r1, [r0]
    }
 800254e:	4770      	bx	lr

08002550 <_ZN8touchgfx8Drawable5setXYEss>:
        setX(x);
 8002550:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002552:	b570      	push	{r4, r5, r6, lr}
 8002554:	4604      	mov	r4, r0
        setX(x);
 8002556:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002558:	4615      	mov	r5, r2
        setX(x);
 800255a:	4798      	blx	r3
        setY(y);
 800255c:	6823      	ldr	r3, [r4, #0]
 800255e:	4620      	mov	r0, r4
 8002560:	4629      	mov	r1, r5
 8002562:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002564:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002568:	4718      	bx	r3

0800256a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800256a:	b570      	push	{r4, r5, r6, lr}
 800256c:	4604      	mov	r4, r0
 800256e:	461d      	mov	r5, r3
 8002570:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002574:	f7ff ffec 	bl	8002550 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002578:	6823      	ldr	r3, [r4, #0]
 800257a:	4629      	mov	r1, r5
 800257c:	4620      	mov	r0, r4
 800257e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002580:	4798      	blx	r3
        setHeight(height);
 8002582:	6823      	ldr	r3, [r4, #0]
 8002584:	4631      	mov	r1, r6
 8002586:	4620      	mov	r0, r4
 8002588:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800258a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 800258e:	4718      	bx	r3

08002590 <_ZN8touchgfx6WidgetC1Ev>:
 8002590:	2200      	movs	r2, #0
 8002592:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002596:	e9c0 2203 	strd	r2, r2, [r0, #12]
          nextSibling(0),
 800259a:	e9c0 2205 	strd	r2, r2, [r0, #20]
          cachedAbsX(0),
 800259e:	e9c0 2207 	strd	r2, r2, [r0, #28]
          touchable(false),
 80025a2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80025a6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80025a8:	4a01      	ldr	r2, [pc, #4]	; (80025b0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80025aa:	6002      	str	r2, [r0, #0]
 80025ac:	4770      	bx	lr
 80025ae:	bf00      	nop
 80025b0:	0801e85c 	.word	0x0801e85c

080025b4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 80025b4:	b510      	push	{r4, lr}
 80025b6:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 80025b8:	2226      	movs	r2, #38	; 0x26
 80025ba:	2100      	movs	r1, #0
 80025bc:	f01a fcfd 	bl	801cfba <memset>
 80025c0:	4620      	mov	r0, r4
 80025c2:	f7ff ffe5 	bl	8002590 <_ZN8touchgfx6WidgetC1Ev>
 80025c6:	4b04      	ldr	r3, [pc, #16]	; (80025d8 <_ZN8touchgfx3BoxC1Ev+0x24>)
    }
 80025c8:	4620      	mov	r0, r4
        : Widget(), alpha(255), color(0)
 80025ca:	6023      	str	r3, [r4, #0]
 80025cc:	23ff      	movs	r3, #255	; 0xff
 80025ce:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 80025d2:	2300      	movs	r3, #0
 80025d4:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 80025d6:	bd10      	pop	{r4, pc}
 80025d8:	0801ee00 	.word	0x0801ee00

080025dc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 80025dc:	b538      	push	{r3, r4, r5, lr}
 80025de:	4604      	mov	r4, r0
 80025e0:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 80025e2:	2226      	movs	r2, #38	; 0x26
 80025e4:	2100      	movs	r1, #0
 80025e6:	f01a fce8 	bl	801cfba <memset>
 80025ea:	4620      	mov	r0, r4
 80025ec:	f7ff ffd0 	bl	8002590 <_ZN8touchgfx6WidgetC1Ev>
 80025f0:	4b06      	ldr	r3, [pc, #24]	; (800260c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
    {
        Image::setBitmap(bmp);
 80025f2:	4620      	mov	r0, r4
 80025f4:	4629      	mov	r1, r5
        : Widget(), bitmap(bmp), alpha(255)
 80025f6:	6023      	str	r3, [r4, #0]
 80025f8:	882b      	ldrh	r3, [r5, #0]
 80025fa:	84e3      	strh	r3, [r4, #38]	; 0x26
 80025fc:	23ff      	movs	r3, #255	; 0xff
 80025fe:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002602:	f009 ffd9 	bl	800c5b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002606:	4620      	mov	r0, r4
 8002608:	bd38      	pop	{r3, r4, r5, pc}
 800260a:	bf00      	nop
 800260c:	0801eed0 	.word	0x0801eed0

08002610 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002610:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    BoxWithBorderButtonStyle()
 8002614:	b570      	push	{r4, r5, r6, lr}
 8002616:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002618:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 800261c:	2500      	movs	r5, #0
        : T(), up(), down()
 800261e:	4606      	mov	r6, r0
 8002620:	8483      	strh	r3, [r0, #36]	; 0x24
    BoxWithBorderButtonStyle()
 8002622:	4604      	mov	r4, r0
        : T(), up(), down()
 8002624:	4b11      	ldr	r3, [pc, #68]	; (800266c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x5c>)
 8002626:	6285      	str	r5, [r0, #40]	; 0x28
 8002628:	6305      	str	r5, [r0, #48]	; 0x30
        : x(0), y(0), width(0), height(0)
 800262a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800262e:	e9c0 5503 	strd	r5, r5, [r0, #12]
          nextSibling(0),
 8002632:	e9c0 5505 	strd	r5, r5, [r0, #20]
          cachedAbsX(0),
 8002636:	e9c0 5507 	strd	r5, r5, [r0, #28]
 800263a:	f846 3b34 	str.w	r3, [r6], #52
        : Box(), borderColor(0), borderSize(0)
 800263e:	4630      	mov	r0, r6
 8002640:	f7ff ffb8 	bl	80025b4 <_ZN8touchgfx3BoxC1Ev>
 8002644:	4b0a      	ldr	r3, [pc, #40]	; (8002670 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x60>)
        borderBox.setXY(0, 0);
 8002646:	462a      	mov	r2, r5
 8002648:	4629      	mov	r1, r5
 800264a:	4630      	mov	r0, r6
 800264c:	6363      	str	r3, [r4, #52]	; 0x34
        : color(col)
 800264e:	6625      	str	r5, [r4, #96]	; 0x60
 8002650:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
        : color(0)
 8002654:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002658:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 800265c:	f7ff ff78 	bl	8002550 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002660:	4620      	mov	r0, r4
 8002662:	4631      	mov	r1, r6
 8002664:	f008 f9a6 	bl	800a9b4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002668:	4620      	mov	r0, r4
 800266a:	bd70      	pop	{r4, r5, r6, pc}
 800266c:	0801e954 	.word	0x0801e954
 8002670:	0801ee68 	.word	0x0801ee68

08002674 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002674:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002678:	4604      	mov	r4, r0
        : presenter(0)
 800267a:	2500      	movs	r5, #0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 800267c:	f64f 7aff 	movw	sl, #65535	; 0xffff
        color = newColor;
 8002680:	f04f 4b7f 	mov.w	fp, #4278190080	; 0xff000000
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002684:	4627      	mov	r7, r4
 8002686:	f104 096c 	add.w	r9, r4, #108	; 0x6c
 800268a:	f104 0898 	add.w	r8, r4, #152	; 0x98
 800268e:	f104 06c4 	add.w	r6, r4, #196	; 0xc4
Screen1ViewBase::Screen1ViewBase() :
 8002692:	ed2d 8b02 	vpush	{d8}
 8002696:	b08b      	sub	sp, #44	; 0x2c
 8002698:	f00c ff34 	bl	800f504 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 800269c:	4b8f      	ldr	r3, [pc, #572]	; (80028dc <_ZN15Screen1ViewBaseC1Ev+0x268>)
 800269e:	63e5      	str	r5, [r4, #60]	; 0x3c
 80026a0:	f847 3b40 	str.w	r3, [r7], #64
 80026a4:	4638      	mov	r0, r7
 80026a6:	f7ff ff85 	bl	80025b4 <_ZN8touchgfx3BoxC1Ev>
 80026aa:	a908      	add	r1, sp, #32
 80026ac:	4648      	mov	r0, r9
 80026ae:	f8ad a020 	strh.w	sl, [sp, #32]
 80026b2:	f7ff ff93 	bl	80025dc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80026b6:	a908      	add	r1, sp, #32
 80026b8:	4640      	mov	r0, r8
 80026ba:	f8ad a020 	strh.w	sl, [sp, #32]
 80026be:	f7ff ff8d 	bl	80025dc <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80026c2:	2226      	movs	r2, #38	; 0x26
 80026c4:	4629      	mov	r1, r5
 80026c6:	4630      	mov	r0, r6
 80026c8:	f01a fc77 	bl	801cfba <memset>
 80026cc:	4630      	mov	r0, r6
 80026ce:	f7ff ff5f 	bl	8002590 <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 80026d2:	4b83      	ldr	r3, [pc, #524]	; (80028e0 <_ZN15Screen1ViewBaseC1Ev+0x26c>)
 80026d4:	f8a4 a0f0 	strh.w	sl, [r4, #240]	; 0xf0
 80026d8:	f504 7ac4 	add.w	sl, r4, #392	; 0x188
 80026dc:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 80026e0:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
        : color(col)
 80026e4:	f8c4 50f4 	str.w	r5, [r4, #244]	; 0xf4
 80026e8:	f8c4 30f8 	str.w	r3, [r4, #248]	; 0xf8
        : TextAreaWithWildcardBase(), wc1(0)
 80026ec:	4b7d      	ldr	r3, [pc, #500]	; (80028e4 <_ZN15Screen1ViewBaseC1Ev+0x270>)
 80026ee:	f8a4 50fc 	strh.w	r5, [r4, #252]	; 0xfc
 80026f2:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80026f6:	f04f 33ff 	mov.w	r3, #4294967295
 80026fa:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 80026fe:	f8c4 510c 	str.w	r5, [r4, #268]	; 0x10c
              text(0)
 8002702:	e9c4 3541 	strd	r3, r5, [r4, #260]	; 0x104
 8002706:	f504 7388 	add.w	r3, r4, #272	; 0x110
 800270a:	4618      	mov	r0, r3
 800270c:	ee08 3a10 	vmov	s16, r3
 8002710:	f7ff ff7e 	bl	8002610 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 8002714:	4650      	mov	r0, sl
 8002716:	f7ff ff7b 	bl	8002610 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800271a:	4b73      	ldr	r3, [pc, #460]	; (80028e8 <_ZN15Screen1ViewBaseC1Ev+0x274>)
    __background.setPosition(0, 0, 800, 480);
 800271c:	462a      	mov	r2, r5
 800271e:	4629      	mov	r1, r5
 8002720:	4638      	mov	r0, r7
 8002722:	e9c4 3485 	strd	r3, r4, [r4, #532]	; 0x214
 8002726:	4b71      	ldr	r3, [pc, #452]	; (80028ec <_ZN15Screen1ViewBaseC1Ev+0x278>)
 8002728:	e9c4 3587 	strd	r3, r5, [r4, #540]	; 0x21c
 800272c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002730:	9300      	str	r3, [sp, #0]
 8002732:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002736:	f7ff ff18 	bl	800256a <_ZN8touchgfx8Drawable11setPositionEssss>
    image1.setXY(0, 0);
 800273a:	462a      	mov	r2, r5
 800273c:	4629      	mov	r1, r5
 800273e:	4648      	mov	r0, r9
 8002740:	f8c4 b068 	str.w	fp, [r4, #104]	; 0x68
 8002744:	f7ff ff04 	bl	8002550 <_ZN8touchgfx8Drawable5setXYEss>
    image1.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_800X480PX_ID));
 8002748:	a908      	add	r1, sp, #32
 800274a:	4648      	mov	r0, r9
 800274c:	f8ad 5020 	strh.w	r5, [sp, #32]
 8002750:	f009 ff32 	bl	800c5b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image2.setXY(220, 210);
 8002754:	22d2      	movs	r2, #210	; 0xd2
 8002756:	21dc      	movs	r1, #220	; 0xdc
 8002758:	4640      	mov	r0, r8
 800275a:	f7ff fef9 	bl	8002550 <_ZN8touchgfx8Drawable5setXYEss>
 800275e:	f04f 0301 	mov.w	r3, #1
    image2.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_LARGE_ID));
 8002762:	a908      	add	r1, sp, #32
 8002764:	4640      	mov	r0, r8
 8002766:	f8ad 3020 	strh.w	r3, [sp, #32]
 800276a:	f009 ff25 	bl	800c5b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    textArea1.setPosition(378, 227, 45, 32);
 800276e:	2320      	movs	r3, #32
 8002770:	22e3      	movs	r2, #227	; 0xe3
 8002772:	f44f 71bd 	mov.w	r1, #378	; 0x17a
 8002776:	4630      	mov	r0, r6
 8002778:	9300      	str	r3, [sp, #0]
 800277a:	232d      	movs	r3, #45	; 0x2d
 800277c:	f7ff fef5 	bl	800256a <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8002780:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
        color = newColor;
 8002784:	f8c4 b0f4 	str.w	fp, [r4, #244]	; 0xf4
        boundingArea = calculateBoundingArea();
 8002788:	f10d 0b10 	add.w	fp, sp, #16
 800278c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002790:	4631      	mov	r1, r6
 8002792:	4658      	mov	r0, fp
        linespace = space;
 8002794:	f8a4 50f8 	strh.w	r5, [r4, #248]	; 0xf8
        boundingArea = calculateBoundingArea();
 8002798:	4798      	blx	r3
 800279a:	f504 7380 	add.w	r3, r4, #256	; 0x100
 800279e:	e89b 0007 	ldmia.w	fp, {r0, r1, r2}
 80027a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80027a6:	4b52      	ldr	r3, [pc, #328]	; (80028f0 <_ZN15Screen1ViewBaseC1Ev+0x27c>)
    Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_LEGQ).getText());
 80027a8:	f504 7b00 	add.w	fp, r4, #512	; 0x200
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	b92b      	cbnz	r3, 80027bc <_ZN15Screen1ViewBaseC1Ev+0x148>
 80027b0:	4b50      	ldr	r3, [pc, #320]	; (80028f4 <_ZN15Screen1ViewBaseC1Ev+0x280>)
 80027b2:	2160      	movs	r1, #96	; 0x60
 80027b4:	4a50      	ldr	r2, [pc, #320]	; (80028f8 <_ZN15Screen1ViewBaseC1Ev+0x284>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027b6:	4851      	ldr	r0, [pc, #324]	; (80028fc <_ZN15Screen1ViewBaseC1Ev+0x288>)
 80027b8:	f01a f9fa 	bl	801cbb0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80027bc:	4b50      	ldr	r3, [pc, #320]	; (8002900 <_ZN15Screen1ViewBaseC1Ev+0x28c>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80027be:	881b      	ldrh	r3, [r3, #0]
 80027c0:	b91b      	cbnz	r3, 80027ca <_ZN15Screen1ViewBaseC1Ev+0x156>
 80027c2:	4b50      	ldr	r3, [pc, #320]	; (8002904 <_ZN15Screen1ViewBaseC1Ev+0x290>)
 80027c4:	2161      	movs	r1, #97	; 0x61
 80027c6:	4a4c      	ldr	r2, [pc, #304]	; (80028f8 <_ZN15Screen1ViewBaseC1Ev+0x284>)
 80027c8:	e7f5      	b.n	80027b6 <_ZN15Screen1ViewBaseC1Ev+0x142>
        return texts->getText(typedTextId);
 80027ca:	4b4f      	ldr	r3, [pc, #316]	; (8002908 <_ZN15Screen1ViewBaseC1Ev+0x294>)
 80027cc:	4629      	mov	r1, r5
 80027ce:	6818      	ldr	r0, [r3, #0]
 80027d0:	f000 fa06 	bl	8002be0 <_ZNK8touchgfx5Texts7getTextEt>
 80027d4:	4a4d      	ldr	r2, [pc, #308]	; (800290c <_ZN15Screen1ViewBaseC1Ev+0x298>)
 80027d6:	4603      	mov	r3, r0
 80027d8:	210a      	movs	r1, #10
 80027da:	4658      	mov	r0, fp
 80027dc:	f00e fb1c 	bl	8010e18 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80027e0:	4b3f      	ldr	r3, [pc, #252]	; (80028e0 <_ZN15Screen1ViewBaseC1Ev+0x26c>)
        wc1 = value;
 80027e2:	f8c4 b10c 	str.w	fp, [r4, #268]	; 0x10c
        borderBox.setPosition(x, y, width, height);
 80027e6:	f04f 0b32 	mov.w	fp, #50	; 0x32
 80027ea:	9308      	str	r3, [sp, #32]
 80027ec:	f04f 0301 	mov.w	r3, #1
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N111));
 80027f0:	a908      	add	r1, sp, #32
 80027f2:	4630      	mov	r0, r6
 80027f4:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80027f8:	f009 fd12 	bl	800c220 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80027fc:	465b      	mov	r3, fp
 80027fe:	462a      	mov	r2, r5
 8002800:	4629      	mov	r1, r5
 8002802:	f504 70a2 	add.w	r0, r4, #324	; 0x144
 8002806:	f8cd b000 	str.w	fp, [sp]
 800280a:	f7ff feae 	bl	800256a <_ZN8touchgfx8Drawable11setPositionEssss>
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800280e:	f04f 0305 	mov.w	r3, #5
        down = colorPressed;
 8002812:	4a3f      	ldr	r2, [pc, #252]	; (8002910 <_ZN15Screen1ViewBaseC1Ev+0x29c>)
        borderDown = borderColorPressed;
 8002814:	493f      	ldr	r1, [pc, #252]	; (8002914 <_ZN15Screen1ViewBaseC1Ev+0x2a0>)
 8002816:	f8a4 3174 	strh.w	r3, [r4, #372]	; 0x174
 800281a:	483f      	ldr	r0, [pc, #252]	; (8002918 <_ZN15Screen1ViewBaseC1Ev+0x2a4>)
        down = colorPressed;
 800281c:	4b3f      	ldr	r3, [pc, #252]	; (800291c <_ZN15Screen1ViewBaseC1Ev+0x2a8>)
        borderDown = borderColorPressed;
 800281e:	e9c4 1060 	strd	r1, r0, [r4, #384]	; 0x180
        down = colorPressed;
 8002822:	e9c4 325e 	strd	r3, r2, [r4, #376]	; 0x178
        handlePressedUpdated();
 8002826:	ee18 0a10 	vmov	r0, s16
 800282a:	f7ff fdb5 	bl	8002398 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton1.setPosition(288, 317, 50, 50);
 800282e:	465b      	mov	r3, fp
 8002830:	ee18 0a10 	vmov	r0, s16
 8002834:	f240 123d 	movw	r2, #317	; 0x13d
 8002838:	f44f 7190 	mov.w	r1, #288	; 0x120
 800283c:	f8cd b000 	str.w	fp, [sp]
 8002840:	f7ff fe93 	bl	800256a <_ZN8touchgfx8Drawable11setPositionEssss>
    flexButton1.setAction(flexButtonCallback);
 8002844:	f504 7c05 	add.w	ip, r4, #532	; 0x214
        borderBox.setPosition(x, y, width, height);
 8002848:	465b      	mov	r3, fp
 800284a:	462a      	mov	r2, r5
        action = &callback;
 800284c:	f8c4 c140 	str.w	ip, [r4, #320]	; 0x140
 8002850:	4629      	mov	r1, r5
 8002852:	f504 70de 	add.w	r0, r4, #444	; 0x1bc
 8002856:	f8cd b000 	str.w	fp, [sp]
 800285a:	f8cd c00c 	str.w	ip, [sp, #12]
 800285e:	f04f 0505 	mov.w	r5, #5
 8002862:	f7ff fe82 	bl	800256a <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002866:	4b2d      	ldr	r3, [pc, #180]	; (800291c <_ZN15Screen1ViewBaseC1Ev+0x2a8>)
 8002868:	4a29      	ldr	r2, [pc, #164]	; (8002910 <_ZN15Screen1ViewBaseC1Ev+0x29c>)
        borderDown = borderColorPressed;
 800286a:	492a      	ldr	r1, [pc, #168]	; (8002914 <_ZN15Screen1ViewBaseC1Ev+0x2a0>)
 800286c:	482a      	ldr	r0, [pc, #168]	; (8002918 <_ZN15Screen1ViewBaseC1Ev+0x2a4>)
 800286e:	f8a4 51ec 	strh.w	r5, [r4, #492]	; 0x1ec
        down = colorPressed;
 8002872:	e9c4 327c 	strd	r3, r2, [r4, #496]	; 0x1f0
        borderDown = borderColorPressed;
 8002876:	e9c4 107e 	strd	r1, r0, [r4, #504]	; 0x1f8
        handlePressedUpdated();
 800287a:	4650      	mov	r0, sl
 800287c:	f7ff fd8c 	bl	8002398 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    flexButton2.setPosition(463, 317, 50, 50);
 8002880:	f240 123d 	movw	r2, #317	; 0x13d
 8002884:	465b      	mov	r3, fp
 8002886:	4650      	mov	r0, sl
 8002888:	f240 11cf 	movw	r1, #463	; 0x1cf
 800288c:	f8cd b000 	str.w	fp, [sp]
 8002890:	f7ff fe6b 	bl	800256a <_ZN8touchgfx8Drawable11setPositionEssss>
 8002894:	9b03      	ldr	r3, [sp, #12]
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002896:	1d20      	adds	r0, r4, #4
 8002898:	4639      	mov	r1, r7
 800289a:	f8c4 31b8 	str.w	r3, [r4, #440]	; 0x1b8
 800289e:	9003      	str	r0, [sp, #12]
 80028a0:	f008 f888 	bl	800a9b4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80028a4:	4649      	mov	r1, r9
 80028a6:	9803      	ldr	r0, [sp, #12]
 80028a8:	f008 f884 	bl	800a9b4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80028ac:	4641      	mov	r1, r8
 80028ae:	9803      	ldr	r0, [sp, #12]
 80028b0:	f008 f880 	bl	800a9b4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80028b4:	4631      	mov	r1, r6
 80028b6:	9803      	ldr	r0, [sp, #12]
 80028b8:	f008 f87c 	bl	800a9b4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80028bc:	ee18 1a10 	vmov	r1, s16
 80028c0:	9803      	ldr	r0, [sp, #12]
 80028c2:	f008 f877 	bl	800a9b4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80028c6:	9803      	ldr	r0, [sp, #12]
 80028c8:	4651      	mov	r1, sl
 80028ca:	f008 f873 	bl	800a9b4 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80028ce:	4620      	mov	r0, r4
 80028d0:	b00b      	add	sp, #44	; 0x2c
 80028d2:	ecbd 8b02 	vpop	{d8}
 80028d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80028da:	bf00      	nop
 80028dc:	0801ea08 	.word	0x0801ea08
 80028e0:	0801e30c 	.word	0x0801e30c
 80028e4:	0801e8c4 	.word	0x0801e8c4
 80028e8:	0801e9f0 	.word	0x0801e9f0
 80028ec:	0800246d 	.word	0x0800246d
 80028f0:	2400b0b0 	.word	0x2400b0b0
 80028f4:	0801e714 	.word	0x0801e714
 80028f8:	0801e816 	.word	0x0801e816
 80028fc:	0801e791 	.word	0x0801e791
 8002900:	2400b0b4 	.word	0x2400b0b4
 8002904:	0801e7d8 	.word	0x0801e7d8
 8002908:	2400b0bc 	.word	0x2400b0bc
 800290c:	0801e84e 	.word	0x0801e84e
 8002910:	ff0099cc 	.word	0xff0099cc
 8002914:	ff003366 	.word	0xff003366
 8002918:	ff336699 	.word	0xff336699
 800291c:	ff006699 	.word	0xff006699

08002920 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002920:	4770      	bx	lr
	...

08002924 <_Z23getFont_verdana_10_4bppv>:
{
 8002924:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002926:	4d15      	ldr	r5, [pc, #84]	; (800297c <_Z23getFont_verdana_10_4bppv+0x58>)
{
 8002928:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800292a:	682c      	ldr	r4, [r5, #0]
 800292c:	f3bf 8f5b 	dmb	ish
 8002930:	f014 0401 	ands.w	r4, r4, #1
 8002934:	d11e      	bne.n	8002974 <_Z23getFont_verdana_10_4bppv+0x50>
 8002936:	4628      	mov	r0, r5
 8002938:	f01a f90d 	bl	801cb56 <__cxa_guard_acquire>
 800293c:	b1d0      	cbz	r0, 8002974 <_Z23getFont_verdana_10_4bppv+0x50>
 800293e:	233f      	movs	r3, #63	; 0x3f
 8002940:	2201      	movs	r2, #1
 8002942:	490f      	ldr	r1, [pc, #60]	; (8002980 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002944:	9307      	str	r3, [sp, #28]
 8002946:	4b0f      	ldr	r3, [pc, #60]	; (8002984 <_Z23getFont_verdana_10_4bppv+0x60>)
 8002948:	480f      	ldr	r0, [pc, #60]	; (8002988 <_Z23getFont_verdana_10_4bppv+0x64>)
 800294a:	9306      	str	r3, [sp, #24]
 800294c:	4b0f      	ldr	r3, [pc, #60]	; (800298c <_Z23getFont_verdana_10_4bppv+0x68>)
 800294e:	9408      	str	r4, [sp, #32]
 8002950:	9403      	str	r4, [sp, #12]
 8002952:	9400      	str	r4, [sp, #0]
 8002954:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002958:	2304      	movs	r3, #4
 800295a:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800295e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002962:	230a      	movs	r3, #10
 8002964:	f7ff fc78 	bl	8002258 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002968:	4809      	ldr	r0, [pc, #36]	; (8002990 <_Z23getFont_verdana_10_4bppv+0x6c>)
 800296a:	f01a f93f 	bl	801cbec <atexit>
 800296e:	4628      	mov	r0, r5
 8002970:	f01a f8fd 	bl	801cb6e <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8002974:	4804      	ldr	r0, [pc, #16]	; (8002988 <_Z23getFont_verdana_10_4bppv+0x64>)
 8002976:	b00d      	add	sp, #52	; 0x34
 8002978:	bd30      	pop	{r4, r5, pc}
 800297a:	bf00      	nop
 800297c:	24001600 	.word	0x24001600
 8002980:	0801fb60 	.word	0x0801fb60
 8002984:	0801f344 	.word	0x0801f344
 8002988:	24001604 	.word	0x24001604
 800298c:	0801f350 	.word	0x0801f350
 8002990:	08002921 	.word	0x08002921

08002994 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_27_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_27_4bpp();

touchgfx::GeneratedFont& getFont_verdana_27_4bpp()
{
    static touchgfx::GeneratedFont verdana_27_4bpp(glyphs_verdana_27_4bpp, 11, 27, 0, 4, 1, 0, 0, unicodes_verdana_27_4bpp, kerning_verdana_27_4bpp, 45, 0, 0, 0);
 8002994:	4770      	bx	lr
	...

08002998 <_Z23getFont_verdana_27_4bppv>:
{
 8002998:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_27_4bpp(glyphs_verdana_27_4bpp, 11, 27, 0, 4, 1, 0, 0, unicodes_verdana_27_4bpp, kerning_verdana_27_4bpp, 45, 0, 0, 0);
 800299a:	4d15      	ldr	r5, [pc, #84]	; (80029f0 <_Z23getFont_verdana_27_4bppv+0x58>)
{
 800299c:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_27_4bpp(glyphs_verdana_27_4bpp, 11, 27, 0, 4, 1, 0, 0, unicodes_verdana_27_4bpp, kerning_verdana_27_4bpp, 45, 0, 0, 0);
 800299e:	682c      	ldr	r4, [r5, #0]
 80029a0:	f3bf 8f5b 	dmb	ish
 80029a4:	f014 0401 	ands.w	r4, r4, #1
 80029a8:	d11f      	bne.n	80029ea <_Z23getFont_verdana_27_4bppv+0x52>
 80029aa:	4628      	mov	r0, r5
 80029ac:	f01a f8d3 	bl	801cb56 <__cxa_guard_acquire>
 80029b0:	b1d8      	cbz	r0, 80029ea <_Z23getFont_verdana_27_4bppv+0x52>
 80029b2:	232d      	movs	r3, #45	; 0x2d
 80029b4:	2201      	movs	r2, #1
 80029b6:	490f      	ldr	r1, [pc, #60]	; (80029f4 <_Z23getFont_verdana_27_4bppv+0x5c>)
 80029b8:	9307      	str	r3, [sp, #28]
 80029ba:	4b0f      	ldr	r3, [pc, #60]	; (80029f8 <_Z23getFont_verdana_27_4bppv+0x60>)
 80029bc:	480f      	ldr	r0, [pc, #60]	; (80029fc <_Z23getFont_verdana_27_4bppv+0x64>)
 80029be:	9306      	str	r3, [sp, #24]
 80029c0:	4b0f      	ldr	r3, [pc, #60]	; (8002a00 <_Z23getFont_verdana_27_4bppv+0x68>)
 80029c2:	9408      	str	r4, [sp, #32]
 80029c4:	9403      	str	r4, [sp, #12]
 80029c6:	9400      	str	r4, [sp, #0]
 80029c8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80029cc:	2304      	movs	r3, #4
 80029ce:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80029d2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80029d6:	231b      	movs	r3, #27
 80029d8:	220b      	movs	r2, #11
 80029da:	f7ff fc3d 	bl	8002258 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80029de:	4809      	ldr	r0, [pc, #36]	; (8002a04 <_Z23getFont_verdana_27_4bppv+0x6c>)
 80029e0:	f01a f904 	bl	801cbec <atexit>
 80029e4:	4628      	mov	r0, r5
 80029e6:	f01a f8c2 	bl	801cb6e <__cxa_guard_release>
    return verdana_27_4bpp;
}
 80029ea:	4804      	ldr	r0, [pc, #16]	; (80029fc <_Z23getFont_verdana_27_4bppv+0x64>)
 80029ec:	b00d      	add	sp, #52	; 0x34
 80029ee:	bd30      	pop	{r4, r5, pc}
 80029f0:	2400162c 	.word	0x2400162c
 80029f4:	0801fb70 	.word	0x0801fb70
 80029f8:	0801f348 	.word	0x0801f348
 80029fc:	24001630 	.word	0x24001630
 8002a00:	0801f354 	.word	0x0801f354
 8002a04:	08002995 	.word	0x08002995

08002a08 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002a08:	4770      	bx	lr
	...

08002a0c <_Z23getFont_verdana_40_4bppv>:
{
 8002a0c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002a0e:	4d15      	ldr	r5, [pc, #84]	; (8002a64 <_Z23getFont_verdana_40_4bppv+0x58>)
{
 8002a10:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002a12:	682c      	ldr	r4, [r5, #0]
 8002a14:	f3bf 8f5b 	dmb	ish
 8002a18:	f014 0401 	ands.w	r4, r4, #1
 8002a1c:	d11e      	bne.n	8002a5c <_Z23getFont_verdana_40_4bppv+0x50>
 8002a1e:	4628      	mov	r0, r5
 8002a20:	f01a f899 	bl	801cb56 <__cxa_guard_acquire>
 8002a24:	b1d0      	cbz	r0, 8002a5c <_Z23getFont_verdana_40_4bppv+0x50>
 8002a26:	233f      	movs	r3, #63	; 0x3f
 8002a28:	2201      	movs	r2, #1
 8002a2a:	490f      	ldr	r1, [pc, #60]	; (8002a68 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002a2c:	9307      	str	r3, [sp, #28]
 8002a2e:	4b0f      	ldr	r3, [pc, #60]	; (8002a6c <_Z23getFont_verdana_40_4bppv+0x60>)
 8002a30:	480f      	ldr	r0, [pc, #60]	; (8002a70 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002a32:	9306      	str	r3, [sp, #24]
 8002a34:	4b0f      	ldr	r3, [pc, #60]	; (8002a74 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002a36:	9408      	str	r4, [sp, #32]
 8002a38:	9403      	str	r4, [sp, #12]
 8002a3a:	9400      	str	r4, [sp, #0]
 8002a3c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002a40:	2304      	movs	r3, #4
 8002a42:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002a46:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002a4a:	2328      	movs	r3, #40	; 0x28
 8002a4c:	f7ff fc04 	bl	8002258 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002a50:	4809      	ldr	r0, [pc, #36]	; (8002a78 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8002a52:	f01a f8cb 	bl	801cbec <atexit>
 8002a56:	4628      	mov	r0, r5
 8002a58:	f01a f889 	bl	801cb6e <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8002a5c:	4804      	ldr	r0, [pc, #16]	; (8002a70 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002a5e:	b00d      	add	sp, #52	; 0x34
 8002a60:	bd30      	pop	{r4, r5, pc}
 8002a62:	bf00      	nop
 8002a64:	24001658 	.word	0x24001658
 8002a68:	0801fc0c 	.word	0x0801fc0c
 8002a6c:	0801f34c 	.word	0x0801f34c
 8002a70:	2400165c 	.word	0x2400165c
 8002a74:	0801f358 	.word	0x0801f358
 8002a78:	08002a09 	.word	0x08002a09

08002a7c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002a7c:	2000      	movs	r0, #0
 8002a7e:	4770      	bx	lr

08002a80 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002a80:	2000      	movs	r0, #0
 8002a82:	4770      	bx	lr

08002a84 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002a84:	b40e      	push	{r1, r2, r3}
 8002a86:	b503      	push	{r0, r1, lr}
 8002a88:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002a8a:	2100      	movs	r1, #0
{
 8002a8c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8002a90:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8002a92:	f00c f973 	bl	800ed7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002a96:	b002      	add	sp, #8
 8002a98:	f85d eb04 	ldr.w	lr, [sp], #4
 8002a9c:	b003      	add	sp, #12
 8002a9e:	4770      	bx	lr

08002aa0 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002aa0:	b40c      	push	{r2, r3}
 8002aa2:	b507      	push	{r0, r1, r2, lr}
 8002aa4:	ab04      	add	r3, sp, #16
 8002aa6:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8002aaa:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8002aac:	f00c f966 	bl	800ed7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8002ab0:	b003      	add	sp, #12
 8002ab2:	f85d eb04 	ldr.w	lr, [sp], #4
 8002ab6:	b002      	add	sp, #8
 8002ab8:	4770      	bx	lr
	...

08002abc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8002abc:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8002abe:	b510      	push	{r4, lr}
 8002ac0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8002ac2:	b373      	cbz	r3, 8002b22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8002ac4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8002ac6:	b92b      	cbnz	r3, 8002ad4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8002ac8:	4b18      	ldr	r3, [pc, #96]	; (8002b2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8002aca:	21c0      	movs	r1, #192	; 0xc0
 8002acc:	4a18      	ldr	r2, [pc, #96]	; (8002b30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8002ace:	4819      	ldr	r0, [pc, #100]	; (8002b34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8002ad0:	f01a f86e 	bl	801cbb0 <__assert_func>
            return buffer[pos];
 8002ad4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8002ad6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8002ada:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8002adc:	b30b      	cbz	r3, 8002b22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8002ade:	f00d fbed 	bl	80102bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8002ae2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8002ae4:	2b01      	cmp	r3, #1
 8002ae6:	d803      	bhi.n	8002af0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8002ae8:	4b13      	ldr	r3, [pc, #76]	; (8002b38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8002aea:	21c5      	movs	r1, #197	; 0xc5
 8002aec:	4a13      	ldr	r2, [pc, #76]	; (8002b3c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002aee:	e7ee      	b.n	8002ace <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002af0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8002af2:	f640 103f 	movw	r0, #2367	; 0x93f
 8002af6:	1c53      	adds	r3, r2, #1
 8002af8:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8002afa:	2b09      	cmp	r3, #9
 8002afc:	4619      	mov	r1, r3
 8002afe:	bf88      	it	hi
 8002b00:	f1a3 010a 	subhi.w	r1, r3, #10
 8002b04:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8002b08:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8002b0a:	4281      	cmp	r1, r0
 8002b0c:	d109      	bne.n	8002b22 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002b0e:	2b0a      	cmp	r3, #10
 8002b10:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002b14:	bf28      	it	cs
 8002b16:	2300      	movcs	r3, #0
            return buffer[pos];
 8002b18:	8c50      	ldrh	r0, [r2, #34]	; 0x22
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8002b1a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8002b1e:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8002b20:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002b22:	4620      	mov	r0, r4
}
 8002b24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8002b28:	f00d baca 	b.w	80100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002b2c:	0801ea3c 	.word	0x0801ea3c
 8002b30:	0801ea45 	.word	0x0801ea45
 8002b34:	0801eaf0 	.word	0x0801eaf0
 8002b38:	0801eb3a 	.word	0x0801eb3a
 8002b3c:	0801eb48 	.word	0x0801eb48

08002b40 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002b40:	f00d ba87 	b.w	8010052 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002b44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8002b44:	b510      	push	{r4, lr}
 8002b46:	b086      	sub	sp, #24
 8002b48:	ac02      	add	r4, sp, #8
 8002b4a:	e884 0006 	stmia.w	r4, {r1, r2}
 8002b4e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8002b50:	ab0a      	add	r3, sp, #40	; 0x28
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002b52:	4621      	mov	r1, r4
    va_start(pArg, format);
 8002b54:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8002b56:	9301      	str	r3, [sp, #4]
 8002b58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002b5a:	9300      	str	r3, [sp, #0]
 8002b5c:	9b08      	ldr	r3, [sp, #32]
 8002b5e:	f00a fdcd 	bl	800d6fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8002b62:	b006      	add	sp, #24
 8002b64:	bd10      	pop	{r4, pc}
	...

08002b68 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002b68:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8002b6a:	bb18      	cbnz	r0, 8002bb4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8002b6c:	4b12      	ldr	r3, [pc, #72]	; (8002bb8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002b6e:	4813      	ldr	r0, [pc, #76]	; (8002bbc <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002b70:	681c      	ldr	r4, [r3, #0]
 8002b72:	4913      	ldr	r1, [pc, #76]	; (8002bc0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002b74:	b1b4      	cbz	r4, 8002ba4 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002b76:	6822      	ldr	r2, [r4, #0]
 8002b78:	4422      	add	r2, r4
 8002b7a:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8002b7c:	6862      	ldr	r2, [r4, #4]
 8002b7e:	4422      	add	r2, r4
 8002b80:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002b82:	68a2      	ldr	r2, [r4, #8]
 8002b84:	4414      	add	r4, r2
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002b86:	4b0f      	ldr	r3, [pc, #60]	; (8002bc4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002b88:	2200      	movs	r2, #0
 8002b8a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8002b8c:	f000 f838 	bl	8002c00 <_ZN17TypedTextDatabase8getFontsEv>
 8002b90:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002b92:	f000 f833 	bl	8002bfc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002b96:	4b0c      	ldr	r3, [pc, #48]	; (8002bc8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8002b98:	601c      	str	r4, [r3, #0]
        fonts = f;
 8002b9a:	4b0c      	ldr	r3, [pc, #48]	; (8002bcc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002b9c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8002b9e:	4b0c      	ldr	r3, [pc, #48]	; (8002bd0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8002ba0:	8018      	strh	r0, [r3, #0]
    }
}
 8002ba2:	e007      	b.n	8002bb4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8002ba4:	4b0b      	ldr	r3, [pc, #44]	; (8002bd4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8002ba6:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8002ba8:	4b0b      	ldr	r3, [pc, #44]	; (8002bd8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8002baa:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002bac:	4b0b      	ldr	r3, [pc, #44]	; (8002bdc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8002bae:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8002bb0:	2c00      	cmp	r4, #0
 8002bb2:	d1e8      	bne.n	8002b86 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8002bb4:	bd38      	pop	{r3, r4, r5, pc}
 8002bb6:	bf00      	nop
 8002bb8:	24001684 	.word	0x24001684
 8002bbc:	24001688 	.word	0x24001688
 8002bc0:	2400168c 	.word	0x2400168c
 8002bc4:	24001690 	.word	0x24001690
 8002bc8:	2400b0b0 	.word	0x2400b0b0
 8002bcc:	2400b0b8 	.word	0x2400b0b8
 8002bd0:	2400b0b4 	.word	0x2400b0b4
 8002bd4:	0801fc24 	.word	0x0801fc24
 8002bd8:	0801fc1c 	.word	0x0801fc1c
 8002bdc:	0801fc30 	.word	0x0801fc30

08002be0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8002be0:	4b04      	ldr	r3, [pc, #16]	; (8002bf4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8002be8:	4b03      	ldr	r3, [pc, #12]	; (8002bf8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8002bea:	681b      	ldr	r3, [r3, #0]
}
 8002bec:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8002bf0:	4770      	bx	lr
 8002bf2:	bf00      	nop
 8002bf4:	2400168c 	.word	0x2400168c
 8002bf8:	24001688 	.word	0x24001688

08002bfc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8002bfc:	2002      	movs	r0, #2
 8002bfe:	4770      	bx	lr

08002c00 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8002c00:	4800      	ldr	r0, [pc, #0]	; (8002c04 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8002c02:	4770      	bx	lr
 8002c04:	24001694 	.word	0x24001694

08002c08 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8002c08:	b510      	push	{r4, lr}
};
 8002c0a:	4c05      	ldr	r4, [pc, #20]	; (8002c20 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
    &(getFont_verdana_27_4bpp()),
 8002c0c:	f7ff fec4 	bl	8002998 <_Z23getFont_verdana_27_4bppv>
};
 8002c10:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8002c12:	f7ff fefb 	bl	8002a0c <_Z23getFont_verdana_40_4bppv>
};
 8002c16:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8002c18:	f7ff fe84 	bl	8002924 <_Z23getFont_verdana_10_4bppv>
};
 8002c1c:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8002c1e:	bd10      	pop	{r4, pc}
 8002c20:	24001694 	.word	0x24001694

08002c24 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8002c24:	4770      	bx	lr

08002c26 <_ZN19FrontendApplicationD0Ev>:
 8002c26:	b510      	push	{r4, lr}
 8002c28:	4604      	mov	r4, r0
 8002c2a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002c2e:	f019 ff90 	bl	801cb52 <_ZdlPvj>
 8002c32:	4620      	mov	r0, r4
 8002c34:	bd10      	pop	{r4, pc}

08002c36 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002c36:	b510      	push	{r4, lr}
 8002c38:	4604      	mov	r4, r0
    {
        model.tick();
 8002c3a:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8002c3e:	f000 f812 	bl	8002c66 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8002c42:	4620      	mov	r0, r4
    }
 8002c44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002c48:	f00b b8d0 	b.w	800ddec <_ZN8touchgfx11Application15handleTickEventEv>

08002c4c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002c4c:	b510      	push	{r4, lr}
 8002c4e:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8002c50:	f7ff fa90 	bl	8002174 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002c54:	4b01      	ldr	r3, [pc, #4]	; (8002c5c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
 8002c56:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
 8002c58:	6023      	str	r3, [r4, #0]
}
 8002c5a:	bd10      	pop	{r4, pc}
 8002c5c:	0801ec24 	.word	0x0801ec24

08002c60 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8002c60:	2200      	movs	r2, #0
 8002c62:	6002      	str	r2, [r0, #0]
{

}
 8002c64:	4770      	bx	lr

08002c66 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002c66:	4770      	bx	lr

08002c68 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002c68:	4770      	bx	lr

08002c6a <_ZThn4_N16Screen1PresenterD1Ev>:
 8002c6a:	3804      	subs	r0, #4
 8002c6c:	4770      	bx	lr

08002c6e <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8002c6e:	4770      	bx	lr

08002c70 <_ZN16Screen1PresenterD0Ev>:
 8002c70:	b510      	push	{r4, lr}
 8002c72:	4604      	mov	r4, r0
 8002c74:	2110      	movs	r1, #16
 8002c76:	f019 ff6c 	bl	801cb52 <_ZdlPvj>
 8002c7a:	4620      	mov	r0, r4
 8002c7c:	bd10      	pop	{r4, pc}

08002c7e <_ZThn4_N16Screen1PresenterD0Ev>:
 8002c7e:	f1a0 0004 	sub.w	r0, r0, #4
 8002c82:	e7f5      	b.n	8002c70 <_ZN16Screen1PresenterD0Ev>

08002c84 <_ZN16Screen1PresenterC1ER11Screen1View>:
    ModelListener() : model(0) {}
 8002c84:	2200      	movs	r2, #0
    : view(v)
 8002c86:	60c1      	str	r1, [r0, #12]
 8002c88:	6082      	str	r2, [r0, #8]
 8002c8a:	4a04      	ldr	r2, [pc, #16]	; (8002c9c <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002c8c:	b510      	push	{r4, lr}
    : view(v)
 8002c8e:	f102 0408 	add.w	r4, r2, #8
 8002c92:	3220      	adds	r2, #32
 8002c94:	6004      	str	r4, [r0, #0]
 8002c96:	6042      	str	r2, [r0, #4]
}
 8002c98:	bd10      	pop	{r4, pc}
 8002c9a:	bf00      	nop
 8002c9c:	0801ec68 	.word	0x0801ec68

08002ca0 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8002ca0:	4770      	bx	lr

08002ca2 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8002ca2:	4770      	bx	lr

08002ca4 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002ca4:	f7ff bb77 	b.w	8002396 <_ZN15Screen1ViewBase11setupScreenEv>

08002ca8 <_ZN11Screen1View11downclickedEv>:

void Screen1View::downclicked()
{
	counter--;
 8002ca8:	f8b0 3224 	ldrh.w	r3, [r0, #548]	; 0x224
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 8002cac:	210a      	movs	r1, #10
 8002cae:	4a08      	ldr	r2, [pc, #32]	; (8002cd0 <_ZN11Screen1View11downclickedEv+0x28>)
	counter--;
 8002cb0:	3b01      	subs	r3, #1
 8002cb2:	b21b      	sxth	r3, r3
{
 8002cb4:	b510      	push	{r4, lr}
 8002cb6:	4604      	mov	r4, r0
	counter--;
 8002cb8:	f8a0 3224 	strh.w	r3, [r0, #548]	; 0x224
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 8002cbc:	f500 7000 	add.w	r0, r0, #512	; 0x200
 8002cc0:	f00e f8aa 	bl	8010e18 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 8002cc4:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
}
 8002cc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 8002ccc:	f00c b978 	b.w	800efc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8002cd0:	0801ec90 	.word	0x0801ec90

08002cd4 <_ZN11Screen1View9upclickedEv>:

void Screen1View::upclicked()
{
	counter++;
 8002cd4:	f8b0 3224 	ldrh.w	r3, [r0, #548]	; 0x224
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 8002cd8:	210a      	movs	r1, #10
 8002cda:	4a08      	ldr	r2, [pc, #32]	; (8002cfc <_ZN11Screen1View9upclickedEv+0x28>)
	counter++;
 8002cdc:	3301      	adds	r3, #1
 8002cde:	b21b      	sxth	r3, r3
{
 8002ce0:	b510      	push	{r4, lr}
 8002ce2:	4604      	mov	r4, r0
	counter++;
 8002ce4:	f8a0 3224 	strh.w	r3, [r0, #548]	; 0x224
	Unicode::snprintf(textArea1Buffer, TEXTAREA1_SIZE, "%d", counter);
 8002ce8:	f500 7000 	add.w	r0, r0, #512	; 0x200
 8002cec:	f00e f894 	bl	8010e18 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textArea1.invalidate();
 8002cf0:	f104 00c4 	add.w	r0, r4, #196	; 0xc4
}
 8002cf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textArea1.invalidate();
 8002cf8:	f00c b962 	b.w	800efc0 <_ZNK8touchgfx8Drawable10invalidateEv>
 8002cfc:	0801ec90 	.word	0x0801ec90

08002d00 <_ZN11Screen1ViewD0Ev>:
 8002d00:	b510      	push	{r4, lr}
 8002d02:	4604      	mov	r4, r0
 8002d04:	f44f 710a 	mov.w	r1, #552	; 0x228
 8002d08:	f019 ff23 	bl	801cb52 <_ZdlPvj>
 8002d0c:	4620      	mov	r0, r4
 8002d0e:	bd10      	pop	{r4, pc}

08002d10 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002d10:	b510      	push	{r4, lr}
 8002d12:	4604      	mov	r4, r0
 8002d14:	f7ff fcae 	bl	8002674 <_ZN15Screen1ViewBaseC1Ev>
 8002d18:	4b03      	ldr	r3, [pc, #12]	; (8002d28 <_ZN11Screen1ViewC1Ev+0x18>)
}
 8002d1a:	4620      	mov	r0, r4
Screen1View::Screen1View()
 8002d1c:	6023      	str	r3, [r4, #0]
 8002d1e:	2300      	movs	r3, #0
 8002d20:	f8a4 3224 	strh.w	r3, [r4, #548]	; 0x224
}
 8002d24:	bd10      	pop	{r4, pc}
 8002d26:	bf00      	nop
 8002d28:	0801ec9c 	.word	0x0801ec9c

08002d2c <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
 8002d2c:	f240 1301 	movw	r3, #257	; 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
 8002d30:	f44f 7248 	mov.w	r2, #800	; 0x320

  return FT5336_OK;
}
 8002d34:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
 8002d36:	800b      	strh	r3, [r1, #0]
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
 8002d38:	2305      	movs	r3, #5
 8002d3a:	708b      	strb	r3, [r1, #2]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
 8002d3c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002d40:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
 8002d44:	4770      	bx	lr

08002d46 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
 8002d46:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8002d4a:	2b01      	cmp	r3, #1
  {
    pObj->IsInitialized = 0;
 8002d4c:	bf04      	itt	eq
 8002d4e:	2300      	moveq	r3, #0
 8002d50:	f880 3024 	strbeq.w	r3, [r0, #36]	; 0x24
  }

  return ret;
}
 8002d54:	2000      	movs	r0, #0
 8002d56:	4770      	bx	lr

08002d58 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
 8002d58:	2000      	movs	r0, #0
 8002d5a:	4770      	bx	lr

08002d5c <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8002d5c:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8002d5e:	6904      	ldr	r4, [r0, #16]
 8002d60:	8900      	ldrh	r0, [r0, #8]
 8002d62:	46a4      	mov	ip, r4
}
 8002d64:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
 8002d68:	4760      	bx	ip

08002d6a <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
 8002d6a:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8002d6c:	68c4      	ldr	r4, [r0, #12]
 8002d6e:	8900      	ldrh	r0, [r0, #8]
 8002d70:	46a4      	mov	ip, r4
}
 8002d72:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
 8002d76:	4760      	bx	ip

08002d78 <FT5336_GestureConfig>:
{
 8002d78:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 8002d7a:	f100 0518 	add.w	r5, r0, #24
{
 8002d7e:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
 8002d80:	7809      	ldrb	r1, [r1, #0]
 8002d82:	4628      	mov	r0, r5
 8002d84:	f000 f8f4 	bl	8002f70 <ft5336_radian_value>
 8002d88:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
 8002d8a:	7931      	ldrb	r1, [r6, #4]
 8002d8c:	4628      	mov	r0, r5
 8002d8e:	f000 f8fb 	bl	8002f88 <ft5336_offset_left_right>
 8002d92:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
 8002d94:	7a31      	ldrb	r1, [r6, #8]
 8002d96:	4628      	mov	r0, r5
 8002d98:	f000 f902 	bl	8002fa0 <ft5336_offset_up_down>
 8002d9c:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
 8002d9e:	7b31      	ldrb	r1, [r6, #12]
 8002da0:	4628      	mov	r0, r5
 8002da2:	f000 f909 	bl	8002fb8 <ft5336_disatnce_left_right>
 8002da6:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
 8002da8:	7c31      	ldrb	r1, [r6, #16]
 8002daa:	4628      	mov	r0, r5
 8002dac:	f000 f910 	bl	8002fd0 <ft5336_distance_up_down>
 8002db0:	4404      	add	r4, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
 8002db2:	7d31      	ldrb	r1, [r6, #20]
 8002db4:	4628      	mov	r0, r5
 8002db6:	f000 f917 	bl	8002fe8 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
 8002dba:	42c4      	cmn	r4, r0
}
 8002dbc:	bf14      	ite	ne
 8002dbe:	f04f 30ff 	movne.w	r0, #4294967295
 8002dc2:	2000      	moveq	r0, #0
 8002dc4:	bd70      	pop	{r4, r5, r6, pc}

08002dc6 <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
 8002dc6:	3018      	adds	r0, #24
 8002dc8:	f000 b926 	b.w	8003018 <ft5336_chip_id>

08002dcc <FT5336_GetState>:
{
 8002dcc:	b537      	push	{r0, r1, r2, r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8002dce:	f100 0518 	add.w	r5, r0, #24
{
 8002dd2:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8002dd4:	a901      	add	r1, sp, #4
 8002dd6:	4628      	mov	r0, r5
 8002dd8:	f000 f8bd 	bl	8002f56 <ft5336_td_status>
 8002ddc:	bb08      	cbnz	r0, 8002e22 <FT5336_GetState+0x56>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
 8002dde:	f89d 3004 	ldrb.w	r3, [sp, #4]
      ret = (int32_t)nb_touch;
 8002de2:	2b05      	cmp	r3, #5
 8002de4:	bf98      	it	ls
 8002de6:	4618      	movls	r0, r3
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 8002de8:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
 8002dea:	6020      	str	r0, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 8002dec:	2103      	movs	r1, #3
 8002dee:	4628      	mov	r0, r5
 8002df0:	eb0d 0203 	add.w	r2, sp, r3
 8002df4:	f000 f89c 	bl	8002f30 <ft5336_read_reg>
 8002df8:	b9b0      	cbnz	r0, 8002e28 <FT5336_GetState+0x5c>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
 8002dfa:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002dfe:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002e02:	021b      	lsls	r3, r3, #8
 8002e04:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002e08:	4313      	orrs	r3, r2
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
 8002e0a:	f89d 2007 	ldrb.w	r2, [sp, #7]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
 8002e0e:	6063      	str	r3, [r4, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
 8002e10:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002e14:	021b      	lsls	r3, r3, #8
 8002e16:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002e1a:	4313      	orrs	r3, r2
 8002e1c:	60a3      	str	r3, [r4, #8]
}
 8002e1e:	b003      	add	sp, #12
 8002e20:	bd30      	pop	{r4, r5, pc}
    ret = FT5336_ERROR;
 8002e22:	f04f 30ff 	mov.w	r0, #4294967295
 8002e26:	e7df      	b.n	8002de8 <FT5336_GetState+0x1c>
    ret = FT5336_ERROR;
 8002e28:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8002e2c:	e7f7      	b.n	8002e1e <FT5336_GetState+0x52>

08002e2e <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
 8002e2e:	3018      	adds	r0, #24
 8002e30:	f000 b88c 	b.w	8002f4c <ft5336_gest_id>

08002e34 <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
 8002e34:	2101      	movs	r1, #1
 8002e36:	3018      	adds	r0, #24
 8002e38:	f000 b8e2 	b.w	8003000 <ft5336_g_mode>

08002e3c <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
 8002e3c:	2100      	movs	r1, #0
 8002e3e:	3018      	adds	r0, #24
 8002e40:	f000 b8de 	b.w	8003000 <ft5336_g_mode>

08002e44 <FT5336_Init>:
{
 8002e44:	b510      	push	{r4, lr}
  if(pObj->IsInitialized == 0U)
 8002e46:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
{
 8002e4a:	4604      	mov	r4, r0
  if(pObj->IsInitialized == 0U)
 8002e4c:	b96b      	cbnz	r3, 8002e6a <FT5336_Init+0x26>
    pObj->IO.Init();
 8002e4e:	6803      	ldr	r3, [r0, #0]
 8002e50:	4798      	blx	r3
    ret += FT5336_DisableIT(pObj);
 8002e52:	4620      	mov	r0, r4
 8002e54:	f7ff fff2 	bl	8002e3c <FT5336_DisableIT>
  if(ret != FT5336_OK)
 8002e58:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
 8002e5a:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
 8002e5e:	bf18      	it	ne
 8002e60:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
 8002e62:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
  if(ret != FT5336_OK)
 8002e66:	4240      	negs	r0, r0
}
 8002e68:	bd10      	pop	{r4, pc}
  int32_t ret = FT5336_OK;
 8002e6a:	2000      	movs	r0, #0
  return ret;
 8002e6c:	e7fc      	b.n	8002e68 <FT5336_Init+0x24>

08002e6e <FT5336_ClearIT>:
 8002e6e:	2000      	movs	r0, #0
 8002e70:	4770      	bx	lr

08002e72 <FT5336_GetMultiTouchState>:
{
 8002e72:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8002e74:	f100 0518 	add.w	r5, r0, #24
{
 8002e78:	b088      	sub	sp, #32
 8002e7a:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
 8002e7c:	4628      	mov	r0, r5
 8002e7e:	4669      	mov	r1, sp
 8002e80:	f000 f869 	bl	8002f56 <ft5336_td_status>
 8002e84:	bb90      	cbnz	r0, 8002eec <FT5336_GetMultiTouchState+0x7a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
 8002e86:	f89d 3000 	ldrb.w	r3, [sp]
      ret = (int32_t)nb_touch;
 8002e8a:	2b05      	cmp	r3, #5
 8002e8c:	bf98      	it	ls
 8002e8e:	4618      	movls	r0, r3
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
 8002e90:	6020      	str	r0, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
 8002e92:	231e      	movs	r3, #30
 8002e94:	466a      	mov	r2, sp
 8002e96:	2103      	movs	r1, #3
 8002e98:	4628      	mov	r0, r5
 8002e9a:	f000 f849 	bl	8002f30 <ft5336_read_reg>
 8002e9e:	bb40      	cbnz	r0, 8002ef2 <FT5336_GetMultiTouchState+0x80>
 8002ea0:	4621      	mov	r1, r4
 8002ea2:	466d      	mov	r5, sp
 8002ea4:	3414      	adds	r4, #20
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 8002ea6:	782a      	ldrb	r2, [r5, #0]
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 8002ea8:	3506      	adds	r5, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 8002eaa:	f815 6c05 	ldrb.w	r6, [r5, #-5]
 8002eae:	0213      	lsls	r3, r2, #8
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
 8002eb0:	0992      	lsrs	r2, r2, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 8002eb2:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002eb6:	4333      	orrs	r3, r6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 8002eb8:	f815 6c03 	ldrb.w	r6, [r5, #-3]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
 8002ebc:	f841 3f04 	str.w	r3, [r1, #4]!
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 8002ec0:	428c      	cmp	r4, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 8002ec2:	f815 3c04 	ldrb.w	r3, [r5, #-4]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
 8002ec6:	63ca      	str	r2, [r1, #60]	; 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
 8002ec8:	ea4f 2303 	mov.w	r3, r3, lsl #8
 8002ecc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8002ed0:	ea43 0306 	orr.w	r3, r3, r6
 8002ed4:	614b      	str	r3, [r1, #20]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
 8002ed6:	f815 3c02 	ldrb.w	r3, [r5, #-2]
 8002eda:	628b      	str	r3, [r1, #40]	; 0x28
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
 8002edc:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002ee0:	ea4f 1313 	mov.w	r3, r3, lsr #4
 8002ee4:	650b      	str	r3, [r1, #80]	; 0x50
    for(i = 0; i < FT5336_MAX_NB_TOUCH; i++)
 8002ee6:	d1de      	bne.n	8002ea6 <FT5336_GetMultiTouchState+0x34>
}
 8002ee8:	b008      	add	sp, #32
 8002eea:	bd70      	pop	{r4, r5, r6, pc}
    ret = FT5336_ERROR;
 8002eec:	f04f 30ff 	mov.w	r0, #4294967295
 8002ef0:	e7ce      	b.n	8002e90 <FT5336_GetMultiTouchState+0x1e>
    ret = FT5336_ERROR;
 8002ef2:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
 8002ef6:	e7f7      	b.n	8002ee8 <FT5336_GetMultiTouchState+0x76>

08002ef8 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
 8002ef8:	b190      	cbz	r0, 8002f20 <FT5336_RegisterBusIO+0x28>
    pObj->IO.DeInit    = pIO->DeInit;
 8002efa:	684a      	ldr	r2, [r1, #4]
    pObj->IO.Init      = pIO->Init;
 8002efc:	680b      	ldr	r3, [r1, #0]
    pObj->IO.DeInit    = pIO->DeInit;
 8002efe:	6042      	str	r2, [r0, #4]
    pObj->IO.Address   = pIO->Address;
 8002f00:	890a      	ldrh	r2, [r1, #8]
    pObj->IO.Init      = pIO->Init;
 8002f02:	6003      	str	r3, [r0, #0]
    pObj->IO.Address   = pIO->Address;
 8002f04:	8102      	strh	r2, [r0, #8]
    pObj->IO.WriteReg  = pIO->WriteReg;
 8002f06:	68ca      	ldr	r2, [r1, #12]
 8002f08:	60c2      	str	r2, [r0, #12]
    pObj->IO.ReadReg   = pIO->ReadReg;
 8002f0a:	690a      	ldr	r2, [r1, #16]
 8002f0c:	6102      	str	r2, [r0, #16]
    pObj->IO.GetTick   = pIO->GetTick;
 8002f0e:	694a      	ldr	r2, [r1, #20]
    pObj->Ctx.handle   = pObj;
 8002f10:	6200      	str	r0, [r0, #32]
    pObj->IO.GetTick   = pIO->GetTick;
 8002f12:	6142      	str	r2, [r0, #20]
    pObj->Ctx.ReadReg  = ReadRegWrap;
 8002f14:	4a04      	ldr	r2, [pc, #16]	; (8002f28 <FT5336_RegisterBusIO+0x30>)
 8002f16:	61c2      	str	r2, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
 8002f18:	4a04      	ldr	r2, [pc, #16]	; (8002f2c <FT5336_RegisterBusIO+0x34>)
 8002f1a:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
 8002f1c:	b103      	cbz	r3, 8002f20 <FT5336_RegisterBusIO+0x28>
      ret = pObj->IO.Init();
 8002f1e:	4718      	bx	r3
}
 8002f20:	f04f 30ff 	mov.w	r0, #4294967295
 8002f24:	4770      	bx	lr
 8002f26:	bf00      	nop
 8002f28:	08002d5d 	.word	0x08002d5d
 8002f2c:	08002d6b 	.word	0x08002d6b

08002f30 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
 8002f30:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8002f32:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
 8002f36:	46a4      	mov	ip, r4
}
 8002f38:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
 8002f3c:	4760      	bx	ip

08002f3e <ft5336_write_reg>:
  * @param  pdata pointer to data to be written
  * @param  length Length of data to write   
  * @retval Component status
  */
int32_t ft5336_write_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t *pdata, uint16_t length)
{
 8002f3e:	b410      	push	{r4}
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8002f40:	6804      	ldr	r4, [r0, #0]
 8002f42:	6880      	ldr	r0, [r0, #8]
 8002f44:	46a4      	mov	ip, r4
}
 8002f46:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
 8002f4a:	4760      	bx	ip

08002f4c <ft5336_gest_id>:
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
 8002f4c:	2301      	movs	r3, #1
{
 8002f4e:	460a      	mov	r2, r1
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
 8002f50:	4619      	mov	r1, r3
 8002f52:	f7ff bfed 	b.w	8002f30 <ft5336_read_reg>

08002f56 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
 8002f56:	b510      	push	{r4, lr}
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
 8002f58:	460a      	mov	r2, r1
{
 8002f5a:	460c      	mov	r4, r1
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
 8002f5c:	2301      	movs	r3, #1
 8002f5e:	2102      	movs	r1, #2
 8002f60:	f7ff ffe6 	bl	8002f30 <ft5336_read_reg>
  
  if(ret == 0)
 8002f64:	b918      	cbnz	r0, 8002f6e <ft5336_td_status+0x18>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
 8002f66:	7823      	ldrb	r3, [r4, #0]
 8002f68:	f003 030f 	and.w	r3, r3, #15
 8002f6c:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
 8002f6e:	bd10      	pop	{r4, pc}

08002f70 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
 8002f70:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
 8002f72:	2301      	movs	r3, #1
{
 8002f74:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
 8002f78:	f10d 0207 	add.w	r2, sp, #7
 8002f7c:	2191      	movs	r1, #145	; 0x91
 8002f7e:	f7ff ffde 	bl	8002f3e <ft5336_write_reg>
}
 8002f82:	b003      	add	sp, #12
 8002f84:	f85d fb04 	ldr.w	pc, [sp], #4

08002f88 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
 8002f88:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
 8002f8a:	2301      	movs	r3, #1
{
 8002f8c:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
 8002f90:	f10d 0207 	add.w	r2, sp, #7
 8002f94:	2192      	movs	r1, #146	; 0x92
 8002f96:	f7ff ffd2 	bl	8002f3e <ft5336_write_reg>
}
 8002f9a:	b003      	add	sp, #12
 8002f9c:	f85d fb04 	ldr.w	pc, [sp], #4

08002fa0 <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
 8002fa0:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
 8002fa2:	2301      	movs	r3, #1
{
 8002fa4:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
 8002fa8:	f10d 0207 	add.w	r2, sp, #7
 8002fac:	2193      	movs	r1, #147	; 0x93
 8002fae:	f7ff ffc6 	bl	8002f3e <ft5336_write_reg>
}
 8002fb2:	b003      	add	sp, #12
 8002fb4:	f85d fb04 	ldr.w	pc, [sp], #4

08002fb8 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
 8002fb8:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
 8002fba:	2301      	movs	r3, #1
{
 8002fbc:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
 8002fc0:	f10d 0207 	add.w	r2, sp, #7
 8002fc4:	2194      	movs	r1, #148	; 0x94
 8002fc6:	f7ff ffba 	bl	8002f3e <ft5336_write_reg>
}
 8002fca:	b003      	add	sp, #12
 8002fcc:	f85d fb04 	ldr.w	pc, [sp], #4

08002fd0 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
 8002fd0:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
 8002fd2:	2301      	movs	r3, #1
{
 8002fd4:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
 8002fd8:	f10d 0207 	add.w	r2, sp, #7
 8002fdc:	2195      	movs	r1, #149	; 0x95
 8002fde:	f7ff ffae 	bl	8002f3e <ft5336_write_reg>
}
 8002fe2:	b003      	add	sp, #12
 8002fe4:	f85d fb04 	ldr.w	pc, [sp], #4

08002fe8 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
 8002fe8:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
 8002fea:	2301      	movs	r3, #1
{
 8002fec:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
 8002ff0:	f10d 0207 	add.w	r2, sp, #7
 8002ff4:	2196      	movs	r1, #150	; 0x96
 8002ff6:	f7ff ffa2 	bl	8002f3e <ft5336_write_reg>
}
 8002ffa:	b003      	add	sp, #12
 8002ffc:	f85d fb04 	ldr.w	pc, [sp], #4

08003000 <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
 8003000:	b507      	push	{r0, r1, r2, lr}
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
 8003002:	2301      	movs	r3, #1
{
 8003004:	f88d 1007 	strb.w	r1, [sp, #7]
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
 8003008:	f10d 0207 	add.w	r2, sp, #7
 800300c:	21a4      	movs	r1, #164	; 0xa4
 800300e:	f7ff ff96 	bl	8002f3e <ft5336_write_reg>
}
 8003012:	b003      	add	sp, #12
 8003014:	f85d fb04 	ldr.w	pc, [sp], #4

08003018 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
 8003018:	460a      	mov	r2, r1
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_CHIP_ID_REG, (uint8_t *)value, 1);
 800301a:	2301      	movs	r3, #1
 800301c:	21a8      	movs	r1, #168	; 0xa8
 800301e:	f7ff bf87 	b.w	8002f30 <ft5336_read_reg>
	...

08003024 <IS42S32800J_ClockEnable>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800J_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
 8003024:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800J_CLK_ENABLE_CMD;
 8003026:	2201      	movs	r2, #1
 8003028:	4b07      	ldr	r3, [pc, #28]	; (8003048 <IS42S32800J_ClockEnable+0x24>)
  Command.CommandTarget          = Interface;
 800302a:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
 800302e:	609a      	str	r2, [r3, #8]
  Command.ModeRegisterDefinition = 0;
 8003030:	2200      	movs	r2, #0

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8003032:	4619      	mov	r1, r3
  Command.ModeRegisterDefinition = 0;
 8003034:	60da      	str	r2, [r3, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8003036:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800303a:	f005 f90f 	bl	800825c <HAL_SDRAM_SendCommand>
 800303e:	3800      	subs	r0, #0
 8003040:	bf18      	it	ne
 8003042:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 8003044:	4240      	negs	r0, r0
 8003046:	bd08      	pop	{r3, pc}
 8003048:	240016a0 	.word	0x240016a0

0800304c <IS42S32800J_Precharge>:
  * @param  Ctx Component object pointer
  * @param  Interface Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t IS42S32800J_Precharge(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
 800304c:	b508      	push	{r3, lr}
  Command.CommandMode            = IS42S32800J_PALL_CMD;
 800304e:	2202      	movs	r2, #2
 8003050:	4b08      	ldr	r3, [pc, #32]	; (8003074 <IS42S32800J_Precharge+0x28>)
  Command.CommandTarget          = Interface;
 8003052:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
 8003056:	2101      	movs	r1, #1
 8003058:	2200      	movs	r2, #0
 800305a:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 800305e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003062:	4619      	mov	r1, r3
 8003064:	f005 f8fa 	bl	800825c <HAL_SDRAM_SendCommand>
 8003068:	3800      	subs	r0, #0
 800306a:	bf18      	it	ne
 800306c:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 800306e:	4240      	negs	r0, r0
 8003070:	bd08      	pop	{r3, pc}
 8003072:	bf00      	nop
 8003074:	240016a0 	.word	0x240016a0

08003078 <IS42S32800J_ModeRegConfig>:
int32_t IS42S32800J_ModeRegConfig(SDRAM_HandleTypeDef *Ctx, IS42S32800J_Context_t *pRegMode) 
{
  uint32_t tmpmrd;

  /* Program the external memory mode register */
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 8003078:	e9d1 3203 	ldrd	r3, r2, [r1, #12]
{
 800307c:	b510      	push	{r4, lr}
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 800307e:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
 8003080:	694a      	ldr	r2, [r1, #20]
                     pRegMode->CASLatency    |\
                     pRegMode->OperationMode |\
                     pRegMode->WriteBurstMode;
  
  Command.CommandMode            = IS42S32800J_LOAD_MODE_CMD;
 8003082:	4c0b      	ldr	r4, [pc, #44]	; (80030b0 <IS42S32800J_ModeRegConfig+0x38>)
                     pRegMode->BurstType     |\
 8003084:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
 8003086:	698a      	ldr	r2, [r1, #24]
 8003088:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
 800308a:	69ca      	ldr	r2, [r1, #28]
 800308c:	4313      	orrs	r3, r2
  Command.CommandMode            = IS42S32800J_LOAD_MODE_CMD;
 800308e:	2204      	movs	r2, #4
 8003090:	6022      	str	r2, [r4, #0]
  Command.CommandTarget          = pRegMode->TargetBank;
 8003092:	680a      	ldr	r2, [r1, #0]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;
  
  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 8003094:	4621      	mov	r1, r4
  Command.CommandTarget          = pRegMode->TargetBank;
 8003096:	6062      	str	r2, [r4, #4]
  Command.AutoRefreshNumber      = 1;
 8003098:	2201      	movs	r2, #1
  Command.ModeRegisterDefinition = tmpmrd;
 800309a:	e9c4 2302 	strd	r2, r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 800309e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80030a2:	f005 f8db 	bl	800825c <HAL_SDRAM_SendCommand>
 80030a6:	3800      	subs	r0, #0
 80030a8:	bf18      	it	ne
 80030aa:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 80030ac:	4240      	negs	r0, r0
 80030ae:	bd10      	pop	{r4, pc}
 80030b0:	240016a0 	.word	0x240016a0

080030b4 <IS42S32800J_RefreshMode>:
  * @param  RefreshMode Could be IS42S32800J_CMD_AUTOREFRESH_MODE or
  *                      IS42S32800J_CMD_SELFREFRESH_MODE
  * @retval error status
  */
int32_t IS42S32800J_RefreshMode(SDRAM_HandleTypeDef *Ctx, uint32_t Interface, uint32_t RefreshMode) 
{
 80030b4:	b508      	push	{r3, lr}
  Command.CommandMode            = RefreshMode;
 80030b6:	4b08      	ldr	r3, [pc, #32]	; (80030d8 <IS42S32800J_RefreshMode+0x24>)
  Command.CommandTarget          = Interface;
 80030b8:	e9c3 2100 	strd	r2, r1, [r3]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;
 80030bc:	2108      	movs	r1, #8
 80030be:	2200      	movs	r2, #0
 80030c0:	e9c3 1202 	strd	r1, r2, [r3, #8]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, IS42S32800J_TIMEOUT) != HAL_OK)
 80030c4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80030c8:	4619      	mov	r1, r3
 80030ca:	f005 f8c7 	bl	800825c <HAL_SDRAM_SendCommand>
 80030ce:	3800      	subs	r0, #0
 80030d0:	bf18      	it	ne
 80030d2:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 80030d4:	4240      	negs	r0, r0
 80030d6:	bd08      	pop	{r3, pc}
 80030d8:	240016a0 	.word	0x240016a0

080030dc <IS42S32800J_RefreshRate>:
  * @param  Ctx Component object pointer
  * @param  RefreshCount The refresh rate to be programmed
  * @retval error status
  */
int32_t IS42S32800J_RefreshRate(SDRAM_HandleTypeDef *Ctx, uint32_t RefreshCount) 
{
 80030dc:	b508      	push	{r3, lr}
  /* Set the device refresh rate */
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
 80030de:	f005 f8dc 	bl	800829a <HAL_SDRAM_ProgramRefreshRate>
 80030e2:	3800      	subs	r0, #0
 80030e4:	bf18      	it	ne
 80030e6:	2001      	movne	r0, #1
  }
  else
  {
    return IS42S32800J_OK;
  }
}
 80030e8:	4240      	negs	r0, r0
 80030ea:	bd08      	pop	{r3, pc}

080030ec <IS42S32800J_Init>:
{
 80030ec:	b570      	push	{r4, r5, r6, lr}
 80030ee:	460c      	mov	r4, r1
  if(IS42S32800J_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 80030f0:	6809      	ldr	r1, [r1, #0]
{
 80030f2:	4605      	mov	r5, r0
  if(IS42S32800J_ClockEnable(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 80030f4:	f7ff ff96 	bl	8003024 <IS42S32800J_ClockEnable>
 80030f8:	b110      	cbz	r0, 8003100 <IS42S32800J_Init+0x14>
  int32_t ret = IS42S32800J_ERROR;
 80030fa:	f04f 30ff 	mov.w	r0, #4294967295
}
 80030fe:	bd70      	pop	{r4, r5, r6, pc}
  * @retval IS42S32800J_OK
  */
static int32_t IS42S32800J_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
 8003100:	f001 fb44 	bl	800478c <HAL_GetTick>
 8003104:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
 8003106:	f001 fb41 	bl	800478c <HAL_GetTick>
 800310a:	4286      	cmp	r6, r0
 800310c:	d0fb      	beq.n	8003106 <IS42S32800J_Init+0x1a>
    if(IS42S32800J_Precharge(Ctx, pRegMode->TargetBank) == IS42S32800J_OK)
 800310e:	6821      	ldr	r1, [r4, #0]
 8003110:	4628      	mov	r0, r5
 8003112:	f7ff ff9b 	bl	800304c <IS42S32800J_Precharge>
 8003116:	2800      	cmp	r0, #0
 8003118:	d1ef      	bne.n	80030fa <IS42S32800J_Init+0xe>
      if(IS42S32800J_RefreshMode(Ctx, pRegMode->TargetBank, pRegMode->RefreshMode) == IS42S32800J_OK)
 800311a:	4628      	mov	r0, r5
 800311c:	e9d4 1200 	ldrd	r1, r2, [r4]
 8003120:	f7ff ffc8 	bl	80030b4 <IS42S32800J_RefreshMode>
 8003124:	2800      	cmp	r0, #0
 8003126:	d1e8      	bne.n	80030fa <IS42S32800J_Init+0xe>
        if(IS42S32800J_ModeRegConfig(Ctx, pRegMode) == IS42S32800J_OK)
 8003128:	4621      	mov	r1, r4
 800312a:	4628      	mov	r0, r5
 800312c:	f7ff ffa4 	bl	8003078 <IS42S32800J_ModeRegConfig>
 8003130:	2800      	cmp	r0, #0
 8003132:	d1e2      	bne.n	80030fa <IS42S32800J_Init+0xe>
          if(IS42S32800J_RefreshRate(Ctx, pRegMode->RefreshRate) == IS42S32800J_OK)
 8003134:	68a1      	ldr	r1, [r4, #8]
 8003136:	4628      	mov	r0, r5
 8003138:	f7ff ffd0 	bl	80030dc <IS42S32800J_RefreshRate>
 800313c:	3800      	subs	r0, #0
 800313e:	bf18      	it	ne
 8003140:	2001      	movne	r0, #1
 8003142:	4240      	negs	r0, r0
  return ret;
 8003144:	e7db      	b.n	80030fe <IS42S32800J_Init+0x12>

08003146 <MX25LM51245G_GetFlashInfo>:
  */
int32_t MX25LM51245G_GetFlashInfo(MX25LM51245G_Info_t *pInfo)
{
  /* Configure the structure with the memory configuration */
  pInfo->FlashSize              = MX25LM51245G_FLASH_SIZE;
  pInfo->EraseSectorSize        = MX25LM51245G_SECTOR_64K;
 8003146:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800314a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  pInfo->EraseSubSectorSize     = MX25LM51245G_SUBSECTOR_4K;
  pInfo->EraseSubSectorNumber   = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
  pInfo->EraseSubSector1Size    = MX25LM51245G_SUBSECTOR_4K;
  pInfo->EraseSubSector1Number  = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
  pInfo->ProgPageSize           = MX25LM51245G_PAGE_SIZE;
  pInfo->ProgPagesNumber        = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_PAGE_SIZE);
 800314e:	f44f 7180 	mov.w	r1, #256	; 0x100
  pInfo->EraseSectorSize        = MX25LM51245G_SECTOR_64K;
 8003152:	e9c0 2300 	strd	r2, r3, [r0]
  pInfo->EraseSubSectorSize     = MX25LM51245G_SUBSECTOR_4K;
 8003156:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800315a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800315e:	e9c0 3202 	strd	r3, r2, [r0, #8]
  pInfo->EraseSubSectorNumber   = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
 8003162:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  pInfo->EraseSubSector1Size    = MX25LM51245G_SUBSECTOR_4K;
 8003166:	e9c0 3204 	strd	r3, r2, [r0, #16]
  pInfo->EraseSubSector1Number  = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
 800316a:	6183      	str	r3, [r0, #24]
  pInfo->ProgPagesNumber        = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_PAGE_SIZE);
 800316c:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8003170:	e9c0 1307 	strd	r1, r3, [r0, #28]

  return MX25LM51245G_OK;
};
 8003174:	2000      	movs	r0, #0
 8003176:	4770      	bx	lr

08003178 <MX25LM51245G_AutoPollingMemReady>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate
  * @retval error status
  */
int32_t MX25LM51245G_AutoPollingMemReady(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 8003178:	b570      	push	{r4, r5, r6, lr}
 800317a:	b09a      	sub	sp, #104	; 0x68
 800317c:	460e      	mov	r6, r1
 800317e:	4605      	mov	r5, r0
  OSPI_RegularCmdTypeDef  s_command = {0};
 8003180:	2100      	movs	r1, #0
{
 8003182:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef  s_command = {0};
 8003184:	a806      	add	r0, sp, #24
 8003186:	2250      	movs	r2, #80	; 0x50
 8003188:	f019 ff17 	bl	801cfba <memset>
  OSPI_AutoPollingTypeDef s_config = {0};
 800318c:	2214      	movs	r2, #20
 800318e:	2100      	movs	r1, #0
 8003190:	a801      	add	r0, sp, #4
 8003192:	f019 ff12 	bl	801cfba <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003196:	b92e      	cbnz	r6, 80031a4 <MX25LM51245G_AutoPollingMemReady+0x2c>
 8003198:	2c01      	cmp	r4, #1
 800319a:	d150      	bne.n	800323e <MX25LM51245G_AutoPollingMemReady+0xc6>
  {
    return MX25LM51245G_ERROR;
 800319c:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 80031a0:	b01a      	add	sp, #104	; 0x68
 80031a2:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80031a4:	2304      	movs	r3, #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80031a6:	1e62      	subs	r2, r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80031a8:	9309      	str	r3, [sp, #36]	; 0x24
  s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 80031aa:	2010      	movs	r0, #16
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80031ac:	4253      	negs	r3, r2
 80031ae:	4153      	adcs	r3, r2
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80031b0:	2e00      	cmp	r6, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80031b2:	ea4f 02c3 	mov.w	r2, r3, lsl #3
 80031b6:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80031b8:	bf14      	ite	ne
 80031ba:	2201      	movne	r2, #1
 80031bc:	2200      	moveq	r2, #0
 80031be:	ea4f 1102 	mov.w	r1, r2, lsl #4
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 80031c2:	ea4f 2282 	mov.w	r2, r2, lsl #10
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80031c6:	910a      	str	r1, [sp, #40]	; 0x28
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 80031c8:	f240 51fa 	movw	r1, #1530	; 0x5fa
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 80031cc:	920d      	str	r2, [sp, #52]	; 0x34
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80031ce:	ea4f 22c3 	mov.w	r2, r3, lsl #11
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 80031d2:	bf08      	it	eq
 80031d4:	2105      	moveq	r1, #5
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80031d6:	920f      	str	r2, [sp, #60]	; 0x3c
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80031d8:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 80031dc:	9108      	str	r1, [sp, #32]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80031de:	a906      	add	r1, sp, #24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80031e0:	920e      	str	r2, [sp, #56]	; 0x38
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80031e2:	bf0c      	ite	eq
 80031e4:	f04f 7280 	moveq.w	r2, #16777216	; 0x1000000
 80031e8:	f04f 6280 	movne.w	r2, #67108864	; 0x4000000
 80031ec:	9214      	str	r2, [sp, #80]	; 0x50
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80031ee:	ea4f 62c3 	mov.w	r2, r3, lsl #27
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80031f2:	ea4f 7343 	mov.w	r3, r3, lsl #29
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80031f6:	9216      	str	r2, [sp, #88]	; 0x58
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80031f8:	bf0c      	ite	eq
 80031fa:	2200      	moveq	r2, #0
 80031fc:	2205      	movne	r2, #5
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80031fe:	9318      	str	r3, [sp, #96]	; 0x60
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003200:	2c01      	cmp	r4, #1
  s_config.Mask          = MX25LM51245G_SR_WIP;
 8003202:	f04f 0301 	mov.w	r3, #1
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 8003206:	9217      	str	r2, [sp, #92]	; 0x5c
  s_config.Mask          = MX25LM51245G_SR_WIP;
 8003208:	9302      	str	r3, [sp, #8]
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 800320a:	bf0c      	ite	eq
 800320c:	2202      	moveq	r2, #2
 800320e:	2201      	movne	r2, #1
  s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 8003210:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003214:	9215      	str	r2, [sp, #84]	; 0x54
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003216:	f241 3288 	movw	r2, #5000	; 0x1388
  s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 800321a:	e9cd 3004 	strd	r3, r0, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800321e:	4628      	mov	r0, r5
 8003220:	f003 f839 	bl	8006296 <HAL_OSPI_Command>
 8003224:	2800      	cmp	r0, #0
 8003226:	d1b9      	bne.n	800319c <MX25LM51245G_AutoPollingMemReady+0x24>
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003228:	f241 3288 	movw	r2, #5000	; 0x1388
 800322c:	a901      	add	r1, sp, #4
 800322e:	4628      	mov	r0, r5
 8003230:	f003 f912 	bl	8006458 <HAL_OSPI_AutoPolling>
 8003234:	3800      	subs	r0, #0
 8003236:	bf18      	it	ne
 8003238:	2001      	movne	r0, #1
 800323a:	4240      	negs	r0, r0
 800323c:	e7b0      	b.n	80031a0 <MX25LM51245G_AutoPollingMemReady+0x28>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800323e:	2301      	movs	r3, #1
 8003240:	e7b1      	b.n	80031a6 <MX25LM51245G_AutoPollingMemReady+0x2e>

08003242 <MX25LM51245G_EnableSTRMemoryMappedMode>:
  * @param  Mode Interface mode
  * @param  AddressSize Address size
  * @retval OSPI memory status
  */
int32_t MX25LM51245G_EnableSTRMemoryMappedMode(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_AddressSize_t AddressSize)
{
 8003242:	b570      	push	{r4, r5, r6, lr}
 8003244:	b096      	sub	sp, #88	; 0x58
 8003246:	460c      	mov	r4, r1
 8003248:	4606      	mov	r6, r0
 800324a:	4615      	mov	r5, r2
  OSPI_RegularCmdTypeDef      s_command = {0};
 800324c:	2100      	movs	r1, #0
 800324e:	2250      	movs	r2, #80	; 0x50
 8003250:	a802      	add	r0, sp, #8
 8003252:	f019 feb2 	bl	801cfba <memset>
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 8003256:	2300      	movs	r3, #0

  /* OPI mode and 3-bytes address size not supported by memory */
  if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
 8003258:	2c01      	cmp	r4, #1
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 800325a:	e9cd 3300 	strd	r3, r3, [sp]
  if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
 800325e:	d104      	bne.n	800326a <MX25LM51245G_EnableSTRMemoryMappedMode+0x28>
 8003260:	b91d      	cbnz	r5, 800326a <MX25LM51245G_EnableSTRMemoryMappedMode+0x28>
  {
    return MX25LM51245G_ERROR;
 8003262:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003266:	b016      	add	sp, #88	; 0x58
 8003268:	bd70      	pop	{r4, r5, r6, pc}
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 800326a:	2301      	movs	r3, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800326c:	2c00      	cmp	r4, #0
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 800326e:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003270:	bf18      	it	ne
 8003272:	2304      	movne	r3, #4
 8003274:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003276:	bf14      	ite	ne
 8003278:	2301      	movne	r3, #1
 800327a:	2300      	moveq	r3, #0
 800327c:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003280:	9306      	str	r3, [sp, #24]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 8003282:	d140      	bne.n	8003306 <MX25LM51245G_EnableSTRMemoryMappedMode+0xc4>
 8003284:	2d00      	cmp	r5, #0
 8003286:	bf0c      	ite	eq
 8003288:	230b      	moveq	r3, #11
 800328a:	230c      	movne	r3, #12
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 800328c:	2c00      	cmp	r4, #0
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 800328e:	9304      	str	r3, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003290:	f241 3288 	movw	r2, #5000	; 0x1388
 8003294:	a902      	add	r1, sp, #8
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 8003296:	bf0c      	ite	eq
 8003298:	f44f 7380 	moveq.w	r3, #256	; 0x100
 800329c:	f44f 6380 	movne.w	r3, #1024	; 0x400
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 80032a0:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032a2:	4630      	mov	r0, r6
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 80032a4:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 80032a6:	bf0c      	ite	eq
 80032a8:	f44f 5300 	moveq.w	r3, #8192	; 0x2000
 80032ac:	f44f 5340 	movne.w	r3, #12288	; 0x3000
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80032b0:	2c00      	cmp	r4, #0
  s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
 80032b2:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80032b4:	bf0c      	ite	eq
 80032b6:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 80032ba:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 80032be:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? DUMMY_CYCLES_READ : DUMMY_CYCLES_READ_OCTAL;
 80032c0:	bf0c      	ite	eq
 80032c2:	2308      	moveq	r3, #8
 80032c4:	2306      	movne	r3, #6
 80032c6:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032c8:	f002 ffe5 	bl	8006296 <HAL_OSPI_Command>
 80032cc:	2800      	cmp	r0, #0
 80032ce:	d1c8      	bne.n	8003262 <MX25LM51245G_EnableSTRMemoryMappedMode+0x20>
  s_command.OperationType      = HAL_OSPI_OPTYPE_WRITE_CFG;
 80032d0:	2302      	movs	r3, #2
 80032d2:	9302      	str	r3, [sp, #8]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_PAGE_PROG_CMD : MX25LM51245G_4_BYTE_PAGE_PROG_CMD) : MX25LM51245G_OCTA_PAGE_PROG_CMD;
 80032d4:	b9d4      	cbnz	r4, 800330c <MX25LM51245G_EnableSTRMemoryMappedMode+0xca>
 80032d6:	2d00      	cmp	r5, #0
 80032d8:	bf18      	it	ne
 80032da:	2312      	movne	r3, #18
 80032dc:	9304      	str	r3, [sp, #16]
  s_command.DummyCycles        = 0U;
 80032de:	2300      	movs	r3, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032e0:	f241 3288 	movw	r2, #5000	; 0x1388
 80032e4:	a902      	add	r1, sp, #8
 80032e6:	4630      	mov	r0, r6
  s_command.DummyCycles        = 0U;
 80032e8:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80032ea:	f002 ffd4 	bl	8006296 <HAL_OSPI_Command>
 80032ee:	2800      	cmp	r0, #0
 80032f0:	d1b7      	bne.n	8003262 <MX25LM51245G_EnableSTRMemoryMappedMode+0x20>
  s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
 80032f2:	9000      	str	r0, [sp, #0]
  if (HAL_OSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 80032f4:	4669      	mov	r1, sp
 80032f6:	4630      	mov	r0, r6
 80032f8:	f003 f8fe 	bl	80064f8 <HAL_OSPI_MemoryMapped>
 80032fc:	3800      	subs	r0, #0
 80032fe:	bf18      	it	ne
 8003300:	2001      	movne	r0, #1
 8003302:	4240      	negs	r0, r0
 8003304:	e7af      	b.n	8003266 <MX25LM51245G_EnableSTRMemoryMappedMode+0x24>
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
 8003306:	f64e 4313 	movw	r3, #60435	; 0xec13
 800330a:	e7bf      	b.n	800328c <MX25LM51245G_EnableSTRMemoryMappedMode+0x4a>
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_PAGE_PROG_CMD : MX25LM51245G_4_BYTE_PAGE_PROG_CMD) : MX25LM51245G_OCTA_PAGE_PROG_CMD;
 800330c:	f241 23ed 	movw	r3, #4845	; 0x12ed
 8003310:	e7e4      	b.n	80032dc <MX25LM51245G_EnableSTRMemoryMappedMode+0x9a>

08003312 <MX25LM51245G_EnableDTRMemoryMappedMode>:
  * @param  AddressSize Address size
  * @note   Only OPI mode support DTR transfer rate
  * @retval OSPI memory status
  */
int32_t MX25LM51245G_EnableDTRMemoryMappedMode(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode)
{
 8003312:	b510      	push	{r4, lr}
 8003314:	b096      	sub	sp, #88	; 0x58
 8003316:	4604      	mov	r4, r0
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Mode);

  OSPI_RegularCmdTypeDef      s_command = {0};
 8003318:	224c      	movs	r2, #76	; 0x4c
 800331a:	2100      	movs	r1, #0
 800331c:	a803      	add	r0, sp, #12
 800331e:	f019 fe4c 	bl	801cfba <memset>
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 8003322:	2300      	movs	r3, #0
  /* Initialize the read command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_ENABLE;
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
 8003324:	f04f 0c08 	mov.w	ip, #8
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
  s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_ENABLE;
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 8003328:	f44f 6100 	mov.w	r1, #2048	; 0x800
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
  s_command.DQSMode            = HAL_OSPI_DQS_ENABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800332c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003330:	4620      	mov	r0, r4
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 8003332:	e9cd 3300 	strd	r3, r3, [sp]
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 8003336:	2301      	movs	r3, #1
 8003338:	9302      	str	r3, [sp, #8]
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
 800333a:	2304      	movs	r3, #4
 800333c:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
 800333e:	2310      	movs	r3, #16
 8003340:	e9cd 3c06 	strd	r3, ip, [sp, #24]
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
 8003344:	f64e 6311 	movw	r3, #60945	; 0xee11
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003348:	f04f 6c00 	mov.w	ip, #134217728	; 0x8000000
  s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
 800334c:	9304      	str	r3, [sp, #16]
  s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
 800334e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003352:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 8003354:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003358:	e9cd 310a 	strd	r3, r1, [sp, #40]	; 0x28
  s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
 800335c:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003360:	a902      	add	r1, sp, #8
  s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
 8003362:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
 8003364:	2306      	movs	r3, #6
 8003366:	e9cd c312 	strd	ip, r3, [sp, #72]	; 0x48
  s_command.DQSMode            = HAL_OSPI_DQS_ENABLE;
 800336a:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800336e:	9314      	str	r3, [sp, #80]	; 0x50
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003370:	f002 ff91 	bl	8006296 <HAL_OSPI_Command>
 8003374:	b118      	cbz	r0, 800337e <MX25LM51245G_EnableDTRMemoryMappedMode+0x6c>
  {
    return MX25LM51245G_ERROR;
 8003376:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 800337a:	b016      	add	sp, #88	; 0x58
 800337c:	bd10      	pop	{r4, pc}
  s_command.OperationType = HAL_OSPI_OPTYPE_WRITE_CFG;
 800337e:	2302      	movs	r3, #2
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003380:	f241 3288 	movw	r2, #5000	; 0x1388
 8003384:	a902      	add	r1, sp, #8
  s_command.OperationType = HAL_OSPI_OPTYPE_WRITE_CFG;
 8003386:	9302      	str	r3, [sp, #8]
  s_command.Instruction   = MX25LM51245G_OCTA_PAGE_PROG_CMD;
 8003388:	f241 23ed 	movw	r3, #4845	; 0x12ed
  s_command.DQSMode       = HAL_OSPI_DQS_DISABLE;
 800338c:	e9cd 0013 	strd	r0, r0, [sp, #76]	; 0x4c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003390:	4620      	mov	r0, r4
  s_command.Instruction   = MX25LM51245G_OCTA_PAGE_PROG_CMD;
 8003392:	9304      	str	r3, [sp, #16]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003394:	f002 ff7f 	bl	8006296 <HAL_OSPI_Command>
 8003398:	2800      	cmp	r0, #0
 800339a:	d1ec      	bne.n	8003376 <MX25LM51245G_EnableDTRMemoryMappedMode+0x64>
  s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
 800339c:	9000      	str	r0, [sp, #0]
  if (HAL_OSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
 800339e:	4669      	mov	r1, sp
 80033a0:	4620      	mov	r0, r4
 80033a2:	f003 f8a9 	bl	80064f8 <HAL_OSPI_MemoryMapped>
 80033a6:	3800      	subs	r0, #0
 80033a8:	bf18      	it	ne
 80033aa:	2001      	movne	r0, #1
 80033ac:	4240      	negs	r0, r0
 80033ae:	e7e4      	b.n	800337a <MX25LM51245G_EnableDTRMemoryMappedMode+0x68>

080033b0 <MX25LM51245G_WriteEnable>:
  * @param  Mode Interface mode
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_WriteEnable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 80033b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80033b4:	b09a      	sub	sp, #104	; 0x68
 80033b6:	460f      	mov	r7, r1
 80033b8:	4605      	mov	r5, r0
  OSPI_RegularCmdTypeDef     s_command = {0};
 80033ba:	2100      	movs	r1, #0
{
 80033bc:	4616      	mov	r6, r2
  OSPI_RegularCmdTypeDef     s_command = {0};
 80033be:	a806      	add	r0, sp, #24
 80033c0:	2250      	movs	r2, #80	; 0x50
 80033c2:	f019 fdfa 	bl	801cfba <memset>
  OSPI_AutoPollingTypeDef s_config = {0};
 80033c6:	2214      	movs	r2, #20
 80033c8:	2100      	movs	r1, #0
 80033ca:	a801      	add	r0, sp, #4
 80033cc:	f019 fdf5 	bl	801cfba <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 80033d0:	b937      	cbnz	r7, 80033e0 <MX25LM51245G_WriteEnable+0x30>
 80033d2:	2e01      	cmp	r6, #1
 80033d4:	d163      	bne.n	800349e <MX25LM51245G_WriteEnable+0xee>
  {
    return MX25LM51245G_ERROR;
 80033d6:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 80033da:	b01a      	add	sp, #104	; 0x68
 80033dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80033e0:	2304      	movs	r3, #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80033e2:	1e71      	subs	r1, r6, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80033e4:	9309      	str	r3, [sp, #36]	; 0x24
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033e6:	f241 3288 	movw	r2, #5000	; 0x1388
 80033ea:	4628      	mov	r0, r5
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80033ec:	424c      	negs	r4, r1
 80033ee:	414c      	adcs	r4, r1
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80033f0:	2f00      	cmp	r7, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80033f2:	a906      	add	r1, sp, #24
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80033f4:	ea4f 03c4 	mov.w	r3, r4, lsl #3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80033f8:	bf14      	ite	ne
 80033fa:	f04f 0801 	movne.w	r8, #1
 80033fe:	f04f 0800 	moveq.w	r8, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003402:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003404:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8003408:	930a      	str	r3, [sp, #40]	; 0x28
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_ENABLE_CMD : MX25LM51245G_OCTA_WRITE_ENABLE_CMD;
 800340a:	f240 63f9 	movw	r3, #1785	; 0x6f9
 800340e:	bf08      	it	eq
 8003410:	2306      	moveq	r3, #6
 8003412:	9308      	str	r3, [sp, #32]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003414:	f002 ff3f 	bl	8006296 <HAL_OSPI_Command>
 8003418:	2800      	cmp	r0, #0
 800341a:	d1dc      	bne.n	80033d6 <MX25LM51245G_WriteEnable+0x26>
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 800341c:	2f00      	cmp	r7, #0
 800341e:	f240 53fa 	movw	r3, #1530	; 0x5fa
  s_command.Address        = 0U;
 8003422:	900c      	str	r0, [sp, #48]	; 0x30
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003424:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 8003428:	bf08      	it	eq
 800342a:	2305      	moveq	r3, #5
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800342c:	a906      	add	r1, sp, #24
 800342e:	4628      	mov	r0, r5
  s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
 8003430:	9308      	str	r3, [sp, #32]
  s_command.AddressMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
 8003432:	ea4f 2388 	mov.w	r3, r8, lsl #10
 8003436:	930d      	str	r3, [sp, #52]	; 0x34
  s_command.AddressDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003438:	ea4f 23c4 	mov.w	r3, r4, lsl #11
 800343c:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.AddressSize    = HAL_OSPI_ADDRESS_32_BITS;
 800343e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003442:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.DataMode       = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 8003444:	bf0c      	ite	eq
 8003446:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 800344a:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 800344e:	9314      	str	r3, [sp, #80]	; 0x50
  s_command.DataDtrMode    = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003450:	ea4f 63c4 	mov.w	r3, r4, lsl #27
  s_command.DQSMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 8003454:	ea4f 7444 	mov.w	r4, r4, lsl #29
  s_command.DataDtrMode    = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003458:	9316      	str	r3, [sp, #88]	; 0x58
  s_command.DummyCycles    = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 800345a:	bf0c      	ite	eq
 800345c:	2300      	moveq	r3, #0
 800345e:	2305      	movne	r3, #5
  s_command.NbData         = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003460:	2e01      	cmp	r6, #1
  s_command.DQSMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 8003462:	9418      	str	r4, [sp, #96]	; 0x60
  s_command.DummyCycles    = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 8003464:	9317      	str	r3, [sp, #92]	; 0x5c
  s_command.NbData         = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 8003466:	bf0c      	ite	eq
 8003468:	2302      	moveq	r3, #2
 800346a:	2301      	movne	r3, #1
 800346c:	9315      	str	r3, [sp, #84]	; 0x54
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800346e:	f002 ff12 	bl	8006296 <HAL_OSPI_Command>
 8003472:	2800      	cmp	r0, #0
 8003474:	d1af      	bne.n	80033d6 <MX25LM51245G_WriteEnable+0x26>
  s_config.Match           = 2U;
 8003476:	2302      	movs	r3, #2
  s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 8003478:	2210      	movs	r2, #16
  s_config.MatchMode       = HAL_OSPI_MATCH_MODE_AND;
 800347a:	9003      	str	r0, [sp, #12]
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800347c:	a901      	add	r1, sp, #4
 800347e:	4628      	mov	r0, r5
  s_config.Mask            = 2U;
 8003480:	e9cd 3301 	strd	r3, r3, [sp, #4]
  s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 8003484:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003488:	e9cd 3204 	strd	r3, r2, [sp, #16]
  if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800348c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003490:	f002 ffe2 	bl	8006458 <HAL_OSPI_AutoPolling>
 8003494:	3800      	subs	r0, #0
 8003496:	bf18      	it	ne
 8003498:	2001      	movne	r0, #1
 800349a:	4240      	negs	r0, r0
 800349c:	e79d      	b.n	80033da <MX25LM51245G_WriteEnable+0x2a>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800349e:	2301      	movs	r3, #1
 80034a0:	e79f      	b.n	80033e2 <MX25LM51245G_WriteEnable+0x32>

080034a2 <MX25LM51245G_WriteCfg2Register>:
  * @param  Rate Transfer rate STR or DTR
  * @param  Value Value to write to configuration register
  * @retval error status
  */
int32_t MX25LM51245G_WriteCfg2Register(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
{
 80034a2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80034a4:	b095      	sub	sp, #84	; 0x54
 80034a6:	460e      	mov	r6, r1
 80034a8:	4605      	mov	r5, r0
 80034aa:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 80034ac:	2100      	movs	r1, #0
 80034ae:	2250      	movs	r2, #80	; 0x50
 80034b0:	4668      	mov	r0, sp
{
 80034b2:	461f      	mov	r7, r3
  OSPI_RegularCmdTypeDef s_command = {0};
 80034b4:	f019 fd81 	bl	801cfba <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 80034b8:	b92e      	cbnz	r6, 80034c6 <MX25LM51245G_WriteCfg2Register+0x24>
 80034ba:	2c01      	cmp	r4, #1
 80034bc:	d146      	bne.n	800354c <MX25LM51245G_WriteCfg2Register+0xaa>
  {
    return MX25LM51245G_ERROR;
 80034be:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 80034c2:	b015      	add	sp, #84	; 0x54
 80034c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80034c6:	2304      	movs	r3, #4
 80034c8:	9303      	str	r3, [sp, #12]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80034ca:	1e63      	subs	r3, r4, #1
  s_command.Address            = WriteAddr;
 80034cc:	9706      	str	r7, [sp, #24]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80034ce:	425a      	negs	r2, r3
 80034d0:	415a      	adcs	r2, r3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80034d2:	2e00      	cmp	r6, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80034d4:	ea4f 03c2 	mov.w	r3, r2, lsl #3
 80034d8:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80034da:	bf14      	ite	ne
 80034dc:	2301      	movne	r3, #1
 80034de:	2300      	moveq	r3, #0
 80034e0:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80034e4:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_CFG_REG2_CMD : MX25LM51245G_OCTA_WRITE_CFG_REG2_CMD;
 80034e6:	f247 238d 	movw	r3, #29325	; 0x728d
 80034ea:	bf08      	it	eq
 80034ec:	2372      	moveq	r3, #114	; 0x72
 80034ee:	9302      	str	r3, [sp, #8]
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 80034f0:	bf0c      	ite	eq
 80034f2:	f44f 7380 	moveq.w	r3, #256	; 0x100
 80034f6:	f44f 6380 	movne.w	r3, #1024	; 0x400
 80034fa:	9307      	str	r3, [sp, #28]
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80034fc:	ea4f 23c2 	mov.w	r3, r2, lsl #11
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 8003500:	ea4f 62c2 	mov.w	r2, r2, lsl #27
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 8003504:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 8003506:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 800350a:	9210      	str	r2, [sp, #64]	; 0x40
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 800350c:	9308      	str	r3, [sp, #32]
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 800350e:	bf14      	ite	ne
 8003510:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 8003514:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003518:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 800351a:	d019      	beq.n	8003550 <MX25LM51245G_WriteCfg2Register+0xae>
 800351c:	2c01      	cmp	r4, #1
 800351e:	bf14      	ite	ne
 8003520:	2301      	movne	r3, #1
 8003522:	2302      	moveq	r3, #2
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003524:	f241 3288 	movw	r2, #5000	; 0x1388
 8003528:	4669      	mov	r1, sp
 800352a:	4628      	mov	r0, r5
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 800352c:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800352e:	f002 feb2 	bl	8006296 <HAL_OSPI_Command>
 8003532:	2800      	cmp	r0, #0
 8003534:	d1c3      	bne.n	80034be <MX25LM51245G_WriteCfg2Register+0x1c>
  if (HAL_OSPI_Transmit(Ctx, &Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003536:	f241 3288 	movw	r2, #5000	; 0x1388
 800353a:	a91a      	add	r1, sp, #104	; 0x68
 800353c:	4628      	mov	r0, r5
 800353e:	f002 fef9 	bl	8006334 <HAL_OSPI_Transmit>
 8003542:	3800      	subs	r0, #0
 8003544:	bf18      	it	ne
 8003546:	2001      	movne	r0, #1
 8003548:	4240      	negs	r0, r0
 800354a:	e7ba      	b.n	80034c2 <MX25LM51245G_WriteCfg2Register+0x20>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800354c:	2301      	movs	r3, #1
 800354e:	e7bb      	b.n	80034c8 <MX25LM51245G_WriteCfg2Register+0x26>
  s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
 8003550:	2301      	movs	r3, #1
 8003552:	e7e7      	b.n	8003524 <MX25LM51245G_WriteCfg2Register+0x82>

08003554 <MX25LM51245G_ReadCfg2Register>:
  * @param  Rate Transfer rate STR or DTR
  * @param  Value configuration register 2 value pointer
  * @retval error status
  */
int32_t MX25LM51245G_ReadCfg2Register(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint32_t ReadAddr, uint8_t *Value)
{
 8003554:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003558:	b094      	sub	sp, #80	; 0x50
 800355a:	460f      	mov	r7, r1
 800355c:	4606      	mov	r6, r0
 800355e:	4615      	mov	r5, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 8003560:	2100      	movs	r1, #0
 8003562:	2250      	movs	r2, #80	; 0x50
 8003564:	4668      	mov	r0, sp
{
 8003566:	4698      	mov	r8, r3
  OSPI_RegularCmdTypeDef s_command = {0};
 8003568:	f019 fd27 	bl	801cfba <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 800356c:	b937      	cbnz	r7, 800357c <MX25LM51245G_ReadCfg2Register+0x28>
 800356e:	2d01      	cmp	r5, #1
 8003570:	d14e      	bne.n	8003610 <MX25LM51245G_ReadCfg2Register+0xbc>
  {
    return MX25LM51245G_ERROR;
 8003572:	f04f 30ff 	mov.w	r0, #4294967295
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 8003576:	b014      	add	sp, #80	; 0x50
 8003578:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800357c:	2304      	movs	r3, #4
 800357e:	9303      	str	r3, [sp, #12]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003580:	1e6b      	subs	r3, r5, #1
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003582:	f241 3288 	movw	r2, #5000	; 0x1388
 8003586:	4669      	mov	r1, sp
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003588:	425c      	negs	r4, r3
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800358a:	4630      	mov	r0, r6
  s_command.Address            = ReadAddr;
 800358c:	f8cd 8018 	str.w	r8, [sp, #24]
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003590:	415c      	adcs	r4, r3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003592:	2f00      	cmp	r7, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003594:	ea4f 03c4 	mov.w	r3, r4, lsl #3
 8003598:	9305      	str	r3, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800359a:	bf14      	ite	ne
 800359c:	2301      	movne	r3, #1
 800359e:	2300      	moveq	r3, #0
 80035a0:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80035a4:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_CFG_REG2_CMD : MX25LM51245G_OCTA_READ_CFG_REG2_CMD;
 80035a6:	f247 138e 	movw	r3, #29070	; 0x718e
 80035aa:	bf08      	it	eq
 80035ac:	2371      	moveq	r3, #113	; 0x71
 80035ae:	9302      	str	r3, [sp, #8]
  s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
 80035b0:	bf0c      	ite	eq
 80035b2:	f44f 7380 	moveq.w	r3, #256	; 0x100
 80035b6:	f44f 6380 	movne.w	r3, #1024	; 0x400
 80035ba:	9307      	str	r3, [sp, #28]
  s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
 80035bc:	ea4f 23c4 	mov.w	r3, r4, lsl #11
 80035c0:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
 80035c2:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 80035c6:	9308      	str	r3, [sp, #32]
  s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
 80035c8:	bf0c      	ite	eq
 80035ca:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 80035ce:	f04f 6380 	movne.w	r3, #67108864	; 0x4000000
 80035d2:	930e      	str	r3, [sp, #56]	; 0x38
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80035d4:	ea4f 63c4 	mov.w	r3, r4, lsl #27
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80035d8:	ea4f 7444 	mov.w	r4, r4, lsl #29
  s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
 80035dc:	9310      	str	r3, [sp, #64]	; 0x40
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80035de:	bf0c      	ite	eq
 80035e0:	2300      	moveq	r3, #0
 80035e2:	2305      	movne	r3, #5
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80035e4:	2d01      	cmp	r5, #1
  s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
 80035e6:	9412      	str	r4, [sp, #72]	; 0x48
  s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
 80035e8:	9311      	str	r3, [sp, #68]	; 0x44
  s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
 80035ea:	bf0c      	ite	eq
 80035ec:	2302      	moveq	r3, #2
 80035ee:	2301      	movne	r3, #1
 80035f0:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035f2:	f002 fe50 	bl	8006296 <HAL_OSPI_Command>
 80035f6:	2800      	cmp	r0, #0
 80035f8:	d1bb      	bne.n	8003572 <MX25LM51245G_ReadCfg2Register+0x1e>
  if (HAL_OSPI_Receive(Ctx, Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80035fa:	f241 3288 	movw	r2, #5000	; 0x1388
 80035fe:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003600:	4630      	mov	r0, r6
 8003602:	f002 fed7 	bl	80063b4 <HAL_OSPI_Receive>
 8003606:	3800      	subs	r0, #0
 8003608:	bf18      	it	ne
 800360a:	2001      	movne	r0, #1
 800360c:	4240      	negs	r0, r0
 800360e:	e7b2      	b.n	8003576 <MX25LM51245G_ReadCfg2Register+0x22>
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003610:	2301      	movs	r3, #1
 8003612:	e7b4      	b.n	800357e <MX25LM51245G_ReadCfg2Register+0x2a>

08003614 <MX25LM51245G_ResetEnable>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_ResetEnable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 8003614:	b570      	push	{r4, r5, r6, lr}
 8003616:	b094      	sub	sp, #80	; 0x50
 8003618:	460d      	mov	r5, r1
 800361a:	4606      	mov	r6, r0
 800361c:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 800361e:	2100      	movs	r1, #0
 8003620:	2250      	movs	r2, #80	; 0x50
 8003622:	4668      	mov	r0, sp
 8003624:	f019 fcc9 	bl	801cfba <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 8003628:	bb0d      	cbnz	r5, 800366e <MX25LM51245G_ResetEnable+0x5a>
 800362a:	2c01      	cmp	r4, #1
 800362c:	d021      	beq.n	8003672 <MX25LM51245G_ResetEnable+0x5e>
  }

  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800362e:	2301      	movs	r3, #1
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003630:	1e62      	subs	r2, r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003632:	9303      	str	r3, [sp, #12]
  s_command.DummyCycles        = 0U;
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003634:	4669      	mov	r1, sp
 8003636:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003638:	4254      	negs	r4, r2
 800363a:	4154      	adcs	r4, r2
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800363c:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800363e:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003642:	bf14      	ite	ne
 8003644:	2301      	movne	r3, #1
 8003646:	2300      	moveq	r3, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003648:	ea4f 04c4 	mov.w	r4, r4, lsl #3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 800364c:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003650:	9405      	str	r4, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 8003652:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_RESET_ENABLE_CMD : MX25LM51245G_OCTA_RESET_ENABLE_CMD;
 8003654:	f246 6399 	movw	r3, #26265	; 0x6699
 8003658:	bf08      	it	eq
 800365a:	2366      	moveq	r3, #102	; 0x66
 800365c:	9302      	str	r3, [sp, #8]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800365e:	f002 fe1a 	bl	8006296 <HAL_OSPI_Command>
 8003662:	3800      	subs	r0, #0
 8003664:	bf18      	it	ne
 8003666:	2001      	movne	r0, #1
 8003668:	4240      	negs	r0, r0
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 800366a:	b014      	add	sp, #80	; 0x50
 800366c:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 800366e:	2304      	movs	r3, #4
 8003670:	e7de      	b.n	8003630 <MX25LM51245G_ResetEnable+0x1c>
    return MX25LM51245G_ERROR;
 8003672:	f04f 30ff 	mov.w	r0, #4294967295
 8003676:	e7f8      	b.n	800366a <MX25LM51245G_ResetEnable+0x56>

08003678 <MX25LM51245G_ResetMemory>:
  * @param  Mode Interface select
  * @param  Rate Transfer rate STR or DTR
  * @retval error status
  */
int32_t MX25LM51245G_ResetMemory(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
{
 8003678:	b570      	push	{r4, r5, r6, lr}
 800367a:	b094      	sub	sp, #80	; 0x50
 800367c:	460d      	mov	r5, r1
 800367e:	4606      	mov	r6, r0
 8003680:	4614      	mov	r4, r2
  OSPI_RegularCmdTypeDef s_command = {0};
 8003682:	2100      	movs	r1, #0
 8003684:	2250      	movs	r2, #80	; 0x50
 8003686:	4668      	mov	r0, sp
 8003688:	f019 fc97 	bl	801cfba <memset>

  /* SPI mode and DTR transfer not supported by memory */
  if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
 800368c:	bb0d      	cbnz	r5, 80036d2 <MX25LM51245G_ResetMemory+0x5a>
 800368e:	2c01      	cmp	r4, #1
 8003690:	d021      	beq.n	80036d6 <MX25LM51245G_ResetMemory+0x5e>
  }

  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003692:	2301      	movs	r3, #1
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8003694:	1e62      	subs	r2, r4, #1
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 8003696:	9303      	str	r3, [sp, #12]
  s_command.DummyCycles        = 0U;
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;

  /* Send the command */
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003698:	4669      	mov	r1, sp
 800369a:	4630      	mov	r0, r6
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800369c:	4254      	negs	r4, r2
 800369e:	4154      	adcs	r4, r2
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80036a0:	2d00      	cmp	r5, #0
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80036a2:	f241 3288 	movw	r2, #5000	; 0x1388
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80036a6:	bf14      	ite	ne
 80036a8:	2301      	movne	r3, #1
 80036aa:	2300      	moveq	r3, #0
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80036ac:	ea4f 04c4 	mov.w	r4, r4, lsl #3
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80036b0:	ea4f 1303 	mov.w	r3, r3, lsl #4
  s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80036b4:	9405      	str	r4, [sp, #20]
  s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
 80036b6:	9304      	str	r3, [sp, #16]
  s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_RESET_MEMORY_CMD : MX25LM51245G_OCTA_RESET_MEMORY_CMD;
 80036b8:	f649 1366 	movw	r3, #39270	; 0x9966
 80036bc:	bf08      	it	eq
 80036be:	2399      	moveq	r3, #153	; 0x99
 80036c0:	9302      	str	r3, [sp, #8]
  if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80036c2:	f002 fde8 	bl	8006296 <HAL_OSPI_Command>
 80036c6:	3800      	subs	r0, #0
 80036c8:	bf18      	it	ne
 80036ca:	2001      	movne	r0, #1
 80036cc:	4240      	negs	r0, r0
  {
    return MX25LM51245G_ERROR;
  }

  return MX25LM51245G_OK;
}
 80036ce:	b014      	add	sp, #80	; 0x50
 80036d0:	bd70      	pop	{r4, r5, r6, pc}
  s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
 80036d2:	2304      	movs	r3, #4
 80036d4:	e7de      	b.n	8003694 <MX25LM51245G_ResetMemory+0x1c>
    return MX25LM51245G_ERROR;
 80036d6:	f04f 30ff 	mov.w	r0, #4294967295
 80036da:	e7f8      	b.n	80036ce <MX25LM51245G_ResetMemory+0x56>

080036dc <BSP_I2C2_DeInit>:
  */
int32_t BSP_I2C2_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c2InitCounter--;
 80036dc:	4a0f      	ldr	r2, [pc, #60]	; (800371c <BSP_I2C2_DeInit+0x40>)
{
 80036de:	b508      	push	{r3, lr}
  I2c2InitCounter--;
 80036e0:	6813      	ldr	r3, [r2, #0]
 80036e2:	3b01      	subs	r3, #1
 80036e4:	6013      	str	r3, [r2, #0]

  if (I2c2InitCounter == 0U)
 80036e6:	b10b      	cbz	r3, 80036ec <BSP_I2C2_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
 80036e8:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
 80036ea:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hI2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C2_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C2_SCL_GPIO_PORT, gpio_init_structure.Pin );
 80036ec:	2110      	movs	r1, #16
 80036ee:	480c      	ldr	r0, [pc, #48]	; (8003720 <BSP_I2C2_DeInit+0x44>)
 80036f0:	f001 fd58 	bl	80051a4 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C2_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C2_SDA_GPIO_PORT, gpio_init_structure.Pin);
 80036f4:	480a      	ldr	r0, [pc, #40]	; (8003720 <BSP_I2C2_DeInit+0x44>)
 80036f6:	2120      	movs	r1, #32
 80036f8:	f001 fd54 	bl	80051a4 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C2_CLK_DISABLE();
 80036fc:	4a09      	ldr	r2, [pc, #36]	; (8003724 <BSP_I2C2_DeInit+0x48>)
    if (HAL_I2C_DeInit(&hbus_i2c2) != HAL_OK)
 80036fe:	480a      	ldr	r0, [pc, #40]	; (8003728 <BSP_I2C2_DeInit+0x4c>)
  BUS_I2C2_CLK_DISABLE();
 8003700:	f8d2 3148 	ldr.w	r3, [r2, #328]	; 0x148
 8003704:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8003708:	f8c2 3148 	str.w	r3, [r2, #328]	; 0x148
    if (HAL_I2C_DeInit(&hbus_i2c2) != HAL_OK)
 800370c:	f001 ffe2 	bl	80056d4 <HAL_I2C_DeInit>
 8003710:	2800      	cmp	r0, #0
 8003712:	d0e9      	beq.n	80036e8 <BSP_I2C2_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
 8003714:	f06f 0007 	mvn.w	r0, #7
  return ret;
 8003718:	e7e7      	b.n	80036ea <BSP_I2C2_DeInit+0xe>
 800371a:	bf00      	nop
 800371c:	240016b0 	.word	0x240016b0
 8003720:	58021c00 	.word	0x58021c00
 8003724:	58024400 	.word	0x58024400
 8003728:	240020b8 	.word	0x240020b8

0800372c <MX_I2C2_Init>:
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 800372c:	2300      	movs	r3, #0
 800372e:	2201      	movs	r2, #1
{
 8003730:	b510      	push	{r4, lr}
  hI2c->Init.Timing           = timing;
 8003732:	6041      	str	r1, [r0, #4]
{
 8003734:	4604      	mov	r4, r0
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 8003736:	6203      	str	r3, [r0, #32]
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 8003738:	e9c0 3202 	strd	r3, r2, [r0, #8]
  hI2c->Init.OwnAddress2      = 0;
 800373c:	e9c0 3304 	strd	r3, r3, [r0, #16]
  hI2c->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 8003740:	e9c0 3306 	strd	r3, r3, [r0, #24]
  if (HAL_I2C_Init(hI2c) != HAL_OK)
 8003744:	f001 ff74 	bl	8005630 <HAL_I2C_Init>
 8003748:	4601      	mov	r1, r0
 800374a:	b108      	cbz	r0, 8003750 <MX_I2C2_Init+0x24>
    status = HAL_ERROR;
 800374c:	2001      	movs	r0, #1
}
 800374e:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
 8003750:	4620      	mov	r0, r4
 8003752:	f002 f950 	bl	80059f6 <HAL_I2CEx_ConfigAnalogFilter>
 8003756:	4601      	mov	r1, r0
 8003758:	2800      	cmp	r0, #0
 800375a:	d1f7      	bne.n	800374c <MX_I2C2_Init+0x20>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
 800375c:	4620      	mov	r0, r4
 800375e:	f002 f970 	bl	8005a42 <HAL_I2CEx_ConfigDigitalFilter>
    status = HAL_ERROR;
 8003762:	3800      	subs	r0, #0
 8003764:	bf18      	it	ne
 8003766:	2001      	movne	r0, #1
 8003768:	e7f1      	b.n	800374e <MX_I2C2_Init+0x22>
	...

0800376c <BSP_I2C2_Init>:
  hbus_i2c2.Instance = BUS_I2C2;
 800376c:	4ba3      	ldr	r3, [pc, #652]	; (80039fc <BSP_I2C2_Init+0x290>)
 800376e:	48a4      	ldr	r0, [pc, #656]	; (8003a00 <BSP_I2C2_Init+0x294>)
{
 8003770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  hbus_i2c2.Instance = BUS_I2C2;
 8003774:	6003      	str	r3, [r0, #0]
{
 8003776:	b093      	sub	sp, #76	; 0x4c
  if (I2c2InitCounter == 0U)
 8003778:	4ba2      	ldr	r3, [pc, #648]	; (8003a04 <BSP_I2C2_Init+0x298>)
 800377a:	681c      	ldr	r4, [r3, #0]
 800377c:	2c00      	cmp	r4, #0
 800377e:	f040 80cd 	bne.w	800391c <BSP_I2C2_Init+0x1b0>
    I2c2InitCounter++;
 8003782:	2201      	movs	r2, #1
 8003784:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c2) == HAL_I2C_STATE_RESET)
 8003786:	f002 f931 	bl	80059ec <HAL_I2C_GetState>
 800378a:	2800      	cmp	r0, #0
 800378c:	f040 80c6 	bne.w	800391c <BSP_I2C2_Init+0x1b0>
  BUS_I2C2_SCL_GPIO_CLK_ENABLE();
 8003790:	4e9d      	ldr	r6, [pc, #628]	; (8003a08 <BSP_I2C2_Init+0x29c>)
  gpio_init_structure.Mode 		= GPIO_MODE_AF_OD;
 8003792:	f04f 0912 	mov.w	r9, #18
  gpio_init_structure.Alternate = BUS_I2C2_SCL_AF;
 8003796:	f04f 0802 	mov.w	r8, #2
 800379a:	2704      	movs	r7, #4
  BUS_I2C2_SCL_GPIO_CLK_ENABLE();
 800379c:	f8d6 3140 	ldr.w	r3, [r6, #320]	; 0x140
  gpio_init_structure.Mode 		= GPIO_MODE_AF_OD;
 80037a0:	2510      	movs	r5, #16
  HAL_GPIO_Init(BUS_I2C2_SCL_GPIO_PORT, &gpio_init_structure);
 80037a2:	a90d      	add	r1, sp, #52	; 0x34
 80037a4:	4899      	ldr	r0, [pc, #612]	; (8003a0c <BSP_I2C2_Init+0x2a0>)
  BUS_I2C2_SCL_GPIO_CLK_ENABLE();
 80037a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80037aa:	f8c6 3140 	str.w	r3, [r6, #320]	; 0x140
 80037ae:	f8d6 3140 	ldr.w	r3, [r6, #320]	; 0x140
 80037b2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80037b6:	930a      	str	r3, [sp, #40]	; 0x28
 80037b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  BUS_I2C2_SDA_GPIO_CLK_ENABLE();
 80037ba:	f8d6 3140 	ldr.w	r3, [r6, #320]	; 0x140
 80037be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80037c2:	f8c6 3140 	str.w	r3, [r6, #320]	; 0x140
 80037c6:	f8d6 3140 	ldr.w	r3, [r6, #320]	; 0x140
  gpio_init_structure.Pull 		= GPIO_NOPULL;
 80037ca:	940f      	str	r4, [sp, #60]	; 0x3c
  BUS_I2C2_SDA_GPIO_CLK_ENABLE();
 80037cc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80037d0:	930b      	str	r3, [sp, #44]	; 0x2c
 80037d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  gpio_init_structure.Mode 		= GPIO_MODE_AF_OD;
 80037d4:	e9cd 590d 	strd	r5, r9, [sp, #52]	; 0x34
  gpio_init_structure.Alternate = BUS_I2C2_SCL_AF;
 80037d8:	e9cd 8710 	strd	r8, r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(BUS_I2C2_SCL_GPIO_PORT, &gpio_init_structure);
 80037dc:	f001 fbf8 	bl	8004fd0 <HAL_GPIO_Init>
  gpio_init_structure.Pin 		= BUS_I2C2_SDA_PIN;
 80037e0:	2320      	movs	r3, #32
  HAL_GPIO_Init(BUS_I2C2_SDA_GPIO_PORT, &gpio_init_structure);
 80037e2:	a90d      	add	r1, sp, #52	; 0x34
 80037e4:	4889      	ldr	r0, [pc, #548]	; (8003a0c <BSP_I2C2_Init+0x2a0>)
  gpio_init_structure.Alternate = BUS_I2C2_SDA_AF;
 80037e6:	9711      	str	r7, [sp, #68]	; 0x44
  gpio_init_structure.Mode 		= GPIO_MODE_AF_OD;
 80037e8:	e9cd 390d 	strd	r3, r9, [sp, #52]	; 0x34
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_HIGH;
 80037ec:	e9cd 480f 	strd	r4, r8, [sp, #60]	; 0x3c
  HAL_GPIO_Init(BUS_I2C2_SDA_GPIO_PORT, &gpio_init_structure);
 80037f0:	f001 fbee 	bl	8004fd0 <HAL_GPIO_Init>
  BUS_I2C2_CLK_ENABLE();
 80037f4:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
 80037f8:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 80037fc:	f8c6 3148 	str.w	r3, [r6, #328]	; 0x148
 8003800:	f8d6 3148 	ldr.w	r3, [r6, #328]	; 0x148
 8003804:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003808:	930c      	str	r3, [sp, #48]	; 0x30
 800380a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  BUS_I2C2_FORCE_RESET();
 800380c:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
 8003810:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8003814:	f8c6 3090 	str.w	r3, [r6, #144]	; 0x90
  BUS_I2C2_RELEASE_RESET();
 8003818:	f8d6 3090 	ldr.w	r3, [r6, #144]	; 0x90
 800381c:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 8003820:	f8c6 3090 	str.w	r3, [r6, #144]	; 0x90
        if (MX_I2C2_Init(&hbus_i2c2, I2C_GetTiming(HAL_RCC_GetPCLK1Freq(), BUS_I2C2_FREQUENCY)) != HAL_OK)
 8003824:	f003 ff34 	bl	8007690 <HAL_RCC_GetPCLK1Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
 8003828:	2800      	cmp	r0, #0
 800382a:	d071      	beq.n	8003910 <BSP_I2C2_Init+0x1a4>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 800382c:	4b78      	ldr	r3, [pc, #480]	; (8003a10 <BSP_I2C2_Init+0x2a4>)
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 800382e:	f640 17f6 	movw	r7, #2550	; 0x9f6
 8003832:	4622      	mov	r2, r4
 8003834:	46a2      	mov	sl, r4
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 8003836:	eb03 0350 	add.w	r3, r3, r0, lsr #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800383a:	f8df b1dc 	ldr.w	fp, [pc, #476]	; 8003a18 <BSP_I2C2_Init+0x2ac>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 800383e:	fbb3 f0f0 	udiv	r0, r3, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8003842:	f06f 031d 	mvn.w	r3, #29
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
 8003846:	eb00 0640 	add.w	r6, r0, r0, lsl #1
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
 800384a:	eba7 0780 	sub.w	r7, r7, r0, lsl #2
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
 800384e:	4601      	mov	r1, r0
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
 8003850:	1b9b      	subs	r3, r3, r6
 8003852:	ea27 77e7 	bic.w	r7, r7, r7, asr #31
 8003856:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800385a:	9300      	str	r3, [sp, #0]
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 800385c:	4b6d      	ldr	r3, [pc, #436]	; (8003a14 <BSP_I2C2_Init+0x2a8>)
 800385e:	681b      	ldr	r3, [r3, #0]
{
 8003860:	4689      	mov	r9, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8003862:	f04f 0e00 	mov.w	lr, #0
      if (tscldel >= (uint32_t)tscldel_min)
 8003866:	f240 3679 	movw	r6, #889	; 0x379
 800386a:	f8cd e004 	str.w	lr, [sp, #4]
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
 800386e:	f10e 0e01 	add.w	lr, lr, #1
      if (tscldel >= (uint32_t)tscldel_min)
 8003872:	45b1      	cmp	r9, r6
 8003874:	d95f      	bls.n	8003936 <BSP_I2C2_Init+0x1ca>
 8003876:	f04f 0c00 	mov.w	ip, #0
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 800387a:	46e0      	mov	r8, ip
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
 800387c:	9e00      	ldr	r6, [sp, #0]
 800387e:	4566      	cmp	r6, ip
 8003880:	d853      	bhi.n	800392a <BSP_I2C2_Init+0x1be>
 8003882:	4567      	cmp	r7, ip
 8003884:	d351      	bcc.n	800392a <BSP_I2C2_Init+0x1be>
            if(presc != prev_presc)
 8003886:	4295      	cmp	r5, r2
 8003888:	d04f      	beq.n	800392a <BSP_I2C2_Init+0x1be>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800388a:	2514      	movs	r5, #20
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
 800388c:	9e01      	ldr	r6, [sp, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800388e:	fb05 fa03 	mul.w	sl, r5, r3
              I2c_valid_timing_nbr ++;
 8003892:	3301      	adds	r3, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 8003894:	eb0b 050a 	add.w	r5, fp, sl
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 8003898:	2b7f      	cmp	r3, #127	; 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
 800389a:	f84b 200a 	str.w	r2, [fp, sl]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
 800389e:	e9c5 6801 	strd	r6, r8, [r5, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
 80038a2:	d93f      	bls.n	8003924 <BSP_I2C2_Init+0x1b8>
 80038a4:	4a5b      	ldr	r2, [pc, #364]	; (8003a14 <BSP_I2C2_Init+0x2a8>)
 80038a6:	6013      	str	r3, [r2, #0]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80038a8:	4b5a      	ldr	r3, [pc, #360]	; (8003a14 <BSP_I2C2_Init+0x2a8>)
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80038aa:	f242 7210 	movw	r2, #10000	; 0x2710
 80038ae:	495a      	ldr	r1, [pc, #360]	; (8003a18 <BSP_I2C2_Init+0x2ac>)
 80038b0:	2700      	movs	r7, #0
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80038b2:	681b      	ldr	r3, [r3, #0]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80038b4:	9203      	str	r2, [sp, #12]
 80038b6:	f04f 32ff 	mov.w	r2, #4294967295
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80038ba:	9305      	str	r3, [sp, #20]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 80038bc:	0043      	lsls	r3, r0, #1
 80038be:	9201      	str	r2, [sp, #4]
 80038c0:	f103 0532 	add.w	r5, r3, #50	; 0x32
 80038c4:	f5c3 5b90 	rsb	fp, r3, #4608	; 0x1200
 80038c8:	f5a3 5311 	sub.w	r3, r3, #9280	; 0x2440
 80038cc:	f10b 0b0c 	add.w	fp, fp, #12
 80038d0:	9509      	str	r5, [sp, #36]	; 0x24
 80038d2:	3b0a      	subs	r3, #10
 80038d4:	9302      	str	r3, [sp, #8]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80038d6:	9b05      	ldr	r3, [sp, #20]
 80038d8:	429f      	cmp	r7, r3
 80038da:	d138      	bne.n	800394e <BSP_I2C2_Init+0x1e2>
        if (idx < I2C_VALID_TIMING_NBR)
 80038dc:	9b01      	ldr	r3, [sp, #4]
 80038de:	2b7f      	cmp	r3, #127	; 0x7f
 80038e0:	d816      	bhi.n	8003910 <BSP_I2C2_Init+0x1a4>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80038e2:	2114      	movs	r1, #20
 80038e4:	9a01      	ldr	r2, [sp, #4]
 80038e6:	4b4c      	ldr	r3, [pc, #304]	; (8003a18 <BSP_I2C2_Init+0x2ac>)
 80038e8:	434a      	muls	r2, r1
 80038ea:	1899      	adds	r1, r3, r2
 80038ec:	589b      	ldr	r3, [r3, r2]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
 80038ee:	7c0c      	ldrb	r4, [r1, #16]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80038f0:	ea44 7403 	orr.w	r4, r4, r3, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
 80038f4:	684b      	ldr	r3, [r1, #4]
 80038f6:	051b      	lsls	r3, r3, #20
 80038f8:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 80038fc:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
 80038fe:	688b      	ldr	r3, [r1, #8]
 8003900:	041b      	lsls	r3, r3, #16
 8003902:	f403 2370 	and.w	r3, r3, #983040	; 0xf0000
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 8003906:	431c      	orrs	r4, r3
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
 8003908:	68cb      	ldr	r3, [r1, #12]
 800390a:	021b      	lsls	r3, r3, #8
 800390c:	b29b      	uxth	r3, r3
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
 800390e:	431c      	orrs	r4, r3
        if (MX_I2C2_Init(&hbus_i2c2, I2C_GetTiming(HAL_RCC_GetPCLK1Freq(), BUS_I2C2_FREQUENCY)) != HAL_OK)
 8003910:	4621      	mov	r1, r4
 8003912:	483b      	ldr	r0, [pc, #236]	; (8003a00 <BSP_I2C2_Init+0x294>)
 8003914:	f7ff ff0a 	bl	800372c <MX_I2C2_Init>
 8003918:	2800      	cmp	r0, #0
 800391a:	d16c      	bne.n	80039f6 <BSP_I2C2_Init+0x28a>
  int32_t ret = BSP_ERROR_NONE;
 800391c:	2000      	movs	r0, #0
}
 800391e:	b013      	add	sp, #76	; 0x4c
 8003920:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003924:	4615      	mov	r5, r2
 8003926:	f04f 0a01 	mov.w	sl, #1
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
 800392a:	f108 0801 	add.w	r8, r8, #1
 800392e:	448c      	add	ip, r1
 8003930:	f1b8 0f10 	cmp.w	r8, #16
 8003934:	d1a2      	bne.n	800387c <BSP_I2C2_Init+0x110>
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
 8003936:	f1be 0f10 	cmp.w	lr, #16
 800393a:	4489      	add	r9, r1
 800393c:	d193      	bne.n	8003866 <BSP_I2C2_Init+0xfa>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
 800393e:	3201      	adds	r2, #1
 8003940:	4401      	add	r1, r0
 8003942:	2a10      	cmp	r2, #16
 8003944:	d18c      	bne.n	8003860 <BSP_I2C2_Init+0xf4>
 8003946:	f1ba 0f00 	cmp.w	sl, #0
 800394a:	d1ab      	bne.n	80038a4 <BSP_I2C2_Init+0x138>
 800394c:	e7ac      	b.n	80038a8 <BSP_I2C2_Init+0x13c>
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 800394e:	680b      	ldr	r3, [r1, #0]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 8003950:	f04f 0c00 	mov.w	ip, #0
 8003954:	9d09      	ldr	r5, [sp, #36]	; 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 8003956:	fb03 0300 	mla	r3, r3, r0, r0
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 800395a:	9e02      	ldr	r6, [sp, #8]
 800395c:	441d      	add	r5, r3
 800395e:	441e      	add	r6, r3
 8003960:	9504      	str	r5, [sp, #16]
 8003962:	ebab 0503 	sub.w	r5, fp, r3
 8003966:	9608      	str	r6, [sp, #32]
 8003968:	006d      	lsls	r5, r5, #1
 800396a:	9500      	str	r5, [sp, #0]
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
 800396c:	9d04      	ldr	r5, [sp, #16]
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 800396e:	f241 225c 	movw	r2, #4700	; 0x125c
 8003972:	f8cd c018 	str.w	ip, [sp, #24]
 8003976:	f1a5 0632 	sub.w	r6, r5, #50	; 0x32
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
 800397a:	f10c 0c01 	add.w	ip, ip, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 800397e:	4295      	cmp	r5, r2
 8003980:	d92e      	bls.n	80039e0 <BSP_I2C2_Init+0x274>
 8003982:	ebb0 0f96 	cmp.w	r0, r6, lsr #2
 8003986:	d22b      	bcs.n	80039e0 <BSP_I2C2_Init+0x274>
 8003988:	9e08      	ldr	r6, [sp, #32]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 800398a:	f04f 0e00 	mov.w	lr, #0
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
 800398e:	f8dd 8010 	ldr.w	r8, [sp, #16]
 8003992:	442e      	add	r6, r5
 8003994:	f8dd 9000 	ldr.w	r9, [sp]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 8003998:	f206 6a83 	addw	sl, r6, #1667	; 0x683
 800399c:	f241 0247 	movw	r2, #4167	; 0x1047
 80039a0:	f8cd e01c 	str.w	lr, [sp, #28]
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
 80039a4:	f10e 0e01 	add.w	lr, lr, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
 80039a8:	4592      	cmp	sl, r2
 80039aa:	d812      	bhi.n	80039d2 <BSP_I2C2_Init+0x266>
 80039ac:	f5b8 6f7a 	cmp.w	r8, #4000	; 0xfa0
 80039b0:	d30f      	bcc.n	80039d2 <BSP_I2C2_Init+0x266>
 80039b2:	4540      	cmp	r0, r8
 80039b4:	d20d      	bcs.n	80039d2 <BSP_I2C2_Init+0x266>
              error = -error;
 80039b6:	ea36 0a26 	bics.w	sl, r6, r6, asr #32
 80039ba:	bf28      	it	cs
 80039bc:	46ca      	movcs	sl, r9
            if ((uint32_t)error < prev_error)
 80039be:	9a03      	ldr	r2, [sp, #12]
 80039c0:	4592      	cmp	sl, r2
 80039c2:	d206      	bcs.n	80039d2 <BSP_I2C2_Init+0x266>
              I2c_valid_timing[count].scll = scll;
 80039c4:	9a06      	ldr	r2, [sp, #24]
              I2c_valid_timing[count].sclh = sclh;
 80039c6:	f8cd a00c 	str.w	sl, [sp, #12]
              I2c_valid_timing[count].scll = scll;
 80039ca:	610a      	str	r2, [r1, #16]
              I2c_valid_timing[count].sclh = sclh;
 80039cc:	9a07      	ldr	r2, [sp, #28]
 80039ce:	9701      	str	r7, [sp, #4]
 80039d0:	60ca      	str	r2, [r1, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
 80039d2:	f5be 7f80 	cmp.w	lr, #256	; 0x100
 80039d6:	441e      	add	r6, r3
 80039d8:	eba9 0903 	sub.w	r9, r9, r3
 80039dc:	4498      	add	r8, r3
 80039de:	d1db      	bne.n	8003998 <BSP_I2C2_Init+0x22c>
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
 80039e0:	9a00      	ldr	r2, [sp, #0]
 80039e2:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 80039e6:	441d      	add	r5, r3
 80039e8:	eba2 0203 	sub.w	r2, r2, r3
 80039ec:	9200      	str	r2, [sp, #0]
 80039ee:	d1be      	bne.n	800396e <BSP_I2C2_Init+0x202>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
 80039f0:	3701      	adds	r7, #1
 80039f2:	3114      	adds	r1, #20
 80039f4:	e76f      	b.n	80038d6 <BSP_I2C2_Init+0x16a>
          ret = BSP_ERROR_BUS_FAILURE;
 80039f6:	f06f 0007 	mvn.w	r0, #7
  return ret;
 80039fa:	e790      	b.n	800391e <BSP_I2C2_Init+0x1b2>
 80039fc:	40005800 	.word	0x40005800
 8003a00:	240020b8 	.word	0x240020b8
 8003a04:	240016b0 	.word	0x240016b0
 8003a08:	58024400 	.word	0x58024400
 8003a0c:	58021c00 	.word	0x58021c00
 8003a10:	3b9aca00 	.word	0x3b9aca00
 8003a14:	240020b4 	.word	0x240020b4
 8003a18:	240016b4 	.word	0x240016b4

08003a1c <BSP_I2C2_WriteReg>:
{
 8003a1c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C2_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c2, DevAddr, Reg, MemAddSize, pData, Length, 10000) == HAL_OK)
 8003a1e:	f242 7410 	movw	r4, #10000	; 0x2710
 8003a22:	9200      	str	r2, [sp, #0]
 8003a24:	460a      	mov	r2, r1
 8003a26:	4601      	mov	r1, r0
 8003a28:	4808      	ldr	r0, [pc, #32]	; (8003a4c <BSP_I2C2_WriteReg+0x30>)
 8003a2a:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003a2e:	2301      	movs	r3, #1
 8003a30:	f001 fe69 	bl	8005706 <HAL_I2C_Mem_Write>
 8003a34:	b140      	cbz	r0, 8003a48 <BSP_I2C2_WriteReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c2) == HAL_I2C_ERROR_AF)
 8003a36:	4805      	ldr	r0, [pc, #20]	; (8003a4c <BSP_I2C2_WriteReg+0x30>)
 8003a38:	f001 ffdb 	bl	80059f2 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8003a3c:	2804      	cmp	r0, #4
 8003a3e:	bf0c      	ite	eq
 8003a40:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8003a44:	f06f 0003 	mvnne.w	r0, #3
}
 8003a48:	b004      	add	sp, #16
 8003a4a:	bd10      	pop	{r4, pc}
 8003a4c:	240020b8 	.word	0x240020b8

08003a50 <BSP_I2C2_ReadReg>:
{
 8003a50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C2_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c2, DevAddr, Reg, MemAddSize, pData, Length, 10000) == HAL_OK)
 8003a52:	f242 7410 	movw	r4, #10000	; 0x2710
 8003a56:	9200      	str	r2, [sp, #0]
 8003a58:	460a      	mov	r2, r1
 8003a5a:	4601      	mov	r1, r0
 8003a5c:	4808      	ldr	r0, [pc, #32]	; (8003a80 <BSP_I2C2_ReadReg+0x30>)
 8003a5e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003a62:	2301      	movs	r3, #1
 8003a64:	f001 ff06 	bl	8005874 <HAL_I2C_Mem_Read>
 8003a68:	b140      	cbz	r0, 8003a7c <BSP_I2C2_ReadReg+0x2c>
    if( HAL_I2C_GetError(&hbus_i2c2) == HAL_I2C_ERROR_AF)
 8003a6a:	4805      	ldr	r0, [pc, #20]	; (8003a80 <BSP_I2C2_ReadReg+0x30>)
 8003a6c:	f001 ffc1 	bl	80059f2 <HAL_I2C_GetError>
      ret =  BSP_ERROR_PERIPH_FAILURE;
 8003a70:	2804      	cmp	r0, #4
 8003a72:	bf0c      	ite	eq
 8003a74:	f06f 0065 	mvneq.w	r0, #101	; 0x65
 8003a78:	f06f 0003 	mvnne.w	r0, #3
}
 8003a7c:	b004      	add	sp, #16
 8003a7e:	bd10      	pop	{r4, pc}
 8003a80:	240020b8 	.word	0x240020b8

08003a84 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
 8003a84:	f000 be82 	b.w	800478c <HAL_GetTick>

08003a88 <OSPI_NOR_EnterSOPIMode.constprop.0>:
/**
  * @brief  This function enables the octal STR mode of the memory.
  * @param  Instance  OSPI instance
  * @retval BSP status
  */
static int32_t OSPI_NOR_EnterSOPIMode(uint32_t Instance)
 8003a88:	b530      	push	{r4, r5, lr}
{
  int32_t ret = BSP_ERROR_NONE;
  uint8_t reg[2];

  /* Enable write operations */
  if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003a8a:	4c1e      	ldr	r4, [pc, #120]	; (8003b04 <OSPI_NOR_EnterSOPIMode.constprop.0+0x7c>)
static int32_t OSPI_NOR_EnterSOPIMode(uint32_t Instance)
 8003a8c:	b085      	sub	sp, #20
  if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003a8e:	481e      	ldr	r0, [pc, #120]	; (8003b08 <OSPI_NOR_EnterSOPIMode.constprop.0+0x80>)
 8003a90:	78a2      	ldrb	r2, [r4, #2]
 8003a92:	7861      	ldrb	r1, [r4, #1]
 8003a94:	f7ff fc8c 	bl	80033b0 <MX25LM51245G_WriteEnable>
 8003a98:	bb78      	cbnz	r0, 8003afa <OSPI_NOR_EnterSOPIMode.constprop.0+0x72>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  /* Write Configuration register 2 (with new dummy cycles) */
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG3_ADDR, MX25LM51245G_CR2_DC_6_CYCLES) != MX25LM51245G_OK)
 8003a9a:	2307      	movs	r3, #7
 8003a9c:	481a      	ldr	r0, [pc, #104]	; (8003b08 <OSPI_NOR_EnterSOPIMode.constprop.0+0x80>)
 8003a9e:	9300      	str	r3, [sp, #0]
 8003aa0:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003aa4:	78a2      	ldrb	r2, [r4, #2]
 8003aa6:	7861      	ldrb	r1, [r4, #1]
 8003aa8:	f7ff fcfb 	bl	80034a2 <MX25LM51245G_WriteCfg2Register>
 8003aac:	bb28      	cbnz	r0, 8003afa <OSPI_NOR_EnterSOPIMode.constprop.0+0x72>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  /* Enable write operations */
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003aae:	78a2      	ldrb	r2, [r4, #2]
 8003ab0:	7861      	ldrb	r1, [r4, #1]
 8003ab2:	4815      	ldr	r0, [pc, #84]	; (8003b08 <OSPI_NOR_EnterSOPIMode.constprop.0+0x80>)
 8003ab4:	f7ff fc7c 	bl	80033b0 <MX25LM51245G_WriteEnable>
 8003ab8:	4603      	mov	r3, r0
 8003aba:	b9f0      	cbnz	r0, 8003afa <OSPI_NOR_EnterSOPIMode.constprop.0+0x72>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  /* Write Configuration register 2 (with Octal I/O SPI protocol) */
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, MX25LM51245G_CR2_SOPI) != MX25LM51245G_OK)
 8003abc:	2501      	movs	r5, #1
 8003abe:	4812      	ldr	r0, [pc, #72]	; (8003b08 <OSPI_NOR_EnterSOPIMode.constprop.0+0x80>)
 8003ac0:	9500      	str	r5, [sp, #0]
 8003ac2:	78a2      	ldrb	r2, [r4, #2]
 8003ac4:	7861      	ldrb	r1, [r4, #1]
 8003ac6:	f7ff fcec 	bl	80034a2 <MX25LM51245G_WriteCfg2Register>
 8003aca:	4604      	mov	r4, r0
 8003acc:	b9a8      	cbnz	r0, 8003afa <OSPI_NOR_EnterSOPIMode.constprop.0+0x72>
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else
  {
    /* Wait that the configuration is effective and check that memory is ready */
    HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 8003ace:	2028      	movs	r0, #40	; 0x28
 8003ad0:	f000 fe62 	bl	8004798 <HAL_Delay>

    /* Check Flash busy ? */
    if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8003ad4:	4622      	mov	r2, r4
 8003ad6:	4629      	mov	r1, r5
 8003ad8:	480b      	ldr	r0, [pc, #44]	; (8003b08 <OSPI_NOR_EnterSOPIMode.constprop.0+0x80>)
 8003ada:	f7ff fb4d 	bl	8003178 <MX25LM51245G_AutoPollingMemReady>
 8003ade:	4603      	mov	r3, r0
 8003ae0:	b958      	cbnz	r0, 8003afa <OSPI_NOR_EnterSOPIMode.constprop.0+0x72>
    {
      ret = BSP_ERROR_COMPONENT_FAILURE;
    }
    /* Check the configuration has been correctly done */
    else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 8003ae2:	aa03      	add	r2, sp, #12
 8003ae4:	4629      	mov	r1, r5
 8003ae6:	9200      	str	r2, [sp, #0]
 8003ae8:	4602      	mov	r2, r0
 8003aea:	4807      	ldr	r0, [pc, #28]	; (8003b08 <OSPI_NOR_EnterSOPIMode.constprop.0+0x80>)
 8003aec:	f7ff fd32 	bl	8003554 <MX25LM51245G_ReadCfg2Register>
 8003af0:	b918      	cbnz	r0, 8003afa <OSPI_NOR_EnterSOPIMode.constprop.0+0x72>
    {
      ret = BSP_ERROR_COMPONENT_FAILURE;
    }
    else
    {
      if (reg[0] != MX25LM51245G_CR2_SOPI)
 8003af2:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8003af6:	42ab      	cmp	r3, r5
 8003af8:	d001      	beq.n	8003afe <OSPI_NOR_EnterSOPIMode.constprop.0+0x76>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8003afa:	f06f 0004 	mvn.w	r0, #4
    }
  }

  /* Return BSP status */
  return ret;
}
 8003afe:	b005      	add	sp, #20
 8003b00:	bd30      	pop	{r4, r5, pc}
 8003b02:	bf00      	nop
 8003b04:	24002104 	.word	0x24002104
 8003b08:	2400210c 	.word	0x2400210c

08003b0c <OSPI_NOR_EnterDOPIMode.constprop.0>:
static int32_t OSPI_NOR_EnterDOPIMode(uint32_t Instance)
 8003b0c:	b530      	push	{r4, r5, lr}
  if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003b0e:	4d25      	ldr	r5, [pc, #148]	; (8003ba4 <OSPI_NOR_EnterDOPIMode.constprop.0+0x98>)
static int32_t OSPI_NOR_EnterDOPIMode(uint32_t Instance)
 8003b10:	b085      	sub	sp, #20
  if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003b12:	4c25      	ldr	r4, [pc, #148]	; (8003ba8 <OSPI_NOR_EnterDOPIMode.constprop.0+0x9c>)
 8003b14:	78aa      	ldrb	r2, [r5, #2]
 8003b16:	7869      	ldrb	r1, [r5, #1]
 8003b18:	4620      	mov	r0, r4
 8003b1a:	f7ff fc49 	bl	80033b0 <MX25LM51245G_WriteEnable>
 8003b1e:	2800      	cmp	r0, #0
 8003b20:	d138      	bne.n	8003b94 <OSPI_NOR_EnterDOPIMode.constprop.0+0x88>
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG3_ADDR, MX25LM51245G_CR2_DC_6_CYCLES) != MX25LM51245G_OK)
 8003b22:	2307      	movs	r3, #7
 8003b24:	78aa      	ldrb	r2, [r5, #2]
 8003b26:	7869      	ldrb	r1, [r5, #1]
 8003b28:	4620      	mov	r0, r4
 8003b2a:	9300      	str	r3, [sp, #0]
 8003b2c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8003b30:	f7ff fcb7 	bl	80034a2 <MX25LM51245G_WriteCfg2Register>
 8003b34:	bb70      	cbnz	r0, 8003b94 <OSPI_NOR_EnterDOPIMode.constprop.0+0x88>
  else if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003b36:	78aa      	ldrb	r2, [r5, #2]
 8003b38:	4620      	mov	r0, r4
 8003b3a:	7869      	ldrb	r1, [r5, #1]
 8003b3c:	f7ff fc38 	bl	80033b0 <MX25LM51245G_WriteEnable>
 8003b40:	4603      	mov	r3, r0
 8003b42:	bb38      	cbnz	r0, 8003b94 <OSPI_NOR_EnterDOPIMode.constprop.0+0x88>
  else if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, MX25LM51245G_CR2_DOPI) != MX25LM51245G_OK)
 8003b44:	2202      	movs	r2, #2
 8003b46:	7869      	ldrb	r1, [r5, #1]
 8003b48:	4620      	mov	r0, r4
 8003b4a:	9200      	str	r2, [sp, #0]
 8003b4c:	78aa      	ldrb	r2, [r5, #2]
 8003b4e:	f7ff fca8 	bl	80034a2 <MX25LM51245G_WriteCfg2Register>
 8003b52:	b9f8      	cbnz	r0, 8003b94 <OSPI_NOR_EnterDOPIMode.constprop.0+0x88>
    HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 8003b54:	2028      	movs	r0, #40	; 0x28
 8003b56:	f000 fe1f 	bl	8004798 <HAL_Delay>
    hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 8003b5a:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8003b5e:	4620      	mov	r0, r4
    hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 8003b60:	60e3      	str	r3, [r4, #12]
    hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_ENABLE;
 8003b62:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8003b66:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8003b68:	f002 fb0e 	bl	8006188 <HAL_OSPI_Init>
 8003b6c:	b9b0      	cbnz	r0, 8003b9c <OSPI_NOR_EnterDOPIMode.constprop.0+0x90>
    else if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 8003b6e:	2201      	movs	r2, #1
 8003b70:	4620      	mov	r0, r4
 8003b72:	4611      	mov	r1, r2
 8003b74:	f7ff fb00 	bl	8003178 <MX25LM51245G_AutoPollingMemReady>
 8003b78:	4603      	mov	r3, r0
 8003b7a:	b958      	cbnz	r0, 8003b94 <OSPI_NOR_EnterDOPIMode.constprop.0+0x88>
    else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 8003b7c:	aa03      	add	r2, sp, #12
 8003b7e:	4620      	mov	r0, r4
 8003b80:	9200      	str	r2, [sp, #0]
 8003b82:	2201      	movs	r2, #1
 8003b84:	4611      	mov	r1, r2
 8003b86:	f7ff fce5 	bl	8003554 <MX25LM51245G_ReadCfg2Register>
 8003b8a:	b918      	cbnz	r0, 8003b94 <OSPI_NOR_EnterDOPIMode.constprop.0+0x88>
      if (reg[0] != MX25LM51245G_CR2_DOPI)
 8003b8c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8003b90:	2b02      	cmp	r3, #2
 8003b92:	d001      	beq.n	8003b98 <OSPI_NOR_EnterDOPIMode.constprop.0+0x8c>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8003b94:	f06f 0004 	mvn.w	r0, #4
}
 8003b98:	b005      	add	sp, #20
 8003b9a:	bd30      	pop	{r4, r5, pc}
      ret = BSP_ERROR_PERIPH_FAILURE;
 8003b9c:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8003ba0:	e7fa      	b.n	8003b98 <OSPI_NOR_EnterDOPIMode.constprop.0+0x8c>
 8003ba2:	bf00      	nop
 8003ba4:	24002104 	.word	0x24002104
 8003ba8:	2400210c 	.word	0x2400210c

08003bac <MX_OSPI_NOR_Init>:
  hospi->Init.FifoThreshold      = 4;
 8003bac:	4a0f      	ldr	r2, [pc, #60]	; (8003bec <MX_OSPI_NOR_Init+0x40>)
 8003bae:	2304      	movs	r3, #4
 8003bb0:	e9c0 2300 	strd	r2, r3, [r0]
  hospi->Init.DeviceSize         = Config->MemorySize; /* 512 MBits */
 8003bb4:	680a      	ldr	r2, [r1, #0]
  hospi->Init.DualQuad           = HAL_OSPI_DUALQUAD_DISABLE;
 8003bb6:	2300      	movs	r3, #0
  hospi->Init.DeviceSize         = Config->MemorySize; /* 512 MBits */
 8003bb8:	6102      	str	r2, [r0, #16]
  hospi->Init.ChipSelectHighTime = 2;
 8003bba:	2202      	movs	r2, #2
  hospi->Init.DualQuad           = HAL_OSPI_DUALQUAD_DISABLE;
 8003bbc:	6083      	str	r3, [r0, #8]
  hospi->Init.FreeRunningClock   = HAL_OSPI_FREERUNCLK_DISABLE;
 8003bbe:	e9c0 2305 	strd	r2, r3, [r0, #20]
  hospi->Init.ClockPrescaler     = Config->ClockPrescaler;
 8003bc2:	684a      	ldr	r2, [r1, #4]
 8003bc4:	6242      	str	r2, [r0, #36]	; 0x24
  hospi->Init.SampleShifting     = Config->SampleShifting;
 8003bc6:	688a      	ldr	r2, [r1, #8]
  hospi->Init.ChipSelectBoundary = 0;
 8003bc8:	6303      	str	r3, [r0, #48]	; 0x30
  hospi->Init.SampleShifting     = Config->SampleShifting;
 8003bca:	6282      	str	r2, [r0, #40]	; 0x28
  hospi->Init.DelayBlockBypass   = HAL_OSPI_DELAY_BLOCK_BYPASSED;
 8003bcc:	2208      	movs	r2, #8
 8003bce:	6342      	str	r2, [r0, #52]	; 0x34
  if (Config->TransferRate == (uint32_t)BSP_OSPI_NOR_DTR_TRANSFER)
 8003bd0:	68ca      	ldr	r2, [r1, #12]
 8003bd2:	2a01      	cmp	r2, #1
  hospi->Init.WrapSize           = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8003bd4:	e9c0 3307 	strd	r3, r3, [r0, #28]
  if (Config->TransferRate == (uint32_t)BSP_OSPI_NOR_DTR_TRANSFER)
 8003bd8:	bf06      	itte	eq
 8003bda:	f04f 5280 	moveq.w	r2, #268435456	; 0x10000000
 8003bde:	f04f 7380 	moveq.w	r3, #16777216	; 0x1000000
 8003be2:	461a      	movne	r2, r3
    hospi->Init.MemoryType            = HAL_OSPI_MEMTYPE_MACRONIX;
 8003be4:	60c3      	str	r3, [r0, #12]
    hospi->Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_ENABLE;
 8003be6:	62c2      	str	r2, [r0, #44]	; 0x2c
  return HAL_OSPI_Init(hospi);
 8003be8:	f002 bace 	b.w	8006188 <HAL_OSPI_Init>
 8003bec:	52005000 	.word	0x52005000

08003bf0 <BSP_OSPI_NOR_EnableMemoryMappedMode>:
{
 8003bf0:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003bf2:	b998      	cbnz	r0, 8003c1c <BSP_OSPI_NOR_EnableMemoryMappedMode+0x2c>
    if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 8003bf4:	4c0b      	ldr	r4, [pc, #44]	; (8003c24 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x34>)
  else if(Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 8003bf6:	78a3      	ldrb	r3, [r4, #2]
    if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 8003bf8:	7861      	ldrb	r1, [r4, #1]
  else if(Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 8003bfa:	b95b      	cbnz	r3, 8003c14 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x24>
    if(MX25LM51245G_EnableMemoryMappedModeSTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, MX25LM51245G_4BYTES_SIZE) != MX25LM51245G_OK)
 8003bfc:	2201      	movs	r2, #1
 8003bfe:	480a      	ldr	r0, [pc, #40]	; (8003c28 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x38>)
 8003c00:	f7ff fb1f 	bl	8003242 <MX25LM51245G_EnableSTRMemoryMappedMode>
 8003c04:	b110      	cbz	r0, 8003c0c <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1c>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 8003c06:	f06f 0004 	mvn.w	r0, #4
}
 8003c0a:	bd10      	pop	{r4, pc}
      Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_MMP;
 8003c0c:	2302      	movs	r3, #2
  int32_t ret = BSP_ERROR_NONE;
 8003c0e:	2000      	movs	r0, #0
      Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_MMP;
 8003c10:	7023      	strb	r3, [r4, #0]
 8003c12:	e7fa      	b.n	8003c0a <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1a>
    if(MX25LM51245G_EnableMemoryMappedModeDTR(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode) != MX25LM51245G_OK)
 8003c14:	4804      	ldr	r0, [pc, #16]	; (8003c28 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x38>)
 8003c16:	f7ff fb7c 	bl	8003312 <MX25LM51245G_EnableDTRMemoryMappedMode>
 8003c1a:	e7f3      	b.n	8003c04 <BSP_OSPI_NOR_EnableMemoryMappedMode+0x14>
    ret = BSP_ERROR_WRONG_PARAM;
 8003c1c:	f06f 0001 	mvn.w	r0, #1
  return ret;
 8003c20:	e7f3      	b.n	8003c0a <BSP_OSPI_NOR_EnableMemoryMappedMode+0x1a>
 8003c22:	bf00      	nop
 8003c24:	24002104 	.word	0x24002104
 8003c28:	2400210c 	.word	0x2400210c

08003c2c <BSP_OSPI_NOR_DisableMemoryMappedMode>:
{
 8003c2c:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003c2e:	b950      	cbnz	r0, 8003c46 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x1a>
  else if(Ospi_Nor_Ctx[Instance].IsInitialized != OSPI_ACCESS_MMP)
 8003c30:	4c09      	ldr	r4, [pc, #36]	; (8003c58 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x2c>)
 8003c32:	7823      	ldrb	r3, [r4, #0]
 8003c34:	2b02      	cmp	r3, #2
 8003c36:	d109      	bne.n	8003c4c <BSP_OSPI_NOR_DisableMemoryMappedMode+0x20>
  else if(HAL_OSPI_Abort(&hospi_nor[Instance]) != HAL_OK)
 8003c38:	4808      	ldr	r0, [pc, #32]	; (8003c5c <BSP_OSPI_NOR_DisableMemoryMappedMode+0x30>)
 8003c3a:	f002 fd5f 	bl	80066fc <HAL_OSPI_Abort>
 8003c3e:	b940      	cbnz	r0, 8003c52 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x26>
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 8003c40:	2301      	movs	r3, #1
 8003c42:	7023      	strb	r3, [r4, #0]
}
 8003c44:	bd10      	pop	{r4, pc}
    ret = BSP_ERROR_WRONG_PARAM;
 8003c46:	f06f 0001 	mvn.w	r0, #1
 8003c4a:	e7fb      	b.n	8003c44 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
    ret = BSP_ERROR_OSPI_MMP_UNLOCK_FAILURE;
 8003c4c:	f06f 001a 	mvn.w	r0, #26
 8003c50:	e7f8      	b.n	8003c44 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
    ret = BSP_ERROR_PERIPH_FAILURE;
 8003c52:	f06f 0003 	mvn.w	r0, #3
  return ret;
 8003c56:	e7f5      	b.n	8003c44 <BSP_OSPI_NOR_DisableMemoryMappedMode+0x18>
 8003c58:	24002104 	.word	0x24002104
 8003c5c:	2400210c 	.word	0x2400210c

08003c60 <BSP_OSPI_NOR_DeInit>:
{
 8003c60:	b510      	push	{r4, lr}
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003c62:	2800      	cmp	r0, #0
 8003c64:	d154      	bne.n	8003d10 <BSP_OSPI_NOR_DeInit+0xb0>
    if(Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_MMP)
 8003c66:	4c2c      	ldr	r4, [pc, #176]	; (8003d18 <BSP_OSPI_NOR_DeInit+0xb8>)
 8003c68:	7823      	ldrb	r3, [r4, #0]
 8003c6a:	2b02      	cmp	r3, #2
 8003c6c:	d049      	beq.n	8003d02 <BSP_OSPI_NOR_DeInit+0xa2>
      Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_NONE;
 8003c6e:	2300      	movs	r3, #0
  HAL_GPIO_DeInit(OSPI_CLK_GPIO_PORT, OSPI_CLK_PIN);
 8003c70:	2104      	movs	r1, #4
 8003c72:	482a      	ldr	r0, [pc, #168]	; (8003d1c <BSP_OSPI_NOR_DeInit+0xbc>)
      Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_NONE;
 8003c74:	8023      	strh	r3, [r4, #0]
      Ospi_Nor_Ctx[Instance].TransferRate  = BSP_OSPI_NOR_STR_TRANSFER;
 8003c76:	70a3      	strb	r3, [r4, #2]
  HAL_GPIO_DeInit(OSPI_CLK_GPIO_PORT, OSPI_CLK_PIN);
 8003c78:	f001 fa94 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_DQS_GPIO_PORT, OSPI_DQS_PIN);
 8003c7c:	2120      	movs	r1, #32
 8003c7e:	4828      	ldr	r0, [pc, #160]	; (8003d20 <BSP_OSPI_NOR_DeInit+0xc0>)
 8003c80:	f001 fa90 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_CS_GPIO_PORT, OSPI_CS_PIN);
 8003c84:	2140      	movs	r1, #64	; 0x40
 8003c86:	4827      	ldr	r0, [pc, #156]	; (8003d24 <BSP_OSPI_NOR_DeInit+0xc4>)
 8003c88:	f001 fa8c 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_D0_GPIO_PORT, OSPI_D0_PIN);
 8003c8c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003c90:	4825      	ldr	r0, [pc, #148]	; (8003d28 <BSP_OSPI_NOR_DeInit+0xc8>)
 8003c92:	f001 fa87 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_D1_GPIO_PORT, OSPI_D1_PIN);
 8003c96:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003c9a:	4823      	ldr	r0, [pc, #140]	; (8003d28 <BSP_OSPI_NOR_DeInit+0xc8>)
 8003c9c:	f001 fa82 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_D2_GPIO_PORT, OSPI_D2_PIN);
 8003ca0:	2180      	movs	r1, #128	; 0x80
 8003ca2:	4821      	ldr	r0, [pc, #132]	; (8003d28 <BSP_OSPI_NOR_DeInit+0xc8>)
 8003ca4:	f001 fa7e 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_D3_GPIO_PORT, OSPI_D3_PIN);
 8003ca8:	2140      	movs	r1, #64	; 0x40
 8003caa:	481f      	ldr	r0, [pc, #124]	; (8003d28 <BSP_OSPI_NOR_DeInit+0xc8>)
 8003cac:	f001 fa7a 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_D4_GPIO_PORT, OSPI_D4_PIN);
 8003cb0:	2102      	movs	r1, #2
 8003cb2:	481b      	ldr	r0, [pc, #108]	; (8003d20 <BSP_OSPI_NOR_DeInit+0xc0>)
 8003cb4:	f001 fa76 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_D5_GPIO_PORT, OSPI_D5_PIN);
 8003cb8:	2108      	movs	r1, #8
 8003cba:	481c      	ldr	r0, [pc, #112]	; (8003d2c <BSP_OSPI_NOR_DeInit+0xcc>)
 8003cbc:	f001 fa72 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_D6_GPIO_PORT, OSPI_D6_PIN);
 8003cc0:	2140      	movs	r1, #64	; 0x40
 8003cc2:	481b      	ldr	r0, [pc, #108]	; (8003d30 <BSP_OSPI_NOR_DeInit+0xd0>)
 8003cc4:	f001 fa6e 	bl	80051a4 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(OSPI_D7_GPIO_PORT, OSPI_D7_PIN);
 8003cc8:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8003ccc:	4815      	ldr	r0, [pc, #84]	; (8003d24 <BSP_OSPI_NOR_DeInit+0xc4>)
 8003cce:	f001 fa69 	bl	80051a4 <HAL_GPIO_DeInit>
  OSPI_FORCE_RESET();
 8003cd2:	4b18      	ldr	r3, [pc, #96]	; (8003d34 <BSP_OSPI_NOR_DeInit+0xd4>)
      if (HAL_OSPI_DeInit(&hospi_nor[Instance]) != HAL_OK)
 8003cd4:	4818      	ldr	r0, [pc, #96]	; (8003d38 <BSP_OSPI_NOR_DeInit+0xd8>)
  OSPI_FORCE_RESET();
 8003cd6:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8003cd8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003cdc:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_RELEASE_RESET();
 8003cde:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8003ce0:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003ce4:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_CLK_DISABLE();
 8003ce6:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8003cea:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003cee:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
      if (HAL_OSPI_DeInit(&hospi_nor[Instance]) != HAL_OK)
 8003cf2:	f002 fabd 	bl	8006270 <HAL_OSPI_DeInit>
        ret = BSP_ERROR_PERIPH_FAILURE;
 8003cf6:	2800      	cmp	r0, #0
 8003cf8:	bf0c      	ite	eq
 8003cfa:	2000      	moveq	r0, #0
 8003cfc:	f06f 0003 	mvnne.w	r0, #3
}
 8003d00:	bd10      	pop	{r4, pc}
      if(BSP_OSPI_NOR_DisableMemoryMappedMode(Instance) != BSP_ERROR_NONE)
 8003d02:	f7ff ff93 	bl	8003c2c <BSP_OSPI_NOR_DisableMemoryMappedMode>
 8003d06:	2800      	cmp	r0, #0
 8003d08:	d0b1      	beq.n	8003c6e <BSP_OSPI_NOR_DeInit+0xe>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8003d0a:	f06f 0004 	mvn.w	r0, #4
 8003d0e:	e7f7      	b.n	8003d00 <BSP_OSPI_NOR_DeInit+0xa0>
    ret = BSP_ERROR_WRONG_PARAM;
 8003d10:	f06f 0001 	mvn.w	r0, #1
 8003d14:	e7f4      	b.n	8003d00 <BSP_OSPI_NOR_DeInit+0xa0>
 8003d16:	bf00      	nop
 8003d18:	24002104 	.word	0x24002104
 8003d1c:	58020400 	.word	0x58020400
 8003d20:	58020800 	.word	0x58020800
 8003d24:	58021800 	.word	0x58021800
 8003d28:	58021400 	.word	0x58021400
 8003d2c:	58021c00 	.word	0x58021c00
 8003d30:	58020c00 	.word	0x58020c00
 8003d34:	58024400 	.word	0x58024400
 8003d38:	2400210c 	.word	0x2400210c

08003d3c <BSP_OSPI_NOR_ConfigFlash>:
{
 8003d3c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8003d40:	460e      	mov	r6, r1
 8003d42:	4617      	mov	r7, r2
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003d44:	2800      	cmp	r0, #0
 8003d46:	d163      	bne.n	8003e10 <BSP_OSPI_NOR_ConfigFlash+0xd4>
  else if(Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_MMP)
 8003d48:	4d34      	ldr	r5, [pc, #208]	; (8003e1c <BSP_OSPI_NOR_ConfigFlash+0xe0>)
 8003d4a:	782b      	ldrb	r3, [r5, #0]
 8003d4c:	2b02      	cmp	r3, #2
 8003d4e:	d062      	beq.n	8003e16 <BSP_OSPI_NOR_ConfigFlash+0xda>
    switch(Ospi_Nor_Ctx[Instance].InterfaceMode)
 8003d50:	786b      	ldrb	r3, [r5, #1]
 8003d52:	2b01      	cmp	r3, #1
 8003d54:	d152      	bne.n	8003dfc <BSP_OSPI_NOR_ConfigFlash+0xc0>
      if((Mode != BSP_OSPI_NOR_OPI_MODE) || (Rate != Ospi_Nor_Ctx[Instance].TransferRate))
 8003d56:	2901      	cmp	r1, #1
 8003d58:	78aa      	ldrb	r2, [r5, #2]
 8003d5a:	d10a      	bne.n	8003d72 <BSP_OSPI_NOR_ConfigFlash+0x36>
 8003d5c:	4297      	cmp	r7, r2
 8003d5e:	d108      	bne.n	8003d72 <BSP_OSPI_NOR_ConfigFlash+0x36>
      Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 8003d60:	2301      	movs	r3, #1
      Ospi_Nor_Ctx[Instance].TransferRate  = Rate;
 8003d62:	2400      	movs	r4, #0
      Ospi_Nor_Ctx[Instance].InterfaceMode = Mode;
 8003d64:	706e      	strb	r6, [r5, #1]
      Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;
 8003d66:	702b      	strb	r3, [r5, #0]
      Ospi_Nor_Ctx[Instance].TransferRate  = Rate;
 8003d68:	70af      	strb	r7, [r5, #2]
}
 8003d6a:	4620      	mov	r0, r4
 8003d6c:	b004      	add	sp, #16
 8003d6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
{
  int32_t ret = BSP_ERROR_NONE;
  uint8_t reg[2];

  /* Enable write operations */
  if (MX25LM51245G_WriteEnable(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 8003d72:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 8003e20 <BSP_OSPI_NOR_ConfigFlash+0xe4>
 8003d76:	2101      	movs	r1, #1
 8003d78:	4640      	mov	r0, r8
 8003d7a:	f7ff fb19 	bl	80033b0 <MX25LM51245G_WriteEnable>
 8003d7e:	4603      	mov	r3, r0
 8003d80:	b110      	cbz	r0, 8003d88 <BSP_OSPI_NOR_ConfigFlash+0x4c>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
 8003d82:	f06f 0404 	mvn.w	r4, #4
 8003d86:	e7f0      	b.n	8003d6a <BSP_OSPI_NOR_ConfigFlash+0x2e>
  }
  else
  {
    /* Write Configuration register 2 (with SPI protocol) */
    reg[0] = 0;
 8003d88:	f8ad 000c 	strh.w	r0, [sp, #12]
    reg[1] = 0;
    if (MX25LM51245G_WriteCfg2Register(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate, MX25LM51245G_CR2_REG1_ADDR, reg[0]) != MX25LM51245G_OK)
 8003d8c:	9000      	str	r0, [sp, #0]
 8003d8e:	4640      	mov	r0, r8
 8003d90:	78aa      	ldrb	r2, [r5, #2]
 8003d92:	7869      	ldrb	r1, [r5, #1]
 8003d94:	f7ff fb85 	bl	80034a2 <MX25LM51245G_WriteCfg2Register>
 8003d98:	4604      	mov	r4, r0
 8003d9a:	2800      	cmp	r0, #0
 8003d9c:	d1f1      	bne.n	8003d82 <BSP_OSPI_NOR_ConfigFlash+0x46>
      ret = BSP_ERROR_COMPONENT_FAILURE;
    }
    else
    {
      /* Wait that the configuration is effective and check that memory is ready */
      HAL_Delay(MX25LM51245G_WRITE_REG_MAX_TIME);
 8003d9e:	2028      	movs	r0, #40	; 0x28
 8003da0:	f000 fcfa 	bl	8004798 <HAL_Delay>

      if (Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_DTR_TRANSFER)
 8003da4:	78ab      	ldrb	r3, [r5, #2]
 8003da6:	2b01      	cmp	r3, #1
 8003da8:	d10a      	bne.n	8003dc0 <BSP_OSPI_NOR_ConfigFlash+0x84>
      {
        /* Reconfigure the memory type of the peripheral */
        hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MICRON;
        hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
        if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8003daa:	4640      	mov	r0, r8
        hospi_nor[Instance].Init.MemoryType            = HAL_OSPI_MEMTYPE_MICRON;
 8003dac:	f8c8 400c 	str.w	r4, [r8, #12]
        hospi_nor[Instance].Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 8003db0:	f8c8 402c 	str.w	r4, [r8, #44]	; 0x2c
        if (HAL_OSPI_Init(&hospi_nor[Instance]) != HAL_OK)
 8003db4:	f002 f9e8 	bl	8006188 <HAL_OSPI_Init>
        {
          ret = BSP_ERROR_PERIPH_FAILURE;
 8003db8:	2800      	cmp	r0, #0
 8003dba:	bf18      	it	ne
 8003dbc:	f06f 0403 	mvnne.w	r4, #3
        }
      }

      /* Check Flash busy ? */
      if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8003dc0:	2200      	movs	r2, #0
 8003dc2:	4817      	ldr	r0, [pc, #92]	; (8003e20 <BSP_OSPI_NOR_ConfigFlash+0xe4>)
 8003dc4:	4611      	mov	r1, r2
 8003dc6:	f7ff f9d7 	bl	8003178 <MX25LM51245G_AutoPollingMemReady>
 8003dca:	4603      	mov	r3, r0
 8003dcc:	2800      	cmp	r0, #0
 8003dce:	d1d8      	bne.n	8003d82 <BSP_OSPI_NOR_ConfigFlash+0x46>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
      }
      /* Check the configuration has been correctly done */
      else if (MX25LM51245G_ReadCfg2Register(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER, MX25LM51245G_CR2_REG1_ADDR, reg) != MX25LM51245G_OK)
 8003dd0:	aa03      	add	r2, sp, #12
 8003dd2:	4601      	mov	r1, r0
 8003dd4:	9200      	str	r2, [sp, #0]
 8003dd6:	4602      	mov	r2, r0
 8003dd8:	4811      	ldr	r0, [pc, #68]	; (8003e20 <BSP_OSPI_NOR_ConfigFlash+0xe4>)
 8003dda:	f7ff fbbb 	bl	8003554 <MX25LM51245G_ReadCfg2Register>
 8003dde:	2800      	cmp	r0, #0
 8003de0:	d1cf      	bne.n	8003d82 <BSP_OSPI_NOR_ConfigFlash+0x46>
      {
        ret = BSP_ERROR_COMPONENT_FAILURE;
      }
      else
      {
        if (reg[0] != 0U)
 8003de2:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8003de6:	2b00      	cmp	r3, #0
 8003de8:	d1cb      	bne.n	8003d82 <BSP_OSPI_NOR_ConfigFlash+0x46>
        if ((ret == BSP_ERROR_NONE) && (Mode == BSP_OSPI_NOR_OPI_MODE))
 8003dea:	2c00      	cmp	r4, #0
 8003dec:	d1bd      	bne.n	8003d6a <BSP_OSPI_NOR_ConfigFlash+0x2e>
 8003dee:	2e01      	cmp	r6, #1
 8003df0:	d1b6      	bne.n	8003d60 <BSP_OSPI_NOR_ConfigFlash+0x24>
          if (Ospi_Nor_Ctx[Instance].TransferRate == BSP_OSPI_NOR_STR_TRANSFER)
 8003df2:	78ab      	ldrb	r3, [r5, #2]
 8003df4:	b933      	cbnz	r3, 8003e04 <BSP_OSPI_NOR_ConfigFlash+0xc8>
          ret = OSPI_NOR_EnterDOPIMode(Instance);
 8003df6:	f7ff fe89 	bl	8003b0c <OSPI_NOR_EnterDOPIMode.constprop.0>
 8003dfa:	e005      	b.n	8003e08 <BSP_OSPI_NOR_ConfigFlash+0xcc>
      if(Mode == BSP_OSPI_NOR_OPI_MODE)
 8003dfc:	2901      	cmp	r1, #1
 8003dfe:	d1af      	bne.n	8003d60 <BSP_OSPI_NOR_ConfigFlash+0x24>
        if(Rate == BSP_OSPI_NOR_STR_TRANSFER)
 8003e00:	2a00      	cmp	r2, #0
 8003e02:	d1f8      	bne.n	8003df6 <BSP_OSPI_NOR_ConfigFlash+0xba>
          ret = OSPI_NOR_EnterSOPIMode(Instance);
 8003e04:	f7ff fe40 	bl	8003a88 <OSPI_NOR_EnterSOPIMode.constprop.0>
          ret = OSPI_NOR_EnterDOPIMode(Instance);
 8003e08:	4604      	mov	r4, r0
    if(ret == BSP_ERROR_NONE)
 8003e0a:	2800      	cmp	r0, #0
 8003e0c:	d0a8      	beq.n	8003d60 <BSP_OSPI_NOR_ConfigFlash+0x24>
 8003e0e:	e7ac      	b.n	8003d6a <BSP_OSPI_NOR_ConfigFlash+0x2e>
    ret = BSP_ERROR_WRONG_PARAM;
 8003e10:	f06f 0401 	mvn.w	r4, #1
 8003e14:	e7a9      	b.n	8003d6a <BSP_OSPI_NOR_ConfigFlash+0x2e>
    ret = BSP_ERROR_OSPI_MMP_LOCK_FAILURE;
 8003e16:	f06f 0419 	mvn.w	r4, #25
  return ret;
 8003e1a:	e7a6      	b.n	8003d6a <BSP_OSPI_NOR_ConfigFlash+0x2e>
 8003e1c:	24002104 	.word	0x24002104
 8003e20:	2400210c 	.word	0x2400210c

08003e24 <BSP_OSPI_NOR_Init>:
{
 8003e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e28:	460d      	mov	r5, r1
 8003e2a:	b09b      	sub	sp, #108	; 0x6c
  if(Instance >= OSPI_NOR_INSTANCES_NUMBER)
 8003e2c:	2800      	cmp	r0, #0
 8003e2e:	f040 8154 	bne.w	80040da <BSP_OSPI_NOR_Init+0x2b6>
    if (Ospi_Nor_Ctx[Instance].IsInitialized == OSPI_ACCESS_NONE)
 8003e32:	4ead      	ldr	r6, [pc, #692]	; (80040e8 <BSP_OSPI_NOR_Init+0x2c4>)
 8003e34:	f896 8000 	ldrb.w	r8, [r6]
 8003e38:	f1b8 0f00 	cmp.w	r8, #0
 8003e3c:	d003      	beq.n	8003e46 <BSP_OSPI_NOR_Init+0x22>
  int32_t ret = BSP_ERROR_NONE;
 8003e3e:	2000      	movs	r0, #0
}
 8003e40:	b01b      	add	sp, #108	; 0x6c
 8003e42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  OSPI_CLK_ENABLE();
 8003e46:	4ba9      	ldr	r3, [pc, #676]	; (80040ec <BSP_OSPI_NOR_Init+0x2c8>)
  GPIO_InitStruct.Alternate = OSPI_CS_PIN_AF;
 8003e48:	240a      	movs	r4, #10
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8003e4a:	f04f 0940 	mov.w	r9, #64	; 0x40
 8003e4e:	f04f 0b02 	mov.w	fp, #2
  OSPI_CLK_ENABLE();
 8003e52:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8003e56:	f04f 0a03 	mov.w	sl, #3
  HAL_GPIO_Init(OSPI_CS_GPIO_PORT, &GPIO_InitStruct);
 8003e5a:	a911      	add	r1, sp, #68	; 0x44
 8003e5c:	48a4      	ldr	r0, [pc, #656]	; (80040f0 <BSP_OSPI_NOR_Init+0x2cc>)
  OSPI_CLK_ENABLE();
 8003e5e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
  GPIO_InitStruct.Pin       = OSPI_DQS_PIN;
 8003e62:	2720      	movs	r7, #32
  OSPI_CLK_ENABLE();
 8003e64:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
 8003e68:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8003e6c:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8003e70:	9201      	str	r2, [sp, #4]
 8003e72:	9a01      	ldr	r2, [sp, #4]
  OSPI_FORCE_RESET();
 8003e74:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8003e76:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003e7a:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_RELEASE_RESET();
 8003e7c:	6fda      	ldr	r2, [r3, #124]	; 0x7c
 8003e7e:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8003e82:	67da      	str	r2, [r3, #124]	; 0x7c
  OSPI_CLK_GPIO_CLK_ENABLE();
 8003e84:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003e88:	f042 0202 	orr.w	r2, r2, #2
 8003e8c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003e90:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003e94:	f002 0202 	and.w	r2, r2, #2
 8003e98:	9202      	str	r2, [sp, #8]
 8003e9a:	9a02      	ldr	r2, [sp, #8]
  OSPI_DQS_GPIO_CLK_ENABLE();
 8003e9c:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003ea0:	f042 0204 	orr.w	r2, r2, #4
 8003ea4:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003ea8:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003eac:	f002 0204 	and.w	r2, r2, #4
 8003eb0:	9203      	str	r2, [sp, #12]
 8003eb2:	9a03      	ldr	r2, [sp, #12]
  OSPI_CS_GPIO_CLK_ENABLE();
 8003eb4:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003eb8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003ebc:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003ec0:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003ec4:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003ec8:	9204      	str	r2, [sp, #16]
 8003eca:	9a04      	ldr	r2, [sp, #16]
  OSPI_D0_GPIO_CLK_ENABLE();
 8003ecc:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003ed0:	f042 0220 	orr.w	r2, r2, #32
 8003ed4:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003ed8:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003edc:	f002 0220 	and.w	r2, r2, #32
 8003ee0:	9205      	str	r2, [sp, #20]
 8003ee2:	9a05      	ldr	r2, [sp, #20]
  OSPI_D1_GPIO_CLK_ENABLE();
 8003ee4:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003ee8:	f042 0220 	orr.w	r2, r2, #32
 8003eec:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003ef0:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003ef4:	f002 0220 	and.w	r2, r2, #32
 8003ef8:	9206      	str	r2, [sp, #24]
 8003efa:	9a06      	ldr	r2, [sp, #24]
  OSPI_D2_GPIO_CLK_ENABLE();
 8003efc:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f00:	f042 0220 	orr.w	r2, r2, #32
 8003f04:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003f08:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f0c:	f002 0220 	and.w	r2, r2, #32
 8003f10:	9207      	str	r2, [sp, #28]
 8003f12:	9a07      	ldr	r2, [sp, #28]
  OSPI_D3_GPIO_CLK_ENABLE();
 8003f14:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f18:	f042 0220 	orr.w	r2, r2, #32
 8003f1c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003f20:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f24:	f002 0220 	and.w	r2, r2, #32
 8003f28:	9208      	str	r2, [sp, #32]
 8003f2a:	9a08      	ldr	r2, [sp, #32]
  OSPI_D4_GPIO_CLK_ENABLE();
 8003f2c:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f30:	f042 0204 	orr.w	r2, r2, #4
 8003f34:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003f38:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f3c:	f002 0204 	and.w	r2, r2, #4
 8003f40:	9209      	str	r2, [sp, #36]	; 0x24
 8003f42:	9a09      	ldr	r2, [sp, #36]	; 0x24
  OSPI_D5_GPIO_CLK_ENABLE();
 8003f44:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f48:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003f4c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003f50:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f54:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8003f58:	920a      	str	r2, [sp, #40]	; 0x28
 8003f5a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  OSPI_D6_GPIO_CLK_ENABLE();
 8003f5c:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f60:	f042 0208 	orr.w	r2, r2, #8
 8003f64:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003f68:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f6c:	f002 0208 	and.w	r2, r2, #8
 8003f70:	920b      	str	r2, [sp, #44]	; 0x2c
 8003f72:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  OSPI_D7_GPIO_CLK_ENABLE();
 8003f74:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 8003f78:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8003f7c:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8003f80:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 8003f84:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003f88:	930c      	str	r3, [sp, #48]	; 0x30
 8003f8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8003f8c:	2301      	movs	r3, #1
  GPIO_InitStruct.Mode      = GPIO_MODE_AF_PP;
 8003f8e:	e9cd 9b11 	strd	r9, fp, [sp, #68]	; 0x44
  GPIO_InitStruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 8003f92:	e9cd 3a13 	strd	r3, sl, [sp, #76]	; 0x4c
  GPIO_InitStruct.Alternate = OSPI_CS_PIN_AF;
 8003f96:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_CS_GPIO_PORT, &GPIO_InitStruct);
 8003f98:	f001 f81a 	bl	8004fd0 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_DQS_GPIO_PORT, &GPIO_InitStruct);
 8003f9c:	a911      	add	r1, sp, #68	; 0x44
 8003f9e:	4855      	ldr	r0, [pc, #340]	; (80040f4 <BSP_OSPI_NOR_Init+0x2d0>)
  GPIO_InitStruct.Pin       = OSPI_DQS_PIN;
 8003fa0:	9711      	str	r7, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_DQS_PIN_AF;
 8003fa2:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_DQS_GPIO_PORT, &GPIO_InitStruct);
 8003fa4:	f001 f814 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_CLK_PIN;
 8003fa8:	2304      	movs	r3, #4
  GPIO_InitStruct.Pull      = GPIO_NOPULL;
 8003faa:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
  GPIO_InitStruct.Alternate = OSPI_CLK_PIN_AF;
 8003fae:	f04f 0809 	mov.w	r8, #9
  HAL_GPIO_Init(OSPI_CLK_GPIO_PORT, &GPIO_InitStruct);
 8003fb2:	a911      	add	r1, sp, #68	; 0x44
 8003fb4:	4850      	ldr	r0, [pc, #320]	; (80040f8 <BSP_OSPI_NOR_Init+0x2d4>)
  GPIO_InitStruct.Pin       = OSPI_CLK_PIN;
 8003fb6:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_CLK_PIN_AF;
 8003fb8:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_CLK_GPIO_PORT, &GPIO_InitStruct);
 8003fbc:	f001 f808 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_D0_PIN;
 8003fc0:	f44f 7380 	mov.w	r3, #256	; 0x100
  HAL_GPIO_Init(OSPI_D0_GPIO_PORT, &GPIO_InitStruct);
 8003fc4:	a911      	add	r1, sp, #68	; 0x44
 8003fc6:	484d      	ldr	r0, [pc, #308]	; (80040fc <BSP_OSPI_NOR_Init+0x2d8>)
  GPIO_InitStruct.Pin       = OSPI_D0_PIN;
 8003fc8:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_D0_PIN_AF;
 8003fca:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_D0_GPIO_PORT, &GPIO_InitStruct);
 8003fcc:	f001 f800 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_D1_PIN;
 8003fd0:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(OSPI_D1_GPIO_PORT, &GPIO_InitStruct);
 8003fd4:	a911      	add	r1, sp, #68	; 0x44
 8003fd6:	4849      	ldr	r0, [pc, #292]	; (80040fc <BSP_OSPI_NOR_Init+0x2d8>)
  GPIO_InitStruct.Pin       = OSPI_D1_PIN;
 8003fd8:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_D1_PIN_AF;
 8003fda:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_D1_GPIO_PORT, &GPIO_InitStruct);
 8003fdc:	f000 fff8 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_D2_PIN;
 8003fe0:	2380      	movs	r3, #128	; 0x80
  HAL_GPIO_Init(OSPI_D2_GPIO_PORT, &GPIO_InitStruct);
 8003fe2:	a911      	add	r1, sp, #68	; 0x44
 8003fe4:	4845      	ldr	r0, [pc, #276]	; (80040fc <BSP_OSPI_NOR_Init+0x2d8>)
  GPIO_InitStruct.Pin       = OSPI_D2_PIN;
 8003fe6:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_D2_PIN_AF;
 8003fe8:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_D2_GPIO_PORT, &GPIO_InitStruct);
 8003fea:	f000 fff1 	bl	8004fd0 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_D3_GPIO_PORT, &GPIO_InitStruct);
 8003fee:	a911      	add	r1, sp, #68	; 0x44
 8003ff0:	4842      	ldr	r0, [pc, #264]	; (80040fc <BSP_OSPI_NOR_Init+0x2d8>)
  GPIO_InitStruct.Pin       = OSPI_D3_PIN;
 8003ff2:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_D3_PIN_AF;
 8003ff6:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_D3_GPIO_PORT, &GPIO_InitStruct);
 8003ff8:	f000 ffea 	bl	8004fd0 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_D4_GPIO_PORT, &GPIO_InitStruct);
 8003ffc:	a911      	add	r1, sp, #68	; 0x44
 8003ffe:	483d      	ldr	r0, [pc, #244]	; (80040f4 <BSP_OSPI_NOR_Init+0x2d0>)
  GPIO_InitStruct.Pin       = OSPI_D4_PIN;
 8004000:	f8cd b044 	str.w	fp, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_D4_PIN_AF;
 8004004:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_D4_GPIO_PORT, &GPIO_InitStruct);
 8004006:	f000 ffe3 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_D5_PIN;
 800400a:	2308      	movs	r3, #8
  HAL_GPIO_Init(OSPI_D5_GPIO_PORT, &GPIO_InitStruct);
 800400c:	a911      	add	r1, sp, #68	; 0x44
 800400e:	483c      	ldr	r0, [pc, #240]	; (8004100 <BSP_OSPI_NOR_Init+0x2dc>)
  GPIO_InitStruct.Pin       = OSPI_D5_PIN;
 8004010:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_D5_PIN_AF;
 8004012:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_D5_GPIO_PORT, &GPIO_InitStruct);
 8004016:	f000 ffdb 	bl	8004fd0 <HAL_GPIO_Init>
  HAL_GPIO_Init(OSPI_D6_GPIO_PORT, &GPIO_InitStruct);
 800401a:	a911      	add	r1, sp, #68	; 0x44
 800401c:	4839      	ldr	r0, [pc, #228]	; (8004104 <BSP_OSPI_NOR_Init+0x2e0>)
  GPIO_InitStruct.Pin       = OSPI_D6_PIN;
 800401e:	f8cd 9044 	str.w	r9, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_D6_PIN_AF;
 8004022:	9415      	str	r4, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_D6_GPIO_PORT, &GPIO_InitStruct);
 8004024:	f000 ffd4 	bl	8004fd0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin       = OSPI_D7_PIN;
 8004028:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  HAL_GPIO_Init(OSPI_D7_GPIO_PORT, &GPIO_InitStruct);
 800402c:	a911      	add	r1, sp, #68	; 0x44
 800402e:	4830      	ldr	r0, [pc, #192]	; (80040f0 <BSP_OSPI_NOR_Init+0x2cc>)
  GPIO_InitStruct.Pin       = OSPI_D7_PIN;
 8004030:	9311      	str	r3, [sp, #68]	; 0x44
  GPIO_InitStruct.Alternate = OSPI_D7_PIN_AF;
 8004032:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
  HAL_GPIO_Init(OSPI_D7_GPIO_PORT, &GPIO_InitStruct);
 8004036:	f000 ffcb 	bl	8004fd0 <HAL_GPIO_Init>
        (void)MX25LM51245G_GetFlashInfo(&pInfo);
 800403a:	a811      	add	r0, sp, #68	; 0x44
 800403c:	f7ff f883 	bl	8003146 <MX25LM51245G_GetFlashInfo>
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8004040:	9b11      	ldr	r3, [sp, #68]	; 0x44
        ospi_config.ClockPrescaler = 3U;
 8004042:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 8004046:	fa93 f3a3 	rbit	r3, r3
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 800404a:	b10b      	cbz	r3, 8004050 <BSP_OSPI_NOR_Init+0x22c>
  {
    return 32U;
  }
  return __builtin_clz(value);
 800404c:	fab3 f783 	clz	r7, r3
        ospi_config.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8004050:	2300      	movs	r3, #0
        if (MX_OSPI_NOR_Init(&hospi_nor[Instance], &ospi_config) != HAL_OK)
 8004052:	a90d      	add	r1, sp, #52	; 0x34
 8004054:	482c      	ldr	r0, [pc, #176]	; (8004108 <BSP_OSPI_NOR_Init+0x2e4>)
        ospi_config.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 8004056:	930f      	str	r3, [sp, #60]	; 0x3c
        ospi_config.TransferRate   = (uint32_t)Init->TransferRate;
 8004058:	786b      	ldrb	r3, [r5, #1]
        ospi_config.MemorySize     = (uint32_t)POSITION_VAL((uint32_t)pInfo.FlashSize);
 800405a:	970d      	str	r7, [sp, #52]	; 0x34
        ospi_config.TransferRate   = (uint32_t)Init->TransferRate;
 800405c:	9310      	str	r3, [sp, #64]	; 0x40
        if (MX_OSPI_NOR_Init(&hospi_nor[Instance], &ospi_config) != HAL_OK)
 800405e:	f7ff fda5 	bl	8003bac <MX_OSPI_NOR_Init>
 8004062:	4602      	mov	r2, r0
 8004064:	2800      	cmp	r0, #0
 8004066:	d13b      	bne.n	80040e0 <BSP_OSPI_NOR_Init+0x2bc>
  if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004068:	4601      	mov	r1, r0
 800406a:	4827      	ldr	r0, [pc, #156]	; (8004108 <BSP_OSPI_NOR_Init+0x2e4>)
 800406c:	f7ff fad2 	bl	8003614 <MX25LM51245G_ResetEnable>
 8004070:	4602      	mov	r2, r0
 8004072:	bb78      	cbnz	r0, 80040d4 <BSP_OSPI_NOR_Init+0x2b0>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_SPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004074:	4601      	mov	r1, r0
 8004076:	4824      	ldr	r0, [pc, #144]	; (8004108 <BSP_OSPI_NOR_Init+0x2e4>)
 8004078:	f7ff fafe 	bl	8003678 <MX25LM51245G_ResetMemory>
 800407c:	4602      	mov	r2, r0
 800407e:	bb48      	cbnz	r0, 80040d4 <BSP_OSPI_NOR_Init+0x2b0>
  else if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 8004080:	2101      	movs	r1, #1
 8004082:	4821      	ldr	r0, [pc, #132]	; (8004108 <BSP_OSPI_NOR_Init+0x2e4>)
 8004084:	f7ff fac6 	bl	8003614 <MX25LM51245G_ResetEnable>
 8004088:	4602      	mov	r2, r0
 800408a:	bb18      	cbnz	r0, 80040d4 <BSP_OSPI_NOR_Init+0x2b0>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_STR_TRANSFER) != MX25LM51245G_OK)
 800408c:	2101      	movs	r1, #1
 800408e:	481e      	ldr	r0, [pc, #120]	; (8004108 <BSP_OSPI_NOR_Init+0x2e4>)
 8004090:	f7ff faf2 	bl	8003678 <MX25LM51245G_ResetMemory>
 8004094:	b9f0      	cbnz	r0, 80040d4 <BSP_OSPI_NOR_Init+0x2b0>
  else if(MX25LM51245G_ResetEnable(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 8004096:	2201      	movs	r2, #1
 8004098:	481b      	ldr	r0, [pc, #108]	; (8004108 <BSP_OSPI_NOR_Init+0x2e4>)
 800409a:	4611      	mov	r1, r2
 800409c:	f7ff faba 	bl	8003614 <MX25LM51245G_ResetEnable>
 80040a0:	b9c0      	cbnz	r0, 80040d4 <BSP_OSPI_NOR_Init+0x2b0>
  else if(MX25LM51245G_ResetMemory(&hospi_nor[Instance], BSP_OSPI_NOR_OPI_MODE, BSP_OSPI_NOR_DTR_TRANSFER) != MX25LM51245G_OK)
 80040a2:	2201      	movs	r2, #1
 80040a4:	4818      	ldr	r0, [pc, #96]	; (8004108 <BSP_OSPI_NOR_Init+0x2e4>)
 80040a6:	4611      	mov	r1, r2
 80040a8:	f7ff fae6 	bl	8003678 <MX25LM51245G_ResetMemory>
 80040ac:	b990      	cbnz	r0, 80040d4 <BSP_OSPI_NOR_Init+0x2b0>
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;      /* After reset S/W setting to indirect access   */
 80040ae:	2301      	movs	r3, #1
    Ospi_Nor_Ctx[Instance].TransferRate  = BSP_OSPI_NOR_STR_TRANSFER;     /* After reset S/W setting to STR mode          */
 80040b0:	70b0      	strb	r0, [r6, #2]
    HAL_Delay(MX25LM51245G_RESET_MAX_TIME);
 80040b2:	2064      	movs	r0, #100	; 0x64
    Ospi_Nor_Ctx[Instance].IsInitialized = OSPI_ACCESS_INDIRECT;      /* After reset S/W setting to indirect access   */
 80040b4:	8033      	strh	r3, [r6, #0]
    HAL_Delay(MX25LM51245G_RESET_MAX_TIME);
 80040b6:	f000 fb6f 	bl	8004798 <HAL_Delay>
        else if (MX25LM51245G_AutoPollingMemReady(&hospi_nor[Instance], Ospi_Nor_Ctx[Instance].InterfaceMode, Ospi_Nor_Ctx[Instance].TransferRate) != MX25LM51245G_OK)
 80040ba:	78b2      	ldrb	r2, [r6, #2]
 80040bc:	7871      	ldrb	r1, [r6, #1]
 80040be:	4812      	ldr	r0, [pc, #72]	; (8004108 <BSP_OSPI_NOR_Init+0x2e4>)
 80040c0:	f7ff f85a 	bl	8003178 <MX25LM51245G_AutoPollingMemReady>
 80040c4:	b930      	cbnz	r0, 80040d4 <BSP_OSPI_NOR_Init+0x2b0>
          if (BSP_OSPI_NOR_ConfigFlash(Instance, Init->InterfaceMode, Init->TransferRate) != BSP_ERROR_NONE)
 80040c6:	786a      	ldrb	r2, [r5, #1]
 80040c8:	7829      	ldrb	r1, [r5, #0]
 80040ca:	f7ff fe37 	bl	8003d3c <BSP_OSPI_NOR_ConfigFlash>
 80040ce:	2800      	cmp	r0, #0
 80040d0:	f43f aeb5 	beq.w	8003e3e <BSP_OSPI_NOR_Init+0x1a>
            ret = BSP_ERROR_COMPONENT_FAILURE;
 80040d4:	f06f 0004 	mvn.w	r0, #4
 80040d8:	e6b2      	b.n	8003e40 <BSP_OSPI_NOR_Init+0x1c>
    ret = BSP_ERROR_WRONG_PARAM;
 80040da:	f06f 0001 	mvn.w	r0, #1
 80040de:	e6af      	b.n	8003e40 <BSP_OSPI_NOR_Init+0x1c>
          ret = BSP_ERROR_PERIPH_FAILURE;
 80040e0:	f06f 0003 	mvn.w	r0, #3
  return ret;
 80040e4:	e6ac      	b.n	8003e40 <BSP_OSPI_NOR_Init+0x1c>
 80040e6:	bf00      	nop
 80040e8:	24002104 	.word	0x24002104
 80040ec:	58024400 	.word	0x58024400
 80040f0:	58021800 	.word	0x58021800
 80040f4:	58020800 	.word	0x58020800
 80040f8:	58020400 	.word	0x58020400
 80040fc:	58021400 	.word	0x58021400
 8004100:	58021c00 	.word	0x58021c00
 8004104:	58020c00 	.word	0x58020c00
 8004108:	2400210c 	.word	0x2400210c

0800410c <BSP_SDRAM_DeInit>:
  * @brief  DeInitializes the SDRAM device.
  * @param Instance  SDRAM Instance
  * @retval BSP status
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
 800410c:	b513      	push	{r0, r1, r4, lr}
  int32_t ret;

  if(Instance >= SDRAM_INSTANCES_NBR)
 800410e:	4604      	mov	r4, r0
 8004110:	2800      	cmp	r0, #0
 8004112:	d145      	bne.n	80041a0 <BSP_SDRAM_DeInit+0x94>
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    /* SDRAM device de-initialization */
    hsdram[Instance].Instance = FMC_SDRAM_DEVICE;
 8004114:	4b24      	ldr	r3, [pc, #144]	; (80041a8 <BSP_SDRAM_DeInit+0x9c>)
 8004116:	4825      	ldr	r0, [pc, #148]	; (80041ac <BSP_SDRAM_DeInit+0xa0>)
 8004118:	6003      	str	r3, [r0, #0]

    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
 800411a:	f004 f891 	bl	8008240 <HAL_SDRAM_DeInit>

  static DMA_HandleTypeDef mdma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
 800411e:	207a      	movs	r0, #122	; 0x7a
 8004120:	f000 fb9e 	bl	8004860 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
 8004124:	4b22      	ldr	r3, [pc, #136]	; (80041b0 <BSP_SDRAM_DeInit+0xa4>)
 8004126:	4823      	ldr	r0, [pc, #140]	; (80041b4 <BSP_SDRAM_DeInit+0xa8>)
 8004128:	6003      	str	r3, [r0, #0]
  (void)HAL_DMA_DeInit(&mdma_handle);
 800412a:	f000 fd23 	bl	8004b74 <HAL_DMA_DeInit>

  /* GPIOA configuration */
  gpio_init_structure.Pin   = GPIO_PIN_7;
  HAL_GPIO_DeInit(GPIOA, gpio_init_structure.Pin);
 800412e:	2180      	movs	r1, #128	; 0x80
 8004130:	4821      	ldr	r0, [pc, #132]	; (80041b8 <BSP_SDRAM_DeInit+0xac>)
 8004132:	f001 f837 	bl	80051a4 <HAL_GPIO_DeInit>

  /* GPIOD configuration */
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
                              GPIO_PIN_14 | GPIO_PIN_15;
  HAL_GPIO_DeInit(GPIOD, gpio_init_structure.Pin);
 8004136:	f24c 7103 	movw	r1, #50947	; 0xc703
 800413a:	4820      	ldr	r0, [pc, #128]	; (80041bc <BSP_SDRAM_DeInit+0xb0>)
 800413c:	f001 f832 	bl	80051a4 <HAL_GPIO_DeInit>

  /* GPIOE configuration */
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
                              GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 |\
                              GPIO_PIN_15;
  HAL_GPIO_DeInit(GPIOE, gpio_init_structure.Pin);
 8004140:	f64f 7183 	movw	r1, #65411	; 0xff83
 8004144:	481e      	ldr	r0, [pc, #120]	; (80041c0 <BSP_SDRAM_DeInit+0xb4>)
 8004146:	f001 f82d 	bl	80051a4 <HAL_GPIO_DeInit>

  /* GPIOF configuration */
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
                              GPIO_PIN_5 | GPIO_PIN_11 | GPIO_PIN_12 | GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
  HAL_GPIO_DeInit(GPIOF, gpio_init_structure.Pin);
 800414a:	f64f 013f 	movw	r1, #63551	; 0xf83f
 800414e:	481d      	ldr	r0, [pc, #116]	; (80041c4 <BSP_SDRAM_DeInit+0xb8>)
 8004150:	f001 f828 	bl	80051a4 <HAL_GPIO_DeInit>

  /* GPIOG configuration */
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 |\
                              GPIO_PIN_8 | GPIO_PIN_15;
  HAL_GPIO_DeInit(GPIOG, gpio_init_structure.Pin);
 8004154:	f248 1133 	movw	r1, #33075	; 0x8133
 8004158:	481b      	ldr	r0, [pc, #108]	; (80041c8 <BSP_SDRAM_DeInit+0xbc>)
 800415a:	f001 f823 	bl	80051a4 <HAL_GPIO_DeInit>

  /* GPIOH configuration */
  gpio_init_structure.Pin   = GPIO_PIN_6 | GPIO_PIN_7;
  HAL_GPIO_DeInit(GPIOH, gpio_init_structure.Pin);
 800415e:	21c0      	movs	r1, #192	; 0xc0
 8004160:	481a      	ldr	r0, [pc, #104]	; (80041cc <BSP_SDRAM_DeInit+0xc0>)
 8004162:	f001 f81f 	bl	80051a4 <HAL_GPIO_DeInit>

  if(ActiveDataLength == SDRAM_DATA_LENGTH_32B)
 8004166:	4b1a      	ldr	r3, [pc, #104]	; (80041d0 <BSP_SDRAM_DeInit+0xc4>)
 8004168:	781b      	ldrb	r3, [r3, #0]
 800416a:	2b01      	cmp	r3, #1
 800416c:	d116      	bne.n	800419c <BSP_SDRAM_DeInit+0x90>
  {
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800416e:	4b19      	ldr	r3, [pc, #100]	; (80041d4 <BSP_SDRAM_DeInit+0xc8>)

    /* GPIOH configuration */
    gpio_init_structure.Pin   = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 |\
                                GPIO_PIN_13 | GPIO_PIN_14 | GPIO_PIN_15;
    HAL_GPIO_DeInit(GPIOH, gpio_init_structure.Pin);
 8004170:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8004174:	4815      	ldr	r0, [pc, #84]	; (80041cc <BSP_SDRAM_DeInit+0xc0>)
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8004176:	f8d3 2140 	ldr.w	r2, [r3, #320]	; 0x140
 800417a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800417e:	f8c3 2140 	str.w	r2, [r3, #320]	; 0x140
 8004182:	f8d3 3140 	ldr.w	r3, [r3, #320]	; 0x140
 8004186:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800418a:	9301      	str	r3, [sp, #4]
 800418c:	9b01      	ldr	r3, [sp, #4]
    HAL_GPIO_DeInit(GPIOH, gpio_init_structure.Pin);
 800418e:	f001 f809 	bl	80051a4 <HAL_GPIO_DeInit>

    /* GPIOI configuration */
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 |GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_DeInit(GPIOI, gpio_init_structure.Pin);
 8004192:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8004196:	4810      	ldr	r0, [pc, #64]	; (80041d8 <BSP_SDRAM_DeInit+0xcc>)
 8004198:	f001 f804 	bl	80051a4 <HAL_GPIO_DeInit>
    ret = BSP_ERROR_NONE;
 800419c:	4620      	mov	r0, r4
  return ret;
 800419e:	e001      	b.n	80041a4 <BSP_SDRAM_DeInit+0x98>
    ret =  BSP_ERROR_WRONG_PARAM;
 80041a0:	f06f 0001 	mvn.w	r0, #1
}
 80041a4:	b002      	add	sp, #8
 80041a6:	bd10      	pop	{r4, pc}
 80041a8:	52004140 	.word	0x52004140
 80041ac:	2400216c 	.word	0x2400216c
 80041b0:	52000040 	.word	0x52000040
 80041b4:	240021a0 	.word	0x240021a0
 80041b8:	58020000 	.word	0x58020000
 80041bc:	58020c00 	.word	0x58020c00
 80041c0:	58021000 	.word	0x58021000
 80041c4:	58021400 	.word	0x58021400
 80041c8:	58021800 	.word	0x58021800
 80041cc:	58021c00 	.word	0x58021c00
 80041d0:	24002168 	.word	0x24002168
 80041d4:	58024400 	.word	0x58024400
 80041d8:	58022000 	.word	0x58022000

080041dc <MX_SDRAM_BANK2_Init>:
{
 80041dc:	b510      	push	{r4, lr}
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 80041de:	2401      	movs	r4, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 80041e0:	f04f 0e40 	mov.w	lr, #64	; 0x40
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
 80041e4:	6102      	str	r2, [r0, #16]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 80041e6:	f44f 72c0 	mov.w	r2, #384	; 0x180
{
 80041ea:	b088      	sub	sp, #32
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 80041ec:	f8df c044 	ldr.w	ip, [pc, #68]	; 8004234 <MX_SDRAM_BANK2_Init+0x58>
  sdram_timing.ExitSelfRefreshDelay = 7;  /* Exit Self-refresh delay       */
 80041f0:	2302      	movs	r3, #2
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
 80041f2:	e9c0 4102 	strd	r4, r1, [r0, #8]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 80041f6:	e9c0 e205 	strd	lr, r2, [r0, #20]
  hSdram->Init.SDClockPeriod      = FMC_SDRAM_CLOCK_PERIOD_3;
 80041fa:	f44f 6140 	mov.w	r1, #3072	; 0xc00
 80041fe:	2200      	movs	r2, #0
  sdram_timing.RCDDelay             = 2;   /* Row to column delay           */
 8004200:	9307      	str	r3, [sp, #28]
  hSdram->Init.SDClockPeriod      = FMC_SDRAM_CLOCK_PERIOD_3;
 8004202:	e9c0 2107 	strd	r2, r1, [r0, #28]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8004206:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800420a:	e9c0 1209 	strd	r1, r2, [r0, #36]	; 0x24
  sdram_timing.ExitSelfRefreshDelay = 7;  /* Exit Self-refresh delay       */
 800420e:	2207      	movs	r2, #7
  sdram_timing.SelfRefreshTime      = 4;   /* Self refresh time             */
 8004210:	2104      	movs	r1, #4
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
 8004212:	e9c0 c400 	strd	ip, r4, [r0]
  sdram_timing.RowCycleDelay        = 7;  /* Row cycle delay               */
 8004216:	e9cd 1203 	strd	r1, r2, [sp, #12]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 800421a:	4469      	add	r1, sp
  sdram_timing.ExitSelfRefreshDelay = 7;  /* Exit Self-refresh delay       */
 800421c:	e9cd 3201 	strd	r3, r2, [sp, #4]
  sdram_timing.RPDelay              = 2;   /* Row precharge delay           */
 8004220:	e9cd 3305 	strd	r3, r3, [sp, #20]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
 8004224:	f003 ffe4 	bl	80081f0 <HAL_SDRAM_Init>
}
 8004228:	3800      	subs	r0, #0
 800422a:	bf18      	it	ne
 800422c:	2001      	movne	r0, #1
 800422e:	b008      	add	sp, #32
 8004230:	bd10      	pop	{r4, pc}
 8004232:	bf00      	nop
 8004234:	52004140 	.word	0x52004140

08004238 <BSP_SDRAM_InitEx>:
{
 8004238:	b5f0      	push	{r4, r5, r6, r7, lr}
 800423a:	b08f      	sub	sp, #60	; 0x3c
  if(Instance >= SDRAM_INSTANCES_NBR)
 800423c:	2800      	cmp	r0, #0
 800423e:	f040 810d 	bne.w	800445c <BSP_SDRAM_InitEx+0x224>
  __HAL_RCC_FMC_CLK_ENABLE();
 8004242:	4c89      	ldr	r4, [pc, #548]	; (8004468 <BSP_SDRAM_InitEx+0x230>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
 8004244:	2002      	movs	r0, #2
    ActiveDataLength = DataLength;
 8004246:	4f89      	ldr	r7, [pc, #548]	; (800446c <BSP_SDRAM_InitEx+0x234>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8004248:	2603      	movs	r6, #3
    ActiveDataLength = DataLength;
 800424a:	7039      	strb	r1, [r7, #0]
  HAL_GPIO_Init(GPIOA, &gpio_init_structure);
 800424c:	a909      	add	r1, sp, #36	; 0x24
  __HAL_RCC_FMC_CLK_ENABLE();
 800424e:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 8004252:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004256:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
 800425a:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 800425e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004262:	9300      	str	r3, [sp, #0]
 8004264:	9b00      	ldr	r3, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
 8004266:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 800426a:	f043 0301 	orr.w	r3, r3, #1
 800426e:	f8c4 3134 	str.w	r3, [r4, #308]	; 0x134
 8004272:	f8d4 3134 	ldr.w	r3, [r4, #308]	; 0x134
 8004276:	f003 0301 	and.w	r3, r3, #1
 800427a:	9301      	str	r3, [sp, #4]
 800427c:	9b01      	ldr	r3, [sp, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800427e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8004282:	f043 0301 	orr.w	r3, r3, #1
 8004286:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 800428a:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800428e:	f003 0301 	and.w	r3, r3, #1
 8004292:	9302      	str	r3, [sp, #8]
 8004294:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8004296:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 800429a:	f043 0308 	orr.w	r3, r3, #8
 800429e:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 80042a2:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80042a6:	f003 0308 	and.w	r3, r3, #8
 80042aa:	9303      	str	r3, [sp, #12]
 80042ac:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80042ae:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80042b2:	f043 0310 	orr.w	r3, r3, #16
 80042b6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 80042ba:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80042be:	f003 0310 	and.w	r3, r3, #16
 80042c2:	9304      	str	r3, [sp, #16]
 80042c4:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80042c6:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80042ca:	f043 0320 	orr.w	r3, r3, #32
 80042ce:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 80042d2:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80042d6:	f003 0320 	and.w	r3, r3, #32
 80042da:	9305      	str	r3, [sp, #20]
 80042dc:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80042de:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80042e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80042e6:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 80042ea:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80042ee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80042f2:	9306      	str	r3, [sp, #24]
 80042f4:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80042f6:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 80042fa:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80042fe:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 8004302:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8004306:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800430a:	9307      	str	r3, [sp, #28]
 800430c:	9b07      	ldr	r3, [sp, #28]
  gpio_init_structure.Pull      = GPIO_PULLUP;
 800430e:	2301      	movs	r3, #1
 8004310:	e9cd 030a 	strd	r0, r3, [sp, #40]	; 0x28
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8004314:	230c      	movs	r3, #12
  HAL_GPIO_Init(GPIOA, &gpio_init_structure);
 8004316:	4856      	ldr	r0, [pc, #344]	; (8004470 <BSP_SDRAM_InitEx+0x238>)
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8004318:	e9cd 630c 	strd	r6, r3, [sp, #48]	; 0x30
  gpio_init_structure.Pin   = GPIO_PIN_7;
 800431c:	2380      	movs	r3, #128	; 0x80
 800431e:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOA, &gpio_init_structure);
 8004320:	f000 fe56 	bl	8004fd0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8004324:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8004328:	a909      	add	r1, sp, #36	; 0x24
 800432a:	4852      	ldr	r0, [pc, #328]	; (8004474 <BSP_SDRAM_InitEx+0x23c>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800432c:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800432e:	f000 fe4f 	bl	8004fd0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8004332:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8004336:	a909      	add	r1, sp, #36	; 0x24
 8004338:	484f      	ldr	r0, [pc, #316]	; (8004478 <BSP_SDRAM_InitEx+0x240>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800433a:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800433c:	f000 fe48 	bl	8004fd0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8004340:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8004344:	a909      	add	r1, sp, #36	; 0x24
 8004346:	484d      	ldr	r0, [pc, #308]	; (800447c <BSP_SDRAM_InitEx+0x244>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8004348:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 800434a:	f000 fe41 	bl	8004fd0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 |\
 800434e:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8004352:	a909      	add	r1, sp, #36	; 0x24
 8004354:	484a      	ldr	r0, [pc, #296]	; (8004480 <BSP_SDRAM_InitEx+0x248>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 |\
 8004356:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8004358:	f000 fe3a 	bl	8004fd0 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_6 | GPIO_PIN_7;
 800435c:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800435e:	a909      	add	r1, sp, #36	; 0x24
 8004360:	4848      	ldr	r0, [pc, #288]	; (8004484 <BSP_SDRAM_InitEx+0x24c>)
  gpio_init_structure.Pin   = GPIO_PIN_6 | GPIO_PIN_7;
 8004362:	9309      	str	r3, [sp, #36]	; 0x24
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004364:	f000 fe34 	bl	8004fd0 <HAL_GPIO_Init>
  if(ActiveDataLength == SDRAM_DATA_LENGTH_32B)
 8004368:	783b      	ldrb	r3, [r7, #0]
 800436a:	2b01      	cmp	r3, #1
 800436c:	d119      	bne.n	80043a2 <BSP_SDRAM_InitEx+0x16a>
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800436e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004372:	a909      	add	r1, sp, #36	; 0x24
 8004374:	4843      	ldr	r0, [pc, #268]	; (8004484 <BSP_SDRAM_InitEx+0x24c>)
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8004376:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800437a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 800437e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8004382:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004386:	9308      	str	r3, [sp, #32]
 8004388:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Pin   = GPIO_PIN_8 | GPIO_PIN_9 | GPIO_PIN_10 | GPIO_PIN_11 | GPIO_PIN_12 |\
 800438a:	f44f 437f 	mov.w	r3, #65280	; 0xff00
 800438e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8004390:	f000 fe1e 	bl	8004fd0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 |GPIO_PIN_4 |\
 8004394:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8004398:	a909      	add	r1, sp, #36	; 0x24
 800439a:	483b      	ldr	r0, [pc, #236]	; (8004488 <BSP_SDRAM_InitEx+0x250>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 |GPIO_PIN_4 |\
 800439c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800439e:	f000 fe17 	bl	8004fd0 <HAL_GPIO_Init>
  mdma_handle.Init.Request                  = MDMA_REQUEST_SW;
 80043a2:	4c3a      	ldr	r4, [pc, #232]	; (800448c <BSP_SDRAM_InitEx+0x254>)
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 80043a4:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
 80043a8:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
  if(ActiveDataLength == SDRAM_DATA_LENGTH_32B)
 80043ac:	f240 2202 	movw	r2, #514	; 0x202
  __HAL_LINKDMA(hSdram, hmdma, mdma_handle);
 80043b0:	4e37      	ldr	r6, [pc, #220]	; (8004490 <BSP_SDRAM_InitEx+0x258>)
  mdma_handle.Init.TransferTriggerMode      = MDMA_BLOCK_TRANSFER;
 80043b2:	e9c4 1301 	strd	r1, r3, [r4, #4]
  if(ActiveDataLength == SDRAM_DATA_LENGTH_32B)
 80043b6:	783b      	ldrb	r3, [r7, #0]
  mdma_handle.Init.Priority                 = MDMA_PRIORITY_HIGH;
 80043b8:	2180      	movs	r1, #128	; 0x80
  __HAL_LINKDMA(hSdram, hmdma, mdma_handle);
 80043ba:	6334      	str	r4, [r6, #48]	; 0x30
  if(ActiveDataLength == SDRAM_DATA_LENGTH_32B)
 80043bc:	2b01      	cmp	r3, #1
 80043be:	f640 0308 	movw	r3, #2056	; 0x808
  mdma_handle.Init.Priority                 = MDMA_PRIORITY_HIGH;
 80043c2:	60e1      	str	r1, [r4, #12]
  if(ActiveDataLength == SDRAM_DATA_LENGTH_32B)
 80043c4:	bf1b      	ittet	ne
 80043c6:	f44f 7281 	movne.w	r2, #258	; 0x102
 80043ca:	f44f 6381 	movne.w	r3, #1032	; 0x408
 80043ce:	4608      	moveq	r0, r1
 80043d0:	2510      	movne	r5, #16
 80043d2:	bf0c      	ite	eq
 80043d4:	2520      	moveq	r5, #32
 80043d6:	2040      	movne	r0, #64	; 0x40
  mdma_handle.Init.BufferTransferLength     = 128;
 80043d8:	62a1      	str	r1, [r4, #40]	; 0x28
  __HAL_LINKDMA(hSdram, hmdma, mdma_handle);
 80043da:	6426      	str	r6, [r4, #64]	; 0x40
    mdma_handle.Init.DestinationInc           = MDMA_DEST_INC_WORD;
 80043dc:	e9c4 2305 	strd	r2, r3, [r4, #20]
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 80043e0:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
    mdma_handle.Init.DestDataSize             = MDMA_DEST_DATASIZE_WORD;
 80043e4:	e9c4 5007 	strd	r5, r0, [r4, #28]
  mdma_handle.Init.DataAlignment            = MDMA_DATAALIGN_PACKENABLE;
 80043e8:	6263      	str	r3, [r4, #36]	; 0x24
  mdma_handle.Init.SourceBurst              = MDMA_SOURCE_BURST_SINGLE;
 80043ea:	2500      	movs	r5, #0
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
 80043ec:	4b29      	ldr	r3, [pc, #164]	; (8004494 <BSP_SDRAM_InitEx+0x25c>)
  (void)HAL_MDMA_DeInit(&mdma_handle);
 80043ee:	4620      	mov	r0, r4
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
 80043f0:	6023      	str	r3, [r4, #0]
  mdma_handle.Init.DestBurst                = MDMA_DEST_BURST_SINGLE;
 80043f2:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
  mdma_handle.Init.DestBlockAddressOffset   = 0;
 80043f6:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
  (void)HAL_MDMA_DeInit(&mdma_handle);
 80043fa:	f001 fd4e 	bl	8005e9a <HAL_MDMA_DeInit>
  (void)HAL_MDMA_Init(&mdma_handle);
 80043fe:	4620      	mov	r0, r4
 8004400:	f001 fcdc 	bl	8005dbc <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, BSP_SDRAM_IT_PRIORITY, 0);
 8004404:	462a      	mov	r2, r5
 8004406:	210f      	movs	r1, #15
 8004408:	207a      	movs	r0, #122	; 0x7a
 800440a:	f000 f9e9 	bl	80047e0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
 800440e:	207a      	movs	r0, #122	; 0x7a
 8004410:	f000 fa18 	bl	8004844 <HAL_NVIC_EnableIRQ>
    if(ActiveDataLength == SDRAM_DATA_LENGTH_32B)
 8004414:	783b      	ldrb	r3, [r7, #0]
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance], row_bits_num, mem_bus_width) != HAL_OK)
 8004416:	4630      	mov	r0, r6
      mem_bus_width = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8004418:	2b01      	cmp	r3, #1
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance], row_bits_num, mem_bus_width) != HAL_OK)
 800441a:	bf0b      	itete	eq
 800441c:	2220      	moveq	r2, #32
 800441e:	2210      	movne	r2, #16
 8004420:	2104      	moveq	r1, #4
 8004422:	2108      	movne	r1, #8
 8004424:	f7ff feda 	bl	80041dc <MX_SDRAM_BANK2_Init>
 8004428:	b9d8      	cbnz	r0, 8004462 <BSP_SDRAM_InitEx+0x22a>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
 800442a:	491b      	ldr	r1, [pc, #108]	; (8004498 <BSP_SDRAM_InitEx+0x260>)
      pRegMode.RefreshMode     = IS42S32800J_AUTOREFRESH_MODE_CMD;
 800442c:	2208      	movs	r2, #8
 800442e:	2303      	movs	r3, #3
      pRegMode.BurstType       = IS42S32800J_BURST_TYPE_SEQUENTIAL;
 8004430:	6108      	str	r0, [r1, #16]
      pRegMode.RefreshMode     = IS42S32800J_AUTOREFRESH_MODE_CMD;
 8004432:	e9c1 2300 	strd	r2, r3, [r1]
      pRegMode.RefreshRate     = REFRESH_COUNT;
 8004436:	f240 6303 	movw	r3, #1539	; 0x603
      pRegMode.BurstLength     = IS42S32800J_BURST_LENGTH_1;
 800443a:	e9c1 3002 	strd	r3, r0, [r1, #8]
      pRegMode.CASLatency      = IS42S32800J_CAS_LATENCY_3;
 800443e:	2330      	movs	r3, #48	; 0x30
      pRegMode.OperationMode   = IS42S32800J_OPERATING_MODE_STANDARD;
 8004440:	e9c1 3005 	strd	r3, r0, [r1, #20]
      pRegMode.WriteBurstMode  = IS42S32800J_WRITEBURST_MODE_SINGLE;
 8004444:	f44f 7300 	mov.w	r3, #512	; 0x200
      if(IS42S32800J_Init(&hsdram[Instance], &pRegMode) != IS42S32800J_OK)
 8004448:	4630      	mov	r0, r6
      pRegMode.WriteBurstMode  = IS42S32800J_WRITEBURST_MODE_SINGLE;
 800444a:	61cb      	str	r3, [r1, #28]
      if(IS42S32800J_Init(&hsdram[Instance], &pRegMode) != IS42S32800J_OK)
 800444c:	f7fe fe4e 	bl	80030ec <IS42S32800J_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
 8004450:	2800      	cmp	r0, #0
 8004452:	bf18      	it	ne
 8004454:	f06f 0004 	mvnne.w	r0, #4
}
 8004458:	b00f      	add	sp, #60	; 0x3c
 800445a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
 800445c:	f06f 0001 	mvn.w	r0, #1
 8004460:	e7fa      	b.n	8004458 <BSP_SDRAM_InitEx+0x220>
      ret = BSP_ERROR_NO_INIT;
 8004462:	f04f 30ff 	mov.w	r0, #4294967295
 8004466:	e7f7      	b.n	8004458 <BSP_SDRAM_InitEx+0x220>
 8004468:	58024400 	.word	0x58024400
 800446c:	24002168 	.word	0x24002168
 8004470:	58020000 	.word	0x58020000
 8004474:	58020c00 	.word	0x58020c00
 8004478:	58021000 	.word	0x58021000
 800447c:	58021400 	.word	0x58021400
 8004480:	58021800 	.word	0x58021800
 8004484:	58021c00 	.word	0x58021c00
 8004488:	58022000 	.word	0x58022000
 800448c:	24002218 	.word	0x24002218
 8004490:	2400216c 	.word	0x2400216c
 8004494:	52000040 	.word	0x52000040
 8004498:	24002284 	.word	0x24002284

0800449c <BSP_SDRAM_Init>:
  return BSP_SDRAM_InitEx(Instance, SDRAM_DATA_LENGTH_32B);
 800449c:	2101      	movs	r1, #1
 800449e:	f7ff becb 	b.w	8004238 <BSP_SDRAM_InitEx>
	...

080044a4 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
 80044a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044a8:	460c      	mov	r4, r1
 80044aa:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >= TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 80044ac:	2800      	cmp	r0, #0
 80044ae:	d163      	bne.n	8004578 <BSP_TS_Init+0xd4>
 80044b0:	680b      	ldr	r3, [r1, #0]
 80044b2:	1e5a      	subs	r2, r3, #1
 80044b4:	f5b2 7f48 	cmp.w	r2, #800	; 0x320
 80044b8:	d25e      	bcs.n	8004578 <BSP_TS_Init+0xd4>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 80044ba:	684a      	ldr	r2, [r1, #4]
  if((Instance >= TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
 80044bc:	1e51      	subs	r1, r2, #1
 80044be:	f5b1 7ff0 	cmp.w	r1, #480	; 0x1e0
 80044c2:	d259      	bcs.n	8004578 <BSP_TS_Init+0xd4>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
 80044c4:	4293      	cmp	r3, r2
 80044c6:	bf28      	it	cs
 80044c8:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
 80044ca:	68e2      	ldr	r2, [r4, #12]
 80044cc:	429a      	cmp	r2, r3
 80044ce:	d853      	bhi.n	8004578 <BSP_TS_Init+0xd4>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
 80044d0:	2370      	movs	r3, #112	; 0x70
  IOCtx.DeInit      = BSP_I2C2_DeInit;
  IOCtx.ReadReg     = BSP_I2C2_ReadReg;
  IOCtx.WriteReg    = BSP_I2C2_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 80044d2:	4d2b      	ldr	r5, [pc, #172]	; (8004580 <BSP_TS_Init+0xdc>)
  uint32_t ft5336_id       = 0;
 80044d4:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 80044d6:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
 80044d8:	f8ad 3010 	strh.w	r3, [sp, #16]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 80044dc:	4628      	mov	r0, r5
  IOCtx.Init        = BSP_I2C2_Init;
 80044de:	4b29      	ldr	r3, [pc, #164]	; (8004584 <BSP_TS_Init+0xe0>)
 80044e0:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C2_DeInit;
 80044e2:	4b29      	ldr	r3, [pc, #164]	; (8004588 <BSP_TS_Init+0xe4>)
 80044e4:	9303      	str	r3, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C2_ReadReg;
 80044e6:	4b29      	ldr	r3, [pc, #164]	; (800458c <BSP_TS_Init+0xe8>)
 80044e8:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C2_WriteReg;
 80044ea:	4b29      	ldr	r3, [pc, #164]	; (8004590 <BSP_TS_Init+0xec>)
 80044ec:	9305      	str	r3, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
 80044ee:	4b29      	ldr	r3, [pc, #164]	; (8004594 <BSP_TS_Init+0xf0>)
 80044f0:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
 80044f2:	f7fe fd01 	bl	8002ef8 <FT5336_RegisterBusIO>
 80044f6:	b128      	cbz	r0, 8004504 <BSP_TS_Init+0x60>
      ret = BSP_ERROR_NO_INIT;
 80044f8:	f04f 35ff 	mov.w	r5, #4294967295
}
 80044fc:	4628      	mov	r0, r5
 80044fe:	b008      	add	sp, #32
 8004500:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
 8004504:	a901      	add	r1, sp, #4
 8004506:	4628      	mov	r0, r5
 8004508:	f7fe fc5d 	bl	8002dc6 <FT5336_ReadID>
 800450c:	2800      	cmp	r0, #0
 800450e:	d1f3      	bne.n	80044f8 <BSP_TS_Init+0x54>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
 8004510:	9b01      	ldr	r3, [sp, #4]
 8004512:	2b51      	cmp	r3, #81	; 0x51
 8004514:	d1f0      	bne.n	80044f8 <BSP_TS_Init+0x54>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 8004516:	4b20      	ldr	r3, [pc, #128]	; (8004598 <BSP_TS_Init+0xf4>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
 8004518:	4628      	mov	r0, r5
    Ts_CompObj[Instance] = &FT5336Obj;
 800451a:	4f20      	ldr	r7, [pc, #128]	; (800459c <BSP_TS_Init+0xf8>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 800451c:	f8df 8084 	ldr.w	r8, [pc, #132]	; 80045a4 <BSP_TS_Init+0x100>
    Ts_CompObj[Instance] = &FT5336Obj;
 8004520:	603d      	str	r5, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
 8004522:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
 8004526:	681b      	ldr	r3, [r3, #0]
 8004528:	4798      	blx	r3
 800452a:	4605      	mov	r5, r0
 800452c:	2800      	cmp	r0, #0
 800452e:	d1e3      	bne.n	80044f8 <BSP_TS_Init+0x54>
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 8004530:	6823      	ldr	r3, [r4, #0]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004532:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 8004534:	4e1a      	ldr	r6, [pc, #104]	; (80045a0 <BSP_TS_Init+0xfc>)
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004536:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width       = TS_Init->Width;
 8004538:	6033      	str	r3, [r6, #0]
      Ts_Ctx[Instance].Height      = TS_Init->Height;
 800453a:	6863      	ldr	r3, [r4, #4]
 800453c:	6073      	str	r3, [r6, #4]
      Ts_Ctx[Instance].Orientation = TS_Init->Orientation;
 800453e:	68a3      	ldr	r3, [r4, #8]
 8004540:	60b3      	str	r3, [r6, #8]
      Ts_Ctx[Instance].Accuracy    = TS_Init->Accuracy;
 8004542:	68e3      	ldr	r3, [r4, #12]
 8004544:	60f3      	str	r3, [r6, #12]
      if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
 8004546:	f8d8 3000 	ldr.w	r3, [r8]
 800454a:	69db      	ldr	r3, [r3, #28]
 800454c:	4798      	blx	r3
 800454e:	2800      	cmp	r0, #0
 8004550:	db0f      	blt.n	8004572 <BSP_TS_Init+0xce>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8004552:	9b03      	ldr	r3, [sp, #12]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004554:	6822      	ldr	r2, [r4, #0]
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
 8004556:	6133      	str	r3, [r6, #16]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 8004558:	9b04      	ldr	r3, [sp, #16]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 800455a:	6861      	ldr	r1, [r4, #4]
        Ts_Ctx[Instance].MaxY = Capabilities.MaxYl;
 800455c:	6173      	str	r3, [r6, #20]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 800455e:	68e3      	ldr	r3, [r4, #12]
 8004560:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004562:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004564:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 8004566:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 8004568:	61b2      	str	r2, [r6, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
 800456a:	6273      	str	r3, [r6, #36]	; 0x24
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
 800456c:	e9c6 2307 	strd	r2, r3, [r6, #28]
        for(i = 0; i < TS_TOUCH_NBR; i++)
 8004570:	e7c4      	b.n	80044fc <BSP_TS_Init+0x58>
        ret = BSP_ERROR_COMPONENT_FAILURE;
 8004572:	f06f 0504 	mvn.w	r5, #4
 8004576:	e7c1      	b.n	80044fc <BSP_TS_Init+0x58>
    ret = BSP_ERROR_WRONG_PARAM;
 8004578:	f06f 0501 	mvn.w	r5, #1
  return ret;
 800457c:	e7be      	b.n	80044fc <BSP_TS_Init+0x58>
 800457e:	bf00      	nop
 8004580:	240022a4 	.word	0x240022a4
 8004584:	0800376d 	.word	0x0800376d
 8004588:	080036dd 	.word	0x080036dd
 800458c:	08003a51 	.word	0x08003a51
 8004590:	08003a1d 	.word	0x08003a1d
 8004594:	08003a85 	.word	0x08003a85
 8004598:	2400000c 	.word	0x2400000c
 800459c:	240022cc 	.word	0x240022cc
 80045a0:	240022d0 	.word	0x240022d0
 80045a4:	240022f8 	.word	0x240022f8

080045a8 <BSP_TS_GetState>:
{
 80045a8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80045ac:	460c      	mov	r4, r1
  if(Instance >= TS_INSTANCES_NBR)
 80045ae:	2800      	cmp	r0, #0
 80045b0:	d153      	bne.n	800465a <BSP_TS_GetState+0xb2>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
 80045b2:	4b2b      	ldr	r3, [pc, #172]	; (8004660 <BSP_TS_GetState+0xb8>)
 80045b4:	a901      	add	r1, sp, #4
 80045b6:	4a2b      	ldr	r2, [pc, #172]	; (8004664 <BSP_TS_GetState+0xbc>)
 80045b8:	681b      	ldr	r3, [r3, #0]
 80045ba:	6810      	ldr	r0, [r2, #0]
 80045bc:	691b      	ldr	r3, [r3, #16]
 80045be:	4798      	blx	r3
 80045c0:	2800      	cmp	r0, #0
 80045c2:	db47      	blt.n	8004654 <BSP_TS_GetState+0xac>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 80045c4:	4928      	ldr	r1, [pc, #160]	; (8004668 <BSP_TS_GetState+0xc0>)
    else if(state.TouchDetected != 0U)
 80045c6:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
 80045c8:	698e      	ldr	r6, [r1, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
 80045ca:	6a0d      	ldr	r5, [r1, #32]
    else if(state.TouchDetected != 0U)
 80045cc:	2800      	cmp	r0, #0
 80045ce:	d03d      	beq.n	800464c <BSP_TS_GetState+0xa4>
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 80045d0:	f8d1 e008 	ldr.w	lr, [r1, #8]
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 80045d4:	f8d1 8010 	ldr.w	r8, [r1, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
 80045d8:	f01e 0f08 	tst.w	lr, #8
      y_oriented = state.TouchY;
 80045dc:	e9dd c702 	ldrd	ip, r7, [sp, #8]
        x_oriented = state.TouchY;
 80045e0:	bf19      	ittee	ne
 80045e2:	463b      	movne	r3, r7
        y_oriented = state.TouchX;
 80045e4:	4662      	movne	r2, ip
      y_oriented = state.TouchY;
 80045e6:	463a      	moveq	r2, r7
      x_oriented = state.TouchX;
 80045e8:	4663      	moveq	r3, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
 80045ea:	f01e 0f02 	tst.w	lr, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
 80045ee:	bf1c      	itt	ne
 80045f0:	f108 33ff 	addne.w	r3, r8, #4294967295
 80045f4:	eba3 030c 	subne.w	r3, r3, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 80045f8:	f8d1 c014 	ldr.w	ip, [r1, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
 80045fc:	f01e 0f04 	tst.w	lr, #4
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
 8004600:	bf18      	it	ne
 8004602:	ebac 0207 	subne.w	r2, ip, r7
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004606:	680f      	ldr	r7, [r1, #0]
 8004608:	437b      	muls	r3, r7
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 800460a:	684f      	ldr	r7, [r1, #4]
      TS_State->TouchDetected = state.TouchDetected;
 800460c:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 800460e:	437a      	muls	r2, r7
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004610:	68cf      	ldr	r7, [r1, #12]
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 8004612:	fbb3 f3f8 	udiv	r3, r3, r8
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 8004616:	fbb2 f2fc 	udiv	r2, r2, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 800461a:	42b3      	cmp	r3, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
 800461c:	6063      	str	r3, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
 800461e:	60a2      	str	r2, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
 8004620:	bf8c      	ite	hi
 8004622:	eba3 0c06 	subhi.w	ip, r3, r6
 8004626:	eba6 0c03 	subls.w	ip, r6, r3
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
 800462a:	42aa      	cmp	r2, r5
 800462c:	bf8c      	ite	hi
 800462e:	1b50      	subhi	r0, r2, r5
 8004630:	1aa8      	subls	r0, r5, r2
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
 8004632:	4567      	cmp	r7, ip
 8004634:	d301      	bcc.n	800463a <BSP_TS_GetState+0x92>
 8004636:	4287      	cmp	r7, r0
 8004638:	d205      	bcs.n	8004646 <BSP_TS_GetState+0x9e>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
 800463a:	618b      	str	r3, [r1, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
 800463c:	620a      	str	r2, [r1, #32]
  int32_t ret = BSP_ERROR_NONE;
 800463e:	2000      	movs	r0, #0
}
 8004640:	b004      	add	sp, #16
 8004642:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8004646:	e9c4 6501 	strd	r6, r5, [r4, #4]
 800464a:	e7f8      	b.n	800463e <BSP_TS_GetState+0x96>
      TS_State->TouchX = Ts_Ctx[Instance].PreviousX[0];
 800464c:	e9c4 0600 	strd	r0, r6, [r4]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
 8004650:	60a5      	str	r5, [r4, #8]
 8004652:	e7f5      	b.n	8004640 <BSP_TS_GetState+0x98>
      ret = BSP_ERROR_COMPONENT_FAILURE;
 8004654:	f06f 0004 	mvn.w	r0, #4
 8004658:	e7f2      	b.n	8004640 <BSP_TS_GetState+0x98>
    ret = BSP_ERROR_WRONG_PARAM;
 800465a:	f06f 0001 	mvn.w	r0, #1
  return ret;
 800465e:	e7ef      	b.n	8004640 <BSP_TS_GetState+0x98>
 8004660:	240022f8 	.word	0x240022f8
 8004664:	240022cc 	.word	0x240022cc
 8004668:	240022d0 	.word	0x240022d0

0800466c <SystemInit>:
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 800466c:	4a22      	ldr	r2, [pc, #136]	; (80046f8 <SystemInit+0x8c>)
 800466e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8004672:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004676:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 800467a:	4a20      	ldr	r2, [pc, #128]	; (80046fc <SystemInit+0x90>)
 800467c:	6813      	ldr	r3, [r2, #0]
 800467e:	f003 030f 	and.w	r3, r3, #15
 8004682:	2b02      	cmp	r3, #2
 8004684:	d805      	bhi.n	8004692 <SystemInit+0x26>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8004686:	6813      	ldr	r3, [r2, #0]
 8004688:	f023 030f 	bic.w	r3, r3, #15
 800468c:	f043 0303 	orr.w	r3, r3, #3
 8004690:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 8004692:	4b1b      	ldr	r3, [pc, #108]	; (8004700 <SystemInit+0x94>)
 8004694:	681a      	ldr	r2, [r3, #0]
 8004696:	f042 0201 	orr.w	r2, r2, #1
 800469a:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 800469c:	2200      	movs	r2, #0
 800469e:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 80046a0:	4a18      	ldr	r2, [pc, #96]	; (8004704 <SystemInit+0x98>)
 80046a2:	6819      	ldr	r1, [r3, #0]
 80046a4:	400a      	ands	r2, r1
  
   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80046a6:	4915      	ldr	r1, [pc, #84]	; (80046fc <SystemInit+0x90>)
  RCC->CR &= 0xEAF6ED7FU;
 80046a8:	601a      	str	r2, [r3, #0]
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 80046aa:	680a      	ldr	r2, [r1, #0]
 80046ac:	f012 0f0c 	tst.w	r2, #12
 80046b0:	d005      	beq.n	80046be <SystemInit+0x52>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 80046b2:	680a      	ldr	r2, [r1, #0]
 80046b4:	f022 020f 	bic.w	r2, r2, #15
 80046b8:	f042 0203 	orr.w	r2, r2, #3
 80046bc:	600a      	str	r2, [r1, #0]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
#else
  /* Reset CDCFGR1 register */
  RCC->CDCFGR1 = 0x00000000;
 80046be:	2200      	movs	r2, #0

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 80046c0:	4911      	ldr	r1, [pc, #68]	; (8004708 <SystemInit+0x9c>)
  RCC->CDCFGR1 = 0x00000000;
 80046c2:	619a      	str	r2, [r3, #24]
  RCC->CDCFGR2 = 0x00000000;
 80046c4:	61da      	str	r2, [r3, #28]
  RCC->SRDCFGR = 0x00000000;
 80046c6:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x02020200;
 80046c8:	6299      	str	r1, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 80046ca:	4910      	ldr	r1, [pc, #64]	; (800470c <SystemInit+0xa0>)
 80046cc:	62d9      	str	r1, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 80046ce:	4910      	ldr	r1, [pc, #64]	; (8004710 <SystemInit+0xa4>)
 80046d0:	6319      	str	r1, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80046d2:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 80046d4:	6399      	str	r1, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 80046d6:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 80046d8:	6419      	str	r1, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 80046da:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 80046dc:	6819      	ldr	r1, [r3, #0]
 80046de:	f421 2180 	bic.w	r1, r1, #262144	; 0x40000
 80046e2:	6019      	str	r1, [r3, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 80046e4:	661a      	str	r2, [r3, #96]	; 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 80046e6:	f243 02d2 	movw	r2, #12498	; 0x30d2
 80046ea:	4b0a      	ldr	r3, [pc, #40]	; (8004714 <SystemInit+0xa8>)
 80046ec:	601a      	str	r2, [r3, #0]

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal AXI-RAM */
#else
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80046ee:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80046f2:	4b01      	ldr	r3, [pc, #4]	; (80046f8 <SystemInit+0x8c>)
 80046f4:	609a      	str	r2, [r3, #8]
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
 80046f6:	4770      	bx	lr
 80046f8:	e000ed00 	.word	0xe000ed00
 80046fc:	52002000 	.word	0x52002000
 8004700:	58024400 	.word	0x58024400
 8004704:	eaf6ed7f 	.word	0xeaf6ed7f
 8004708:	02020200 	.word	0x02020200
 800470c:	01ff0000 	.word	0x01ff0000
 8004710:	01010280 	.word	0x01010280
 8004714:	52004000 	.word	0x52004000

08004718 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004718:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800471a:	2003      	movs	r0, #3
 800471c:	f000 f84e 	bl	80047bc <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
 8004720:	f002 fdcc 	bl	80072bc <HAL_RCC_GetSysClockFreq>
 8004724:	490f      	ldr	r1, [pc, #60]	; (8004764 <HAL_Init+0x4c>)
 8004726:	4a10      	ldr	r2, [pc, #64]	; (8004768 <HAL_Init+0x50>)
 8004728:	698b      	ldr	r3, [r1, #24]
 800472a:	f3c3 2303 	ubfx	r3, r3, #8, #4
 800472e:	5cd3      	ldrb	r3, [r2, r3]
 8004730:	f003 031f 	and.w	r3, r3, #31
 8004734:	40d8      	lsrs	r0, r3

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
#else
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RCC_CDCFGR1_HPRE_Pos]) & 0x1FU));
 8004736:	698b      	ldr	r3, [r1, #24]
 8004738:	f003 030f 	and.w	r3, r3, #15
 800473c:	5cd3      	ldrb	r3, [r2, r3]
 800473e:	4a0b      	ldr	r2, [pc, #44]	; (800476c <HAL_Init+0x54>)
 8004740:	f003 031f 	and.w	r3, r3, #31
 8004744:	fa20 f303 	lsr.w	r3, r0, r3
 8004748:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 800474a:	4b09      	ldr	r3, [pc, #36]	; (8004770 <HAL_Init+0x58>)
 800474c:	6018      	str	r0, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 800474e:	2000      	movs	r0, #0
 8004750:	f7fc fc1c 	bl	8000f8c <HAL_InitTick>
 8004754:	4604      	mov	r4, r0
 8004756:	b918      	cbnz	r0, 8004760 <HAL_Init+0x48>
  {
    return HAL_ERROR;
  }

  /* Init the low level hardware */
  HAL_MspInit();
 8004758:	f7fc f92c 	bl	80009b4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 800475c:	4620      	mov	r0, r4
 800475e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004760:	2401      	movs	r4, #1
 8004762:	e7fb      	b.n	800475c <HAL_Init+0x44>
 8004764:	58024400 	.word	0x58024400
 8004768:	0801ecd0 	.word	0x0801ecd0
 800476c:	24000040 	.word	0x24000040
 8004770:	2400003c 	.word	0x2400003c

08004774 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8004774:	4a03      	ldr	r2, [pc, #12]	; (8004784 <HAL_IncTick+0x10>)
 8004776:	4b04      	ldr	r3, [pc, #16]	; (8004788 <HAL_IncTick+0x14>)
 8004778:	6811      	ldr	r1, [r2, #0]
 800477a:	781b      	ldrb	r3, [r3, #0]
 800477c:	440b      	add	r3, r1
 800477e:	6013      	str	r3, [r2, #0]
}
 8004780:	4770      	bx	lr
 8004782:	bf00      	nop
 8004784:	240022fc 	.word	0x240022fc
 8004788:	24000044 	.word	0x24000044

0800478c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800478c:	4b01      	ldr	r3, [pc, #4]	; (8004794 <HAL_GetTick+0x8>)
 800478e:	6818      	ldr	r0, [r3, #0]
}
 8004790:	4770      	bx	lr
 8004792:	bf00      	nop
 8004794:	240022fc 	.word	0x240022fc

08004798 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004798:	b538      	push	{r3, r4, r5, lr}
 800479a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800479c:	f7ff fff6 	bl	800478c <HAL_GetTick>
 80047a0:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80047a2:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80047a4:	bf1e      	ittt	ne
 80047a6:	4b04      	ldrne	r3, [pc, #16]	; (80047b8 <HAL_Delay+0x20>)
 80047a8:	781b      	ldrbne	r3, [r3, #0]
 80047aa:	18e4      	addne	r4, r4, r3
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80047ac:	f7ff ffee 	bl	800478c <HAL_GetTick>
 80047b0:	1b43      	subs	r3, r0, r5
 80047b2:	42a3      	cmp	r3, r4
 80047b4:	d3fa      	bcc.n	80047ac <HAL_Delay+0x14>
  {
  }
}
 80047b6:	bd38      	pop	{r3, r4, r5, pc}
 80047b8:	24000044 	.word	0x24000044

080047bc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80047bc:	4907      	ldr	r1, [pc, #28]	; (80047dc <HAL_NVIC_SetPriorityGrouping+0x20>)
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80047be:	0203      	lsls	r3, r0, #8
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80047c0:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80047c2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80047c6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80047ca:	0412      	lsls	r2, r2, #16
 80047cc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80047ce:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80047d0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80047d4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80047d8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80047da:	4770      	bx	lr
 80047dc:	e000ed00 	.word	0xe000ed00

080047e0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80047e0:	4b16      	ldr	r3, [pc, #88]	; (800483c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80047e2:	b530      	push	{r4, r5, lr}
 80047e4:	68dc      	ldr	r4, [r3, #12]
 80047e6:	f3c4 2402 	ubfx	r4, r4, #8, #3
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80047ea:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80047ee:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80047f0:	2b04      	cmp	r3, #4
 80047f2:	bf28      	it	cs
 80047f4:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80047f6:	2d06      	cmp	r5, #6
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80047f8:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80047fc:	bf8c      	ite	hi
 80047fe:	3c03      	subhi	r4, #3
 8004800:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004802:	fa05 f303 	lsl.w	r3, r5, r3
  if ((int32_t)(IRQn) >= 0)
 8004806:	2800      	cmp	r0, #0
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004808:	fa05 f504 	lsl.w	r5, r5, r4
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800480c:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004810:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004814:	fa03 f304 	lsl.w	r3, r3, r4
 8004818:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800481c:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8004820:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
 8004822:	db06      	blt.n	8004832 <HAL_NVIC_SetPriority+0x52>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004824:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8004828:	f500 4061 	add.w	r0, r0, #57600	; 0xe100
 800482c:	f880 3300 	strb.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8004830:	bd30      	pop	{r4, r5, pc}
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004832:	f000 000f 	and.w	r0, r0, #15
 8004836:	4a02      	ldr	r2, [pc, #8]	; (8004840 <HAL_NVIC_SetPriority+0x60>)
 8004838:	5413      	strb	r3, [r2, r0]
 800483a:	e7f9      	b.n	8004830 <HAL_NVIC_SetPriority+0x50>
 800483c:	e000ed00 	.word	0xe000ed00
 8004840:	e000ed14 	.word	0xe000ed14

08004844 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004844:	2800      	cmp	r0, #0
 8004846:	db07      	blt.n	8004858 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004848:	2301      	movs	r3, #1
 800484a:	0941      	lsrs	r1, r0, #5
 800484c:	f000 001f 	and.w	r0, r0, #31
 8004850:	4a02      	ldr	r2, [pc, #8]	; (800485c <HAL_NVIC_EnableIRQ+0x18>)
 8004852:	4083      	lsls	r3, r0
 8004854:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8004858:	4770      	bx	lr
 800485a:	bf00      	nop
 800485c:	e000e100 	.word	0xe000e100

08004860 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8004860:	2800      	cmp	r0, #0
 8004862:	db0c      	blt.n	800487e <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004864:	0943      	lsrs	r3, r0, #5
 8004866:	2201      	movs	r2, #1
 8004868:	f000 001f 	and.w	r0, r0, #31
 800486c:	4904      	ldr	r1, [pc, #16]	; (8004880 <HAL_NVIC_DisableIRQ+0x20>)
 800486e:	3320      	adds	r3, #32
 8004870:	4082      	lsls	r2, r0
 8004872:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8004876:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800487a:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800487e:	4770      	bx	lr
 8004880:	e000e100 	.word	0xe000e100

08004884 <HAL_MPU_Disable>:
  __ASM volatile ("dmb 0xF":::"memory");
 8004884:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004888:	4b04      	ldr	r3, [pc, #16]	; (800489c <HAL_MPU_Disable+0x18>)
 800488a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800488c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8004890:	625a      	str	r2, [r3, #36]	; 0x24

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8004892:	2200      	movs	r2, #0
 8004894:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
}
 8004898:	4770      	bx	lr
 800489a:	bf00      	nop
 800489c:	e000ed00 	.word	0xe000ed00

080048a0 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 80048a0:	4b06      	ldr	r3, [pc, #24]	; (80048bc <HAL_MPU_Enable+0x1c>)
 80048a2:	f040 0001 	orr.w	r0, r0, #1
 80048a6:	f8c3 0094 	str.w	r0, [r3, #148]	; 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 80048aa:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80048ac:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80048b0:	625a      	str	r2, [r3, #36]	; 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 80048b2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80048b6:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 80048ba:	4770      	bx	lr
 80048bc:	e000ed00 	.word	0xe000ed00

080048c0 <HAL_MPU_ConfigRegion>:
  /* Check the parameters */
  assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
  assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 80048c0:	7843      	ldrb	r3, [r0, #1]
 80048c2:	4a14      	ldr	r2, [pc, #80]	; (8004914 <HAL_MPU_ConfigRegion+0x54>)
{
 80048c4:	b510      	push	{r4, lr}
  MPU->RNR = MPU_Init->Number;
 80048c6:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98

  if ((MPU_Init->Enable) != 0UL)
 80048ca:	7801      	ldrb	r1, [r0, #0]
 80048cc:	b1e9      	cbz	r1, 800490a <HAL_MPU_ConfigRegion+0x4a>
    assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
    assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
    assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
    assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

    MPU->RBAR = MPU_Init->BaseAddress;
 80048ce:	6843      	ldr	r3, [r0, #4]
 80048d0:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80048d4:	7ac3      	ldrb	r3, [r0, #11]
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80048d6:	7b04      	ldrb	r4, [r0, #12]
                ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 80048d8:	061b      	lsls	r3, r3, #24
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80048da:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80048de:	430b      	orrs	r3, r1
                ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 80048e0:	7a81      	ldrb	r1, [r0, #10]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80048e2:	ea43 43c1 	orr.w	r3, r3, r1, lsl #19
                ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 80048e6:	7b41      	ldrb	r1, [r0, #13]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80048e8:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
                ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 80048ec:	7b81      	ldrb	r1, [r0, #14]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80048ee:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
                ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 80048f2:	7bc1      	ldrb	r1, [r0, #15]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80048f4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
                ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 80048f8:	7a41      	ldrb	r1, [r0, #9]
                ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 80048fa:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80048fe:	7a01      	ldrb	r1, [r0, #8]
 8004900:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
    MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004904:	f8c2 30a0 	str.w	r3, [r2, #160]	; 0xa0
  else
  {
    MPU->RBAR = 0x00;
    MPU->RASR = 0x00;
  }
}
 8004908:	bd10      	pop	{r4, pc}
    MPU->RBAR = 0x00;
 800490a:	f8c2 109c 	str.w	r1, [r2, #156]	; 0x9c
    MPU->RASR = 0x00;
 800490e:	f8c2 10a0 	str.w	r1, [r2, #160]	; 0xa0
}
 8004912:	e7f9      	b.n	8004908 <HAL_MPU_ConfigRegion+0x48>
 8004914:	e000ed00 	.word	0xe000ed00

08004918 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004918:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800491a:	4604      	mov	r4, r0
 800491c:	b908      	cbnz	r0, 8004922 <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 800491e:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 8004920:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004922:	7f43      	ldrb	r3, [r0, #29]
 8004924:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004928:	b913      	cbnz	r3, 8004930 <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 800492a:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 800492c:	f7fc f85a 	bl	80009e4 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 8004930:	2302      	movs	r3, #2
 8004932:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004934:	7923      	ldrb	r3, [r4, #4]
 8004936:	b9e3      	cbnz	r3, 8004972 <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004938:	6823      	ldr	r3, [r4, #0]
 800493a:	4a13      	ldr	r2, [pc, #76]	; (8004988 <HAL_CRC_Init+0x70>)
 800493c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 800493e:	689a      	ldr	r2, [r3, #8]
 8004940:	f022 0218 	bic.w	r2, r2, #24
 8004944:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004946:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004948:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 800494a:	b9d2      	cbnz	r2, 8004982 <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 800494c:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004950:	611a      	str	r2, [r3, #16]
  return HAL_OK;
 8004952:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004954:	689a      	ldr	r2, [r3, #8]
 8004956:	6961      	ldr	r1, [r4, #20]
 8004958:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800495c:	430a      	orrs	r2, r1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800495e:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004960:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004962:	689a      	ldr	r2, [r3, #8]
 8004964:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004968:	430a      	orrs	r2, r1
 800496a:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 800496c:	2301      	movs	r3, #1
 800496e:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 8004970:	e7d6      	b.n	8004920 <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004972:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004976:	4620      	mov	r0, r4
 8004978:	f000 f808 	bl	800498c <HAL_CRCEx_Polynomial_Set>
 800497c:	2800      	cmp	r0, #0
 800497e:	d0e2      	beq.n	8004946 <HAL_CRC_Init+0x2e>
 8004980:	e7cd      	b.n	800491e <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004982:	6922      	ldr	r2, [r4, #16]
 8004984:	e7e4      	b.n	8004950 <HAL_CRC_Init+0x38>
 8004986:	bf00      	nop
 8004988:	04c11db7 	.word	0x04c11db7

0800498c <HAL_CRCEx_Polynomial_Set>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 800498c:	231f      	movs	r3, #31
{
 800498e:	b510      	push	{r4, lr}
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8004990:	3b01      	subs	r3, #1
 8004992:	d31c      	bcc.n	80049ce <HAL_CRCEx_Polynomial_Set+0x42>
 8004994:	fa21 f403 	lsr.w	r4, r1, r3
 8004998:	07e4      	lsls	r4, r4, #31
 800499a:	d5f9      	bpl.n	8004990 <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 800499c:	2a10      	cmp	r2, #16
 800499e:	d012      	beq.n	80049c6 <HAL_CRCEx_Polynomial_Set+0x3a>
 80049a0:	d804      	bhi.n	80049ac <HAL_CRCEx_Polynomial_Set+0x20>
 80049a2:	b13a      	cbz	r2, 80049b4 <HAL_CRCEx_Polynomial_Set+0x28>
 80049a4:	2a08      	cmp	r2, #8
 80049a6:	d010      	beq.n	80049ca <HAL_CRCEx_Polynomial_Set+0x3e>
      }
      break;
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
      {
        status =   HAL_ERROR;
 80049a8:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 80049aa:	e00b      	b.n	80049c4 <HAL_CRCEx_Polynomial_Set+0x38>
  switch (PolyLength)
 80049ac:	2a18      	cmp	r2, #24
 80049ae:	d1fb      	bne.n	80049a8 <HAL_CRCEx_Polynomial_Set+0x1c>
      if (msb >= HAL_CRC_LENGTH_7B)
 80049b0:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 80049b2:	d8f9      	bhi.n	80049a8 <HAL_CRCEx_Polynomial_Set+0x1c>
    WRITE_REG(hcrc->Instance->POL, Pol);
 80049b4:	6800      	ldr	r0, [r0, #0]
 80049b6:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80049b8:	6883      	ldr	r3, [r0, #8]
 80049ba:	f023 0318 	bic.w	r3, r3, #24
 80049be:	4313      	orrs	r3, r2
 80049c0:	6083      	str	r3, [r0, #8]
 80049c2:	2000      	movs	r0, #0
}
 80049c4:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 80049c6:	2b07      	cmp	r3, #7
 80049c8:	e7f3      	b.n	80049b2 <HAL_CRCEx_Polynomial_Set+0x26>
      if (msb >= HAL_CRC_LENGTH_16B)
 80049ca:	2b0f      	cmp	r3, #15
 80049cc:	e7f1      	b.n	80049b2 <HAL_CRCEx_Polynomial_Set+0x26>
  switch (PolyLength)
 80049ce:	2a00      	cmp	r2, #0
 80049d0:	d1ea      	bne.n	80049a8 <HAL_CRCEx_Polynomial_Set+0x1c>
 80049d2:	e7ef      	b.n	80049b4 <HAL_CRCEx_Polynomial_Set+0x28>

080049d4 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream.
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80049d4:	6803      	ldr	r3, [r0, #0]
 80049d6:	4a23      	ldr	r2, [pc, #140]	; (8004a64 <DMA_CalcBaseAndBitshift+0x90>)
 80049d8:	4293      	cmp	r3, r2
{
 80049da:	b510      	push	{r4, lr}
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 80049dc:	d032      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 80049de:	3218      	adds	r2, #24
 80049e0:	4293      	cmp	r3, r2
 80049e2:	d02f      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 80049e4:	3218      	adds	r2, #24
 80049e6:	4293      	cmp	r3, r2
 80049e8:	d02c      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 80049ea:	3218      	adds	r2, #24
 80049ec:	4293      	cmp	r3, r2
 80049ee:	d029      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 80049f0:	3218      	adds	r2, #24
 80049f2:	4293      	cmp	r3, r2
 80049f4:	d026      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 80049f6:	3218      	adds	r2, #24
 80049f8:	4293      	cmp	r3, r2
 80049fa:	d023      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 80049fc:	3218      	adds	r2, #24
 80049fe:	4293      	cmp	r3, r2
 8004a00:	d020      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a02:	3218      	adds	r2, #24
 8004a04:	4293      	cmp	r3, r2
 8004a06:	d01d      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a08:	f502 7256 	add.w	r2, r2, #856	; 0x358
 8004a0c:	4293      	cmp	r3, r2
 8004a0e:	d019      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a10:	3218      	adds	r2, #24
 8004a12:	4293      	cmp	r3, r2
 8004a14:	d016      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a16:	3218      	adds	r2, #24
 8004a18:	4293      	cmp	r3, r2
 8004a1a:	d013      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a1c:	3218      	adds	r2, #24
 8004a1e:	4293      	cmp	r3, r2
 8004a20:	d010      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a22:	3218      	adds	r2, #24
 8004a24:	4293      	cmp	r3, r2
 8004a26:	d00d      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a28:	3218      	adds	r2, #24
 8004a2a:	4293      	cmp	r3, r2
 8004a2c:	d00a      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a2e:	3218      	adds	r2, #24
 8004a30:	4293      	cmp	r3, r2
 8004a32:	d007      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
 8004a34:	3218      	adds	r2, #24
 8004a36:	4293      	cmp	r3, r2
 8004a38:	d004      	beq.n	8004a44 <DMA_CalcBaseAndBitshift+0x70>
    }
  }
  else /* BDMA instance(s) */
  {
    /* return pointer to ISR and IFCR */
    hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0xFFU));
 8004a3a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
      hdma->StreamBaseAddress = ((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU));
 8004a3e:	6583      	str	r3, [r0, #88]	; 0x58
  }

  return hdma->StreamBaseAddress;
}
 8004a40:	4618      	mov	r0, r3
 8004a42:	bd10      	pop	{r4, pc}
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8004a44:	b2da      	uxtb	r2, r3
 8004a46:	2118      	movs	r1, #24
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 8004a48:	4c07      	ldr	r4, [pc, #28]	; (8004a68 <DMA_CalcBaseAndBitshift+0x94>)
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 8004a4a:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8004a4e:	3a10      	subs	r2, #16
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 8004a50:	f023 0303 	bic.w	r3, r3, #3
    if (stream_number > 3U)
 8004a54:	2a5f      	cmp	r2, #95	; 0x5f
    uint32_t stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8004a56:	fbb2 f1f1 	udiv	r1, r2, r1
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 8004a5a:	5c61      	ldrb	r1, [r4, r1]
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 8004a5c:	bf88      	it	hi
 8004a5e:	3304      	addhi	r3, #4
    hdma->StreamIndex = flagBitshiftOffset[stream_number & 0x7U];
 8004a60:	65c1      	str	r1, [r0, #92]	; 0x5c
      hdma->StreamBaseAddress = (((uint32_t)((uint32_t*)hdma->Instance) & (uint32_t)(~0x3FFU)) + 4U);
 8004a62:	e7ec      	b.n	8004a3e <DMA_CalcBaseAndBitshift+0x6a>
 8004a64:	40020010 	.word	0x40020010
 8004a68:	0801ece0 	.word	0x0801ece0

08004a6c <DMA_CalcDMAMUXChannelBaseAndMask>:
  * @retval HAL status
  */
static void DMA_CalcDMAMUXChannelBaseAndMask(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number;
  uint32_t stream_baseaddress = (uint32_t)((uint32_t*)hdma->Instance);
 8004a6c:	6802      	ldr	r2, [r0, #0]

  if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8004a6e:	4921      	ldr	r1, [pc, #132]	; (8004af4 <DMA_CalcDMAMUXChannelBaseAndMask+0x88>)
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
  }
  else
  {
    /* DMA1/DMA2 Streams are connected to DMAMUX1 channels */
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8004a70:	b2d3      	uxtb	r3, r2
  if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8004a72:	428a      	cmp	r2, r1
 8004a74:	d028      	beq.n	8004ac8 <DMA_CalcDMAMUXChannelBaseAndMask+0x5c>
 8004a76:	3114      	adds	r1, #20
 8004a78:	428a      	cmp	r2, r1
 8004a7a:	d025      	beq.n	8004ac8 <DMA_CalcDMAMUXChannelBaseAndMask+0x5c>
 8004a7c:	3114      	adds	r1, #20
 8004a7e:	428a      	cmp	r2, r1
 8004a80:	d022      	beq.n	8004ac8 <DMA_CalcDMAMUXChannelBaseAndMask+0x5c>
 8004a82:	3114      	adds	r1, #20
 8004a84:	428a      	cmp	r2, r1
 8004a86:	d01f      	beq.n	8004ac8 <DMA_CalcDMAMUXChannelBaseAndMask+0x5c>
 8004a88:	3114      	adds	r1, #20
 8004a8a:	428a      	cmp	r2, r1
 8004a8c:	d01c      	beq.n	8004ac8 <DMA_CalcDMAMUXChannelBaseAndMask+0x5c>
 8004a8e:	3114      	adds	r1, #20
 8004a90:	428a      	cmp	r2, r1
 8004a92:	d019      	beq.n	8004ac8 <DMA_CalcDMAMUXChannelBaseAndMask+0x5c>
 8004a94:	3114      	adds	r1, #20
 8004a96:	428a      	cmp	r2, r1
 8004a98:	d016      	beq.n	8004ac8 <DMA_CalcDMAMUXChannelBaseAndMask+0x5c>
 8004a9a:	3114      	adds	r1, #20
 8004a9c:	428a      	cmp	r2, r1
 8004a9e:	d013      	beq.n	8004ac8 <DMA_CalcDMAMUXChannelBaseAndMask+0x5c>
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 16U) / 24U;
 8004aa0:	2118      	movs	r1, #24
 8004aa2:	3b10      	subs	r3, #16
 8004aa4:	fbb3 f3f1 	udiv	r3, r3, r1

    if((stream_baseaddress <= ((uint32_t)DMA2_Stream7) ) && \
 8004aa8:	4913      	ldr	r1, [pc, #76]	; (8004af8 <DMA_CalcDMAMUXChannelBaseAndMask+0x8c>)
 8004aaa:	4411      	add	r1, r2
 8004aac:	29a8      	cmp	r1, #168	; 0xa8
 8004aae:	d91e      	bls.n	8004aee <DMA_CalcDMAMUXChannelBaseAndMask+0x82>
       (stream_baseaddress >= ((uint32_t)DMA2_Stream0)))
    {
      stream_number += 8U;
    }
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 8004ab0:	f103 5280 	add.w	r2, r3, #268435456	; 0x10000000
    hdma->DMAmuxChannelStatus = DMAMUX1_ChannelStatus;
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8004ab4:	2101      	movs	r1, #1
 8004ab6:	f003 031f 	and.w	r3, r3, #31
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 8004aba:	f502 4202 	add.w	r2, r2, #33280	; 0x8200
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8004abe:	fa01 f303 	lsl.w	r3, r1, r3
 8004ac2:	490e      	ldr	r1, [pc, #56]	; (8004afc <DMA_CalcDMAMUXChannelBaseAndMask+0x90>)
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_Channel0) + (stream_number * 4U)));
 8004ac4:	0092      	lsls	r2, r2, #2
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8004ac6:	e00e      	b.n	8004ae6 <DMA_CalcDMAMUXChannelBaseAndMask+0x7a>
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 8U) / 20U;
 8004ac8:	2214      	movs	r2, #20
 8004aca:	3b08      	subs	r3, #8
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8004acc:	2101      	movs	r1, #1
    stream_number = (((uint32_t)((uint32_t*)hdma->Instance) & 0xFFU) - 8U) / 20U;
 8004ace:	fbb3 f3f2 	udiv	r3, r3, r2
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 8004ad2:	f103 52b0 	add.w	r2, r3, #369098752	; 0x16000000
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8004ad6:	f003 031f 	and.w	r3, r3, #31
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 8004ada:	f502 4216 	add.w	r2, r2, #38400	; 0x9600
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8004ade:	fa01 f303 	lsl.w	r3, r1, r3
 8004ae2:	4907      	ldr	r1, [pc, #28]	; (8004b00 <DMA_CalcDMAMUXChannelBaseAndMask+0x94>)
    hdma->DMAmuxChannel = (DMAMUX_Channel_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_Channel0) + (stream_number * 4U)));
 8004ae4:	0092      	lsls	r2, r2, #2
    hdma->DMAmuxChannelStatusMask = 1UL << (stream_number & 0x1FU);
 8004ae6:	6683      	str	r3, [r0, #104]	; 0x68
    hdma->DMAmuxChannelStatus = DMAMUX2_ChannelStatus;
 8004ae8:	e9c0 2118 	strd	r2, r1, [r0, #96]	; 0x60
  }
}
 8004aec:	4770      	bx	lr
      stream_number += 8U;
 8004aee:	3308      	adds	r3, #8
 8004af0:	e7de      	b.n	8004ab0 <DMA_CalcDMAMUXChannelBaseAndMask+0x44>
 8004af2:	bf00      	nop
 8004af4:	58025408 	.word	0x58025408
 8004af8:	bffdfbf0 	.word	0xbffdfbf0
 8004afc:	40020880 	.word	0x40020880
 8004b00:	58025880 	.word	0x58025880

08004b04 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
  *                     the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
static void DMA_CalcDMAMUXRequestGenBaseAndMask(DMA_HandleTypeDef *hdma)
{
  uint32_t request =  hdma->Init.Request & DMAMUX_CxCR_DMAREQ_ID;
 8004b04:	7902      	ldrb	r2, [r0, #4]

  if((request >= DMA_REQUEST_GENERATOR0) && (request <= DMA_REQUEST_GENERATOR7))
 8004b06:	1e51      	subs	r1, r2, #1
 8004b08:	2907      	cmp	r1, #7
{
 8004b0a:	b510      	push	{r4, lr}
  if((request >= DMA_REQUEST_GENERATOR0) && (request <= DMA_REQUEST_GENERATOR7))
 8004b0c:	d821      	bhi.n	8004b52 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x4e>
  {
    if(IS_BDMA_CHANNEL_DMAMUX_INSTANCE(hdma->Instance) != 0U)
 8004b0e:	6803      	ldr	r3, [r0, #0]
 8004b10:	4c13      	ldr	r4, [pc, #76]	; (8004b60 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x5c>)
 8004b12:	42a3      	cmp	r3, r4
 8004b14:	d01e      	beq.n	8004b54 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x50>
 8004b16:	3414      	adds	r4, #20
 8004b18:	42a3      	cmp	r3, r4
 8004b1a:	d01b      	beq.n	8004b54 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x50>
 8004b1c:	3414      	adds	r4, #20
 8004b1e:	42a3      	cmp	r3, r4
 8004b20:	d018      	beq.n	8004b54 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x50>
 8004b22:	3414      	adds	r4, #20
 8004b24:	42a3      	cmp	r3, r4
 8004b26:	d015      	beq.n	8004b54 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x50>
 8004b28:	3414      	adds	r4, #20
 8004b2a:	42a3      	cmp	r3, r4
 8004b2c:	d012      	beq.n	8004b54 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x50>
 8004b2e:	3414      	adds	r4, #20
 8004b30:	42a3      	cmp	r3, r4
 8004b32:	d00f      	beq.n	8004b54 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x50>
 8004b34:	3414      	adds	r4, #20
 8004b36:	42a3      	cmp	r3, r4
 8004b38:	d00c      	beq.n	8004b54 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x50>
 8004b3a:	3414      	adds	r4, #20
 8004b3c:	42a3      	cmp	r3, r4
 8004b3e:	d009      	beq.n	8004b54 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x50>
      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
    }
    else
    {
      /* DMA1 and DMA2 Streams use DMAMUX1 request generator blocks */
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX1_RequestGenerator0) + ((request - 1U) * 4U)));
 8004b40:	4b08      	ldr	r3, [pc, #32]	; (8004b64 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x60>)
 8004b42:	4413      	add	r3, r2
 8004b44:	4a08      	ldr	r2, [pc, #32]	; (8004b68 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x64>)
 8004b46:	009b      	lsls	r3, r3, #2
      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
 8004b48:	e9c0 321b 	strd	r3, r2, [r0, #108]	; 0x6c

      hdma->DMAmuxRequestGenStatus = DMAMUX1_RequestGenStatus;
    }

    hdma->DMAmuxRequestGenStatusMask = 1UL << (request - 1U);
 8004b4c:	2301      	movs	r3, #1
 8004b4e:	408b      	lsls	r3, r1
 8004b50:	6743      	str	r3, [r0, #116]	; 0x74
  }
}
 8004b52:	bd10      	pop	{r4, pc}
      hdma->DMAmuxRequestGen = (DMAMUX_RequestGen_TypeDef *)((uint32_t)(((uint32_t)DMAMUX2_RequestGenerator0) + ((request - 1U) * 4U)));
 8004b54:	4b05      	ldr	r3, [pc, #20]	; (8004b6c <DMA_CalcDMAMUXRequestGenBaseAndMask+0x68>)
 8004b56:	4413      	add	r3, r2
 8004b58:	4a05      	ldr	r2, [pc, #20]	; (8004b70 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>)
 8004b5a:	009b      	lsls	r3, r3, #2
      hdma->DMAmuxRequestGenStatus = DMAMUX2_RequestGenStatus;
 8004b5c:	e7f4      	b.n	8004b48 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x44>
 8004b5e:	bf00      	nop
 8004b60:	58025408 	.word	0x58025408
 8004b64:	1000823f 	.word	0x1000823f
 8004b68:	40020940 	.word	0x40020940
 8004b6c:	1600963f 	.word	0x1600963f
 8004b70:	58025940 	.word	0x58025940

08004b74 <HAL_DMA_DeInit>:
{
 8004b74:	b570      	push	{r4, r5, r6, lr}
  if(hdma == NULL)
 8004b76:	4605      	mov	r5, r0
 8004b78:	b908      	cbnz	r0, 8004b7e <HAL_DMA_DeInit+0xa>
    return HAL_ERROR;
 8004b7a:	2001      	movs	r0, #1
}
 8004b7c:	bd70      	pop	{r4, r5, r6, pc}
  __HAL_DMA_DISABLE(hdma);
 8004b7e:	6804      	ldr	r4, [r0, #0]
 8004b80:	4ea9      	ldr	r6, [pc, #676]	; (8004e28 <HAL_DMA_DeInit+0x2b4>)
 8004b82:	42b4      	cmp	r4, r6
 8004b84:	d02d      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004b86:	4ba9      	ldr	r3, [pc, #676]	; (8004e2c <HAL_DMA_DeInit+0x2b8>)
 8004b88:	429c      	cmp	r4, r3
 8004b8a:	d02a      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004b8c:	3318      	adds	r3, #24
 8004b8e:	429c      	cmp	r4, r3
 8004b90:	d027      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004b92:	3318      	adds	r3, #24
 8004b94:	429c      	cmp	r4, r3
 8004b96:	d024      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004b98:	3318      	adds	r3, #24
 8004b9a:	429c      	cmp	r4, r3
 8004b9c:	d021      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004b9e:	3318      	adds	r3, #24
 8004ba0:	429c      	cmp	r4, r3
 8004ba2:	d01e      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004ba4:	3318      	adds	r3, #24
 8004ba6:	429c      	cmp	r4, r3
 8004ba8:	d01b      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004baa:	3318      	adds	r3, #24
 8004bac:	429c      	cmp	r4, r3
 8004bae:	d018      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004bb0:	f503 7356 	add.w	r3, r3, #856	; 0x358
 8004bb4:	429c      	cmp	r4, r3
 8004bb6:	d014      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004bb8:	3318      	adds	r3, #24
 8004bba:	429c      	cmp	r4, r3
 8004bbc:	d011      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004bbe:	3318      	adds	r3, #24
 8004bc0:	429c      	cmp	r4, r3
 8004bc2:	d00e      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004bc4:	3318      	adds	r3, #24
 8004bc6:	429c      	cmp	r4, r3
 8004bc8:	d00b      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004bca:	3318      	adds	r3, #24
 8004bcc:	429c      	cmp	r4, r3
 8004bce:	d008      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004bd0:	3318      	adds	r3, #24
 8004bd2:	429c      	cmp	r4, r3
 8004bd4:	d005      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004bd6:	3318      	adds	r3, #24
 8004bd8:	429c      	cmp	r4, r3
 8004bda:	d002      	beq.n	8004be2 <HAL_DMA_DeInit+0x6e>
 8004bdc:	3318      	adds	r3, #24
 8004bde:	429c      	cmp	r4, r3
 8004be0:	d134      	bne.n	8004c4c <HAL_DMA_DeInit+0xd8>
 8004be2:	6823      	ldr	r3, [r4, #0]
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8004be4:	42b4      	cmp	r4, r6
  __HAL_DMA_DISABLE(hdma);
 8004be6:	f023 0301 	bic.w	r3, r3, #1
 8004bea:	6023      	str	r3, [r4, #0]
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8004bec:	d169      	bne.n	8004cc2 <HAL_DMA_DeInit+0x14e>
    ((DMA_Stream_TypeDef   *)hdma->Instance)->CR   = 0U;
 8004bee:	2300      	movs	r3, #0
    regs_dma = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004bf0:	4628      	mov	r0, r5
    ((DMA_Stream_TypeDef   *)hdma->Instance)->CR   = 0U;
 8004bf2:	6023      	str	r3, [r4, #0]
    ((DMA_Stream_TypeDef   *)hdma->Instance)->NDTR = 0U;
 8004bf4:	6063      	str	r3, [r4, #4]
    ((DMA_Stream_TypeDef   *)hdma->Instance)->PAR  = 0U;
 8004bf6:	60a3      	str	r3, [r4, #8]
    ((DMA_Stream_TypeDef   *)hdma->Instance)->M0AR = 0U;
 8004bf8:	60e3      	str	r3, [r4, #12]
    ((DMA_Stream_TypeDef   *)hdma->Instance)->M1AR = 0U;
 8004bfa:	6123      	str	r3, [r4, #16]
    ((DMA_Stream_TypeDef   *)hdma->Instance)->FCR  = (uint32_t)0x00000021U;
 8004bfc:	2321      	movs	r3, #33	; 0x21
 8004bfe:	6163      	str	r3, [r4, #20]
    regs_dma = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004c00:	f7ff fee8 	bl	80049d4 <DMA_CalcBaseAndBitshift>
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8004c04:	6deb      	ldr	r3, [r5, #92]	; 0x5c
  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004c06:	42b4      	cmp	r4, r6
    regs_dma->IFCR = 0x3FUL << (hdma->StreamIndex & 0x1FU);
 8004c08:	f003 021f 	and.w	r2, r3, #31
 8004c0c:	f04f 033f 	mov.w	r3, #63	; 0x3f
 8004c10:	fa03 f302 	lsl.w	r3, r3, r2
 8004c14:	6083      	str	r3, [r0, #8]
  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004c16:	f040 80c2 	bne.w	8004d9e <HAL_DMA_DeInit+0x22a>
    DMA_CalcDMAMUXChannelBaseAndMask(hdma);
 8004c1a:	4628      	mov	r0, r5
 8004c1c:	f7ff ff26 	bl	8004a6c <DMA_CalcDMAMUXChannelBaseAndMask>
    if(hdma->DMAmuxChannel != 0U)
 8004c20:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	f040 80f9 	bne.w	8004e1a <HAL_DMA_DeInit+0x2a6>
    if((hdma->Init.Request >= DMA_REQUEST_GENERATOR0) && (hdma->Init.Request <= DMA_REQUEST_GENERATOR7))
 8004c28:	686b      	ldr	r3, [r5, #4]
 8004c2a:	3b01      	subs	r3, #1
 8004c2c:	2b07      	cmp	r3, #7
 8004c2e:	d808      	bhi.n	8004c42 <HAL_DMA_DeInit+0xce>
      DMA_CalcDMAMUXRequestGenBaseAndMask(hdma);
 8004c30:	4628      	mov	r0, r5
 8004c32:	f7ff ff67 	bl	8004b04 <DMA_CalcDMAMUXRequestGenBaseAndMask>
      hdma->DMAmuxRequestGen->RGCR = 0U;
 8004c36:	6eeb      	ldr	r3, [r5, #108]	; 0x6c
 8004c38:	2200      	movs	r2, #0
 8004c3a:	601a      	str	r2, [r3, #0]
      hdma->DMAmuxRequestGenStatus->RGCFR = hdma->DMAmuxRequestGenStatusMask;
 8004c3c:	e9d5 321c 	ldrd	r3, r2, [r5, #112]	; 0x70
 8004c40:	605a      	str	r2, [r3, #4]
    hdma->DMAmuxRequestGen = 0U;
 8004c42:	2300      	movs	r3, #0
    hdma->DMAmuxRequestGenStatus = 0U;
 8004c44:	e9c5 331b 	strd	r3, r3, [r5, #108]	; 0x6c
    hdma->DMAmuxRequestGenStatusMask = 0U;
 8004c48:	676b      	str	r3, [r5, #116]	; 0x74
 8004c4a:	e02d      	b.n	8004ca8 <HAL_DMA_DeInit+0x134>
  __HAL_DMA_DISABLE(hdma);
 8004c4c:	6823      	ldr	r3, [r4, #0]
 8004c4e:	f023 0301 	bic.w	r3, r3, #1
 8004c52:	6023      	str	r3, [r4, #0]
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8004c54:	4b76      	ldr	r3, [pc, #472]	; (8004e30 <HAL_DMA_DeInit+0x2bc>)
 8004c56:	429c      	cmp	r4, r3
 8004c58:	d16a      	bne.n	8004d30 <HAL_DMA_DeInit+0x1bc>
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR  = 0U;
 8004c5a:	2300      	movs	r3, #0
    regs_bdma = (BDMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004c5c:	4628      	mov	r0, r5
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CCR  = 0U;
 8004c5e:	6023      	str	r3, [r4, #0]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CNDTR = 0U;
 8004c60:	6063      	str	r3, [r4, #4]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CPAR  = 0U;
 8004c62:	60a3      	str	r3, [r4, #8]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CM0AR = 0U;
 8004c64:	60e3      	str	r3, [r4, #12]
    ((BDMA_Channel_TypeDef *)hdma->Instance)->CM1AR = 0U;
 8004c66:	6123      	str	r3, [r4, #16]
    regs_bdma = (BDMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8004c68:	f7ff feb4 	bl	80049d4 <DMA_CalcBaseAndBitshift>
    regs_bdma->IFCR = ((BDMA_IFCR_CGIF0) << (hdma->StreamIndex & 0x1FU));
 8004c6c:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 8004c6e:	f003 021f 	and.w	r2, r3, #31
 8004c72:	2301      	movs	r3, #1
 8004c74:	4093      	lsls	r3, r2
 8004c76:	6043      	str	r3, [r0, #4]
  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004c78:	4b6e      	ldr	r3, [pc, #440]	; (8004e34 <HAL_DMA_DeInit+0x2c0>)
 8004c7a:	429c      	cmp	r4, r3
 8004c7c:	d0cd      	beq.n	8004c1a <HAL_DMA_DeInit+0xa6>
 8004c7e:	3314      	adds	r3, #20
 8004c80:	429c      	cmp	r4, r3
 8004c82:	d0ca      	beq.n	8004c1a <HAL_DMA_DeInit+0xa6>
 8004c84:	3314      	adds	r3, #20
 8004c86:	429c      	cmp	r4, r3
 8004c88:	d0c7      	beq.n	8004c1a <HAL_DMA_DeInit+0xa6>
 8004c8a:	3314      	adds	r3, #20
 8004c8c:	429c      	cmp	r4, r3
 8004c8e:	d0c4      	beq.n	8004c1a <HAL_DMA_DeInit+0xa6>
 8004c90:	3314      	adds	r3, #20
 8004c92:	429c      	cmp	r4, r3
 8004c94:	d0c1      	beq.n	8004c1a <HAL_DMA_DeInit+0xa6>
 8004c96:	3314      	adds	r3, #20
 8004c98:	429c      	cmp	r4, r3
 8004c9a:	d0be      	beq.n	8004c1a <HAL_DMA_DeInit+0xa6>
 8004c9c:	3314      	adds	r3, #20
 8004c9e:	429c      	cmp	r4, r3
 8004ca0:	d0bb      	beq.n	8004c1a <HAL_DMA_DeInit+0xa6>
 8004ca2:	3314      	adds	r3, #20
 8004ca4:	429c      	cmp	r4, r3
 8004ca6:	d0b8      	beq.n	8004c1a <HAL_DMA_DeInit+0xa6>
  hdma->XferCpltCallback       = NULL;
 8004ca8:	2000      	movs	r0, #0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8004caa:	6568      	str	r0, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8004cac:	f885 0034 	strb.w	r0, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8004cb0:	f885 0035 	strb.w	r0, [r5, #53]	; 0x35
  hdma->XferHalfCpltCallback   = NULL;
 8004cb4:	e9c5 000f 	strd	r0, r0, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8004cb8:	e9c5 0011 	strd	r0, r0, [r5, #68]	; 0x44
  hdma->XferAbortCallback      = NULL;
 8004cbc:	e9c5 0013 	strd	r0, r0, [r5, #76]	; 0x4c
  return HAL_OK;
 8004cc0:	e75c      	b.n	8004b7c <HAL_DMA_DeInit+0x8>
  if(IS_DMA_STREAM_INSTANCE(hdma->Instance) != 0U) /* DMA1 or DMA2 instance */
 8004cc2:	4b5a      	ldr	r3, [pc, #360]	; (8004e2c <HAL_DMA_DeInit+0x2b8>)
 8004cc4:	429c      	cmp	r4, r3
 8004cc6:	d092      	beq.n	8004bee <HAL_DMA_DeInit+0x7a>
 8004cc8:	3318      	adds	r3, #24
 8004cca:	429c      	cmp	r4, r3
 8004ccc:	d08f      	beq.n	8004bee <HAL_DMA_DeInit+0x7a>
 8004cce:	3318      	adds	r3, #24
 8004cd0:	429c      	cmp	r4, r3
 8004cd2:	d08c      	beq.n	8004bee <HAL_DMA_DeInit+0x7a>
 8004cd4:	3318      	adds	r3, #24
 8004cd6:	429c      	cmp	r4, r3
 8004cd8:	d089      	beq.n	8004bee <HAL_DMA_DeInit+0x7a>
 8004cda:	3318      	adds	r3, #24
 8004cdc:	429c      	cmp	r4, r3
 8004cde:	d086      	beq.n	8004bee <HAL_DMA_DeInit+0x7a>
 8004ce0:	3318      	adds	r3, #24
 8004ce2:	429c      	cmp	r4, r3
 8004ce4:	d083      	beq.n	8004bee <HAL_DMA_DeInit+0x7a>
 8004ce6:	3318      	adds	r3, #24
 8004ce8:	429c      	cmp	r4, r3
 8004cea:	d080      	beq.n	8004bee <HAL_DMA_DeInit+0x7a>
 8004cec:	f503 7356 	add.w	r3, r3, #856	; 0x358
 8004cf0:	429c      	cmp	r4, r3
 8004cf2:	f43f af7c 	beq.w	8004bee <HAL_DMA_DeInit+0x7a>
 8004cf6:	3318      	adds	r3, #24
 8004cf8:	429c      	cmp	r4, r3
 8004cfa:	f43f af78 	beq.w	8004bee <HAL_DMA_DeInit+0x7a>
 8004cfe:	3318      	adds	r3, #24
 8004d00:	429c      	cmp	r4, r3
 8004d02:	f43f af74 	beq.w	8004bee <HAL_DMA_DeInit+0x7a>
 8004d06:	3318      	adds	r3, #24
 8004d08:	429c      	cmp	r4, r3
 8004d0a:	f43f af70 	beq.w	8004bee <HAL_DMA_DeInit+0x7a>
 8004d0e:	3318      	adds	r3, #24
 8004d10:	429c      	cmp	r4, r3
 8004d12:	f43f af6c 	beq.w	8004bee <HAL_DMA_DeInit+0x7a>
 8004d16:	3318      	adds	r3, #24
 8004d18:	429c      	cmp	r4, r3
 8004d1a:	f43f af68 	beq.w	8004bee <HAL_DMA_DeInit+0x7a>
 8004d1e:	3318      	adds	r3, #24
 8004d20:	429c      	cmp	r4, r3
 8004d22:	f43f af64 	beq.w	8004bee <HAL_DMA_DeInit+0x7a>
 8004d26:	3318      	adds	r3, #24
 8004d28:	429c      	cmp	r4, r3
 8004d2a:	f43f af60 	beq.w	8004bee <HAL_DMA_DeInit+0x7a>
 8004d2e:	e791      	b.n	8004c54 <HAL_DMA_DeInit+0xe0>
  else if(IS_BDMA_CHANNEL_INSTANCE(hdma->Instance) != 0U) /* BDMA instance(s) */
 8004d30:	4b41      	ldr	r3, [pc, #260]	; (8004e38 <HAL_DMA_DeInit+0x2c4>)
 8004d32:	429c      	cmp	r4, r3
 8004d34:	d091      	beq.n	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d36:	3314      	adds	r3, #20
 8004d38:	429c      	cmp	r4, r3
 8004d3a:	d08e      	beq.n	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d3c:	3314      	adds	r3, #20
 8004d3e:	429c      	cmp	r4, r3
 8004d40:	d08b      	beq.n	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d42:	3314      	adds	r3, #20
 8004d44:	429c      	cmp	r4, r3
 8004d46:	d088      	beq.n	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d48:	3314      	adds	r3, #20
 8004d4a:	429c      	cmp	r4, r3
 8004d4c:	d085      	beq.n	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d4e:	3314      	adds	r3, #20
 8004d50:	429c      	cmp	r4, r3
 8004d52:	d082      	beq.n	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d54:	3314      	adds	r3, #20
 8004d56:	429c      	cmp	r4, r3
 8004d58:	f43f af7f 	beq.w	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d5c:	4b35      	ldr	r3, [pc, #212]	; (8004e34 <HAL_DMA_DeInit+0x2c0>)
 8004d5e:	429c      	cmp	r4, r3
 8004d60:	f43f af7b 	beq.w	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d64:	3314      	adds	r3, #20
 8004d66:	429c      	cmp	r4, r3
 8004d68:	f43f af77 	beq.w	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d6c:	3314      	adds	r3, #20
 8004d6e:	429c      	cmp	r4, r3
 8004d70:	f43f af73 	beq.w	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d74:	3314      	adds	r3, #20
 8004d76:	429c      	cmp	r4, r3
 8004d78:	f43f af6f 	beq.w	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d7c:	3314      	adds	r3, #20
 8004d7e:	429c      	cmp	r4, r3
 8004d80:	f43f af6b 	beq.w	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d84:	3314      	adds	r3, #20
 8004d86:	429c      	cmp	r4, r3
 8004d88:	f43f af67 	beq.w	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d8c:	3314      	adds	r3, #20
 8004d8e:	429c      	cmp	r4, r3
 8004d90:	f43f af63 	beq.w	8004c5a <HAL_DMA_DeInit+0xe6>
 8004d94:	3314      	adds	r3, #20
 8004d96:	429c      	cmp	r4, r3
 8004d98:	f47f aeef 	bne.w	8004b7a <HAL_DMA_DeInit+0x6>
 8004d9c:	e75d      	b.n	8004c5a <HAL_DMA_DeInit+0xe6>
  if(IS_DMA_DMAMUX_ALL_INSTANCE(hdma->Instance) != 0U) /* No DMAMUX available for BDMA1 */
 8004d9e:	4b23      	ldr	r3, [pc, #140]	; (8004e2c <HAL_DMA_DeInit+0x2b8>)
 8004da0:	429c      	cmp	r4, r3
 8004da2:	f43f af3a 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004da6:	3318      	adds	r3, #24
 8004da8:	429c      	cmp	r4, r3
 8004daa:	f43f af36 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004dae:	3318      	adds	r3, #24
 8004db0:	429c      	cmp	r4, r3
 8004db2:	f43f af32 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004db6:	3318      	adds	r3, #24
 8004db8:	429c      	cmp	r4, r3
 8004dba:	f43f af2e 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004dbe:	3318      	adds	r3, #24
 8004dc0:	429c      	cmp	r4, r3
 8004dc2:	f43f af2a 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004dc6:	3318      	adds	r3, #24
 8004dc8:	429c      	cmp	r4, r3
 8004dca:	f43f af26 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004dce:	3318      	adds	r3, #24
 8004dd0:	429c      	cmp	r4, r3
 8004dd2:	f43f af22 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004dd6:	f503 7356 	add.w	r3, r3, #856	; 0x358
 8004dda:	429c      	cmp	r4, r3
 8004ddc:	f43f af1d 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004de0:	3318      	adds	r3, #24
 8004de2:	429c      	cmp	r4, r3
 8004de4:	f43f af19 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004de8:	3318      	adds	r3, #24
 8004dea:	429c      	cmp	r4, r3
 8004dec:	f43f af15 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004df0:	3318      	adds	r3, #24
 8004df2:	429c      	cmp	r4, r3
 8004df4:	f43f af11 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004df8:	3318      	adds	r3, #24
 8004dfa:	429c      	cmp	r4, r3
 8004dfc:	f43f af0d 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004e00:	3318      	adds	r3, #24
 8004e02:	429c      	cmp	r4, r3
 8004e04:	f43f af09 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004e08:	3318      	adds	r3, #24
 8004e0a:	429c      	cmp	r4, r3
 8004e0c:	f43f af05 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004e10:	3318      	adds	r3, #24
 8004e12:	429c      	cmp	r4, r3
 8004e14:	f43f af01 	beq.w	8004c1a <HAL_DMA_DeInit+0xa6>
 8004e18:	e72e      	b.n	8004c78 <HAL_DMA_DeInit+0x104>
      hdma->DMAmuxChannel->CCR = 0U;
 8004e1a:	2200      	movs	r2, #0
 8004e1c:	601a      	str	r2, [r3, #0]
      hdma->DMAmuxChannelStatus->CFR = hdma->DMAmuxChannelStatusMask;
 8004e1e:	e9d5 3219 	ldrd	r3, r2, [r5, #100]	; 0x64
 8004e22:	605a      	str	r2, [r3, #4]
 8004e24:	e700      	b.n	8004c28 <HAL_DMA_DeInit+0xb4>
 8004e26:	bf00      	nop
 8004e28:	40020010 	.word	0x40020010
 8004e2c:	40020028 	.word	0x40020028
 8004e30:	48022c08 	.word	0x48022c08
 8004e34:	58025408 	.word	0x58025408
 8004e38:	48022c1c 	.word	0x48022c1c

08004e3c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004e3c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8004e3e:	4604      	mov	r4, r0
 8004e40:	2800      	cmp	r0, #0
 8004e42:	d036      	beq.n	8004eb2 <HAL_DMA2D_Init+0x76>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8004e44:	f890 3061 	ldrb.w	r3, [r0, #97]	; 0x61
 8004e48:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004e4c:	b91b      	cbnz	r3, 8004e56 <HAL_DMA2D_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8004e4e:	f880 2060 	strb.w	r2, [r0, #96]	; 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8004e52:	f7fb fddf 	bl	8000a14 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004e56:	2302      	movs	r3, #2

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004e58:	69e0      	ldr	r0, [r4, #28]
 8004e5a:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004e5c:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004e60:	6823      	ldr	r3, [r4, #0]
 8004e62:	4302      	orrs	r2, r0

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004e64:	69a0      	ldr	r0, [r4, #24]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8004e66:	6819      	ldr	r1, [r3, #0]
 8004e68:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 8004e6c:	f021 0140 	bic.w	r1, r1, #64	; 0x40
 8004e70:	430a      	orrs	r2, r1
 8004e72:	601a      	str	r2, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004e74:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8004e76:	68a2      	ldr	r2, [r4, #8]
 8004e78:	f421 7183 	bic.w	r1, r1, #262	; 0x106
 8004e7c:	4302      	orrs	r2, r0
 8004e7e:	f021 0101 	bic.w	r1, r1, #1
 8004e82:	430a      	orrs	r2, r1
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004e84:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8004e86:	635a      	str	r2, [r3, #52]	; 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8004e88:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004e8a:	0c12      	lsrs	r2, r2, #16
 8004e8c:	0412      	lsls	r2, r2, #16
 8004e8e:	430a      	orrs	r2, r1
 8004e90:	641a      	str	r2, [r3, #64]	; 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8004e92:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8004e94:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
 8004e98:	f421 1140 	bic.w	r1, r1, #3145728	; 0x300000
 8004e9c:	0552      	lsls	r2, r2, #21
 8004e9e:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004ea2:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8004ea4:	430a      	orrs	r2, r1
 8004ea6:	635a      	str	r2, [r3, #52]	; 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004ea8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8004eaa:	6660      	str	r0, [r4, #100]	; 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004eac:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

  return HAL_OK;
}
 8004eb0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004eb2:	2001      	movs	r0, #1
 8004eb4:	e7fc      	b.n	8004eb0 <HAL_DMA2D_Init+0x74>

08004eb6 <HAL_DMA2D_LineEventCallback>:
 8004eb6:	4770      	bx	lr

08004eb8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8004eb8:	4770      	bx	lr

08004eba <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004eba:	6803      	ldr	r3, [r0, #0]
{
 8004ebc:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004ebe:	685e      	ldr	r6, [r3, #4]
{
 8004ec0:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8004ec2:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004ec4:	07f2      	lsls	r2, r6, #31
 8004ec6:	d514      	bpl.n	8004ef2 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8004ec8:	05e9      	lsls	r1, r5, #23
 8004eca:	d512      	bpl.n	8004ef2 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004ecc:	681a      	ldr	r2, [r3, #0]
 8004ece:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004ed2:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004ed4:	6e42      	ldr	r2, [r0, #100]	; 0x64
 8004ed6:	f042 0201 	orr.w	r2, r2, #1
 8004eda:	6642      	str	r2, [r0, #100]	; 0x64

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004edc:	2201      	movs	r2, #1
 8004ede:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004ee0:	2304      	movs	r3, #4
 8004ee2:	f880 3061 	strb.w	r3, [r0, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004ee6:	2300      	movs	r3, #0
 8004ee8:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8004eec:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8004eee:	b103      	cbz	r3, 8004ef2 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004ef0:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8004ef2:	06b2      	lsls	r2, r6, #26
 8004ef4:	d516      	bpl.n	8004f24 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8004ef6:	04ab      	lsls	r3, r5, #18
 8004ef8:	d514      	bpl.n	8004f24 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8004efa:	6823      	ldr	r3, [r4, #0]
 8004efc:	681a      	ldr	r2, [r3, #0]
 8004efe:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8004f02:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8004f04:	2220      	movs	r2, #32
 8004f06:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8004f08:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004f0a:	f043 0302 	orr.w	r3, r3, #2
 8004f0e:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004f10:	2304      	movs	r3, #4
 8004f12:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004f16:	2300      	movs	r3, #0
 8004f18:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8004f1c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f1e:	b10b      	cbz	r3, 8004f24 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004f20:	4620      	mov	r0, r4
 8004f22:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8004f24:	0730      	lsls	r0, r6, #28
 8004f26:	d516      	bpl.n	8004f56 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8004f28:	0529      	lsls	r1, r5, #20
 8004f2a:	d514      	bpl.n	8004f56 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004f2c:	6823      	ldr	r3, [r4, #0]
 8004f2e:	681a      	ldr	r2, [r3, #0]
 8004f30:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8004f34:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004f36:	2208      	movs	r2, #8
 8004f38:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004f3a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004f3c:	f043 0304 	orr.w	r3, r3, #4
 8004f40:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004f42:	2304      	movs	r3, #4
 8004f44:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004f48:	2300      	movs	r3, #0
 8004f4a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferErrorCallback != NULL)
 8004f4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f50:	b10b      	cbz	r3, 8004f56 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004f52:	4620      	mov	r0, r4
 8004f54:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004f56:	0772      	lsls	r2, r6, #29
 8004f58:	d50b      	bpl.n	8004f72 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004f5a:	056b      	lsls	r3, r5, #21
 8004f5c:	d509      	bpl.n	8004f72 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004f5e:	6823      	ldr	r3, [r4, #0]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004f60:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004f62:	681a      	ldr	r2, [r3, #0]
 8004f64:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004f68:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004f6a:	2204      	movs	r2, #4
 8004f6c:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004f6e:	f7ff ffa2 	bl	8004eb6 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004f72:	07b0      	lsls	r0, r6, #30
 8004f74:	d514      	bpl.n	8004fa0 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004f76:	05a9      	lsls	r1, r5, #22
 8004f78:	d512      	bpl.n	8004fa0 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004f7a:	6823      	ldr	r3, [r4, #0]
 8004f7c:	681a      	ldr	r2, [r3, #0]
 8004f7e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8004f82:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004f84:	2202      	movs	r2, #2
 8004f86:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004f88:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004f8a:	6663      	str	r3, [r4, #100]	; 0x64

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004f8c:	2301      	movs	r3, #1
 8004f8e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004f92:	2300      	movs	r3, #0
 8004f94:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60

      if (hdma2d->XferCpltCallback != NULL)
 8004f98:	6a23      	ldr	r3, [r4, #32]
 8004f9a:	b10b      	cbz	r3, 8004fa0 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8004f9c:	4620      	mov	r0, r4
 8004f9e:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004fa0:	06f2      	lsls	r2, r6, #27
 8004fa2:	d513      	bpl.n	8004fcc <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004fa4:	04eb      	lsls	r3, r5, #19
 8004fa6:	d511      	bpl.n	8004fcc <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004fa8:	6823      	ldr	r3, [r4, #0]

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004faa:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004fac:	681a      	ldr	r2, [r3, #0]
 8004fae:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8004fb2:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004fb4:	2210      	movs	r2, #16
 8004fb6:	609a      	str	r2, [r3, #8]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004fb8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004fba:	6663      	str	r3, [r4, #100]	; 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004fbc:	2301      	movs	r3, #1
 8004fbe:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
      __HAL_UNLOCK(hdma2d);
 8004fc2:	2300      	movs	r3, #0
 8004fc4:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004fc8:	f7ff ff76 	bl	8004eb8 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004fcc:	bd70      	pop	{r4, r5, r6, pc}
	...

08004fd0 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004fd0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 8004fd4:	2300      	movs	r3, #0
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004fd6:	f8df 91c8 	ldr.w	r9, [pc, #456]	; 80051a0 <HAL_GPIO_Init+0x1d0>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8004fda:	f04f 44b0 	mov.w	r4, #1476395008	; 0x58000000
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8004fde:	680a      	ldr	r2, [r1, #0]
 8004fe0:	fa32 f503 	lsrs.w	r5, r2, r3
 8004fe4:	d102      	bne.n	8004fec <HAL_GPIO_Init+0x1c>
      }
    }

    position++;
  }
}
 8004fe6:	b003      	add	sp, #12
 8004fe8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 8004fec:	f04f 0e01 	mov.w	lr, #1
 8004ff0:	fa0e fe03 	lsl.w	lr, lr, r3
    if (iocurrent != 0x00U)
 8004ff4:	ea1e 0202 	ands.w	r2, lr, r2
 8004ff8:	f000 80bc 	beq.w	8005174 <HAL_GPIO_Init+0x1a4>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004ffc:	684e      	ldr	r6, [r1, #4]
 8004ffe:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8005002:	f04f 0c03 	mov.w	ip, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005006:	f006 0503 	and.w	r5, r6, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 800500a:	fa0c fc08 	lsl.w	ip, ip, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800500e:	1e6f      	subs	r7, r5, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8005010:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8005014:	2f01      	cmp	r7, #1
 8005016:	d834      	bhi.n	8005082 <HAL_GPIO_Init+0xb2>
        temp = GPIOx->OSPEEDR;
 8005018:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 800501a:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2U));
 800501e:	68cf      	ldr	r7, [r1, #12]
 8005020:	fa07 f708 	lsl.w	r7, r7, r8
 8005024:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8005028:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800502a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 800502c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8005030:	f3c6 1700 	ubfx	r7, r6, #4, #1
 8005034:	409f      	lsls	r7, r3
 8005036:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800503a:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 800503c:	68c7      	ldr	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800503e:	2d02      	cmp	r5, #2
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8005040:	ea07 0e0c 	and.w	lr, r7, ip
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8005044:	688f      	ldr	r7, [r1, #8]
 8005046:	fa07 f708 	lsl.w	r7, r7, r8
 800504a:	ea47 070e 	orr.w	r7, r7, lr
      GPIOx->PUPDR = temp;
 800504e:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005050:	d119      	bne.n	8005086 <HAL_GPIO_Init+0xb6>
        temp = GPIOx->AFR[position >> 3U];
 8005052:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8005056:	f003 0b07 	and.w	fp, r3, #7
 800505a:	f04f 0e0f 	mov.w	lr, #15
 800505e:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
 8005062:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
        temp = GPIOx->AFR[position >> 3U];
 8005066:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 800506a:	fa0e fe0b 	lsl.w	lr, lr, fp
 800506e:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 8005072:	690f      	ldr	r7, [r1, #16]
 8005074:	fa07 f70b 	lsl.w	r7, r7, fp
 8005078:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800507c:	f8ca 7020 	str.w	r7, [sl, #32]
 8005080:	e001      	b.n	8005086 <HAL_GPIO_Init+0xb6>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005082:	2d03      	cmp	r5, #3
 8005084:	d1da      	bne.n	800503c <HAL_GPIO_Init+0x6c>
      temp = GPIOx->MODER;
 8005086:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005088:	fa05 f508 	lsl.w	r5, r5, r8
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800508c:	f416 3f40 	tst.w	r6, #196608	; 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8005090:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8005094:	ea45 0507 	orr.w	r5, r5, r7
      GPIOx->MODER = temp;
 8005098:	6005      	str	r5, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800509a:	d06b      	beq.n	8005174 <HAL_GPIO_Init+0x1a4>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800509c:	f8d9 5154 	ldr.w	r5, [r9, #340]	; 0x154
 80050a0:	f023 0703 	bic.w	r7, r3, #3
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80050a4:	f003 0c03 	and.w	ip, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80050a8:	f045 0502 	orr.w	r5, r5, #2
 80050ac:	f107 47b0 	add.w	r7, r7, #1476395008	; 0x58000000
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80050b0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80050b4:	f8c9 5154 	str.w	r5, [r9, #340]	; 0x154
 80050b8:	f507 6780 	add.w	r7, r7, #1024	; 0x400
 80050bc:	f8d9 5154 	ldr.w	r5, [r9, #340]	; 0x154
 80050c0:	f005 0502 	and.w	r5, r5, #2
 80050c4:	9501      	str	r5, [sp, #4]
 80050c6:	9d01      	ldr	r5, [sp, #4]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80050c8:	250f      	movs	r5, #15
        temp = SYSCFG->EXTICR[position >> 2U];
 80050ca:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80050ce:	fa05 f50c 	lsl.w	r5, r5, ip
 80050d2:	ea2e 0e05 	bic.w	lr, lr, r5
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 80050d6:	4d31      	ldr	r5, [pc, #196]	; (800519c <HAL_GPIO_Init+0x1cc>)
 80050d8:	42a8      	cmp	r0, r5
 80050da:	d04d      	beq.n	8005178 <HAL_GPIO_Init+0x1a8>
 80050dc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80050e0:	42a8      	cmp	r0, r5
 80050e2:	d04b      	beq.n	800517c <HAL_GPIO_Init+0x1ac>
 80050e4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80050e8:	42a8      	cmp	r0, r5
 80050ea:	d049      	beq.n	8005180 <HAL_GPIO_Init+0x1b0>
 80050ec:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80050f0:	42a8      	cmp	r0, r5
 80050f2:	d047      	beq.n	8005184 <HAL_GPIO_Init+0x1b4>
 80050f4:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80050f8:	42a8      	cmp	r0, r5
 80050fa:	d045      	beq.n	8005188 <HAL_GPIO_Init+0x1b8>
 80050fc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005100:	42a8      	cmp	r0, r5
 8005102:	d043      	beq.n	800518c <HAL_GPIO_Init+0x1bc>
 8005104:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005108:	42a8      	cmp	r0, r5
 800510a:	d041      	beq.n	8005190 <HAL_GPIO_Init+0x1c0>
 800510c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005110:	42a8      	cmp	r0, r5
 8005112:	d03f      	beq.n	8005194 <HAL_GPIO_Init+0x1c4>
 8005114:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005118:	42a8      	cmp	r0, r5
 800511a:	d03d      	beq.n	8005198 <HAL_GPIO_Init+0x1c8>
 800511c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8005120:	42a8      	cmp	r0, r5
 8005122:	bf0c      	ite	eq
 8005124:	2509      	moveq	r5, #9
 8005126:	250a      	movne	r5, #10
 8005128:	fa05 f50c 	lsl.w	r5, r5, ip
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800512c:	f416 1f80 	tst.w	r6, #1048576	; 0x100000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005130:	ea45 050e 	orr.w	r5, r5, lr
        SYSCFG->EXTICR[position >> 2U] = temp;
 8005134:	60bd      	str	r5, [r7, #8]
        temp &= ~(iocurrent);
 8005136:	ea6f 0702 	mvn.w	r7, r2
        temp = EXTI->RTSR1;
 800513a:	6825      	ldr	r5, [r4, #0]
        temp &= ~(iocurrent);
 800513c:	bf0c      	ite	eq
 800513e:	403d      	andeq	r5, r7
          temp |= iocurrent;
 8005140:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8005142:	f416 1f00 	tst.w	r6, #2097152	; 0x200000
        EXTI->RTSR1 = temp;
 8005146:	6025      	str	r5, [r4, #0]
        temp = EXTI->FTSR1;
 8005148:	6865      	ldr	r5, [r4, #4]
        temp &= ~(iocurrent);
 800514a:	bf0c      	ite	eq
 800514c:	403d      	andeq	r5, r7
          temp |= iocurrent;
 800514e:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8005150:	f416 3f00 	tst.w	r6, #131072	; 0x20000
        EXTI->FTSR1 = temp;
 8005154:	6065      	str	r5, [r4, #4]
        temp = EXTI_CurrentCPU->EMR1;
 8005156:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
        temp &= ~(iocurrent);
 800515a:	bf0c      	ite	eq
 800515c:	403d      	andeq	r5, r7
          temp |= iocurrent;
 800515e:	4315      	orrne	r5, r2
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8005160:	03f6      	lsls	r6, r6, #15
        EXTI_CurrentCPU->EMR1 = temp;
 8005162:	f8c4 5084 	str.w	r5, [r4, #132]	; 0x84
        temp = EXTI_CurrentCPU->IMR1;
 8005166:	f8d4 5080 	ldr.w	r5, [r4, #128]	; 0x80
        temp &= ~(iocurrent);
 800516a:	bf54      	ite	pl
 800516c:	403d      	andpl	r5, r7
          temp |= iocurrent;
 800516e:	4315      	orrmi	r5, r2
        EXTI_CurrentCPU->IMR1 = temp;
 8005170:	f8c4 5080 	str.w	r5, [r4, #128]	; 0x80
    position++;
 8005174:	3301      	adds	r3, #1
 8005176:	e732      	b.n	8004fde <HAL_GPIO_Init+0xe>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 8005178:	2500      	movs	r5, #0
 800517a:	e7d5      	b.n	8005128 <HAL_GPIO_Init+0x158>
 800517c:	2501      	movs	r5, #1
 800517e:	e7d3      	b.n	8005128 <HAL_GPIO_Init+0x158>
 8005180:	2502      	movs	r5, #2
 8005182:	e7d1      	b.n	8005128 <HAL_GPIO_Init+0x158>
 8005184:	2503      	movs	r5, #3
 8005186:	e7cf      	b.n	8005128 <HAL_GPIO_Init+0x158>
 8005188:	2504      	movs	r5, #4
 800518a:	e7cd      	b.n	8005128 <HAL_GPIO_Init+0x158>
 800518c:	2505      	movs	r5, #5
 800518e:	e7cb      	b.n	8005128 <HAL_GPIO_Init+0x158>
 8005190:	2506      	movs	r5, #6
 8005192:	e7c9      	b.n	8005128 <HAL_GPIO_Init+0x158>
 8005194:	2507      	movs	r5, #7
 8005196:	e7c7      	b.n	8005128 <HAL_GPIO_Init+0x158>
 8005198:	2508      	movs	r5, #8
 800519a:	e7c5      	b.n	8005128 <HAL_GPIO_Init+0x158>
 800519c:	58020000 	.word	0x58020000
 80051a0:	58024400 	.word	0x58024400

080051a4 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 80051a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t position = 0x00U;
 80051a8:	2200      	movs	r2, #0
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80051aa:	f8df 8128 	ldr.w	r8, [pc, #296]	; 80052d4 <HAL_GPIO_DeInit+0x130>
 80051ae:	f8df 9128 	ldr.w	r9, [pc, #296]	; 80052d8 <HAL_GPIO_DeInit+0x134>
 80051b2:	f8df a128 	ldr.w	sl, [pc, #296]	; 80052dc <HAL_GPIO_DeInit+0x138>
 80051b6:	f8df b128 	ldr.w	fp, [pc, #296]	; 80052e0 <HAL_GPIO_DeInit+0x13c>
  while ((GPIO_Pin >> position) != 0x00U)
 80051ba:	fa31 f302 	lsrs.w	r3, r1, r2
 80051be:	d101      	bne.n	80051c4 <HAL_GPIO_DeInit+0x20>
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
    }

    position++;
  }
}
 80051c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = GPIO_Pin & (1UL << position) ;
 80051c4:	2301      	movs	r3, #1
 80051c6:	fa03 fc02 	lsl.w	ip, r3, r2
    if (iocurrent != 0x00U)
 80051ca:	ea1c 0601 	ands.w	r6, ip, r1
 80051ce:	d06b      	beq.n	80052a8 <HAL_GPIO_DeInit+0x104>
      tmp = SYSCFG->EXTICR[position >> 2U];
 80051d0:	f022 0403 	bic.w	r4, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 80051d4:	f002 0703 	and.w	r7, r2, #3
 80051d8:	250f      	movs	r5, #15
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80051da:	4b3d      	ldr	r3, [pc, #244]	; (80052d0 <HAL_GPIO_DeInit+0x12c>)
 80051dc:	f104 44b0 	add.w	r4, r4, #1476395008	; 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 80051e0:	00bf      	lsls	r7, r7, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80051e2:	4298      	cmp	r0, r3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 80051e4:	fa05 f507 	lsl.w	r5, r5, r7
      tmp = SYSCFG->EXTICR[position >> 2U];
 80051e8:	f8d4 e408 	ldr.w	lr, [r4, #1032]	; 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 80051ec:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80051f0:	ea05 0e0e 	and.w	lr, r5, lr
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80051f4:	d05a      	beq.n	80052ac <HAL_GPIO_DeInit+0x108>
 80051f6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80051fa:	4298      	cmp	r0, r3
 80051fc:	d058      	beq.n	80052b0 <HAL_GPIO_DeInit+0x10c>
 80051fe:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005202:	4298      	cmp	r0, r3
 8005204:	d056      	beq.n	80052b4 <HAL_GPIO_DeInit+0x110>
 8005206:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800520a:	4298      	cmp	r0, r3
 800520c:	d054      	beq.n	80052b8 <HAL_GPIO_DeInit+0x114>
 800520e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8005212:	4298      	cmp	r0, r3
 8005214:	d052      	beq.n	80052bc <HAL_GPIO_DeInit+0x118>
 8005216:	4540      	cmp	r0, r8
 8005218:	d052      	beq.n	80052c0 <HAL_GPIO_DeInit+0x11c>
 800521a:	4548      	cmp	r0, r9
 800521c:	d052      	beq.n	80052c4 <HAL_GPIO_DeInit+0x120>
 800521e:	4550      	cmp	r0, sl
 8005220:	d052      	beq.n	80052c8 <HAL_GPIO_DeInit+0x124>
 8005222:	4558      	cmp	r0, fp
 8005224:	d052      	beq.n	80052cc <HAL_GPIO_DeInit+0x128>
 8005226:	f503 53a0 	add.w	r3, r3, #5120	; 0x1400
 800522a:	4298      	cmp	r0, r3
 800522c:	bf0c      	ite	eq
 800522e:	2309      	moveq	r3, #9
 8005230:	230a      	movne	r3, #10
 8005232:	40bb      	lsls	r3, r7
 8005234:	4573      	cmp	r3, lr
 8005236:	d119      	bne.n	800526c <HAL_GPIO_DeInit+0xc8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
 8005238:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 800523c:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
 8005240:	ea27 0706 	bic.w	r7, r7, r6
 8005244:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
 8005248:	f8d3 7084 	ldr.w	r7, [r3, #132]	; 0x84
 800524c:	ea27 0706 	bic.w	r7, r7, r6
 8005250:	f8c3 7084 	str.w	r7, [r3, #132]	; 0x84
        EXTI->FTSR1 &= ~(iocurrent);
 8005254:	685f      	ldr	r7, [r3, #4]
 8005256:	ea27 0706 	bic.w	r7, r7, r6
 800525a:	605f      	str	r7, [r3, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 800525c:	681f      	ldr	r7, [r3, #0]
 800525e:	ea27 0706 	bic.w	r7, r7, r6
 8005262:	601f      	str	r7, [r3, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8005264:	68a3      	ldr	r3, [r4, #8]
 8005266:	ea23 0305 	bic.w	r3, r3, r5
 800526a:	60a3      	str	r3, [r4, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 800526c:	0055      	lsls	r5, r2, #1
 800526e:	2303      	movs	r3, #3
 8005270:	6804      	ldr	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8005272:	f002 0707 	and.w	r7, r2, #7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8005276:	40ab      	lsls	r3, r5
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8005278:	260f      	movs	r6, #15
 800527a:	00bf      	lsls	r7, r7, #2
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 800527c:	431c      	orrs	r4, r3
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 800527e:	40be      	lsls	r6, r7
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8005280:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8005282:	08d4      	lsrs	r4, r2, #3
 8005284:	eb00 0484 	add.w	r4, r0, r4, lsl #2
 8005288:	6a25      	ldr	r5, [r4, #32]
 800528a:	ea25 0506 	bic.w	r5, r5, r6
 800528e:	6225      	str	r5, [r4, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8005290:	68c4      	ldr	r4, [r0, #12]
 8005292:	ea24 0403 	bic.w	r4, r4, r3
 8005296:	60c4      	str	r4, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 8005298:	6844      	ldr	r4, [r0, #4]
 800529a:	ea24 040c 	bic.w	r4, r4, ip
 800529e:	6044      	str	r4, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 80052a0:	6884      	ldr	r4, [r0, #8]
 80052a2:	ea24 0303 	bic.w	r3, r4, r3
 80052a6:	6083      	str	r3, [r0, #8]
    position++;
 80052a8:	3201      	adds	r2, #1
 80052aa:	e786      	b.n	80051ba <HAL_GPIO_DeInit+0x16>
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 80052ac:	2300      	movs	r3, #0
 80052ae:	e7c0      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052b0:	2301      	movs	r3, #1
 80052b2:	e7be      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052b4:	2302      	movs	r3, #2
 80052b6:	e7bc      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052b8:	2303      	movs	r3, #3
 80052ba:	e7ba      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052bc:	2304      	movs	r3, #4
 80052be:	e7b8      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052c0:	2305      	movs	r3, #5
 80052c2:	e7b6      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052c4:	2306      	movs	r3, #6
 80052c6:	e7b4      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052c8:	2307      	movs	r3, #7
 80052ca:	e7b2      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052cc:	2308      	movs	r3, #8
 80052ce:	e7b0      	b.n	8005232 <HAL_GPIO_DeInit+0x8e>
 80052d0:	58020000 	.word	0x58020000
 80052d4:	58021400 	.word	0x58021400
 80052d8:	58021800 	.word	0x58021800
 80052dc:	58021c00 	.word	0x58021c00
 80052e0:	58022000 	.word	0x58022000

080052e4 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 80052e4:	6903      	ldr	r3, [r0, #16]
 80052e6:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 80052e8:	bf14      	ite	ne
 80052ea:	2001      	movne	r0, #1
 80052ec:	2000      	moveq	r0, #0
 80052ee:	4770      	bx	lr

080052f0 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80052f0:	b10a      	cbz	r2, 80052f6 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 80052f2:	6181      	str	r1, [r0, #24]
  }
}
 80052f4:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 80052f6:	0409      	lsls	r1, r1, #16
 80052f8:	e7fb      	b.n	80052f2 <HAL_GPIO_WritePin+0x2>

080052fa <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80052fa:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80052fc:	ea01 0203 	and.w	r2, r1, r3
 8005300:	ea21 0103 	bic.w	r1, r1, r3
 8005304:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005308:	6181      	str	r1, [r0, #24]
}
 800530a:	4770      	bx	lr

0800530c <I2C_Flush_TXDR>:
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 800530c:	6803      	ldr	r3, [r0, #0]
 800530e:	699a      	ldr	r2, [r3, #24]
 8005310:	0791      	lsls	r1, r2, #30
 8005312:	d501      	bpl.n	8005318 <I2C_Flush_TXDR+0xc>
  {
    hi2c->Instance->TXDR = 0x00U;
 8005314:	2200      	movs	r2, #0
 8005316:	629a      	str	r2, [r3, #40]	; 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005318:	699a      	ldr	r2, [r3, #24]
 800531a:	07d2      	lsls	r2, r2, #31
 800531c:	d403      	bmi.n	8005326 <I2C_Flush_TXDR+0x1a>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 800531e:	699a      	ldr	r2, [r3, #24]
 8005320:	f042 0201 	orr.w	r2, r2, #1
 8005324:	619a      	str	r2, [r3, #24]
  }
}
 8005326:	4770      	bx	lr

08005328 <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8005328:	b530      	push	{r4, r5, lr}
 800532a:	9d03      	ldr	r5, [sp, #12]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800532c:	f3c1 0109 	ubfx	r1, r1, #0, #10
                            (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                              (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8005330:	6804      	ldr	r4, [r0, #0]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005332:	432b      	orrs	r3, r5
  MODIFY_REG(hi2c->Instance->CR2, \
 8005334:	6860      	ldr	r0, [r4, #4]
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005336:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  MODIFY_REG(hi2c->Instance->CR2, \
 800533a:	4a05      	ldr	r2, [pc, #20]	; (8005350 <I2C_TransferConfig+0x28>)
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800533c:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->CR2, \
 800533e:	ea42 5255 	orr.w	r2, r2, r5, lsr #21
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8005342:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
  MODIFY_REG(hi2c->Instance->CR2, \
 8005346:	ea20 0002 	bic.w	r0, r0, r2
 800534a:	4303      	orrs	r3, r0
 800534c:	6063      	str	r3, [r4, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
                I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 800534e:	bd30      	pop	{r4, r5, pc}
 8005350:	03ff63ff 	.word	0x03ff63ff

08005354 <I2C_IsErrorOccurred>:
{
 8005354:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  uint32_t itflag   = hi2c->Instance->ISR;
 8005358:	6803      	ldr	r3, [r0, #0]
{
 800535a:	4605      	mov	r5, r0
 800535c:	4688      	mov	r8, r1
 800535e:	4617      	mov	r7, r2
  uint32_t itflag   = hi2c->Instance->ISR;
 8005360:	699c      	ldr	r4, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8005362:	f014 0410 	ands.w	r4, r4, #16
 8005366:	d078      	beq.n	800545a <I2C_IsErrorOccurred+0x106>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005368:	2210      	movs	r2, #16
  HAL_StatusTypeDef status = HAL_OK;
 800536a:	2600      	movs	r6, #0
              hi2c->State = HAL_I2C_STATE_READY;
 800536c:	f04f 0920 	mov.w	r9, #32
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005370:	61da      	str	r2, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8005372:	682b      	ldr	r3, [r5, #0]
 8005374:	699a      	ldr	r2, [r3, #24]
 8005376:	0690      	lsls	r0, r2, #26
 8005378:	d436      	bmi.n	80053e8 <I2C_IsErrorOccurred+0x94>
 800537a:	b10e      	cbz	r6, 8005380 <I2C_IsErrorOccurred+0x2c>
    error_code |= HAL_I2C_ERROR_AF;
 800537c:	2404      	movs	r4, #4
 800537e:	e039      	b.n	80053f4 <I2C_IsErrorOccurred+0xa0>
      if (Timeout != HAL_MAX_DELAY)
 8005380:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005384:	d0f6      	beq.n	8005374 <I2C_IsErrorOccurred+0x20>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8005386:	f7ff fa01 	bl	800478c <HAL_GetTick>
 800538a:	1bc0      	subs	r0, r0, r7
 800538c:	4540      	cmp	r0, r8
 800538e:	d802      	bhi.n	8005396 <I2C_IsErrorOccurred+0x42>
 8005390:	f1b8 0f00 	cmp.w	r8, #0
 8005394:	d1ed      	bne.n	8005372 <I2C_IsErrorOccurred+0x1e>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8005396:	682b      	ldr	r3, [r5, #0]
 8005398:	6859      	ldr	r1, [r3, #4]
          tmp2 = hi2c->Mode;
 800539a:	f895 2042 	ldrb.w	r2, [r5, #66]	; 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 800539e:	6998      	ldr	r0, [r3, #24]
          tmp2 = hi2c->Mode;
 80053a0:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 80053a2:	0400      	lsls	r0, r0, #16
 80053a4:	d50a      	bpl.n	80053bc <I2C_IsErrorOccurred+0x68>
 80053a6:	044c      	lsls	r4, r1, #17
 80053a8:	d408      	bmi.n	80053bc <I2C_IsErrorOccurred+0x68>
              (tmp1 != I2C_CR2_STOP) && \
 80053aa:	2a20      	cmp	r2, #32
 80053ac:	d006      	beq.n	80053bc <I2C_IsErrorOccurred+0x68>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 80053ae:	685a      	ldr	r2, [r3, #4]
 80053b0:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80053b4:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
 80053b6:	f7ff f9e9 	bl	800478c <HAL_GetTick>
 80053ba:	4607      	mov	r7, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80053bc:	682b      	ldr	r3, [r5, #0]
 80053be:	699c      	ldr	r4, [r3, #24]
 80053c0:	f014 0420 	ands.w	r4, r4, #32
 80053c4:	d1d5      	bne.n	8005372 <I2C_IsErrorOccurred+0x1e>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 80053c6:	f7ff f9e1 	bl	800478c <HAL_GetTick>
 80053ca:	1bc0      	subs	r0, r0, r7
 80053cc:	2819      	cmp	r0, #25
 80053ce:	d9f5      	bls.n	80053bc <I2C_IsErrorOccurred+0x68>
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80053d0:	6c6b      	ldr	r3, [r5, #68]	; 0x44
              status = HAL_ERROR;
 80053d2:	2601      	movs	r6, #1
              __HAL_UNLOCK(hi2c);
 80053d4:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
              hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80053d8:	f043 0320 	orr.w	r3, r3, #32
 80053dc:	646b      	str	r3, [r5, #68]	; 0x44
              hi2c->State = HAL_I2C_STATE_READY;
 80053de:	f885 9041 	strb.w	r9, [r5, #65]	; 0x41
              hi2c->Mode = HAL_I2C_MODE_NONE;
 80053e2:	f885 4042 	strb.w	r4, [r5, #66]	; 0x42
              status = HAL_ERROR;
 80053e6:	e7e9      	b.n	80053bc <I2C_IsErrorOccurred+0x68>
    if (status == HAL_OK)
 80053e8:	2e00      	cmp	r6, #0
 80053ea:	d1c7      	bne.n	800537c <I2C_IsErrorOccurred+0x28>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80053ec:	2220      	movs	r2, #32
    error_code |= HAL_I2C_ERROR_AF;
 80053ee:	2404      	movs	r4, #4
    status = HAL_ERROR;
 80053f0:	2601      	movs	r6, #1
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80053f2:	61da      	str	r2, [r3, #28]
  itflag = hi2c->Instance->ISR;
 80053f4:	682f      	ldr	r7, [r5, #0]
 80053f6:	69bb      	ldr	r3, [r7, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80053f8:	05d9      	lsls	r1, r3, #23
 80053fa:	d505      	bpl.n	8005408 <I2C_IsErrorOccurred+0xb4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80053fc:	f44f 7280 	mov.w	r2, #256	; 0x100
    error_code |= HAL_I2C_ERROR_BERR;
 8005400:	f044 0401 	orr.w	r4, r4, #1
    status = HAL_ERROR;
 8005404:	2601      	movs	r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8005406:	61fa      	str	r2, [r7, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8005408:	055a      	lsls	r2, r3, #21
 800540a:	d505      	bpl.n	8005418 <I2C_IsErrorOccurred+0xc4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 800540c:	f44f 6280 	mov.w	r2, #1024	; 0x400
    error_code |= HAL_I2C_ERROR_OVR;
 8005410:	f044 0408 	orr.w	r4, r4, #8
    status = HAL_ERROR;
 8005414:	2601      	movs	r6, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8005416:	61fa      	str	r2, [r7, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8005418:	059b      	lsls	r3, r3, #22
 800541a:	d520      	bpl.n	800545e <I2C_IsErrorOccurred+0x10a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 800541c:	f44f 7300 	mov.w	r3, #512	; 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
 8005420:	f044 0402 	orr.w	r4, r4, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8005424:	61fb      	str	r3, [r7, #28]
    I2C_Flush_TXDR(hi2c);
 8005426:	4628      	mov	r0, r5
    __HAL_UNLOCK(hi2c);
 8005428:	2601      	movs	r6, #1
    I2C_Flush_TXDR(hi2c);
 800542a:	f7ff ff6f 	bl	800530c <I2C_Flush_TXDR>
    I2C_RESET_CR2(hi2c);
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	f023 73ff 	bic.w	r3, r3, #33423360	; 0x1fe0000
 8005434:	f423 338b 	bic.w	r3, r3, #71168	; 0x11600
 8005438:	f423 73ff 	bic.w	r3, r3, #510	; 0x1fe
 800543c:	f023 0301 	bic.w	r3, r3, #1
 8005440:	607b      	str	r3, [r7, #4]
    hi2c->ErrorCode |= error_code;
 8005442:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8005444:	4323      	orrs	r3, r4
 8005446:	646b      	str	r3, [r5, #68]	; 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8005448:	2320      	movs	r3, #32
 800544a:	f885 3041 	strb.w	r3, [r5, #65]	; 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800544e:	2300      	movs	r3, #0
 8005450:	f885 3042 	strb.w	r3, [r5, #66]	; 0x42
    __HAL_UNLOCK(hi2c);
 8005454:	f885 3040 	strb.w	r3, [r5, #64]	; 0x40
 8005458:	e003      	b.n	8005462 <I2C_IsErrorOccurred+0x10e>
  HAL_StatusTypeDef status = HAL_OK;
 800545a:	4626      	mov	r6, r4
 800545c:	e7ca      	b.n	80053f4 <I2C_IsErrorOccurred+0xa0>
  if (status != HAL_OK)
 800545e:	2e00      	cmp	r6, #0
 8005460:	d1e1      	bne.n	8005426 <I2C_IsErrorOccurred+0xd2>
}
 8005462:	4630      	mov	r0, r6
 8005464:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08005468 <I2C_WaitOnTXISFlagUntilTimeout>:
{
 8005468:	b570      	push	{r4, r5, r6, lr}
 800546a:	4604      	mov	r4, r0
 800546c:	460d      	mov	r5, r1
 800546e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8005470:	6823      	ldr	r3, [r4, #0]
 8005472:	699b      	ldr	r3, [r3, #24]
 8005474:	079b      	lsls	r3, r3, #30
 8005476:	d501      	bpl.n	800547c <I2C_WaitOnTXISFlagUntilTimeout+0x14>
  return HAL_OK;
 8005478:	2000      	movs	r0, #0
}
 800547a:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800547c:	4632      	mov	r2, r6
 800547e:	4629      	mov	r1, r5
 8005480:	4620      	mov	r0, r4
 8005482:	f7ff ff67 	bl	8005354 <I2C_IsErrorOccurred>
 8005486:	b9a0      	cbnz	r0, 80054b2 <I2C_WaitOnTXISFlagUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005488:	1c6a      	adds	r2, r5, #1
 800548a:	d0f1      	beq.n	8005470 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800548c:	f7ff f97e 	bl	800478c <HAL_GetTick>
 8005490:	1b80      	subs	r0, r0, r6
 8005492:	42a8      	cmp	r0, r5
 8005494:	d801      	bhi.n	800549a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
 8005496:	2d00      	cmp	r5, #0
 8005498:	d1ea      	bne.n	8005470 <I2C_WaitOnTXISFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800549a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800549c:	f043 0320 	orr.w	r3, r3, #32
 80054a0:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80054a2:	2320      	movs	r3, #32
 80054a4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80054a8:	2300      	movs	r3, #0
 80054aa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 80054ae:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 80054b2:	2001      	movs	r0, #1
 80054b4:	e7e1      	b.n	800547a <I2C_WaitOnTXISFlagUntilTimeout+0x12>

080054b6 <I2C_WaitOnFlagUntilTimeout>:
{
 80054b6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054ba:	9f06      	ldr	r7, [sp, #24]
 80054bc:	4604      	mov	r4, r0
 80054be:	4688      	mov	r8, r1
 80054c0:	4616      	mov	r6, r2
 80054c2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80054c4:	6822      	ldr	r2, [r4, #0]
 80054c6:	6993      	ldr	r3, [r2, #24]
 80054c8:	ea38 0303 	bics.w	r3, r8, r3
 80054cc:	bf0c      	ite	eq
 80054ce:	2301      	moveq	r3, #1
 80054d0:	2300      	movne	r3, #0
 80054d2:	42b3      	cmp	r3, r6
 80054d4:	d001      	beq.n	80054da <I2C_WaitOnFlagUntilTimeout+0x24>
  return HAL_OK;
 80054d6:	2000      	movs	r0, #0
 80054d8:	e015      	b.n	8005506 <I2C_WaitOnFlagUntilTimeout+0x50>
    if (Timeout != HAL_MAX_DELAY)
 80054da:	1c6b      	adds	r3, r5, #1
 80054dc:	d0f3      	beq.n	80054c6 <I2C_WaitOnFlagUntilTimeout+0x10>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80054de:	f7ff f955 	bl	800478c <HAL_GetTick>
 80054e2:	1bc0      	subs	r0, r0, r7
 80054e4:	42a8      	cmp	r0, r5
 80054e6:	d801      	bhi.n	80054ec <I2C_WaitOnFlagUntilTimeout+0x36>
 80054e8:	2d00      	cmp	r5, #0
 80054ea:	d1eb      	bne.n	80054c4 <I2C_WaitOnFlagUntilTimeout+0xe>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80054ec:	6c63      	ldr	r3, [r4, #68]	; 0x44
        __HAL_UNLOCK(hi2c);
 80054ee:	2001      	movs	r0, #1
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80054f0:	f043 0320 	orr.w	r3, r3, #32
 80054f4:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80054f6:	2320      	movs	r3, #32
 80054f8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80054fc:	2300      	movs	r3, #0
 80054fe:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8005502:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005506:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800550c <I2C_RequestMemoryWrite>:
{
 800550c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005510:	461e      	mov	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005512:	4b18      	ldr	r3, [pc, #96]	; (8005574 <I2C_RequestMemoryWrite+0x68>)
{
 8005514:	4605      	mov	r5, r0
 8005516:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005518:	9300      	str	r3, [sp, #0]
 800551a:	b2f2      	uxtb	r2, r6
 800551c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
{
 8005520:	e9dd 7808 	ldrd	r7, r8, [sp, #32]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8005524:	f7ff ff00 	bl	8005328 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005528:	4628      	mov	r0, r5
 800552a:	4642      	mov	r2, r8
 800552c:	4639      	mov	r1, r7
 800552e:	f7ff ff9b 	bl	8005468 <I2C_WaitOnTXISFlagUntilTimeout>
 8005532:	b118      	cbz	r0, 800553c <I2C_RequestMemoryWrite+0x30>
    return HAL_ERROR;
 8005534:	2001      	movs	r0, #1
}
 8005536:	b002      	add	sp, #8
 8005538:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800553c:	2e01      	cmp	r6, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800553e:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8005540:	d10d      	bne.n	800555e <I2C_RequestMemoryWrite+0x52>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005542:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8005544:	2200      	movs	r2, #0
 8005546:	2180      	movs	r1, #128	; 0x80
 8005548:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800554a:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 800554c:	463b      	mov	r3, r7
 800554e:	f8cd 8000 	str.w	r8, [sp]
 8005552:	f7ff ffb0 	bl	80054b6 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
 8005556:	3800      	subs	r0, #0
 8005558:	bf18      	it	ne
 800555a:	2001      	movne	r0, #1
 800555c:	e7eb      	b.n	8005536 <I2C_RequestMemoryWrite+0x2a>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 800555e:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005560:	4639      	mov	r1, r7
 8005562:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8005564:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005566:	4642      	mov	r2, r8
 8005568:	f7ff ff7e 	bl	8005468 <I2C_WaitOnTXISFlagUntilTimeout>
 800556c:	2800      	cmp	r0, #0
 800556e:	d1e1      	bne.n	8005534 <I2C_RequestMemoryWrite+0x28>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8005570:	682b      	ldr	r3, [r5, #0]
 8005572:	e7e6      	b.n	8005542 <I2C_RequestMemoryWrite+0x36>
 8005574:	80002000 	.word	0x80002000

08005578 <I2C_RequestMemoryRead>:
{
 8005578:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800557c:	461e      	mov	r6, r3
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800557e:	4b18      	ldr	r3, [pc, #96]	; (80055e0 <I2C_RequestMemoryRead+0x68>)
{
 8005580:	4605      	mov	r5, r0
 8005582:	4614      	mov	r4, r2
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 8005584:	9300      	str	r3, [sp, #0]
 8005586:	b2f2      	uxtb	r2, r6
 8005588:	2300      	movs	r3, #0
{
 800558a:	e9dd 7808 	ldrd	r7, r8, [sp, #32]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800558e:	f7ff fecb 	bl	8005328 <I2C_TransferConfig>
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8005592:	4628      	mov	r0, r5
 8005594:	4642      	mov	r2, r8
 8005596:	4639      	mov	r1, r7
 8005598:	f7ff ff66 	bl	8005468 <I2C_WaitOnTXISFlagUntilTimeout>
 800559c:	b118      	cbz	r0, 80055a6 <I2C_RequestMemoryRead+0x2e>
    return HAL_ERROR;
 800559e:	2001      	movs	r0, #1
}
 80055a0:	b002      	add	sp, #8
 80055a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80055a6:	2e01      	cmp	r6, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80055a8:	682b      	ldr	r3, [r5, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80055aa:	d10d      	bne.n	80055c8 <I2C_RequestMemoryRead+0x50>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80055ac:	b2e4      	uxtb	r4, r4
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 80055ae:	2200      	movs	r2, #0
 80055b0:	2140      	movs	r1, #64	; 0x40
 80055b2:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80055b4:	629c      	str	r4, [r3, #40]	; 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 80055b6:	463b      	mov	r3, r7
 80055b8:	f8cd 8000 	str.w	r8, [sp]
 80055bc:	f7ff ff7b 	bl	80054b6 <I2C_WaitOnFlagUntilTimeout>
    return HAL_ERROR;
 80055c0:	3800      	subs	r0, #0
 80055c2:	bf18      	it	ne
 80055c4:	2001      	movne	r0, #1
 80055c6:	e7eb      	b.n	80055a0 <I2C_RequestMemoryRead+0x28>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80055c8:	0a22      	lsrs	r2, r4, #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80055ca:	4639      	mov	r1, r7
 80055cc:	4628      	mov	r0, r5
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80055ce:	629a      	str	r2, [r3, #40]	; 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80055d0:	4642      	mov	r2, r8
 80055d2:	f7ff ff49 	bl	8005468 <I2C_WaitOnTXISFlagUntilTimeout>
 80055d6:	2800      	cmp	r0, #0
 80055d8:	d1e1      	bne.n	800559e <I2C_RequestMemoryRead+0x26>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80055da:	682b      	ldr	r3, [r5, #0]
 80055dc:	e7e6      	b.n	80055ac <I2C_RequestMemoryRead+0x34>
 80055de:	bf00      	nop
 80055e0:	80002000 	.word	0x80002000

080055e4 <I2C_WaitOnSTOPFlagUntilTimeout>:
{
 80055e4:	b570      	push	{r4, r5, r6, lr}
 80055e6:	4604      	mov	r4, r0
 80055e8:	460d      	mov	r5, r1
 80055ea:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80055ec:	6823      	ldr	r3, [r4, #0]
 80055ee:	699b      	ldr	r3, [r3, #24]
 80055f0:	069b      	lsls	r3, r3, #26
 80055f2:	d501      	bpl.n	80055f8 <I2C_WaitOnSTOPFlagUntilTimeout+0x14>
  return HAL_OK;
 80055f4:	2000      	movs	r0, #0
}
 80055f6:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80055f8:	4632      	mov	r2, r6
 80055fa:	4629      	mov	r1, r5
 80055fc:	4620      	mov	r0, r4
 80055fe:	f7ff fea9 	bl	8005354 <I2C_IsErrorOccurred>
 8005602:	b990      	cbnz	r0, 800562a <I2C_WaitOnSTOPFlagUntilTimeout+0x46>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005604:	f7ff f8c2 	bl	800478c <HAL_GetTick>
 8005608:	1b80      	subs	r0, r0, r6
 800560a:	42a8      	cmp	r0, r5
 800560c:	d801      	bhi.n	8005612 <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
 800560e:	2d00      	cmp	r5, #0
 8005610:	d1ec      	bne.n	80055ec <I2C_WaitOnSTOPFlagUntilTimeout+0x8>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8005612:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005614:	f043 0320 	orr.w	r3, r3, #32
 8005618:	6463      	str	r3, [r4, #68]	; 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800561a:	2320      	movs	r3, #32
 800561c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 8005620:	2300      	movs	r3, #0
 8005622:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        __HAL_UNLOCK(hi2c);
 8005626:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 800562a:	2001      	movs	r0, #1
 800562c:	e7e3      	b.n	80055f6 <I2C_WaitOnSTOPFlagUntilTimeout+0x12>

0800562e <HAL_I2C_MspInit>:
}
 800562e:	4770      	bx	lr

08005630 <HAL_I2C_Init>:
{
 8005630:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8005632:	4604      	mov	r4, r0
 8005634:	2800      	cmp	r0, #0
 8005636:	d04a      	beq.n	80056ce <HAL_I2C_Init+0x9e>
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005638:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 800563c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005640:	b91b      	cbnz	r3, 800564a <HAL_I2C_Init+0x1a>
    hi2c->Lock = HAL_UNLOCKED;
 8005642:	f880 2040 	strb.w	r2, [r0, #64]	; 0x40
    HAL_I2C_MspInit(hi2c);
 8005646:	f7ff fff2 	bl	800562e <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800564a:	2324      	movs	r3, #36	; 0x24
 800564c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 8005650:	6823      	ldr	r3, [r4, #0]
 8005652:	681a      	ldr	r2, [r3, #0]
 8005654:	f022 0201 	bic.w	r2, r2, #1
 8005658:	601a      	str	r2, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 800565a:	6862      	ldr	r2, [r4, #4]
 800565c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005660:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8005662:	689a      	ldr	r2, [r3, #8]
 8005664:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005668:	609a      	str	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 800566a:	e9d4 2102 	ldrd	r2, r1, [r4, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 800566e:	2901      	cmp	r1, #1
 8005670:	d124      	bne.n	80056bc <HAL_I2C_Init+0x8c>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005672:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005676:	609a      	str	r2, [r3, #8]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005678:	685a      	ldr	r2, [r3, #4]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800567a:	2000      	movs	r0, #0
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 800567c:	f042 7200 	orr.w	r2, r2, #33554432	; 0x2000000
 8005680:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005684:	605a      	str	r2, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8005686:	68da      	ldr	r2, [r3, #12]
 8005688:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800568c:	60da      	str	r2, [r3, #12]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 800568e:	e9d4 2104 	ldrd	r2, r1, [r4, #16]
 8005692:	430a      	orrs	r2, r1
                          (hi2c->Init.OwnAddress2Masks << 8));
 8005694:	69a1      	ldr	r1, [r4, #24]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005696:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800569a:	60da      	str	r2, [r3, #12]
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 800569c:	e9d4 2107 	ldrd	r2, r1, [r4, #28]
 80056a0:	430a      	orrs	r2, r1
 80056a2:	601a      	str	r2, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
 80056a4:	681a      	ldr	r2, [r3, #0]
 80056a6:	f042 0201 	orr.w	r2, r2, #1
 80056aa:	601a      	str	r2, [r3, #0]
  hi2c->State = HAL_I2C_STATE_READY;
 80056ac:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80056ae:	6460      	str	r0, [r4, #68]	; 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 80056b0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80056b4:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80056b6:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 80056ba:	bd10      	pop	{r4, pc}
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80056bc:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80056c0:	2902      	cmp	r1, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80056c2:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80056c4:	d1d8      	bne.n	8005678 <HAL_I2C_Init+0x48>
    hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 80056c6:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80056ca:	605a      	str	r2, [r3, #4]
 80056cc:	e7d4      	b.n	8005678 <HAL_I2C_Init+0x48>
    return HAL_ERROR;
 80056ce:	2001      	movs	r0, #1
 80056d0:	e7f3      	b.n	80056ba <HAL_I2C_Init+0x8a>

080056d2 <HAL_I2C_MspDeInit>:
 80056d2:	4770      	bx	lr

080056d4 <HAL_I2C_DeInit>:
{
 80056d4:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 80056d6:	4604      	mov	r4, r0
 80056d8:	b198      	cbz	r0, 8005702 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 80056da:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 80056dc:	2324      	movs	r3, #36	; 0x24
 80056de:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
  __HAL_I2C_DISABLE(hi2c);
 80056e2:	6813      	ldr	r3, [r2, #0]
 80056e4:	f023 0301 	bic.w	r3, r3, #1
 80056e8:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 80056ea:	f7ff fff2 	bl	80056d2 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80056ee:	2000      	movs	r0, #0
 80056f0:	6460      	str	r0, [r4, #68]	; 0x44
  __HAL_UNLOCK(hi2c);
 80056f2:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_RESET;
 80056f6:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 80056fa:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80056fc:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
}
 8005700:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005702:	2001      	movs	r0, #1
 8005704:	e7fc      	b.n	8005700 <HAL_I2C_DeInit+0x2c>

08005706 <HAL_I2C_Mem_Write>:
{
 8005706:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800570a:	b085      	sub	sp, #20
 800570c:	469b      	mov	fp, r3
 800570e:	4604      	mov	r4, r0
 8005710:	460f      	mov	r7, r1
 8005712:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005716:	4692      	mov	sl, r2
 8005718:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 800571c:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
 800571e:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005722:	2b20      	cmp	r3, #32
 8005724:	f040 80a3 	bne.w	800586e <HAL_I2C_Mem_Write+0x168>
    if ((pData == NULL) || (Size == 0U))
 8005728:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800572a:	b10b      	cbz	r3, 8005730 <HAL_I2C_Mem_Write+0x2a>
 800572c:	9b03      	ldr	r3, [sp, #12]
 800572e:	b933      	cbnz	r3, 800573e <HAL_I2C_Mem_Write+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005730:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005734:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 8005736:	2001      	movs	r0, #1
}
 8005738:	b005      	add	sp, #20
 800573a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 800573e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005742:	2b01      	cmp	r3, #1
 8005744:	f000 8093 	beq.w	800586e <HAL_I2C_Mem_Write+0x168>
 8005748:	2501      	movs	r5, #1
 800574a:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 800574e:	f7ff f81d 	bl	800478c <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005752:	2319      	movs	r3, #25
 8005754:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 8005756:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005758:	462a      	mov	r2, r5
 800575a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800575e:	4620      	mov	r0, r4
 8005760:	f7ff fea9 	bl	80054b6 <I2C_WaitOnFlagUntilTimeout>
 8005764:	4680      	mov	r8, r0
 8005766:	2800      	cmp	r0, #0
 8005768:	d1e5      	bne.n	8005736 <HAL_I2C_Mem_Write+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800576a:	2321      	movs	r3, #33	; 0x21
    hi2c->XferISR   = NULL;
 800576c:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800576e:	4652      	mov	r2, sl
 8005770:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005772:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005776:	2340      	movs	r3, #64	; 0x40
 8005778:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 800577c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800577e:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005780:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 8005782:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 8005784:	9b03      	ldr	r3, [sp, #12]
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005786:	e9cd 9600 	strd	r9, r6, [sp]
    hi2c->XferCount = Size;
 800578a:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800578c:	465b      	mov	r3, fp
 800578e:	f7ff febd 	bl	800550c <I2C_RequestMemoryWrite>
 8005792:	b110      	cbz	r0, 800579a <HAL_I2C_Mem_Write+0x94>
      __HAL_UNLOCK(hi2c);
 8005794:	f884 8040 	strb.w	r8, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005798:	e7cd      	b.n	8005736 <HAL_I2C_Mem_Write+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800579a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800579c:	b29b      	uxth	r3, r3
 800579e:	2bff      	cmp	r3, #255	; 0xff
 80057a0:	d955      	bls.n	800584e <HAL_I2C_Mem_Write+0x148>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80057a2:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 80057a4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80057a8:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80057aa:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 80057ac:	4639      	mov	r1, r7
 80057ae:	4620      	mov	r0, r4
 80057b0:	f7ff fdba 	bl	8005328 <I2C_TransferConfig>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80057b4:	4632      	mov	r2, r6
 80057b6:	4649      	mov	r1, r9
 80057b8:	4620      	mov	r0, r4
 80057ba:	f7ff fe55 	bl	8005468 <I2C_WaitOnTXISFlagUntilTimeout>
 80057be:	2800      	cmp	r0, #0
 80057c0:	d1b9      	bne.n	8005736 <HAL_I2C_Mem_Write+0x30>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 80057c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80057c4:	6822      	ldr	r2, [r4, #0]
 80057c6:	f813 1b01 	ldrb.w	r1, [r3], #1
 80057ca:	6291      	str	r1, [r2, #40]	; 0x28
      hi2c->pBuffPtr++;
 80057cc:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80057ce:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80057d0:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80057d2:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 80057d4:	3a01      	subs	r2, #1
      hi2c->XferCount--;
 80057d6:	b29b      	uxth	r3, r3
      hi2c->XferSize--;
 80057d8:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 80057da:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80057dc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80057de:	8522      	strh	r2, [r4, #40]	; 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80057e0:	b29b      	uxth	r3, r3
 80057e2:	b1ab      	cbz	r3, 8005810 <HAL_I2C_Mem_Write+0x10a>
 80057e4:	b9a2      	cbnz	r2, 8005810 <HAL_I2C_Mem_Write+0x10a>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80057e6:	464b      	mov	r3, r9
 80057e8:	2180      	movs	r1, #128	; 0x80
 80057ea:	4620      	mov	r0, r4
 80057ec:	9600      	str	r6, [sp, #0]
 80057ee:	f7ff fe62 	bl	80054b6 <I2C_WaitOnFlagUntilTimeout>
 80057f2:	2800      	cmp	r0, #0
 80057f4:	d19f      	bne.n	8005736 <HAL_I2C_Mem_Write+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80057f6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80057f8:	b29b      	uxth	r3, r3
 80057fa:	2bff      	cmp	r3, #255	; 0xff
 80057fc:	d92f      	bls.n	800585e <HAL_I2C_Mem_Write+0x158>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80057fe:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005800:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8005804:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005806:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005808:	4639      	mov	r1, r7
 800580a:	4620      	mov	r0, r4
 800580c:	f7ff fd8c 	bl	8005328 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005810:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005812:	b29b      	uxth	r3, r3
 8005814:	2b00      	cmp	r3, #0
 8005816:	d1cd      	bne.n	80057b4 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005818:	4632      	mov	r2, r6
 800581a:	4649      	mov	r1, r9
 800581c:	4620      	mov	r0, r4
 800581e:	f7ff fee1 	bl	80055e4 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005822:	2800      	cmp	r0, #0
 8005824:	d187      	bne.n	8005736 <HAL_I2C_Mem_Write+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005826:	6823      	ldr	r3, [r4, #0]
 8005828:	2120      	movs	r1, #32
 800582a:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 800582c:	685a      	ldr	r2, [r3, #4]
 800582e:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 8005832:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 8005836:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 800583a:	f022 0201 	bic.w	r2, r2, #1
 800583e:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 8005840:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005844:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005848:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 800584c:	e774      	b.n	8005738 <HAL_I2C_Mem_Write+0x32>
      hi2c->XferSize = hi2c->XferCount;
 800584e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005850:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005854:	9000      	str	r0, [sp, #0]
      hi2c->XferSize = hi2c->XferCount;
 8005856:	b292      	uxth	r2, r2
 8005858:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 800585a:	b2d2      	uxtb	r2, r2
 800585c:	e7a6      	b.n	80057ac <HAL_I2C_Mem_Write+0xa6>
          hi2c->XferSize = hi2c->XferCount;
 800585e:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005860:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005864:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 8005866:	b292      	uxth	r2, r2
 8005868:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800586a:	b2d2      	uxtb	r2, r2
 800586c:	e7cc      	b.n	8005808 <HAL_I2C_Mem_Write+0x102>
    return HAL_BUSY;
 800586e:	2002      	movs	r0, #2
 8005870:	e762      	b.n	8005738 <HAL_I2C_Mem_Write+0x32>
	...

08005874 <HAL_I2C_Mem_Read>:
{
 8005874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005878:	b085      	sub	sp, #20
 800587a:	469b      	mov	fp, r3
 800587c:	4604      	mov	r4, r0
 800587e:	460f      	mov	r7, r1
 8005880:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8005884:	4692      	mov	sl, r2
 8005886:	f8dd 9040 	ldr.w	r9, [sp, #64]	; 0x40
 800588a:	9303      	str	r3, [sp, #12]
  if (hi2c->State == HAL_I2C_STATE_READY)
 800588c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005890:	2b20      	cmp	r3, #32
 8005892:	f040 80a7 	bne.w	80059e4 <HAL_I2C_Mem_Read+0x170>
    if ((pData == NULL) || (Size == 0U))
 8005896:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005898:	b10b      	cbz	r3, 800589e <HAL_I2C_Mem_Read+0x2a>
 800589a:	9b03      	ldr	r3, [sp, #12]
 800589c:	b933      	cbnz	r3, 80058ac <HAL_I2C_Mem_Read+0x38>
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 800589e:	f44f 7300 	mov.w	r3, #512	; 0x200
 80058a2:	6463      	str	r3, [r4, #68]	; 0x44
      return HAL_ERROR;
 80058a4:	2001      	movs	r0, #1
}
 80058a6:	b005      	add	sp, #20
 80058a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    __HAL_LOCK(hi2c);
 80058ac:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 80058b0:	2b01      	cmp	r3, #1
 80058b2:	f000 8097 	beq.w	80059e4 <HAL_I2C_Mem_Read+0x170>
 80058b6:	2501      	movs	r5, #1
 80058b8:	f880 5040 	strb.w	r5, [r0, #64]	; 0x40
    tickstart = HAL_GetTick();
 80058bc:	f7fe ff66 	bl	800478c <HAL_GetTick>
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80058c0:	2319      	movs	r3, #25
 80058c2:	9000      	str	r0, [sp, #0]
    tickstart = HAL_GetTick();
 80058c4:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 80058c6:	462a      	mov	r2, r5
 80058c8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80058cc:	4620      	mov	r0, r4
 80058ce:	f7ff fdf2 	bl	80054b6 <I2C_WaitOnFlagUntilTimeout>
 80058d2:	4680      	mov	r8, r0
 80058d4:	2800      	cmp	r0, #0
 80058d6:	d1e5      	bne.n	80058a4 <HAL_I2C_Mem_Read+0x30>
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80058d8:	2322      	movs	r3, #34	; 0x22
    hi2c->XferISR   = NULL;
 80058da:	6360      	str	r0, [r4, #52]	; 0x34
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80058dc:	4652      	mov	r2, sl
 80058de:	4639      	mov	r1, r7
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 80058e0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80058e4:	2340      	movs	r3, #64	; 0x40
 80058e6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
    hi2c->pBuffPtr  = pData;
 80058ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80058ec:	6460      	str	r0, [r4, #68]	; 0x44
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80058ee:	4620      	mov	r0, r4
    hi2c->pBuffPtr  = pData;
 80058f0:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount = Size;
 80058f2:	9b03      	ldr	r3, [sp, #12]
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80058f4:	e9cd 9600 	strd	r9, r6, [sp]
    hi2c->XferCount = Size;
 80058f8:	8563      	strh	r3, [r4, #42]	; 0x2a
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80058fa:	465b      	mov	r3, fp
 80058fc:	f7ff fe3c 	bl	8005578 <I2C_RequestMemoryRead>
 8005900:	b110      	cbz	r0, 8005908 <HAL_I2C_Mem_Read+0x94>
      __HAL_UNLOCK(hi2c);
 8005902:	f884 8040 	strb.w	r8, [r4, #64]	; 0x40
      return HAL_ERROR;
 8005906:	e7cd      	b.n	80058a4 <HAL_I2C_Mem_Read+0x30>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005908:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800590a:	b29b      	uxth	r3, r3
 800590c:	2bff      	cmp	r3, #255	; 0xff
 800590e:	4b36      	ldr	r3, [pc, #216]	; (80059e8 <HAL_I2C_Mem_Read+0x174>)
 8005910:	d958      	bls.n	80059c4 <HAL_I2C_Mem_Read+0x150>
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005912:	22ff      	movs	r2, #255	; 0xff
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005914:	9300      	str	r3, [sp, #0]
 8005916:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
      hi2c->XferSize = MAX_NBYTE_SIZE;
 800591a:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800591c:	4639      	mov	r1, r7
 800591e:	4620      	mov	r0, r4
 8005920:	f7ff fd02 	bl	8005328 <I2C_TransferConfig>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8005924:	464b      	mov	r3, r9
 8005926:	2200      	movs	r2, #0
 8005928:	2104      	movs	r1, #4
 800592a:	4620      	mov	r0, r4
 800592c:	9600      	str	r6, [sp, #0]
 800592e:	f7ff fdc2 	bl	80054b6 <I2C_WaitOnFlagUntilTimeout>
 8005932:	2800      	cmp	r0, #0
 8005934:	d1b6      	bne.n	80058a4 <HAL_I2C_Mem_Read+0x30>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8005936:	6823      	ldr	r3, [r4, #0]
 8005938:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800593a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800593c:	701a      	strb	r2, [r3, #0]
      hi2c->pBuffPtr++;
 800593e:	6a63      	ldr	r3, [r4, #36]	; 0x24
      hi2c->XferSize--;
 8005940:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      hi2c->pBuffPtr++;
 8005942:	3301      	adds	r3, #1
      hi2c->XferSize--;
 8005944:	3a01      	subs	r2, #1
      hi2c->pBuffPtr++;
 8005946:	6263      	str	r3, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8005948:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800594a:	b292      	uxth	r2, r2
      hi2c->XferCount--;
 800594c:	3b01      	subs	r3, #1
      hi2c->XferSize--;
 800594e:	8522      	strh	r2, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8005950:	b29b      	uxth	r3, r3
 8005952:	8563      	strh	r3, [r4, #42]	; 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005954:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005956:	b29b      	uxth	r3, r3
 8005958:	b1ab      	cbz	r3, 8005986 <HAL_I2C_Mem_Read+0x112>
 800595a:	b9a2      	cbnz	r2, 8005986 <HAL_I2C_Mem_Read+0x112>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800595c:	464b      	mov	r3, r9
 800595e:	2180      	movs	r1, #128	; 0x80
 8005960:	4620      	mov	r0, r4
 8005962:	9600      	str	r6, [sp, #0]
 8005964:	f7ff fda7 	bl	80054b6 <I2C_WaitOnFlagUntilTimeout>
 8005968:	2800      	cmp	r0, #0
 800596a:	d19b      	bne.n	80058a4 <HAL_I2C_Mem_Read+0x30>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 800596c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800596e:	b29b      	uxth	r3, r3
 8005970:	2bff      	cmp	r3, #255	; 0xff
 8005972:	d92f      	bls.n	80059d4 <HAL_I2C_Mem_Read+0x160>
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005974:	22ff      	movs	r2, #255	; 0xff
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005976:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800597a:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = MAX_NBYTE_SIZE;
 800597c:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800597e:	4639      	mov	r1, r7
 8005980:	4620      	mov	r0, r4
 8005982:	f7ff fcd1 	bl	8005328 <I2C_TransferConfig>
    } while (hi2c->XferCount > 0U);
 8005986:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8005988:	b29b      	uxth	r3, r3
 800598a:	2b00      	cmp	r3, #0
 800598c:	d1ca      	bne.n	8005924 <HAL_I2C_Mem_Read+0xb0>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800598e:	4632      	mov	r2, r6
 8005990:	4649      	mov	r1, r9
 8005992:	4620      	mov	r0, r4
 8005994:	f7ff fe26 	bl	80055e4 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005998:	2800      	cmp	r0, #0
 800599a:	d183      	bne.n	80058a4 <HAL_I2C_Mem_Read+0x30>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800599c:	6823      	ldr	r3, [r4, #0]
 800599e:	2120      	movs	r1, #32
 80059a0:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
 80059a2:	685a      	ldr	r2, [r3, #4]
 80059a4:	f022 72ff 	bic.w	r2, r2, #33423360	; 0x1fe0000
 80059a8:	f422 328b 	bic.w	r2, r2, #71168	; 0x11600
 80059ac:	f422 72ff 	bic.w	r2, r2, #510	; 0x1fe
 80059b0:	f022 0201 	bic.w	r2, r2, #1
 80059b4:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
 80059b6:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 80059ba:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80059be:	f884 0042 	strb.w	r0, [r4, #66]	; 0x42
    return HAL_OK;
 80059c2:	e770      	b.n	80058a6 <HAL_I2C_Mem_Read+0x32>
      hi2c->XferSize = hi2c->XferCount;
 80059c4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80059c6:	9300      	str	r3, [sp, #0]
 80059c8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
      hi2c->XferSize = hi2c->XferCount;
 80059cc:	b292      	uxth	r2, r2
 80059ce:	8522      	strh	r2, [r4, #40]	; 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80059d0:	b2d2      	uxtb	r2, r2
 80059d2:	e7a3      	b.n	800591c <HAL_I2C_Mem_Read+0xa8>
          hi2c->XferSize = hi2c->XferCount;
 80059d4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80059d6:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 80059da:	9000      	str	r0, [sp, #0]
          hi2c->XferSize = hi2c->XferCount;
 80059dc:	b292      	uxth	r2, r2
 80059de:	8522      	strh	r2, [r4, #40]	; 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80059e0:	b2d2      	uxtb	r2, r2
 80059e2:	e7cc      	b.n	800597e <HAL_I2C_Mem_Read+0x10a>
    return HAL_BUSY;
 80059e4:	2002      	movs	r0, #2
 80059e6:	e75e      	b.n	80058a6 <HAL_I2C_Mem_Read+0x32>
 80059e8:	80002400 	.word	0x80002400

080059ec <HAL_I2C_GetState>:
  return hi2c->State;
 80059ec:	f890 0041 	ldrb.w	r0, [r0, #65]	; 0x41
}
 80059f0:	4770      	bx	lr

080059f2 <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
 80059f2:	6c40      	ldr	r0, [r0, #68]	; 0x44
}
 80059f4:	4770      	bx	lr

080059f6 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80059f6:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80059f8:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80059fc:	2b20      	cmp	r3, #32
 80059fe:	b2dc      	uxtb	r4, r3
 8005a00:	d11d      	bne.n	8005a3e <HAL_I2CEx_ConfigAnalogFilter+0x48>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005a02:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005a06:	2b01      	cmp	r3, #1
 8005a08:	d019      	beq.n	8005a3e <HAL_I2CEx_ConfigAnalogFilter+0x48>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005a0a:	2324      	movs	r3, #36	; 0x24
 8005a0c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005a10:	6803      	ldr	r3, [r0, #0]
 8005a12:	681a      	ldr	r2, [r3, #0]
 8005a14:	f022 0201 	bic.w	r2, r2, #1
 8005a18:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8005a1a:	681a      	ldr	r2, [r3, #0]
 8005a1c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8005a20:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005a22:	681a      	ldr	r2, [r3, #0]
 8005a24:	4311      	orrs	r1, r2
 8005a26:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005a28:	681a      	ldr	r2, [r3, #0]
 8005a2a:	f042 0201 	orr.w	r2, r2, #1
 8005a2e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005a30:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8005a32:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005a36:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8005a3a:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005a3c:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005a3e:	2002      	movs	r0, #2
 8005a40:	e7fc      	b.n	8005a3c <HAL_I2CEx_ConfigAnalogFilter+0x46>

08005a42 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005a42:	b510      	push	{r4, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005a44:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8005a48:	2b20      	cmp	r3, #32
 8005a4a:	b2dc      	uxtb	r4, r3
 8005a4c:	d11c      	bne.n	8005a88 <HAL_I2CEx_ConfigDigitalFilter+0x46>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005a4e:	f890 3040 	ldrb.w	r3, [r0, #64]	; 0x40
 8005a52:	2b01      	cmp	r3, #1
 8005a54:	d018      	beq.n	8005a88 <HAL_I2CEx_ConfigDigitalFilter+0x46>

    hi2c->State = HAL_I2C_STATE_BUSY;
 8005a56:	2324      	movs	r3, #36	; 0x24
 8005a58:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005a5c:	6803      	ldr	r3, [r0, #0]
 8005a5e:	681a      	ldr	r2, [r3, #0]
 8005a60:	f022 0201 	bic.w	r2, r2, #1
 8005a64:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005a66:	681a      	ldr	r2, [r3, #0]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8005a68:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005a6c:	ea42 2101 	orr.w	r1, r2, r1, lsl #8

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8005a70:	6019      	str	r1, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005a72:	681a      	ldr	r2, [r3, #0]
 8005a74:	f042 0201 	orr.w	r2, r2, #1
 8005a78:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005a7a:	2300      	movs	r3, #0
    hi2c->State = HAL_I2C_STATE_READY;
 8005a7c:	f880 4041 	strb.w	r4, [r0, #65]	; 0x41
    __HAL_UNLOCK(hi2c);
 8005a80:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40

    return HAL_OK;
 8005a84:	4618      	mov	r0, r3
  }
  else
  {
    return HAL_BUSY;
  }
}
 8005a86:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8005a88:	2002      	movs	r0, #2
 8005a8a:	e7fc      	b.n	8005a86 <HAL_I2CEx_ConfigDigitalFilter+0x44>

08005a8c <LTDC_SetConfig>:
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005a8c:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a8e:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005a90:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005a94:	3284      	adds	r2, #132	; 0x84
 8005a96:	1883      	adds	r3, r0, r2
{
 8005a98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005a9c:	68c6      	ldr	r6, [r0, #12]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005a9e:	f10c 0701 	add.w	r7, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005aa2:	685d      	ldr	r5, [r3, #4]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005aa4:	f04f 0e00 	mov.w	lr, #0
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005aa8:	684c      	ldr	r4, [r1, #4]
 8005aaa:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005aae:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005ab2:	f8d1 9018 	ldr.w	r9, [r1, #24]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005ab6:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005ab8:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005aba:	68c5      	ldr	r5, [r0, #12]
 8005abc:	f3c5 450b 	ubfx	r5, r5, #16, #12
 8005ac0:	443d      	add	r5, r7
 8005ac2:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005ac6:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005ac8:	68c6      	ldr	r6, [r0, #12]
 8005aca:	68cd      	ldr	r5, [r1, #12]
 8005acc:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005ad0:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005ad2:	689d      	ldr	r5, [r3, #8]
 8005ad4:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8005ad8:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005ada:	688d      	ldr	r5, [r1, #8]
 8005adc:	68c7      	ldr	r7, [r0, #12]
 8005ade:	3501      	adds	r5, #1
 8005ae0:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8005ae4:	443d      	add	r5, r7
 8005ae6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005aea:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005aec:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005aee:	691d      	ldr	r5, [r3, #16]
 8005af0:	f025 0507 	bic.w	r5, r5, #7
 8005af4:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005af6:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005af8:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005afa:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005afe:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005b02:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005b06:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005b0a:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005b0e:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005b12:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8005b16:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005b18:	695d      	ldr	r5, [r3, #20]
 8005b1a:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8005b1e:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005b20:	694d      	ldr	r5, [r1, #20]
 8005b22:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005b24:	69dd      	ldr	r5, [r3, #28]
 8005b26:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8005b2a:	f025 0507 	bic.w	r5, r5, #7
 8005b2e:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8005b30:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8005b34:	433d      	orrs	r5, r7
 8005b36:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005b38:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005b3a:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8005b3c:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8005b40:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005b42:	b1fe      	cbz	r6, 8005b84 <LTDC_SetConfig+0xf8>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005b44:	3e01      	subs	r6, #1
 8005b46:	2e06      	cmp	r6, #6
 8005b48:	d81e      	bhi.n	8005b88 <LTDC_SetConfig+0xfc>
 8005b4a:	4d10      	ldr	r5, [pc, #64]	; (8005b8c <LTDC_SetConfig+0x100>)
 8005b4c:	5dad      	ldrb	r5, [r5, r6]
  {
    tmp = 1U;
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005b4e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005b50:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005b54:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005b58:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005b5a:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005b5c:	3407      	adds	r4, #7
 8005b5e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005b60:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005b62:	436e      	muls	r6, r5
 8005b64:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8005b68:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005b6a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8005b6c:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8005b70:	f024 0407 	bic.w	r4, r4, #7
 8005b74:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8005b76:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8005b78:	5883      	ldr	r3, [r0, r2]
 8005b7a:	f043 0301 	orr.w	r3, r3, #1
 8005b7e:	5083      	str	r3, [r0, r2]
}
 8005b80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005b84:	2504      	movs	r5, #4
 8005b86:	e7e2      	b.n	8005b4e <LTDC_SetConfig+0xc2>
  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005b88:	2501      	movs	r5, #1
 8005b8a:	e7e0      	b.n	8005b4e <LTDC_SetConfig+0xc2>
 8005b8c:	0801ece8 	.word	0x0801ece8

08005b90 <HAL_LTDC_Init>:
{
 8005b90:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005b92:	4604      	mov	r4, r0
 8005b94:	2800      	cmp	r0, #0
 8005b96:	d063      	beq.n	8005c60 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005b98:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8005b9c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005ba0:	b91b      	cbnz	r3, 8005baa <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005ba2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005ba6:	f7fa ff59 	bl	8000a5c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005baa:	2302      	movs	r3, #2
 8005bac:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005bb0:	6823      	ldr	r3, [r4, #0]
 8005bb2:	699a      	ldr	r2, [r3, #24]
 8005bb4:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005bb8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005bba:	6999      	ldr	r1, [r3, #24]
 8005bbc:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8005bc0:	4302      	orrs	r2, r0
 8005bc2:	68e0      	ldr	r0, [r4, #12]
 8005bc4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005bc6:	6920      	ldr	r0, [r4, #16]
 8005bc8:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005bca:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005bcc:	430a      	orrs	r2, r1
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005bce:	4925      	ldr	r1, [pc, #148]	; (8005c64 <HAL_LTDC_Init+0xd4>)
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005bd0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005bd2:	689a      	ldr	r2, [r3, #8]
 8005bd4:	400a      	ands	r2, r1
 8005bd6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005bd8:	689a      	ldr	r2, [r3, #8]
 8005bda:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005bde:	69a0      	ldr	r0, [r4, #24]
 8005be0:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005be2:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005be4:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005be6:	68da      	ldr	r2, [r3, #12]
 8005be8:	400a      	ands	r2, r1
 8005bea:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005bec:	68da      	ldr	r2, [r3, #12]
 8005bee:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005bf2:	6a20      	ldr	r0, [r4, #32]
 8005bf4:	4302      	orrs	r2, r0
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8005bf6:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8005bf8:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005bfa:	691a      	ldr	r2, [r3, #16]
 8005bfc:	400a      	ands	r2, r1
 8005bfe:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005c00:	691a      	ldr	r2, [r3, #16]
 8005c02:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005c06:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005c08:	4302      	orrs	r2, r0
 8005c0a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005c0c:	695a      	ldr	r2, [r3, #20]
 8005c0e:	400a      	ands	r2, r1
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005c10:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8005c12:	615a      	str	r2, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005c14:	695a      	ldr	r2, [r3, #20]
 8005c16:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005c1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005c1c:	430a      	orrs	r2, r1
 8005c1e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005c20:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8005c22:	f894 0035 	ldrb.w	r0, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005c26:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005c2a:	f894 1036 	ldrb.w	r1, [r4, #54]	; 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005c2e:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005c30:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8005c32:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8005c36:	432a      	orrs	r2, r5
 8005c38:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005c3c:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005c3e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8005c42:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8005c44:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005c46:	f042 0206 	orr.w	r2, r2, #6
 8005c4a:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8005c4c:	699a      	ldr	r2, [r3, #24]
 8005c4e:	f042 0201 	orr.w	r2, r2, #1
 8005c52:	619a      	str	r2, [r3, #24]
  hltdc->State = HAL_LTDC_STATE_READY;
 8005c54:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8005c56:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8005c5a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8005c5e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8005c60:	2001      	movs	r0, #1
 8005c62:	e7fc      	b.n	8005c5e <HAL_LTDC_Init+0xce>
 8005c64:	f000f800 	.word	0xf000f800

08005c68 <HAL_LTDC_ErrorCallback>:
 8005c68:	4770      	bx	lr

08005c6a <HAL_LTDC_ReloadEventCallback>:
 8005c6a:	4770      	bx	lr

08005c6c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005c6c:	6803      	ldr	r3, [r0, #0]
{
 8005c6e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005c70:	6b9e      	ldr	r6, [r3, #56]	; 0x38
{
 8005c72:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8005c74:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005c76:	0772      	lsls	r2, r6, #29
 8005c78:	d514      	bpl.n	8005ca4 <HAL_LTDC_IRQHandler+0x38>
 8005c7a:	0769      	lsls	r1, r5, #29
 8005c7c:	d512      	bpl.n	8005ca4 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005c7e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005c80:	f022 0204 	bic.w	r2, r2, #4
 8005c84:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005c86:	2204      	movs	r2, #4
 8005c88:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8005c8a:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005c8e:	f043 0301 	orr.w	r3, r3, #1
 8005c92:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005c96:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005c98:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005c9c:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005ca0:	f7ff ffe2 	bl	8005c68 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005ca4:	07b2      	lsls	r2, r6, #30
 8005ca6:	d516      	bpl.n	8005cd6 <HAL_LTDC_IRQHandler+0x6a>
 8005ca8:	07ab      	lsls	r3, r5, #30
 8005caa:	d514      	bpl.n	8005cd6 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005cac:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
 8005cae:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8005cb0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005cb2:	f022 0202 	bic.w	r2, r2, #2
 8005cb6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005cb8:	2202      	movs	r2, #2
 8005cba:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005cbc:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005cc0:	4313      	orrs	r3, r2
 8005cc2:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005cc6:	2304      	movs	r3, #4
 8005cc8:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005ccc:	2300      	movs	r3, #0
 8005cce:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005cd2:	f7ff ffc9 	bl	8005c68 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005cd6:	07f0      	lsls	r0, r6, #31
 8005cd8:	d510      	bpl.n	8005cfc <HAL_LTDC_IRQHandler+0x90>
 8005cda:	07e9      	lsls	r1, r5, #31
 8005cdc:	d50e      	bpl.n	8005cfc <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005cde:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
 8005ce0:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005ce2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005ce4:	f022 0201 	bic.w	r2, r2, #1
 8005ce8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8005cea:	2201      	movs	r2, #1
 8005cec:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8005cee:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005cf0:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005cf4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005cf8:	f7fc f8a8 	bl	8001e4c <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8005cfc:	0732      	lsls	r2, r6, #28
 8005cfe:	d511      	bpl.n	8005d24 <HAL_LTDC_IRQHandler+0xb8>
 8005d00:	072b      	lsls	r3, r5, #28
 8005d02:	d50f      	bpl.n	8005d24 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005d04:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005d06:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005d08:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005d0a:	f022 0208 	bic.w	r2, r2, #8
 8005d0e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005d10:	2208      	movs	r2, #8
 8005d12:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005d14:	2301      	movs	r3, #1
 8005d16:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005d1a:	2300      	movs	r3, #0
 8005d1c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8005d20:	f7ff ffa3 	bl	8005c6a <HAL_LTDC_ReloadEventCallback>
}
 8005d24:	bd70      	pop	{r4, r5, r6, pc}

08005d26 <HAL_LTDC_ConfigLayer>:
{
 8005d26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8005d2a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
{
 8005d2e:	4606      	mov	r6, r0
 8005d30:	460f      	mov	r7, r1
 8005d32:	4694      	mov	ip, r2
  __HAL_LOCK(hltdc);
 8005d34:	2b01      	cmp	r3, #1
 8005d36:	f04f 0002 	mov.w	r0, #2
 8005d3a:	d01f      	beq.n	8005d7c <HAL_LTDC_ConfigLayer+0x56>
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005d3c:	2434      	movs	r4, #52	; 0x34
  __HAL_LOCK(hltdc);
 8005d3e:	f04f 0801 	mov.w	r8, #1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005d42:	460d      	mov	r5, r1
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005d44:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005d48:	fb04 6402 	mla	r4, r4, r2, r6
  __HAL_LOCK(hltdc);
 8005d4c:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005d50:	3438      	adds	r4, #56	; 0x38
 8005d52:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005d54:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005d56:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005d58:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005d5a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005d5c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005d5e:	682b      	ldr	r3, [r5, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005d60:	4630      	mov	r0, r6
 8005d62:	4662      	mov	r2, ip
 8005d64:	4639      	mov	r1, r7
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005d66:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8005d68:	f7ff fe90 	bl	8005a8c <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005d6c:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8005d6e:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005d70:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8005d74:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005d78:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8005d7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005d80 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8005d80:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8005d84:	2b01      	cmp	r3, #1
 8005d86:	f04f 0302 	mov.w	r3, #2
 8005d8a:	d012      	beq.n	8005db2 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005d8c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005d90:	6803      	ldr	r3, [r0, #0]
 8005d92:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005d94:	f022 0201 	bic.w	r2, r2, #1
 8005d98:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8005d9a:	4a07      	ldr	r2, [pc, #28]	; (8005db8 <HAL_LTDC_ProgramLineEvent+0x38>)
 8005d9c:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8005d9e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005da0:	f042 0201 	orr.w	r2, r2, #1
 8005da4:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8005da6:	2301      	movs	r3, #1
 8005da8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005dac:	2300      	movs	r3, #0
 8005dae:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8005db2:	4618      	mov	r0, r3
}
 8005db4:	4770      	bx	lr
 8005db6:	bf00      	nop
 8005db8:	50001000 	.word	0x50001000

08005dbc <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
 8005dbc:	b538      	push	{r3, r4, r5, lr}
 8005dbe:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005dc0:	f7fe fce4 	bl	800478c <HAL_GetTick>
 8005dc4:	4605      	mov	r5, r0

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
 8005dc6:	2c00      	cmp	r4, #0
 8005dc8:	d061      	beq.n	8005e8e <HAL_MDMA_Init+0xd2>
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.SourceBlockAddressOffset));
  assert_param(IS_MDMA_BLOCK_ADDR_OFFSET(hmdma->Init.DestBlockAddressOffset));


  /* Allocate lock resource */
  __HAL_UNLOCK(hmdma);
 8005dca:	2300      	movs	r3, #0

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
 8005dcc:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hmdma);
 8005dce:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
  hmdma->State = HAL_MDMA_STATE_BUSY;
 8005dd2:	2302      	movs	r3, #2
 8005dd4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_MDMA_DISABLE(hmdma);
 8005dd8:	68d3      	ldr	r3, [r2, #12]
 8005dda:	f023 0301 	bic.w	r3, r3, #1
 8005dde:	60d3      	str	r3, [r2, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 8005de0:	6823      	ldr	r3, [r4, #0]
 8005de2:	68da      	ldr	r2, [r3, #12]
 8005de4:	07d2      	lsls	r2, r2, #31
 8005de6:	d448      	bmi.n	8005e7a <HAL_MDMA_Init+0xbe>
static void MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
  uint32_t blockoffset;

  /* Prepare the MDMA Channel configuration */
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
 8005de8:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 8005dec:	430a      	orrs	r2, r1
 8005dee:	60da      	str	r2, [r3, #12]
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
 8005df0:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 8005df4:	430a      	orrs	r2, r1
 8005df6:	69e1      	ldr	r1, [r4, #28]
 8005df8:	430a      	orrs	r2, r1
 8005dfa:	6a21      	ldr	r1, [r4, #32]
 8005dfc:	430a      	orrs	r2, r1
 8005dfe:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8005e00:	430a      	orrs	r2, r1
 8005e02:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8005e04:	430a      	orrs	r2, r1
 8005e06:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8005e08:	430a      	orrs	r2, r1
 8005e0a:	68a1      	ldr	r1, [r4, #8]
 8005e0c:	430a      	orrs	r2, r1
 8005e0e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8005e10:	3901      	subs	r1, #1
 8005e12:	ea42 4281 	orr.w	r2, r2, r1, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 8005e16:	6861      	ldr	r1, [r4, #4]
 8005e18:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
 8005e1c:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
 8005e1e:	d103      	bne.n	8005e28 <HAL_MDMA_Init+0x6c>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
 8005e20:	691a      	ldr	r2, [r3, #16]
 8005e22:	f042 4240 	orr.w	r2, r2, #3221225472	; 0xc0000000
 8005e26:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
 8005e28:	2200      	movs	r2, #0
 8005e2a:	615a      	str	r2, [r3, #20]

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
 8005e2c:	6b62      	ldr	r2, [r4, #52]	; 0x34
 8005e2e:	2a00      	cmp	r2, #0
 8005e30:	da04      	bge.n	8005e3c <HAL_MDMA_Init+0x80>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 8005e32:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : source repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
 8005e34:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
 8005e36:	f440 2080 	orr.w	r0, r0, #262144	; 0x40000
 8005e3a:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
 8005e3c:	b292      	uxth	r2, r2
 8005e3e:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
 8005e40:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005e42:	2a00      	cmp	r2, #0
 8005e44:	da25      	bge.n	8005e92 <HAL_MDMA_Init+0xd6>
  {
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 8005e46:	6958      	ldr	r0, [r3, #20]
    /* Write new CBRUR Register value : destination repeat block offset */
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
 8005e48:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
 8005e4a:	f440 2000 	orr.w	r0, r0, #524288	; 0x80000
 8005e4e:	6158      	str	r0, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8005e50:	6a18      	ldr	r0, [r3, #32]
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8005e52:	ea40 4202 	orr.w	r2, r0, r2, lsl #16
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 8005e56:	f1b1 4f80 	cmp.w	r1, #1073741824	; 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8005e5a:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
 8005e5c:	f04f 0200 	mov.w	r2, #0
 8005e60:	d019      	beq.n	8005e96 <HAL_MDMA_Init+0xda>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
 8005e62:	b2c9      	uxtb	r1, r1
 8005e64:	6299      	str	r1, [r3, #40]	; 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
 8005e66:	625a      	str	r2, [r3, #36]	; 0x24
  return HAL_OK;
 8005e68:	2000      	movs	r0, #0
  hmdma->State = HAL_MDMA_STATE_READY;
 8005e6a:	2301      	movs	r3, #1
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 8005e6c:	66a2      	str	r2, [r4, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 8005e6e:	6662      	str	r2, [r4, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
 8005e70:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hmdma->LastLinkedListNodeAddress   = 0;
 8005e74:	e9c4 2217 	strd	r2, r2, [r4, #92]	; 0x5c
}
 8005e78:	bd38      	pop	{r3, r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 8005e7a:	f7fe fc87 	bl	800478c <HAL_GetTick>
 8005e7e:	1b40      	subs	r0, r0, r5
 8005e80:	2805      	cmp	r0, #5
 8005e82:	d9ad      	bls.n	8005de0 <HAL_MDMA_Init+0x24>
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
 8005e84:	2340      	movs	r3, #64	; 0x40
 8005e86:	66a3      	str	r3, [r4, #104]	; 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
 8005e88:	2303      	movs	r3, #3
 8005e8a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    return HAL_ERROR;
 8005e8e:	2001      	movs	r0, #1
 8005e90:	e7f2      	b.n	8005e78 <HAL_MDMA_Init+0xbc>
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
 8005e92:	6a18      	ldr	r0, [r3, #32]
 8005e94:	e7dd      	b.n	8005e52 <HAL_MDMA_Init+0x96>
    hmdma->Instance->CTBR = 0;
 8005e96:	629a      	str	r2, [r3, #40]	; 0x28
 8005e98:	e7e5      	b.n	8005e66 <HAL_MDMA_Init+0xaa>

08005e9a <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
 8005e9a:	b1d8      	cbz	r0, 8005ed4 <HAL_MDMA_DeInit+0x3a>
  __HAL_MDMA_DISABLE(hmdma);
 8005e9c:	6802      	ldr	r2, [r0, #0]
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 8005e9e:	211f      	movs	r1, #31
  __HAL_MDMA_DISABLE(hmdma);
 8005ea0:	68d3      	ldr	r3, [r2, #12]
 8005ea2:	f023 0301 	bic.w	r3, r3, #1
 8005ea6:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CCR  = 0;
 8005ea8:	2300      	movs	r3, #0
 8005eaa:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
 8005eac:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
 8005eae:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
 8005eb0:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
 8005eb2:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
 8005eb4:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
 8005eb6:	6253      	str	r3, [r2, #36]	; 0x24
  hmdma->Instance->CTBR = 0;
 8005eb8:	6293      	str	r3, [r2, #40]	; 0x28
  hmdma->Instance->CMAR = 0;
 8005eba:	6313      	str	r3, [r2, #48]	; 0x30
  hmdma->Instance->CMDR = 0;
 8005ebc:	6353      	str	r3, [r2, #52]	; 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
 8005ebe:	6051      	str	r1, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
 8005ec0:	6683      	str	r3, [r0, #104]	; 0x68
  hmdma->LinkedListNodeCounter  = 0;
 8005ec2:	6643      	str	r3, [r0, #100]	; 0x64
  hmdma->State = HAL_MDMA_STATE_RESET;
 8005ec4:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_UNLOCK(hmdma);
 8005ec8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  hmdma->LastLinkedListNodeAddress   = 0;
 8005ecc:	e9c0 3317 	strd	r3, r3, [r0, #92]	; 0x5c
  return HAL_OK;
 8005ed0:	4618      	mov	r0, r3
 8005ed2:	4770      	bx	lr
    return HAL_ERROR;
 8005ed4:	2001      	movs	r0, #1
}
 8005ed6:	4770      	bx	lr

08005ed8 <HAL_MDMA_Abort>:
{
 8005ed8:	b538      	push	{r3, r4, r5, lr}
 8005eda:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
 8005edc:	f7fe fc56 	bl	800478c <HAL_GetTick>
 8005ee0:	4605      	mov	r5, r0
  if(hmdma == NULL)
 8005ee2:	b144      	cbz	r4, 8005ef6 <HAL_MDMA_Abort+0x1e>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
 8005ee4:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8005ee8:	2b02      	cmp	r3, #2
 8005eea:	d006      	beq.n	8005efa <HAL_MDMA_Abort+0x22>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 8005eec:	2380      	movs	r3, #128	; 0x80
 8005eee:	66a3      	str	r3, [r4, #104]	; 0x68
    __HAL_UNLOCK(hmdma);
 8005ef0:	2300      	movs	r3, #0
 8005ef2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    return HAL_ERROR;
 8005ef6:	2001      	movs	r0, #1
 8005ef8:	e015      	b.n	8005f26 <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
 8005efa:	6823      	ldr	r3, [r4, #0]
 8005efc:	68da      	ldr	r2, [r3, #12]
 8005efe:	f022 023e 	bic.w	r2, r2, #62	; 0x3e
 8005f02:	60da      	str	r2, [r3, #12]
    __HAL_MDMA_DISABLE(hmdma);
 8005f04:	68da      	ldr	r2, [r3, #12]
 8005f06:	f022 0201 	bic.w	r2, r2, #1
 8005f0a:	60da      	str	r2, [r3, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 8005f0c:	6822      	ldr	r2, [r4, #0]
 8005f0e:	68d3      	ldr	r3, [r2, #12]
 8005f10:	f013 0301 	ands.w	r3, r3, #1
 8005f14:	d108      	bne.n	8005f28 <HAL_MDMA_Abort+0x50>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8005f16:	211f      	movs	r1, #31
  return HAL_OK;
 8005f18:	4618      	mov	r0, r3
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 8005f1a:	6051      	str	r1, [r2, #4]
    hmdma->State = HAL_MDMA_STATE_READY;
 8005f1c:	2201      	movs	r2, #1
    __HAL_UNLOCK(hmdma);
 8005f1e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
 8005f22:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
}
 8005f26:	bd38      	pop	{r3, r4, r5, pc}
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 8005f28:	f7fe fc30 	bl	800478c <HAL_GetTick>
 8005f2c:	1b40      	subs	r0, r0, r5
 8005f2e:	2805      	cmp	r0, #5
 8005f30:	d9ec      	bls.n	8005f0c <HAL_MDMA_Abort+0x34>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
 8005f32:	6ea3      	ldr	r3, [r4, #104]	; 0x68
 8005f34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005f38:	66a3      	str	r3, [r4, #104]	; 0x68
        __HAL_UNLOCK(hmdma);
 8005f3a:	2300      	movs	r3, #0
 8005f3c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hmdma->State = HAL_MDMA_STATE_ERROR;
 8005f40:	2303      	movs	r3, #3
 8005f42:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        return HAL_ERROR;
 8005f46:	e7d6      	b.n	8005ef6 <HAL_MDMA_Abort+0x1e>

08005f48 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
 8005f48:	b128      	cbz	r0, 8005f56 <HAL_MDMA_Abort_IT+0xe>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
 8005f4a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8005f4e:	2b02      	cmp	r3, #2
 8005f50:	d003      	beq.n	8005f5a <HAL_MDMA_Abort_IT+0x12>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 8005f52:	2380      	movs	r3, #128	; 0x80
 8005f54:	6683      	str	r3, [r0, #104]	; 0x68
    return HAL_ERROR;
 8005f56:	2001      	movs	r0, #1
}
 8005f58:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
 8005f5a:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
 8005f5c:	2304      	movs	r3, #4
 8005f5e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  return HAL_OK;
 8005f62:	2000      	movs	r0, #0
    __HAL_MDMA_DISABLE(hmdma);
 8005f64:	68d3      	ldr	r3, [r2, #12]
 8005f66:	f023 0301 	bic.w	r3, r3, #1
 8005f6a:	60d3      	str	r3, [r2, #12]
  return HAL_OK;
 8005f6c:	4770      	bx	lr
	...

08005f70 <OSPI_ConfigCmd>:
  * @param  hospi : OSPI handle
  * @param  cmd   : structure that contains the command configuration information
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_ConfigCmd(OSPI_HandleTypeDef *hospi, OSPI_RegularCmdTypeDef *cmd)
{
 8005f70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, 0U);
 8005f74:	6804      	ldr	r4, [r0, #0]
 8005f76:	6823      	ldr	r3, [r4, #0]
 8005f78:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8005f7c:	6023      	str	r3, [r4, #0]

  /* Configure the flash ID */
  if (hospi->Init.DualQuad == HAL_OSPI_DUALQUAD_DISABLE)
 8005f7e:	6883      	ldr	r3, [r0, #8]
 8005f80:	b92b      	cbnz	r3, 8005f8e <OSPI_ConfigCmd+0x1e>
  {
    MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FSEL, cmd->FlashId);
 8005f82:	6823      	ldr	r3, [r4, #0]
 8005f84:	684a      	ldr	r2, [r1, #4]
 8005f86:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8005f8a:	4313      	orrs	r3, r2
 8005f8c:	6023      	str	r3, [r4, #0]
  }

  if (cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 8005f8e:	680b      	ldr	r3, [r1, #0]
 8005f90:	2b02      	cmp	r3, #2
 8005f92:	d150      	bne.n	8006036 <OSPI_ConfigCmd+0xc6>
  {
    ccr_reg = &(hospi->Instance->WCCR);
 8005f94:	f504 72c0 	add.w	r2, r4, #384	; 0x180
    tcr_reg = &(hospi->Instance->WTCR);
 8005f98:	f504 76c4 	add.w	r6, r4, #392	; 0x188
    ir_reg  = &(hospi->Instance->WIR);
 8005f9c:	f504 75c8 	add.w	r5, r4, #400	; 0x190
    abr_reg = &(hospi->Instance->WABR);
 8005fa0:	f504 7cd0 	add.w	ip, r4, #416	; 0x1a0
    ir_reg  = &(hospi->Instance->IR);
    abr_reg = &(hospi->Instance->ABR);
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (cmd->DQSMode | cmd->SIOOMode);
 8005fa4:	e9d1 3712 	ldrd	r3, r7, [r1, #72]	; 0x48
 8005fa8:	433b      	orrs	r3, r7
 8005faa:	6013      	str	r3, [r2, #0]

  if (cmd->AlternateBytesMode != HAL_OSPI_ALTERNATE_BYTES_NONE)
 8005fac:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005fae:	b16b      	cbz	r3, 8005fcc <OSPI_ConfigCmd+0x5c>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = cmd->AlternateBytes;
 8005fb0:	6a8b      	ldr	r3, [r1, #40]	; 0x28
 8005fb2:	f8cc 3000 	str.w	r3, [ip]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ABMODE | OCTOSPI_CCR_ABDTR | OCTOSPI_CCR_ABSIZE),
 8005fb6:	6b4f      	ldr	r7, [r1, #52]	; 0x34
 8005fb8:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005fba:	f8d2 c000 	ldr.w	ip, [r2]
 8005fbe:	433b      	orrs	r3, r7
 8005fc0:	6b0f      	ldr	r7, [r1, #48]	; 0x30
 8005fc2:	433b      	orrs	r3, r7
 8005fc4:	f42c 177c 	bic.w	r7, ip, #4128768	; 0x3f0000
 8005fc8:	433b      	orrs	r3, r7
 8005fca:	6013      	str	r3, [r2, #0]
                           (cmd->AlternateBytesMode | cmd->AlternateBytesDtrMode | cmd->AlternateBytesSize));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), OCTOSPI_TCR_DCYC, cmd->DummyCycles);
 8005fcc:	6833      	ldr	r3, [r6, #0]
 8005fce:	6c4f      	ldr	r7, [r1, #68]	; 0x44
 8005fd0:	f023 031f 	bic.w	r3, r3, #31
 8005fd4:	433b      	orrs	r3, r7
 8005fd6:	6033      	str	r3, [r6, #0]

  if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8005fd8:	f8d1 e038 	ldr.w	lr, [r1, #56]	; 0x38
 8005fdc:	f1be 0f00 	cmp.w	lr, #0
 8005fe0:	d004      	beq.n	8005fec <OSPI_ConfigCmd+0x7c>
  {
    if (cmd->OperationType == HAL_OSPI_OPTYPE_COMMON_CFG)
 8005fe2:	680b      	ldr	r3, [r1, #0]
 8005fe4:	b913      	cbnz	r3, 8005fec <OSPI_ConfigCmd+0x7c>
    {
      /* Configure the DLR register with the number of data */
      hospi->Instance->DLR = (cmd->NbData - 1U);
 8005fe6:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 8005fe8:	3b01      	subs	r3, #1
 8005fea:	6423      	str	r3, [r4, #64]	; 0x40
    }
  }

  if (cmd->InstructionMode != HAL_OSPI_INSTRUCTION_NONE)
 8005fec:	68cb      	ldr	r3, [r1, #12]
  {
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 8005fee:	f8d1 901c 	ldr.w	r9, [r1, #28]
  if (cmd->InstructionMode != HAL_OSPI_INSTRUCTION_NONE)
 8005ff2:	2b00      	cmp	r3, #0
 8005ff4:	d07a      	beq.n	80060ec <OSPI_ConfigCmd+0x17c>
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8005ff6:	e9d1 c804 	ldrd	ip, r8, [r1, #16]
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 8005ffa:	f1b9 0f00 	cmp.w	r9, #0
 8005ffe:	d04a      	beq.n	8006096 <OSPI_ConfigCmd+0x126>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 8006000:	e9d1 6708 	ldrd	r6, r7, [r1, #32]
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8006004:	f1be 0f00 	cmp.w	lr, #0
 8006008:	d029      	beq.n	800605e <OSPI_ConfigCmd+0xee>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 800600a:	ea4e 0303 	orr.w	r3, lr, r3
 800600e:	6810      	ldr	r0, [r2, #0]
 8006010:	ea43 0309 	orr.w	r3, r3, r9
 8006014:	ea43 0308 	orr.w	r3, r3, r8
 8006018:	ea43 030c 	orr.w	r3, r3, ip
 800601c:	433b      	orrs	r3, r7
 800601e:	4333      	orrs	r3, r6
 8006020:	6c0e      	ldr	r6, [r1, #64]	; 0x40
 8006022:	4333      	orrs	r3, r6
 8006024:	4e43      	ldr	r6, [pc, #268]	; (8006134 <OSPI_ConfigCmd+0x1c4>)
 8006026:	4006      	ands	r6, r0
 8006028:	4333      	orrs	r3, r6

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
            (cmd->InstructionDtrMode == HAL_OSPI_INSTRUCTION_DTR_ENABLE))
        {
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 800602a:	6013      	str	r3, [r2, #0]
        }
      }

      /* Configure the IR register with the instruction value */
      *ir_reg = cmd->Instruction;
 800602c:	688b      	ldr	r3, [r1, #8]
 800602e:	602b      	str	r3, [r5, #0]
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE),
                               (cmd->AddressMode | cmd->AddressDtrMode | cmd->AddressSize));
      }

      /* Configure the AR register with the instruction value */
      hospi->Instance->AR = cmd->Address;
 8006030:	698b      	ldr	r3, [r1, #24]
 8006032:	64a3      	str	r3, [r4, #72]	; 0x48
 8006034:	e043      	b.n	80060be <OSPI_ConfigCmd+0x14e>
  else if (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG)
 8006036:	2b03      	cmp	r3, #3
    ccr_reg = &(hospi->Instance->WPCCR);
 8006038:	bf01      	itttt	eq
 800603a:	f504 72a0 	addeq.w	r2, r4, #320	; 0x140
    tcr_reg = &(hospi->Instance->WPTCR);
 800603e:	f504 76a4 	addeq.w	r6, r4, #328	; 0x148
    ir_reg  = &(hospi->Instance->WPIR);
 8006042:	f504 75a8 	addeq.w	r5, r4, #336	; 0x150
    abr_reg = &(hospi->Instance->WPABR);
 8006046:	f504 7cb0 	addeq.w	ip, r4, #352	; 0x160
    ccr_reg = &(hospi->Instance->CCR);
 800604a:	bf1f      	itttt	ne
 800604c:	f504 7280 	addne.w	r2, r4, #256	; 0x100
    tcr_reg = &(hospi->Instance->TCR);
 8006050:	f504 7684 	addne.w	r6, r4, #264	; 0x108
    ir_reg  = &(hospi->Instance->IR);
 8006054:	f504 7588 	addne.w	r5, r4, #272	; 0x110
    abr_reg = &(hospi->Instance->ABR);
 8006058:	f504 7c90 	addne.w	ip, r4, #288	; 0x120
 800605c:	e7a2      	b.n	8005fa4 <OSPI_ConfigCmd+0x34>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 800605e:	ea43 0309 	orr.w	r3, r3, r9
 8006062:	f8d2 e000 	ldr.w	lr, [r2]
 8006066:	ea43 0308 	orr.w	r3, r3, r8
 800606a:	f42e 5e7c 	bic.w	lr, lr, #16128	; 0x3f00
 800606e:	ea43 030c 	orr.w	r3, r3, ip
 8006072:	f02e 0e3f 	bic.w	lr, lr, #63	; 0x3f
 8006076:	433b      	orrs	r3, r7
 8006078:	4333      	orrs	r3, r6
 800607a:	ea43 030e 	orr.w	r3, r3, lr
 800607e:	6013      	str	r3, [r2, #0]
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 8006080:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8006082:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8006086:	d1d1      	bne.n	800602c <OSPI_ConfigCmd+0xbc>
 8006088:	694b      	ldr	r3, [r1, #20]
 800608a:	2b08      	cmp	r3, #8
 800608c:	d1ce      	bne.n	800602c <OSPI_ConfigCmd+0xbc>
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 800608e:	6813      	ldr	r3, [r2, #0]
 8006090:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8006094:	e7c9      	b.n	800602a <OSPI_ConfigCmd+0xba>
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8006096:	f1be 0f00 	cmp.w	lr, #0
 800609a:	d013      	beq.n	80060c4 <OSPI_ConfigCmd+0x154>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE | OCTOSPI_CCR_IDTR | OCTOSPI_CCR_ISIZE |
 800609c:	ea4e 0303 	orr.w	r3, lr, r3
 80060a0:	6810      	ldr	r0, [r2, #0]
 80060a2:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 80060a4:	ea43 0308 	orr.w	r3, r3, r8
 80060a8:	f020 6070 	bic.w	r0, r0, #251658240	; 0xf000000
 80060ac:	ea43 030c 	orr.w	r3, r3, ip
 80060b0:	f020 003f 	bic.w	r0, r0, #63	; 0x3f
 80060b4:	4323      	orrs	r3, r4
 80060b6:	4303      	orrs	r3, r0
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 80060b8:	6013      	str	r3, [r2, #0]
      *ir_reg = cmd->Instruction;
 80060ba:	688b      	ldr	r3, [r1, #8]
 80060bc:	602b      	str	r3, [r5, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80060be:	2000      	movs	r0, #0
    }
  }

  /* Return function status */
  return status;
}
 80060c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE | OCTOSPI_CCR_IDTR | OCTOSPI_CCR_ISIZE),
 80060c4:	6814      	ldr	r4, [r2, #0]
 80060c6:	ea43 0308 	orr.w	r3, r3, r8
 80060ca:	f024 043f 	bic.w	r4, r4, #63	; 0x3f
 80060ce:	ea43 030c 	orr.w	r3, r3, ip
 80060d2:	4323      	orrs	r3, r4
 80060d4:	6013      	str	r3, [r2, #0]
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 80060d6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80060d8:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 80060dc:	d1ed      	bne.n	80060ba <OSPI_ConfigCmd+0x14a>
 80060de:	694b      	ldr	r3, [r1, #20]
 80060e0:	2b08      	cmp	r3, #8
 80060e2:	d1ea      	bne.n	80060ba <OSPI_ConfigCmd+0x14a>
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 80060e4:	6813      	ldr	r3, [r2, #0]
 80060e6:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 80060ea:	e7e5      	b.n	80060b8 <OSPI_ConfigCmd+0x148>
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 80060ec:	f1b9 0f00 	cmp.w	r9, #0
 80060f0:	d01b      	beq.n	800612a <OSPI_ConfigCmd+0x1ba>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 80060f2:	e9d1 6008 	ldrd	r6, r0, [r1, #32]
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 80060f6:	f1be 0f00 	cmp.w	lr, #0
 80060fa:	d00d      	beq.n	8006118 <OSPI_ConfigCmd+0x1a8>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE |
 80060fc:	ea4e 0309 	orr.w	r3, lr, r9
 8006100:	6815      	ldr	r5, [r2, #0]
 8006102:	4303      	orrs	r3, r0
 8006104:	6c08      	ldr	r0, [r1, #64]	; 0x40
 8006106:	4333      	orrs	r3, r6
 8006108:	4303      	orrs	r3, r0
 800610a:	f025 6070 	bic.w	r0, r5, #251658240	; 0xf000000
 800610e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8006112:	4303      	orrs	r3, r0
 8006114:	6013      	str	r3, [r2, #0]
 8006116:	e78b      	b.n	8006030 <OSPI_ConfigCmd+0xc0>
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE),
 8006118:	6813      	ldr	r3, [r2, #0]
 800611a:	ea40 0009 	orr.w	r0, r0, r9
 800611e:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8006122:	4330      	orrs	r0, r6
 8006124:	4318      	orrs	r0, r3
 8006126:	6010      	str	r0, [r2, #0]
 8006128:	e782      	b.n	8006030 <OSPI_ConfigCmd+0xc0>
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 800612a:	2308      	movs	r3, #8
 800612c:	6543      	str	r3, [r0, #84]	; 0x54
      status = HAL_ERROR;
 800612e:	2001      	movs	r0, #1
 8006130:	e7c6      	b.n	80060c0 <OSPI_ConfigCmd+0x150>
 8006132:	bf00      	nop
 8006134:	f0ffc0c0 	.word	0xf0ffc0c0

08006138 <OSPI_WaitFlagStateUntilTimeout>:
{
 8006138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800613c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8006140:	4604      	mov	r4, r0
 8006142:	460e      	mov	r6, r1
 8006144:	4615      	mov	r5, r2
 8006146:	461f      	mov	r7, r3
  while((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006148:	6822      	ldr	r2, [r4, #0]
 800614a:	6a13      	ldr	r3, [r2, #32]
 800614c:	4233      	tst	r3, r6
 800614e:	bf14      	ite	ne
 8006150:	2301      	movne	r3, #1
 8006152:	2300      	moveq	r3, #0
 8006154:	42ab      	cmp	r3, r5
 8006156:	d101      	bne.n	800615c <OSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8006158:	2000      	movs	r0, #0
 800615a:	e012      	b.n	8006182 <OSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800615c:	f1b8 3fff 	cmp.w	r8, #4294967295
 8006160:	d0f3      	beq.n	800614a <OSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006162:	f7fe fb13 	bl	800478c <HAL_GetTick>
 8006166:	1bc0      	subs	r0, r0, r7
 8006168:	4540      	cmp	r0, r8
 800616a:	d802      	bhi.n	8006172 <OSPI_WaitFlagStateUntilTimeout+0x3a>
 800616c:	f1b8 0f00 	cmp.w	r8, #0
 8006170:	d1ea      	bne.n	8006148 <OSPI_WaitFlagStateUntilTimeout+0x10>
        hospi->State     = HAL_OSPI_STATE_ERROR;
 8006172:	f44f 7300 	mov.w	r3, #512	; 0x200
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 8006176:	2001      	movs	r0, #1
        hospi->State     = HAL_OSPI_STATE_ERROR;
 8006178:	6523      	str	r3, [r4, #80]	; 0x50
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 800617a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800617c:	f043 0301 	orr.w	r3, r3, #1
 8006180:	6563      	str	r3, [r4, #84]	; 0x54
}
 8006182:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08006188 <HAL_OSPI_Init>:
{
 8006188:	b5f0      	push	{r4, r5, r6, r7, lr}
 800618a:	4604      	mov	r4, r0
 800618c:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 800618e:	f7fe fafd 	bl	800478c <HAL_GetTick>
 8006192:	4603      	mov	r3, r0
  if (hospi == NULL)
 8006194:	2c00      	cmp	r4, #0
 8006196:	d067      	beq.n	8006268 <HAL_OSPI_Init+0xe0>
    hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 8006198:	2000      	movs	r0, #0
 800619a:	6560      	str	r0, [r4, #84]	; 0x54
    if (hospi->State == HAL_OSPI_STATE_RESET)
 800619c:	6d26      	ldr	r6, [r4, #80]	; 0x50
 800619e:	2e00      	cmp	r6, #0
 80061a0:	d160      	bne.n	8006264 <HAL_OSPI_Init+0xdc>
      HAL_OSPI_MspInit(hospi);
 80061a2:	4620      	mov	r0, r4
 80061a4:	9303      	str	r3, [sp, #12]
 80061a6:	f7fa fcf5 	bl	8000b94 <HAL_OSPI_MspInit>
      MODIFY_REG(hospi->Instance->DCR1,
 80061aa:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80061ac:	68e1      	ldr	r1, [r4, #12]
  hospi->Timeout = Timeout;
 80061ae:	f241 3288 	movw	r2, #5000	; 0x1388
      MODIFY_REG(hospi->Instance->DCR1,
 80061b2:	6825      	ldr	r5, [r4, #0]
 80061b4:	4301      	orrs	r1, r0
 80061b6:	69e0      	ldr	r0, [r4, #28]
 80061b8:	68af      	ldr	r7, [r5, #8]
 80061ba:	4301      	orrs	r1, r0
 80061bc:	482b      	ldr	r0, [pc, #172]	; (800626c <HAL_OSPI_Init+0xe4>)
  hospi->Timeout = Timeout;
 80061be:	65a2      	str	r2, [r4, #88]	; 0x58
      MODIFY_REG(hospi->Instance->DCR1,
 80061c0:	4038      	ands	r0, r7
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 80061c2:	9b03      	ldr	r3, [sp, #12]
      MODIFY_REG(hospi->Instance->DCR1,
 80061c4:	4301      	orrs	r1, r0
 80061c6:	6920      	ldr	r0, [r4, #16]
 80061c8:	3801      	subs	r0, #1
 80061ca:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80061ce:	6960      	ldr	r0, [r4, #20]
 80061d0:	3801      	subs	r0, #1
 80061d2:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 80061d6:	6a20      	ldr	r0, [r4, #32]
      MODIFY_REG(hospi->Instance->DCR1,
 80061d8:	60a9      	str	r1, [r5, #8]
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 80061da:	68e9      	ldr	r1, [r5, #12]
 80061dc:	f421 21e0 	bic.w	r1, r1, #458752	; 0x70000
 80061e0:	4301      	orrs	r1, r0
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 80061e2:	6b20      	ldr	r0, [r4, #48]	; 0x30
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 80061e4:	60e9      	str	r1, [r5, #12]
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 80061e6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80061e8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 80061ec:	6860      	ldr	r0, [r4, #4]
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 80061ee:	6129      	str	r1, [r5, #16]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 80061f0:	3801      	subs	r0, #1
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 80061f2:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80061f4:	6169      	str	r1, [r5, #20]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 80061f6:	6829      	ldr	r1, [r5, #0]
 80061f8:	f421 51f8 	bic.w	r1, r1, #7936	; 0x1f00
 80061fc:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8006200:	4620      	mov	r0, r4
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 8006202:	6029      	str	r1, [r5, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8006204:	2120      	movs	r1, #32
 8006206:	9200      	str	r2, [sp, #0]
 8006208:	4632      	mov	r2, r6
 800620a:	f7ff ff95 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800620e:	bb48      	cbnz	r0, 8006264 <HAL_OSPI_Init+0xdc>
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8006210:	6823      	ldr	r3, [r4, #0]
 8006212:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006214:	68d9      	ldr	r1, [r3, #12]
 8006216:	3a01      	subs	r2, #1
 8006218:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800621c:	430a      	orrs	r2, r1
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 800621e:	68a1      	ldr	r1, [r4, #8]
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 8006220:	60da      	str	r2, [r3, #12]
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 8006222:	681a      	ldr	r2, [r3, #0]
 8006224:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8006228:	430a      	orrs	r2, r1
 800622a:	601a      	str	r2, [r3, #0]
        MODIFY_REG(hospi->Instance->TCR, (OCTOSPI_TCR_SSHIFT | OCTOSPI_TCR_DHQC),
 800622c:	f8d3 1108 	ldr.w	r1, [r3, #264]	; 0x108
 8006230:	e9d4 250a 	ldrd	r2, r5, [r4, #40]	; 0x28
 8006234:	f021 41a0 	bic.w	r1, r1, #1342177280	; 0x50000000
 8006238:	432a      	orrs	r2, r5
 800623a:	430a      	orrs	r2, r1
 800623c:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
        __HAL_OSPI_ENABLE(hospi);
 8006240:	681a      	ldr	r2, [r3, #0]
 8006242:	f042 0201 	orr.w	r2, r2, #1
 8006246:	601a      	str	r2, [r3, #0]
        if (hospi->Init.FreeRunningClock == HAL_OSPI_FREERUNCLK_ENABLE)
 8006248:	69a2      	ldr	r2, [r4, #24]
 800624a:	2a02      	cmp	r2, #2
 800624c:	d103      	bne.n	8006256 <HAL_OSPI_Init+0xce>
          SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 800624e:	689a      	ldr	r2, [r3, #8]
 8006250:	f042 0202 	orr.w	r2, r2, #2
 8006254:	609a      	str	r2, [r3, #8]
        if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8006256:	68e3      	ldr	r3, [r4, #12]
 8006258:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
          hospi->State = HAL_OSPI_STATE_HYPERBUS_INIT;
 800625c:	bf0c      	ite	eq
 800625e:	2301      	moveq	r3, #1
          hospi->State = HAL_OSPI_STATE_READY;
 8006260:	2302      	movne	r3, #2
 8006262:	6523      	str	r3, [r4, #80]	; 0x50
}
 8006264:	b005      	add	sp, #20
 8006266:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_ERROR;
 8006268:	2001      	movs	r0, #1
 800626a:	e7fb      	b.n	8006264 <HAL_OSPI_Init+0xdc>
 800626c:	f8e0f8f4 	.word	0xf8e0f8f4

08006270 <HAL_OSPI_DeInit>:
{
 8006270:	b510      	push	{r4, lr}
  if (hospi == NULL)
 8006272:	4604      	mov	r4, r0
 8006274:	b168      	cbz	r0, 8006292 <HAL_OSPI_DeInit+0x22>
     __HAL_OSPI_DISABLE(hospi);
 8006276:	6803      	ldr	r3, [r0, #0]
 8006278:	681a      	ldr	r2, [r3, #0]
 800627a:	f022 0201 	bic.w	r2, r2, #1
 800627e:	601a      	str	r2, [r3, #0]
     CLEAR_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 8006280:	689a      	ldr	r2, [r3, #8]
 8006282:	f022 0202 	bic.w	r2, r2, #2
 8006286:	609a      	str	r2, [r3, #8]
     HAL_OSPI_MspDeInit(hospi);
 8006288:	f7fa fd6e 	bl	8000d68 <HAL_OSPI_MspDeInit>
     hospi->State = HAL_OSPI_STATE_RESET;
 800628c:	2000      	movs	r0, #0
 800628e:	6520      	str	r0, [r4, #80]	; 0x50
}
 8006290:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8006292:	2001      	movs	r0, #1
 8006294:	e7fc      	b.n	8006290 <HAL_OSPI_DeInit+0x20>

08006296 <HAL_OSPI_Command>:
{
 8006296:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8006298:	4604      	mov	r4, r0
 800629a:	4616      	mov	r6, r2
 800629c:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 800629e:	f7fe fa75 	bl	800478c <HAL_GetTick>
  state = hospi->State;
 80062a2:	6d22      	ldr	r2, [r4, #80]	; 0x50
  uint32_t tickstart = HAL_GetTick();
 80062a4:	4603      	mov	r3, r0
  if (((state == HAL_OSPI_STATE_READY)         && (hospi->Init.MemoryType != HAL_OSPI_MEMTYPE_HYPERBUS)) ||
 80062a6:	2a02      	cmp	r2, #2
 80062a8:	d107      	bne.n	80062ba <HAL_OSPI_Command+0x24>
 80062aa:	68e2      	ldr	r2, [r4, #12]
 80062ac:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
 80062b0:	d109      	bne.n	80062c6 <HAL_OSPI_Command+0x30>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80062b2:	2310      	movs	r3, #16
    status = HAL_ERROR;
 80062b4:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80062b6:	6563      	str	r3, [r4, #84]	; 0x54
 80062b8:	e01f      	b.n	80062fa <HAL_OSPI_Command+0x64>
  if (((state == HAL_OSPI_STATE_READY)         && (hospi->Init.MemoryType != HAL_OSPI_MEMTYPE_HYPERBUS)) ||
 80062ba:	2a14      	cmp	r2, #20
 80062bc:	d11f      	bne.n	80062fe <HAL_OSPI_Command+0x68>
                                                || (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG))) ||
 80062be:	682a      	ldr	r2, [r5, #0]
 80062c0:	3a02      	subs	r2, #2
      ((state == HAL_OSPI_STATE_READ_CMD_CFG)  && ((cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 80062c2:	2a01      	cmp	r2, #1
 80062c4:	d8f5      	bhi.n	80062b2 <HAL_OSPI_Command+0x1c>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80062c6:	2200      	movs	r2, #0
 80062c8:	2120      	movs	r1, #32
 80062ca:	4620      	mov	r0, r4
 80062cc:	9600      	str	r6, [sp, #0]
 80062ce:	9303      	str	r3, [sp, #12]
 80062d0:	f7ff ff32 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80062d4:	b988      	cbnz	r0, 80062fa <HAL_OSPI_Command+0x64>
      hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 80062d6:	6560      	str	r0, [r4, #84]	; 0x54
      status = OSPI_ConfigCmd(hospi, cmd);
 80062d8:	4629      	mov	r1, r5
 80062da:	4620      	mov	r0, r4
 80062dc:	f7ff fe48 	bl	8005f70 <OSPI_ConfigCmd>
      if (status == HAL_OK)
 80062e0:	b958      	cbnz	r0, 80062fa <HAL_OSPI_Command+0x64>
        if (cmd->DataMode == HAL_OSPI_DATA_NONE)
 80062e2:	6baa      	ldr	r2, [r5, #56]	; 0x38
 80062e4:	9b03      	ldr	r3, [sp, #12]
 80062e6:	b992      	cbnz	r2, 800630e <HAL_OSPI_Command+0x78>
          status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 80062e8:	2201      	movs	r2, #1
 80062ea:	2102      	movs	r1, #2
 80062ec:	4620      	mov	r0, r4
 80062ee:	9600      	str	r6, [sp, #0]
 80062f0:	f7ff ff22 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 80062f4:	6823      	ldr	r3, [r4, #0]
 80062f6:	2202      	movs	r2, #2
 80062f8:	625a      	str	r2, [r3, #36]	; 0x24
}
 80062fa:	b004      	add	sp, #16
 80062fc:	bd70      	pop	{r4, r5, r6, pc}
                                                || (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG))) ||
 80062fe:	2a24      	cmp	r2, #36	; 0x24
 8006300:	d1d7      	bne.n	80062b2 <HAL_OSPI_Command+0x1c>
      ((state == HAL_OSPI_STATE_WRITE_CMD_CFG) && ((cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)  ||
 8006302:	682a      	ldr	r2, [r5, #0]
 8006304:	f022 0202 	bic.w	r2, r2, #2
 8006308:	2a01      	cmp	r2, #1
 800630a:	d1d2      	bne.n	80062b2 <HAL_OSPI_Command+0x1c>
 800630c:	e7db      	b.n	80062c6 <HAL_OSPI_Command+0x30>
          if (cmd->OperationType == HAL_OSPI_OPTYPE_COMMON_CFG)
 800630e:	682b      	ldr	r3, [r5, #0]
 8006310:	b90b      	cbnz	r3, 8006316 <HAL_OSPI_Command+0x80>
              hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8006312:	2304      	movs	r3, #4
 8006314:	e005      	b.n	8006322 <HAL_OSPI_Command+0x8c>
          else if (cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)
 8006316:	2b01      	cmp	r3, #1
 8006318:	d105      	bne.n	8006326 <HAL_OSPI_Command+0x90>
            if (hospi->State == HAL_OSPI_STATE_WRITE_CMD_CFG)
 800631a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800631c:	2b24      	cmp	r3, #36	; 0x24
 800631e:	d0f8      	beq.n	8006312 <HAL_OSPI_Command+0x7c>
              hospi->State = HAL_OSPI_STATE_READ_CMD_CFG;
 8006320:	2314      	movs	r3, #20
              hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8006322:	6523      	str	r3, [r4, #80]	; 0x50
 8006324:	e7e9      	b.n	80062fa <HAL_OSPI_Command+0x64>
          else if (cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 8006326:	2b02      	cmp	r3, #2
 8006328:	d1e7      	bne.n	80062fa <HAL_OSPI_Command+0x64>
            if (hospi->State == HAL_OSPI_STATE_READ_CMD_CFG)
 800632a:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800632c:	2b14      	cmp	r3, #20
 800632e:	d0f0      	beq.n	8006312 <HAL_OSPI_Command+0x7c>
              hospi->State = HAL_OSPI_STATE_WRITE_CMD_CFG;
 8006330:	2324      	movs	r3, #36	; 0x24
 8006332:	e7f6      	b.n	8006322 <HAL_OSPI_Command+0x8c>

08006334 <HAL_OSPI_Transmit>:
{
 8006334:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006336:	4604      	mov	r4, r0
 8006338:	460f      	mov	r7, r1
 800633a:	b085      	sub	sp, #20
 800633c:	4615      	mov	r5, r2
  uint32_t tickstart = HAL_GetTick();
 800633e:	f7fe fa25 	bl	800478c <HAL_GetTick>
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 8006342:	6826      	ldr	r6, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8006344:	4603      	mov	r3, r0
  if (pData == NULL)
 8006346:	b91f      	cbnz	r7, 8006350 <HAL_OSPI_Transmit+0x1c>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 8006348:	2308      	movs	r3, #8
      status = HAL_ERROR;
 800634a:	2001      	movs	r0, #1
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 800634c:	6563      	str	r3, [r4, #84]	; 0x54
 800634e:	e02d      	b.n	80063ac <HAL_OSPI_Transmit+0x78>
    if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 8006350:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8006352:	2a04      	cmp	r2, #4
 8006354:	d12c      	bne.n	80063b0 <HAL_OSPI_Transmit+0x7c>
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 8006356:	6c32      	ldr	r2, [r6, #64]	; 0x40
      hospi->pBuffPtr  = pData;
 8006358:	6427      	str	r7, [r4, #64]	; 0x40
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 800635a:	3201      	adds	r2, #1
 800635c:	64a2      	str	r2, [r4, #72]	; 0x48
      hospi->XferSize  = hospi->XferCount;
 800635e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006360:	6462      	str	r2, [r4, #68]	; 0x44
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 8006362:	6832      	ldr	r2, [r6, #0]
 8006364:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8006368:	6032      	str	r2, [r6, #0]
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_FT, SET, tickstart, Timeout);
 800636a:	2201      	movs	r2, #1
 800636c:	2104      	movs	r1, #4
 800636e:	4620      	mov	r0, r4
 8006370:	9500      	str	r5, [sp, #0]
 8006372:	9303      	str	r3, [sp, #12]
 8006374:	f7ff fee0 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8006378:	b9c0      	cbnz	r0, 80063ac <HAL_OSPI_Transmit+0x78>
        *((__IO uint8_t *)data_reg) = *hospi->pBuffPtr;
 800637a:	6c22      	ldr	r2, [r4, #64]	; 0x40
      } while (hospi->XferCount > 0U);
 800637c:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hospi->pBuffPtr;
 800637e:	7812      	ldrb	r2, [r2, #0]
 8006380:	f886 2050 	strb.w	r2, [r6, #80]	; 0x50
        hospi->pBuffPtr++;
 8006384:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006386:	3201      	adds	r2, #1
 8006388:	6422      	str	r2, [r4, #64]	; 0x40
        hospi->XferCount--;
 800638a:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800638c:	3a01      	subs	r2, #1
 800638e:	64a2      	str	r2, [r4, #72]	; 0x48
      } while (hospi->XferCount > 0U);
 8006390:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006392:	2a00      	cmp	r2, #0
 8006394:	d1e9      	bne.n	800636a <HAL_OSPI_Transmit+0x36>
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 8006396:	2201      	movs	r2, #1
 8006398:	2102      	movs	r1, #2
 800639a:	4620      	mov	r0, r4
 800639c:	9500      	str	r5, [sp, #0]
 800639e:	f7ff fecb 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80063a2:	b918      	cbnz	r0, 80063ac <HAL_OSPI_Transmit+0x78>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 80063a4:	2302      	movs	r3, #2
 80063a6:	6822      	ldr	r2, [r4, #0]
 80063a8:	6253      	str	r3, [r2, #36]	; 0x24
          hospi->State = HAL_OSPI_STATE_READY;
 80063aa:	6523      	str	r3, [r4, #80]	; 0x50
}
 80063ac:	b005      	add	sp, #20
 80063ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80063b0:	2310      	movs	r3, #16
 80063b2:	e7ca      	b.n	800634a <HAL_OSPI_Transmit+0x16>

080063b4 <HAL_OSPI_Receive>:
{
 80063b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80063b6:	4604      	mov	r4, r0
 80063b8:	b085      	sub	sp, #20
 80063ba:	460f      	mov	r7, r1
 80063bc:	4616      	mov	r6, r2
  uint32_t tickstart = HAL_GetTick();
 80063be:	f7fe f9e5 	bl	800478c <HAL_GetTick>
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 80063c2:	6825      	ldr	r5, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 80063c4:	4603      	mov	r3, r0
  uint32_t addr_reg = hospi->Instance->AR;
 80063c6:	6ca8      	ldr	r0, [r5, #72]	; 0x48
  uint32_t ir_reg = hospi->Instance->IR;
 80063c8:	f8d5 c110 	ldr.w	ip, [r5, #272]	; 0x110
  if (pData == NULL)
 80063cc:	b91f      	cbnz	r7, 80063d6 <HAL_OSPI_Receive+0x22>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 80063ce:	2308      	movs	r3, #8
      status = HAL_ERROR;
 80063d0:	2001      	movs	r0, #1
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80063d2:	6563      	str	r3, [r4, #84]	; 0x54
 80063d4:	e034      	b.n	8006440 <HAL_OSPI_Receive+0x8c>
    if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 80063d6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 80063d8:	2a04      	cmp	r2, #4
 80063da:	d13b      	bne.n	8006454 <HAL_OSPI_Receive+0xa0>
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 80063dc:	6c2a      	ldr	r2, [r5, #64]	; 0x40
      hospi->pBuffPtr  = pData;
 80063de:	6427      	str	r7, [r4, #64]	; 0x40
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 80063e0:	3201      	adds	r2, #1
 80063e2:	64a2      	str	r2, [r4, #72]	; 0x48
      hospi->XferSize  = hospi->XferCount;
 80063e4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80063e6:	6462      	str	r2, [r4, #68]	; 0x44
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80063e8:	6829      	ldr	r1, [r5, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80063ea:	68e2      	ldr	r2, [r4, #12]
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80063ec:	f021 5140 	bic.w	r1, r1, #805306368	; 0x30000000
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80063f0:	f1b2 6f80 	cmp.w	r2, #67108864	; 0x4000000
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80063f4:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80063f8:	6029      	str	r1, [r5, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80063fa:	d123      	bne.n	8006444 <HAL_OSPI_Receive+0x90>
          WRITE_REG(hospi->Instance->AR, addr_reg);
 80063fc:	64a8      	str	r0, [r5, #72]	; 0x48
        status = OSPI_WaitFlagStateUntilTimeout(hospi, (HAL_OSPI_FLAG_FT | HAL_OSPI_FLAG_TC), SET, tickstart, Timeout);
 80063fe:	2201      	movs	r2, #1
 8006400:	2106      	movs	r1, #6
 8006402:	4620      	mov	r0, r4
 8006404:	9600      	str	r6, [sp, #0]
 8006406:	9303      	str	r3, [sp, #12]
 8006408:	f7ff fe96 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800640c:	b9c0      	cbnz	r0, 8006440 <HAL_OSPI_Receive+0x8c>
        *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 800640e:	f895 1050 	ldrb.w	r1, [r5, #80]	; 0x50
 8006412:	6c22      	ldr	r2, [r4, #64]	; 0x40
      } while(hospi->XferCount > 0U);
 8006414:	9b03      	ldr	r3, [sp, #12]
        *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8006416:	7011      	strb	r1, [r2, #0]
        hospi->pBuffPtr++;
 8006418:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800641a:	3201      	adds	r2, #1
 800641c:	6422      	str	r2, [r4, #64]	; 0x40
        hospi->XferCount--;
 800641e:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006420:	3a01      	subs	r2, #1
 8006422:	64a2      	str	r2, [r4, #72]	; 0x48
      } while(hospi->XferCount > 0U);
 8006424:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8006426:	2a00      	cmp	r2, #0
 8006428:	d1e9      	bne.n	80063fe <HAL_OSPI_Receive+0x4a>
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 800642a:	2201      	movs	r2, #1
 800642c:	2102      	movs	r1, #2
 800642e:	4620      	mov	r0, r4
 8006430:	9600      	str	r6, [sp, #0]
 8006432:	f7ff fe81 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8006436:	b918      	cbnz	r0, 8006440 <HAL_OSPI_Receive+0x8c>
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8006438:	2302      	movs	r3, #2
 800643a:	6822      	ldr	r2, [r4, #0]
 800643c:	6253      	str	r3, [r2, #36]	; 0x24
          hospi->State = HAL_OSPI_STATE_READY;
 800643e:	6523      	str	r3, [r4, #80]	; 0x50
}
 8006440:	b005      	add	sp, #20
 8006442:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if (READ_BIT(hospi->Instance->CCR, OCTOSPI_CCR_ADMODE) != HAL_OSPI_ADDRESS_NONE)
 8006444:	f8d5 2100 	ldr.w	r2, [r5, #256]	; 0x100
 8006448:	f412 6fe0 	tst.w	r2, #1792	; 0x700
 800644c:	d1d6      	bne.n	80063fc <HAL_OSPI_Receive+0x48>
          WRITE_REG(hospi->Instance->IR, ir_reg);
 800644e:	f8c5 c110 	str.w	ip, [r5, #272]	; 0x110
 8006452:	e7d4      	b.n	80063fe <HAL_OSPI_Receive+0x4a>
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8006454:	2310      	movs	r3, #16
 8006456:	e7bb      	b.n	80063d0 <HAL_OSPI_Receive+0x1c>

08006458 <HAL_OSPI_AutoPolling>:
{
 8006458:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800645c:	4604      	mov	r4, r0
 800645e:	4616      	mov	r6, r2
 8006460:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 8006462:	f7fe f993 	bl	800478c <HAL_GetTick>
  uint32_t addr_reg = hospi->Instance->AR;
 8006466:	6822      	ldr	r2, [r4, #0]
  uint32_t tickstart = HAL_GetTick();
 8006468:	4603      	mov	r3, r0
  uint32_t addr_reg = hospi->Instance->AR;
 800646a:	6c97      	ldr	r7, [r2, #72]	; 0x48
  uint32_t ir_reg = hospi->Instance->IR;
 800646c:	f8d2 8110 	ldr.w	r8, [r2, #272]	; 0x110
  if ((hospi->State == HAL_OSPI_STATE_CMD_CFG) && (cfg->AutomaticStop == HAL_OSPI_AUTOMATIC_STOP_ENABLE))
 8006470:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8006472:	2a04      	cmp	r2, #4
 8006474:	d13c      	bne.n	80064f0 <HAL_OSPI_AutoPolling+0x98>
 8006476:	68ea      	ldr	r2, [r5, #12]
 8006478:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 800647c:	d138      	bne.n	80064f0 <HAL_OSPI_AutoPolling+0x98>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800647e:	9003      	str	r0, [sp, #12]
 8006480:	2200      	movs	r2, #0
 8006482:	2120      	movs	r1, #32
 8006484:	4620      	mov	r0, r4
 8006486:	9600      	str	r6, [sp, #0]
 8006488:	f7ff fe56 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800648c:	bb28      	cbnz	r0, 80064da <HAL_OSPI_AutoPolling+0x82>
      WRITE_REG (hospi->Instance->PSMAR, cfg->Match);
 800648e:	6829      	ldr	r1, [r5, #0]
 8006490:	6822      	ldr	r2, [r4, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8006492:	9b03      	ldr	r3, [sp, #12]
      WRITE_REG (hospi->Instance->PSMAR, cfg->Match);
 8006494:	f8c2 1088 	str.w	r1, [r2, #136]	; 0x88
      WRITE_REG (hospi->Instance->PSMKR, cfg->Mask);
 8006498:	6869      	ldr	r1, [r5, #4]
 800649a:	f8c2 1080 	str.w	r1, [r2, #128]	; 0x80
      WRITE_REG (hospi->Instance->PIR,   cfg->Interval);
 800649e:	6929      	ldr	r1, [r5, #16]
 80064a0:	f8c2 1090 	str.w	r1, [r2, #144]	; 0x90
      MODIFY_REG(hospi->Instance->CR,    (OCTOSPI_CR_PMM | OCTOSPI_CR_APMS | OCTOSPI_CR_FMODE),
 80064a4:	6810      	ldr	r0, [r2, #0]
 80064a6:	e9d5 1502 	ldrd	r1, r5, [r5, #8]
 80064aa:	f020 5043 	bic.w	r0, r0, #817889280	; 0x30c00000
 80064ae:	4329      	orrs	r1, r5
 80064b0:	4301      	orrs	r1, r0
 80064b2:	f041 5100 	orr.w	r1, r1, #536870912	; 0x20000000
 80064b6:	6011      	str	r1, [r2, #0]
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 80064b8:	68e1      	ldr	r1, [r4, #12]
 80064ba:	f1b1 6f80 	cmp.w	r1, #67108864	; 0x4000000
 80064be:	d10f      	bne.n	80064e0 <HAL_OSPI_AutoPolling+0x88>
          WRITE_REG(hospi->Instance->AR, addr_reg);
 80064c0:	6497      	str	r7, [r2, #72]	; 0x48
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_SM, SET, tickstart, Timeout);
 80064c2:	2201      	movs	r2, #1
 80064c4:	2108      	movs	r1, #8
 80064c6:	4620      	mov	r0, r4
 80064c8:	9600      	str	r6, [sp, #0]
 80064ca:	f7ff fe35 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 80064ce:	b920      	cbnz	r0, 80064da <HAL_OSPI_AutoPolling+0x82>
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_SM);
 80064d0:	6823      	ldr	r3, [r4, #0]
 80064d2:	2208      	movs	r2, #8
 80064d4:	625a      	str	r2, [r3, #36]	; 0x24
        hospi->State = HAL_OSPI_STATE_READY;
 80064d6:	2302      	movs	r3, #2
 80064d8:	6523      	str	r3, [r4, #80]	; 0x50
}
 80064da:	b004      	add	sp, #16
 80064dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if (READ_BIT(hospi->Instance->CCR, OCTOSPI_CCR_ADMODE) != HAL_OSPI_ADDRESS_NONE)
 80064e0:	f8d2 1100 	ldr.w	r1, [r2, #256]	; 0x100
 80064e4:	f411 6fe0 	tst.w	r1, #1792	; 0x700
 80064e8:	d1ea      	bne.n	80064c0 <HAL_OSPI_AutoPolling+0x68>
          WRITE_REG(hospi->Instance->IR, ir_reg);
 80064ea:	f8c2 8110 	str.w	r8, [r2, #272]	; 0x110
 80064ee:	e7e8      	b.n	80064c2 <HAL_OSPI_AutoPolling+0x6a>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80064f0:	2310      	movs	r3, #16
    status = HAL_ERROR;
 80064f2:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80064f4:	6563      	str	r3, [r4, #84]	; 0x54
 80064f6:	e7f0      	b.n	80064da <HAL_OSPI_AutoPolling+0x82>

080064f8 <HAL_OSPI_MemoryMapped>:
{
 80064f8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80064fa:	4604      	mov	r4, r0
 80064fc:	460d      	mov	r5, r1
  uint32_t tickstart = HAL_GetTick();
 80064fe:	f7fe f945 	bl	800478c <HAL_GetTick>
 8006502:	4603      	mov	r3, r0
  if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 8006504:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8006506:	2a04      	cmp	r2, #4
 8006508:	d121      	bne.n	800654e <HAL_OSPI_MemoryMapped+0x56>
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800650a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800650c:	2120      	movs	r1, #32
 800650e:	4620      	mov	r0, r4
 8006510:	9200      	str	r2, [sp, #0]
 8006512:	2200      	movs	r2, #0
 8006514:	f7ff fe10 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8006518:	b9b8      	cbnz	r0, 800654a <HAL_OSPI_MemoryMapped+0x52>
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 800651a:	6829      	ldr	r1, [r5, #0]
      hospi->State = HAL_OSPI_STATE_BUSY_MEM_MAPPED;
 800651c:	2388      	movs	r3, #136	; 0x88
        WRITE_REG(hospi->Instance->LPTR, cfg->TimeOutPeriod);
 800651e:	6822      	ldr	r2, [r4, #0]
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 8006520:	2908      	cmp	r1, #8
      hospi->State = HAL_OSPI_STATE_BUSY_MEM_MAPPED;
 8006522:	6523      	str	r3, [r4, #80]	; 0x50
      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 8006524:	d108      	bne.n	8006538 <HAL_OSPI_MemoryMapped+0x40>
        WRITE_REG(hospi->Instance->LPTR, cfg->TimeOutPeriod);
 8006526:	686b      	ldr	r3, [r5, #4]
 8006528:	f8c2 3130 	str.w	r3, [r2, #304]	; 0x130
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TO);
 800652c:	2310      	movs	r3, #16
 800652e:	6253      	str	r3, [r2, #36]	; 0x24
        __HAL_OSPI_ENABLE_IT(hospi, HAL_OSPI_IT_TO);
 8006530:	6813      	ldr	r3, [r2, #0]
 8006532:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006536:	6013      	str	r3, [r2, #0]
      MODIFY_REG(hospi->Instance->CR, (OCTOSPI_CR_TCEN | OCTOSPI_CR_FMODE),
 8006538:	6813      	ldr	r3, [r2, #0]
 800653a:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 800653e:	f023 0308 	bic.w	r3, r3, #8
 8006542:	430b      	orrs	r3, r1
 8006544:	f043 5340 	orr.w	r3, r3, #805306368	; 0x30000000
 8006548:	6013      	str	r3, [r2, #0]
}
 800654a:	b003      	add	sp, #12
 800654c:	bd30      	pop	{r4, r5, pc}
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 800654e:	2310      	movs	r3, #16
    status = HAL_ERROR;
 8006550:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8006552:	6563      	str	r3, [r4, #84]	; 0x54
 8006554:	e7f9      	b.n	800654a <HAL_OSPI_MemoryMapped+0x52>

08006556 <HAL_OSPI_ErrorCallback>:
 8006556:	4770      	bx	lr

08006558 <HAL_OSPI_AbortCpltCallback>:
 8006558:	4770      	bx	lr

0800655a <OSPI_DMAAbortCplt>:
  OSPI_HandleTypeDef* hospi = ( OSPI_HandleTypeDef* )(hmdma->Parent);
 800655a:	6c00      	ldr	r0, [r0, #64]	; 0x40
{
 800655c:	b508      	push	{r3, lr}
  hospi->XferCount = 0;
 800655e:	2300      	movs	r3, #0
 8006560:	6483      	str	r3, [r0, #72]	; 0x48
  if (hospi->State == HAL_OSPI_STATE_ABORT)
 8006562:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8006564:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006568:	d114      	bne.n	8006594 <OSPI_DMAAbortCplt+0x3a>
    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 800656a:	6803      	ldr	r3, [r0, #0]
 800656c:	6a1a      	ldr	r2, [r3, #32]
 800656e:	f012 0f20 	tst.w	r2, #32
 8006572:	f04f 0202 	mov.w	r2, #2
 8006576:	d009      	beq.n	800658c <OSPI_DMAAbortCplt+0x32>
      __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8006578:	625a      	str	r2, [r3, #36]	; 0x24
      __HAL_OSPI_ENABLE_IT(hospi, HAL_OSPI_IT_TC);
 800657a:	681a      	ldr	r2, [r3, #0]
 800657c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8006580:	601a      	str	r2, [r3, #0]
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 8006582:	681a      	ldr	r2, [r3, #0]
 8006584:	f042 0202 	orr.w	r2, r2, #2
 8006588:	601a      	str	r2, [r3, #0]
}
 800658a:	bd08      	pop	{r3, pc}
      hospi->State = HAL_OSPI_STATE_READY;
 800658c:	6502      	str	r2, [r0, #80]	; 0x50
      HAL_OSPI_AbortCpltCallback(hospi);
 800658e:	f7ff ffe3 	bl	8006558 <HAL_OSPI_AbortCpltCallback>
 8006592:	e7fa      	b.n	800658a <OSPI_DMAAbortCplt+0x30>
    hospi->State = HAL_OSPI_STATE_READY;
 8006594:	2302      	movs	r3, #2
 8006596:	6503      	str	r3, [r0, #80]	; 0x50
    HAL_OSPI_ErrorCallback(hospi);
 8006598:	f7ff ffdd 	bl	8006556 <HAL_OSPI_ErrorCallback>
}
 800659c:	e7f5      	b.n	800658a <OSPI_DMAAbortCplt+0x30>

0800659e <HAL_OSPI_FifoThresholdCallback>:
 800659e:	4770      	bx	lr

080065a0 <HAL_OSPI_CmdCpltCallback>:
 80065a0:	4770      	bx	lr

080065a2 <HAL_OSPI_RxCpltCallback>:
 80065a2:	4770      	bx	lr

080065a4 <HAL_OSPI_TxCpltCallback>:
 80065a4:	4770      	bx	lr

080065a6 <HAL_OSPI_StatusMatchCallback>:
 80065a6:	4770      	bx	lr

080065a8 <HAL_OSPI_TimeOutCallback>:
 80065a8:	4770      	bx	lr
	...

080065ac <HAL_OSPI_IRQHandler>:
{
 80065ac:	b538      	push	{r3, r4, r5, lr}
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 80065ae:	6803      	ldr	r3, [r0, #0]
{
 80065b0:	4604      	mov	r4, r0
  uint32_t flag           = hospi->Instance->SR;
 80065b2:	6a1a      	ldr	r2, [r3, #32]
  uint32_t itsource       = hospi->Instance->CR;
 80065b4:	6818      	ldr	r0, [r3, #0]
  if (((flag & HAL_OSPI_FLAG_FT) != 0U) && ((itsource & HAL_OSPI_IT_FT) != 0U))
 80065b6:	0755      	lsls	r5, r2, #29
  uint32_t currentstate   = hospi->State;
 80065b8:	6d21      	ldr	r1, [r4, #80]	; 0x50
  if (((flag & HAL_OSPI_FLAG_FT) != 0U) && ((itsource & HAL_OSPI_IT_FT) != 0U))
 80065ba:	d51f      	bpl.n	80065fc <HAL_OSPI_IRQHandler+0x50>
 80065bc:	0345      	lsls	r5, r0, #13
 80065be:	d51d      	bpl.n	80065fc <HAL_OSPI_IRQHandler+0x50>
    if (currentstate == HAL_OSPI_STATE_BUSY_TX)
 80065c0:	2918      	cmp	r1, #24
 80065c2:	d114      	bne.n	80065ee <HAL_OSPI_IRQHandler+0x42>
      *((__IO uint8_t *)data_reg) = *hospi->pBuffPtr;
 80065c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80065c6:	7812      	ldrb	r2, [r2, #0]
 80065c8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
      hospi->pBuffPtr++;
 80065cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80065ce:	3301      	adds	r3, #1
 80065d0:	6423      	str	r3, [r4, #64]	; 0x40
      hospi->XferCount--;
 80065d2:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80065d4:	3b01      	subs	r3, #1
 80065d6:	64a3      	str	r3, [r4, #72]	; 0x48
    if (hospi->XferCount == 0U)
 80065d8:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 80065da:	b923      	cbnz	r3, 80065e6 <HAL_OSPI_IRQHandler+0x3a>
      __HAL_OSPI_DISABLE_IT(hospi, HAL_OSPI_IT_FT);
 80065dc:	6822      	ldr	r2, [r4, #0]
 80065de:	6813      	ldr	r3, [r2, #0]
 80065e0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80065e4:	6013      	str	r3, [r2, #0]
    HAL_OSPI_FifoThresholdCallback(hospi);
 80065e6:	4620      	mov	r0, r4
 80065e8:	f7ff ffd9 	bl	800659e <HAL_OSPI_FifoThresholdCallback>
}
 80065ec:	bd38      	pop	{r3, r4, r5, pc}
    else if (currentstate == HAL_OSPI_STATE_BUSY_RX)
 80065ee:	2928      	cmp	r1, #40	; 0x28
 80065f0:	d1f2      	bne.n	80065d8 <HAL_OSPI_IRQHandler+0x2c>
      *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 80065f2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80065f4:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 80065f8:	7013      	strb	r3, [r2, #0]
 80065fa:	e7e7      	b.n	80065cc <HAL_OSPI_IRQHandler+0x20>
  else if (((flag & HAL_OSPI_FLAG_TC) != 0U) && ((itsource & HAL_OSPI_IT_TC) != 0U))
 80065fc:	0795      	lsls	r5, r2, #30
 80065fe:	d53e      	bpl.n	800667e <HAL_OSPI_IRQHandler+0xd2>
 8006600:	0385      	lsls	r5, r0, #14
 8006602:	d53c      	bpl.n	800667e <HAL_OSPI_IRQHandler+0xd2>
    if (currentstate == HAL_OSPI_STATE_BUSY_RX)
 8006604:	2928      	cmp	r1, #40	; 0x28
 8006606:	d11d      	bne.n	8006644 <HAL_OSPI_IRQHandler+0x98>
      if ((hospi->XferCount > 0U) && ((flag & OCTOSPI_SR_FLEVEL) != 0U))
 8006608:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800660a:	b169      	cbz	r1, 8006628 <HAL_OSPI_IRQHandler+0x7c>
 800660c:	f412 5f7c 	tst.w	r2, #16128	; 0x3f00
 8006610:	d00a      	beq.n	8006628 <HAL_OSPI_IRQHandler+0x7c>
        *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 8006612:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006616:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006618:	7013      	strb	r3, [r2, #0]
        hospi->pBuffPtr++;
 800661a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800661c:	3301      	adds	r3, #1
 800661e:	6423      	str	r3, [r4, #64]	; 0x40
        hospi->XferCount--;
 8006620:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8006622:	3b01      	subs	r3, #1
 8006624:	64a3      	str	r3, [r4, #72]	; 0x48
 8006626:	e7e1      	b.n	80065ec <HAL_OSPI_IRQHandler+0x40>
      else if(hospi->XferCount == 0U)
 8006628:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800662a:	2a00      	cmp	r2, #0
 800662c:	d1de      	bne.n	80065ec <HAL_OSPI_IRQHandler+0x40>
        hospi->Instance->FCR = HAL_OSPI_FLAG_TC;
 800662e:	2102      	movs	r1, #2
        HAL_OSPI_RxCpltCallback(hospi);
 8006630:	4620      	mov	r0, r4
        hospi->Instance->FCR = HAL_OSPI_FLAG_TC;
 8006632:	6259      	str	r1, [r3, #36]	; 0x24
        __HAL_OSPI_DISABLE_IT(hospi, HAL_OSPI_IT_TC | HAL_OSPI_IT_FT | HAL_OSPI_IT_TE);
 8006634:	681a      	ldr	r2, [r3, #0]
 8006636:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 800663a:	601a      	str	r2, [r3, #0]
        hospi->State = HAL_OSPI_STATE_READY;
 800663c:	6521      	str	r1, [r4, #80]	; 0x50
        HAL_OSPI_RxCpltCallback(hospi);
 800663e:	f7ff ffb0 	bl	80065a2 <HAL_OSPI_RxCpltCallback>
 8006642:	e7d3      	b.n	80065ec <HAL_OSPI_IRQHandler+0x40>
      hospi->Instance->FCR = HAL_OSPI_FLAG_TC;
 8006644:	2002      	movs	r0, #2
      if (currentstate == HAL_OSPI_STATE_BUSY_TX)
 8006646:	2918      	cmp	r1, #24
      hospi->Instance->FCR = HAL_OSPI_FLAG_TC;
 8006648:	6258      	str	r0, [r3, #36]	; 0x24
      __HAL_OSPI_DISABLE_IT(hospi, HAL_OSPI_IT_TC | HAL_OSPI_IT_FT | HAL_OSPI_IT_TE);
 800664a:	681a      	ldr	r2, [r3, #0]
 800664c:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 8006650:	601a      	str	r2, [r3, #0]
      hospi->State = HAL_OSPI_STATE_READY;
 8006652:	6520      	str	r0, [r4, #80]	; 0x50
      if (currentstate == HAL_OSPI_STATE_BUSY_TX)
 8006654:	d103      	bne.n	800665e <HAL_OSPI_IRQHandler+0xb2>
        HAL_OSPI_TxCpltCallback(hospi);
 8006656:	4620      	mov	r0, r4
 8006658:	f7ff ffa4 	bl	80065a4 <HAL_OSPI_TxCpltCallback>
 800665c:	e7c6      	b.n	80065ec <HAL_OSPI_IRQHandler+0x40>
      else if (currentstate == HAL_OSPI_STATE_BUSY_CMD)
 800665e:	2908      	cmp	r1, #8
 8006660:	d103      	bne.n	800666a <HAL_OSPI_IRQHandler+0xbe>
        HAL_OSPI_CmdCpltCallback(hospi);
 8006662:	4620      	mov	r0, r4
 8006664:	f7ff ff9c 	bl	80065a0 <HAL_OSPI_CmdCpltCallback>
 8006668:	e7c0      	b.n	80065ec <HAL_OSPI_IRQHandler+0x40>
      else if (currentstate == HAL_OSPI_STATE_ABORT)
 800666a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800666e:	d1bd      	bne.n	80065ec <HAL_OSPI_IRQHandler+0x40>
        if (hospi->ErrorCode == HAL_OSPI_ERROR_NONE)
 8006670:	6d63      	ldr	r3, [r4, #84]	; 0x54
          HAL_OSPI_AbortCpltCallback(hospi);
 8006672:	4620      	mov	r0, r4
        if (hospi->ErrorCode == HAL_OSPI_ERROR_NONE)
 8006674:	2b00      	cmp	r3, #0
 8006676:	d131      	bne.n	80066dc <HAL_OSPI_IRQHandler+0x130>
          HAL_OSPI_AbortCpltCallback(hospi);
 8006678:	f7ff ff6e 	bl	8006558 <HAL_OSPI_AbortCpltCallback>
 800667c:	e7b6      	b.n	80065ec <HAL_OSPI_IRQHandler+0x40>
  else if (((flag & HAL_OSPI_FLAG_SM) != 0U) && ((itsource & HAL_OSPI_IT_SM) != 0U))
 800667e:	0711      	lsls	r1, r2, #28
 8006680:	d510      	bpl.n	80066a4 <HAL_OSPI_IRQHandler+0xf8>
 8006682:	0305      	lsls	r5, r0, #12
 8006684:	d50e      	bpl.n	80066a4 <HAL_OSPI_IRQHandler+0xf8>
    hospi->Instance->FCR = HAL_OSPI_FLAG_SM;
 8006686:	2208      	movs	r2, #8
 8006688:	625a      	str	r2, [r3, #36]	; 0x24
    if ((hospi->Instance->CR & OCTOSPI_CR_APMS) != 0U)
 800668a:	681a      	ldr	r2, [r3, #0]
 800668c:	0250      	lsls	r0, r2, #9
 800668e:	d505      	bpl.n	800669c <HAL_OSPI_IRQHandler+0xf0>
      __HAL_OSPI_DISABLE_IT(hospi, HAL_OSPI_IT_SM | HAL_OSPI_IT_TE);
 8006690:	681a      	ldr	r2, [r3, #0]
 8006692:	f422 2210 	bic.w	r2, r2, #589824	; 0x90000
 8006696:	601a      	str	r2, [r3, #0]
      hospi->State = HAL_OSPI_STATE_READY;
 8006698:	2302      	movs	r3, #2
 800669a:	6523      	str	r3, [r4, #80]	; 0x50
    HAL_OSPI_StatusMatchCallback(hospi);
 800669c:	4620      	mov	r0, r4
 800669e:	f7ff ff82 	bl	80065a6 <HAL_OSPI_StatusMatchCallback>
 80066a2:	e7a3      	b.n	80065ec <HAL_OSPI_IRQHandler+0x40>
  else if (((flag & HAL_OSPI_FLAG_TE) != 0U) && ((itsource & HAL_OSPI_IT_TE) != 0U))
 80066a4:	07d1      	lsls	r1, r2, #31
 80066a6:	d51c      	bpl.n	80066e2 <HAL_OSPI_IRQHandler+0x136>
 80066a8:	03c5      	lsls	r5, r0, #15
 80066aa:	d51a      	bpl.n	80066e2 <HAL_OSPI_IRQHandler+0x136>
    hospi->Instance->FCR = HAL_OSPI_FLAG_TE;
 80066ac:	2201      	movs	r2, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_TRANSFER;
 80066ae:	2502      	movs	r5, #2
    hospi->Instance->FCR = HAL_OSPI_FLAG_TE;
 80066b0:	625a      	str	r2, [r3, #36]	; 0x24
    __HAL_OSPI_DISABLE_IT(hospi, (HAL_OSPI_IT_TO | HAL_OSPI_IT_SM | HAL_OSPI_IT_FT | HAL_OSPI_IT_TC | HAL_OSPI_IT_TE));
 80066b2:	681a      	ldr	r2, [r3, #0]
 80066b4:	f422 12f8 	bic.w	r2, r2, #2031616	; 0x1f0000
 80066b8:	601a      	str	r2, [r3, #0]
    hospi->ErrorCode = HAL_OSPI_ERROR_TRANSFER;
 80066ba:	6565      	str	r5, [r4, #84]	; 0x54
    if ((hospi->Instance->CR & OCTOSPI_CR_DMAEN) != 0U)
 80066bc:	681a      	ldr	r2, [r3, #0]
 80066be:	0750      	lsls	r0, r2, #29
 80066c0:	d50a      	bpl.n	80066d8 <HAL_OSPI_IRQHandler+0x12c>
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 80066c2:	681a      	ldr	r2, [r3, #0]
      hospi->hmdma->XferAbortCallback = OSPI_DMAAbortCplt;
 80066c4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 80066c6:	f022 0204 	bic.w	r2, r2, #4
 80066ca:	601a      	str	r2, [r3, #0]
      hospi->hmdma->XferAbortCallback = OSPI_DMAAbortCplt;
 80066cc:	4b0a      	ldr	r3, [pc, #40]	; (80066f8 <HAL_OSPI_IRQHandler+0x14c>)
 80066ce:	6583      	str	r3, [r0, #88]	; 0x58
      if (HAL_MDMA_Abort_IT(hospi->hmdma) != HAL_OK)
 80066d0:	f7ff fc3a 	bl	8005f48 <HAL_MDMA_Abort_IT>
 80066d4:	2800      	cmp	r0, #0
 80066d6:	d089      	beq.n	80065ec <HAL_OSPI_IRQHandler+0x40>
        HAL_OSPI_ErrorCallback(hospi);
 80066d8:	4620      	mov	r0, r4
        hospi->State = HAL_OSPI_STATE_READY;
 80066da:	6525      	str	r5, [r4, #80]	; 0x50
        HAL_OSPI_ErrorCallback(hospi);
 80066dc:	f7ff ff3b 	bl	8006556 <HAL_OSPI_ErrorCallback>
 80066e0:	e784      	b.n	80065ec <HAL_OSPI_IRQHandler+0x40>
  else if (((flag & HAL_OSPI_FLAG_TO) != 0U) && ((itsource & HAL_OSPI_IT_TO) != 0U))
 80066e2:	06d1      	lsls	r1, r2, #27
 80066e4:	d582      	bpl.n	80065ec <HAL_OSPI_IRQHandler+0x40>
 80066e6:	02c2      	lsls	r2, r0, #11
 80066e8:	d580      	bpl.n	80065ec <HAL_OSPI_IRQHandler+0x40>
    hospi->Instance->FCR = HAL_OSPI_FLAG_TO;
 80066ea:	2210      	movs	r2, #16
    HAL_OSPI_TimeOutCallback(hospi);
 80066ec:	4620      	mov	r0, r4
    hospi->Instance->FCR = HAL_OSPI_FLAG_TO;
 80066ee:	625a      	str	r2, [r3, #36]	; 0x24
    HAL_OSPI_TimeOutCallback(hospi);
 80066f0:	f7ff ff5a 	bl	80065a8 <HAL_OSPI_TimeOutCallback>
}
 80066f4:	e77a      	b.n	80065ec <HAL_OSPI_IRQHandler+0x40>
 80066f6:	bf00      	nop
 80066f8:	0800655b 	.word	0x0800655b

080066fc <HAL_OSPI_Abort>:
{
 80066fc:	b530      	push	{r4, r5, lr}
 80066fe:	4604      	mov	r4, r0
 8006700:	b085      	sub	sp, #20
  uint32_t tickstart = HAL_GetTick();
 8006702:	f7fe f843 	bl	800478c <HAL_GetTick>
 8006706:	4603      	mov	r3, r0
  state = hospi->State;
 8006708:	6d22      	ldr	r2, [r4, #80]	; 0x50
  if (((state & OSPI_BUSY_STATE_MASK) != 0U) || ((state & OSPI_CFG_STATE_MASK) != 0U))
 800670a:	f012 0f0c 	tst.w	r2, #12
 800670e:	d035      	beq.n	800677c <HAL_OSPI_Abort+0x80>
    if ((hospi->Instance->CR & OCTOSPI_CR_DMAEN) != 0U)
 8006710:	6821      	ldr	r1, [r4, #0]
 8006712:	680a      	ldr	r2, [r1, #0]
 8006714:	f012 0204 	ands.w	r2, r2, #4
 8006718:	d02b      	beq.n	8006772 <HAL_OSPI_Abort+0x76>
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 800671a:	680a      	ldr	r2, [r1, #0]
 800671c:	9003      	str	r0, [sp, #12]
 800671e:	f022 0204 	bic.w	r2, r2, #4
      status = HAL_MDMA_Abort(hospi->hmdma);
 8006722:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 8006724:	600a      	str	r2, [r1, #0]
      status = HAL_MDMA_Abort(hospi->hmdma);
 8006726:	f7ff fbd7 	bl	8005ed8 <HAL_MDMA_Abort>
      if (status != HAL_OK)
 800672a:	9b03      	ldr	r3, [sp, #12]
 800672c:	b108      	cbz	r0, 8006732 <HAL_OSPI_Abort+0x36>
        hospi->ErrorCode = HAL_OSPI_ERROR_DMA;
 800672e:	2204      	movs	r2, #4
 8006730:	6562      	str	r2, [r4, #84]	; 0x54
    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 8006732:	6822      	ldr	r2, [r4, #0]
 8006734:	6a11      	ldr	r1, [r2, #32]
 8006736:	0689      	lsls	r1, r1, #26
 8006738:	d51d      	bpl.n	8006776 <HAL_OSPI_Abort+0x7a>
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 800673a:	6811      	ldr	r1, [r2, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 800673c:	4620      	mov	r0, r4
 800673e:	9303      	str	r3, [sp, #12]
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 8006740:	f041 0102 	orr.w	r1, r1, #2
 8006744:	6011      	str	r1, [r2, #0]
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 8006746:	2102      	movs	r1, #2
 8006748:	6da2      	ldr	r2, [r4, #88]	; 0x58
 800674a:	9200      	str	r2, [sp, #0]
 800674c:	2201      	movs	r2, #1
 800674e:	f7ff fcf3 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8006752:	9b03      	ldr	r3, [sp, #12]
 8006754:	b958      	cbnz	r0, 800676e <HAL_OSPI_Abort+0x72>
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8006756:	6822      	ldr	r2, [r4, #0]
 8006758:	2502      	movs	r5, #2
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800675a:	2120      	movs	r1, #32
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 800675c:	6255      	str	r5, [r2, #36]	; 0x24
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 800675e:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8006760:	9200      	str	r2, [sp, #0]
 8006762:	4602      	mov	r2, r0
 8006764:	4620      	mov	r0, r4
 8006766:	f7ff fce7 	bl	8006138 <OSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800676a:	b900      	cbnz	r0, 800676e <HAL_OSPI_Abort+0x72>
          hospi->State = HAL_OSPI_STATE_READY;
 800676c:	6525      	str	r5, [r4, #80]	; 0x50
}
 800676e:	b005      	add	sp, #20
 8006770:	bd30      	pop	{r4, r5, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8006772:	4610      	mov	r0, r2
 8006774:	e7dd      	b.n	8006732 <HAL_OSPI_Abort+0x36>
      hospi->State = HAL_OSPI_STATE_READY;
 8006776:	2302      	movs	r3, #2
 8006778:	6523      	str	r3, [r4, #80]	; 0x50
 800677a:	e7f8      	b.n	800676e <HAL_OSPI_Abort+0x72>
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 800677c:	2310      	movs	r3, #16
    status = HAL_ERROR;
 800677e:	2001      	movs	r0, #1
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8006780:	6563      	str	r3, [r4, #84]	; 0x54
 8006782:	e7f4      	b.n	800676e <HAL_OSPI_Abort+0x72>

08006784 <HAL_OSPIM_Config>:
    other_instance = 0U;
 8006784:	4b9f      	ldr	r3, [pc, #636]	; (8006a04 <HAL_OSPIM_Config+0x280>)
 8006786:	f04f 0c01 	mov.w	ip, #1
  if (hospi->Instance == OCTOSPI1)
 800678a:	6802      	ldr	r2, [r0, #0]
{
 800678c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    other_instance = 0U;
 8006790:	429a      	cmp	r2, r3
{
 8006792:	b08f      	sub	sp, #60	; 0x3c
    status = HAL_ERROR;
  }
  else
  {
    /* Initialize the structure */
    cfg->ClkPort    = 0U;
 8006794:	f04f 0600 	mov.w	r6, #0
    cfg->IOLowPort  = 0U;
    cfg->IOHighPort = 0U;

    if (instance_nb == 2U)
    {
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 8006798:	f8df e270 	ldr.w	lr, [pc, #624]	; 8006a0c <HAL_OSPIM_Config+0x288>
    other_instance = 0U;
 800679c:	bf0b      	itete	eq
 800679e:	f04f 0801 	moveq.w	r8, #1
 80067a2:	f04f 0800 	movne.w	r8, #0
 80067a6:	2400      	moveq	r4, #0
 80067a8:	2401      	movne	r4, #1
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 80067aa:	ab02      	add	r3, sp, #8
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
               | OCTOSPIM_PCR_IOLSRC_1 | OCTOSPIM_PCR_IOHSRC_1);
      }
      else
      {
        value = OCTOSPIM_PCR_NCSSRC;
 80067ac:	f8df 9260 	ldr.w	r9, [pc, #608]	; 8006a10 <HAL_OSPIM_Config+0x28c>
    if (instance_nb == 2U)
 80067b0:	f1bc 0f02 	cmp.w	ip, #2
    cfg->IOHighPort = 0U;
 80067b4:	611e      	str	r6, [r3, #16]
    cfg->DQSPort    = 0U;
 80067b6:	e9c3 6600 	strd	r6, r6, [r3]
    cfg->IOLowPort  = 0U;
 80067ba:	e9c3 6602 	strd	r6, r6, [r3, #8]
    if (instance_nb == 2U)
 80067be:	f040 811c 	bne.w	80069fa <HAL_OSPIM_Config+0x276>
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 80067c2:	f8de 2000 	ldr.w	r2, [lr]
        value = OCTOSPIM_PCR_NCSSRC;
 80067c6:	f012 0f01 	tst.w	r2, #1
 80067ca:	bf0c      	ite	eq
 80067cc:	464d      	moveq	r5, r9
 80067ce:	f44f 7500 	movne.w	r5, #512	; 0x200
      }
    }

    /* Get the information about the instance */
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 80067d2:	2700      	movs	r7, #0
    {
      reg = OCTOSPIM->PCR[index];
 80067d4:	eb0e 0287 	add.w	r2, lr, r7, lsl #2
      {
        /* The clock is enabled on this port */
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
        {
          /* The clock correspond to the instance passed as parameter */
          cfg->ClkPort = index+1U;
 80067d8:	1c78      	adds	r0, r7, #1
      reg = OCTOSPIM->PCR[index];
 80067da:	6852      	ldr	r2, [r2, #4]
      if ((reg & OCTOSPIM_PCR_CLKEN) != 0U)
 80067dc:	07d7      	lsls	r7, r2, #31
 80067de:	d504      	bpl.n	80067ea <HAL_OSPIM_Config+0x66>
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
 80067e0:	ea82 0705 	eor.w	r7, r2, r5
 80067e4:	07bf      	lsls	r7, r7, #30
          cfg->ClkPort = index+1U;
 80067e6:	bf58      	it	pl
 80067e8:	6018      	strpl	r0, [r3, #0]
        }
      }

      if ((reg & OCTOSPIM_PCR_DQSEN) != 0U)
 80067ea:	06d7      	lsls	r7, r2, #27
 80067ec:	d504      	bpl.n	80067f8 <HAL_OSPIM_Config+0x74>
      {
        /* The DQS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_DQSSRC) == (value & OCTOSPIM_PCR_DQSSRC))
 80067ee:	ea82 0705 	eor.w	r7, r2, r5
 80067f2:	06bf      	lsls	r7, r7, #26
        {
          /* The DQS correspond to the instance passed as parameter */
          cfg->DQSPort = index+1U;
 80067f4:	bf58      	it	pl
 80067f6:	6058      	strpl	r0, [r3, #4]
        }
      }

      if ((reg & OCTOSPIM_PCR_NCSEN) != 0U)
 80067f8:	05d7      	lsls	r7, r2, #23
 80067fa:	d504      	bpl.n	8006806 <HAL_OSPIM_Config+0x82>
      {
        /* The nCS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_NCSSRC) == (value & OCTOSPIM_PCR_NCSSRC))
 80067fc:	ea82 0705 	eor.w	r7, r2, r5
 8006800:	05bf      	lsls	r7, r7, #22
        {
          /* The nCS correspond to the instance passed as parameter */
          cfg->NCSPort = index+1U;
 8006802:	bf58      	it	pl
 8006804:	6098      	strpl	r0, [r3, #8]
        }
      }

      if ((reg & OCTOSPIM_PCR_IOLEN) != 0U)
 8006806:	03d7      	lsls	r7, r2, #15
 8006808:	d50a      	bpl.n	8006820 <HAL_OSPIM_Config+0x9c>
      {
        /* The IO Low is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOLSRC_1) == (value & OCTOSPIM_PCR_IOLSRC_1))
 800680a:	ea82 0705 	eor.w	r7, r2, r5
 800680e:	037f      	lsls	r7, r7, #13
 8006810:	d406      	bmi.n	8006820 <HAL_OSPIM_Config+0x9c>
        {
          /* The IO Low correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOLSRC_0) == 0U)
 8006812:	0397      	lsls	r7, r2, #14
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOLEN | (index+1U));
 8006814:	bf54      	ite	pl
 8006816:	f440 3780 	orrpl.w	r7, r0, #65536	; 0x10000
          }
          else
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOHEN | (index+1U));
 800681a:	f040 7780 	orrmi.w	r7, r0, #16777216	; 0x1000000
 800681e:	60df      	str	r7, [r3, #12]
          }
        }
      }

      if ((reg & OCTOSPIM_PCR_IOHEN) != 0U)
 8006820:	01d7      	lsls	r7, r2, #7
 8006822:	d50a      	bpl.n	800683a <HAL_OSPIM_Config+0xb6>
      {
        /* The IO High is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOHSRC_1) == (value & OCTOSPIM_PCR_IOHSRC_1))
 8006824:	ea82 0705 	eor.w	r7, r2, r5
 8006828:	017f      	lsls	r7, r7, #5
 800682a:	d406      	bmi.n	800683a <HAL_OSPIM_Config+0xb6>
        {
          /* The IO High correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOHSRC_0) == 0U)
 800682c:	0197      	lsls	r7, r2, #6
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOLEN | (index+1U));
 800682e:	bf54      	ite	pl
 8006830:	f440 3280 	orrpl.w	r2, r0, #65536	; 0x10000
          }
          else
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOHEN | (index+1U));
 8006834:	f040 7280 	orrmi.w	r2, r0, #16777216	; 0x1000000
 8006838:	611a      	str	r2, [r3, #16]
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 800683a:	2802      	cmp	r0, #2
 800683c:	f04f 0701 	mov.w	r7, #1
 8006840:	d1c8      	bne.n	80067d4 <HAL_OSPIM_Config+0x50>
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 8006842:	f1bc 0f02 	cmp.w	ip, #2
 8006846:	f103 0318 	add.w	r3, r3, #24
 800684a:	f040 80d4 	bne.w	80069f6 <HAL_OSPIM_Config+0x272>
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 800684e:	4b6d      	ldr	r3, [pc, #436]	; (8006a04 <HAL_OSPIM_Config+0x280>)
 8006850:	681d      	ldr	r5, [r3, #0]
 8006852:	403d      	ands	r5, r7
 8006854:	d004      	beq.n	8006860 <HAL_OSPIM_Config+0xdc>
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006856:	681a      	ldr	r2, [r3, #0]
      ospi_enabled |= 0x1U;
 8006858:	463d      	mov	r5, r7
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 800685a:	f022 0201 	bic.w	r2, r2, #1
 800685e:	601a      	str	r2, [r3, #0]
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 8006860:	4b69      	ldr	r3, [pc, #420]	; (8006a08 <HAL_OSPIM_Config+0x284>)
 8006862:	681a      	ldr	r2, [r3, #0]
 8006864:	07d0      	lsls	r0, r2, #31
 8006866:	f140 80ca 	bpl.w	80069fe <HAL_OSPIM_Config+0x27a>
      CLEAR_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 800686a:	681a      	ldr	r2, [r3, #0]
 800686c:	f022 0201 	bic.w	r2, r2, #1
 8006870:	601a      	str	r2, [r3, #0]
      ospi_enabled |= 0x2U;
 8006872:	f045 0302 	orr.w	r3, r5, #2
 8006876:	9301      	str	r3, [sp, #4]
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort-1U)], OCTOSPIM_PCR_NCSEN);
 8006878:	ab0e      	add	r3, sp, #56	; 0x38
 800687a:	2018      	movs	r0, #24
 800687c:	fb00 3004 	mla	r0, r0, r4, r3
 8006880:	4b62      	ldr	r3, [pc, #392]	; (8006a0c <HAL_OSPIM_Config+0x288>)
 8006882:	f850 2c28 	ldr.w	r2, [r0, #-40]
 8006886:	3a01      	subs	r2, #1
 8006888:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 800688c:	6857      	ldr	r7, [r2, #4]
 800688e:	f427 7780 	bic.w	r7, r7, #256	; 0x100
 8006892:	6057      	str	r7, [r2, #4]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006894:	681a      	ldr	r2, [r3, #0]
 8006896:	07d2      	lsls	r2, r2, #31
 8006898:	f140 80be 	bpl.w	8006a18 <HAL_OSPIM_Config+0x294>
      CLEAR_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 800689c:	681a      	ldr	r2, [r3, #0]
 800689e:	f022 0201 	bic.w	r2, r2, #1
 80068a2:	601a      	str	r2, [r3, #0]
      if (other_instance == 1U)
 80068a4:	f1b8 0f00 	cmp.w	r8, #0
 80068a8:	d02c      	beq.n	8006904 <HAL_OSPIM_Config+0x180>
        SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKSRC);
 80068aa:	9a08      	ldr	r2, [sp, #32]
 80068ac:	3a01      	subs	r2, #1
 80068ae:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 80068b2:	6850      	ldr	r0, [r2, #4]
 80068b4:	f040 0002 	orr.w	r0, r0, #2
 80068b8:	6050      	str	r0, [r2, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 80068ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80068bc:	b132      	cbz	r2, 80068cc <HAL_OSPIM_Config+0x148>
          SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort-1U)], OCTOSPIM_PCR_DQSSRC);
 80068be:	3a01      	subs	r2, #1
 80068c0:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80068c4:	685a      	ldr	r2, [r3, #4]
 80068c6:	f042 0220 	orr.w	r2, r2, #32
 80068ca:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80068cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80068ce:	b15b      	cbz	r3, 80068e8 <HAL_OSPIM_Config+0x164>
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLSRC_1);
 80068d0:	3b01      	subs	r3, #1
 80068d2:	f003 0301 	and.w	r3, r3, #1
 80068d6:	009b      	lsls	r3, r3, #2
 80068d8:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 80068dc:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80068e0:	685a      	ldr	r2, [r3, #4]
 80068e2:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80068e6:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80068e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80068ea:	b15b      	cbz	r3, 8006904 <HAL_OSPIM_Config+0x180>
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHSRC_1);
 80068ec:	3b01      	subs	r3, #1
 80068ee:	f003 0301 	and.w	r3, r3, #1
 80068f2:	009b      	lsls	r3, r3, #2
 80068f4:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 80068f8:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 80068fc:	685a      	ldr	r2, [r3, #4]
 80068fe:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 8006902:	605a      	str	r2, [r3, #4]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006904:	ab0e      	add	r3, sp, #56	; 0x38
 8006906:	f04f 0918 	mov.w	r9, #24
 800690a:	f8d1 c000 	ldr.w	ip, [r1]
 800690e:	fb09 3908 	mla	r9, r9, r8, r3
 8006912:	f859 ac30 	ldr.w	sl, [r9, #-48]
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006916:	f859 0c20 	ldr.w	r0, [r9, #-32]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 800691a:	45d4      	cmp	ip, sl
 800691c:	f859 bc2c 	ldr.w	fp, [r9, #-44]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006920:	e9d1 7e01 	ldrd	r7, lr, [r1, #4]
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 8006924:	e9d1 2303 	ldrd	r2, r3, [r1, #12]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8006928:	f000 80b4 	beq.w	8006a94 <HAL_OSPIM_Config+0x310>
 800692c:	45bb      	cmp	fp, r7
 800692e:	d00a      	beq.n	8006946 <HAL_OSPIM_Config+0x1c2>
 8006930:	f859 6c28 	ldr.w	r6, [r9, #-40]
 8006934:	4576      	cmp	r6, lr
 8006936:	d006      	beq.n	8006946 <HAL_OSPIM_Config+0x1c2>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006938:	f859 9c24 	ldr.w	r9, [r9, #-36]
 800693c:	4591      	cmp	r9, r2
 800693e:	d002      	beq.n	8006946 <HAL_OSPIM_Config+0x1c2>
 8006940:	4298      	cmp	r0, r3
 8006942:	f040 80ba 	bne.w	8006aba <HAL_OSPIM_Config+0x336>
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 8006946:	f10a 39ff 	add.w	r9, sl, #4294967295
 800694a:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 8006a0c <HAL_OSPIM_Config+0x288>
        if (IOM_cfg[other_instance].DQSPort != 0U)
 800694e:	ae0e      	add	r6, sp, #56	; 0x38
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 8006950:	eb0a 0989 	add.w	r9, sl, r9, lsl #2
 8006954:	f8d9 b004 	ldr.w	fp, [r9, #4]
 8006958:	f02b 0b01 	bic.w	fp, fp, #1
 800695c:	f8c9 b004 	str.w	fp, [r9, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8006960:	f04f 0918 	mov.w	r9, #24
 8006964:	fb09 6908 	mla	r9, r9, r8, r6
 8006968:	f859 9c2c 	ldr.w	r9, [r9, #-44]
 800696c:	f1b9 0f00 	cmp.w	r9, #0
 8006970:	d009      	beq.n	8006986 <HAL_OSPIM_Config+0x202>
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort-1U)], OCTOSPIM_PCR_DQSEN);
 8006972:	f109 39ff 	add.w	r9, r9, #4294967295
 8006976:	eb0a 0989 	add.w	r9, sl, r9, lsl #2
 800697a:	f8d9 a004 	ldr.w	sl, [r9, #4]
 800697e:	f02a 0a10 	bic.w	sl, sl, #16
 8006982:	f8c9 a004 	str.w	sl, [r9, #4]
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].NCSPort-1U)], OCTOSPIM_PCR_NCSEN);
 8006986:	f04f 0918 	mov.w	r9, #24
 800698a:	ae0e      	add	r6, sp, #56	; 0x38
 800698c:	fb09 6808 	mla	r8, r9, r8, r6
 8006990:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8006a14 <HAL_OSPIM_Config+0x290>
 8006994:	f858 6c28 	ldr.w	r6, [r8, #-40]
 8006998:	ea4f 0a86 	mov.w	sl, r6, lsl #2
 800699c:	44d1      	add	r9, sl
 800699e:	f8d9 a004 	ldr.w	sl, [r9, #4]
 80069a2:	f42a 7a80 	bic.w	sl, sl, #256	; 0x100
 80069a6:	f8c9 a004 	str.w	sl, [r9, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 80069aa:	f858 8c24 	ldr.w	r8, [r8, #-36]
 80069ae:	f1b8 0f00 	cmp.w	r8, #0
 80069b2:	d00f      	beq.n	80069d4 <HAL_OSPIM_Config+0x250>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 80069b4:	f108 38ff 	add.w	r8, r8, #4294967295
 80069b8:	f008 0801 	and.w	r8, r8, #1
 80069bc:	ea4f 0888 	mov.w	r8, r8, lsl #2
 80069c0:	f108 48a4 	add.w	r8, r8, #1375731712	; 0x52000000
 80069c4:	f508 4834 	add.w	r8, r8, #46080	; 0xb400
 80069c8:	f8d8 9004 	ldr.w	r9, [r8, #4]
 80069cc:	f429 3980 	bic.w	r9, r9, #65536	; 0x10000
 80069d0:	f8c8 9004 	str.w	r9, [r8, #4]
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80069d4:	2800      	cmp	r0, #0
 80069d6:	d070      	beq.n	8006aba <HAL_OSPIM_Config+0x336>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 80069d8:	3801      	subs	r0, #1
 80069da:	f000 0001 	and.w	r0, r0, #1
 80069de:	0080      	lsls	r0, r0, #2
 80069e0:	f100 40a4 	add.w	r0, r0, #1375731712	; 0x52000000
 80069e4:	f500 4034 	add.w	r0, r0, #46080	; 0xb400
 80069e8:	f8d0 8004 	ldr.w	r8, [r0, #4]
 80069ec:	f028 7880 	bic.w	r8, r8, #16777216	; 0x1000000
 80069f0:	f8c0 8004 	str.w	r8, [r0, #4]
 80069f4:	e061      	b.n	8006aba <HAL_OSPIM_Config+0x336>
 80069f6:	4684      	mov	ip, r0
 80069f8:	e6da      	b.n	80067b0 <HAL_OSPIM_Config+0x2c>
  uint32_t value = 0U;
 80069fa:	2500      	movs	r5, #0
 80069fc:	e6e9      	b.n	80067d2 <HAL_OSPIM_Config+0x4e>
 80069fe:	9501      	str	r5, [sp, #4]
 8006a00:	e73a      	b.n	8006878 <HAL_OSPIM_Config+0xf4>
 8006a02:	bf00      	nop
 8006a04:	52005000 	.word	0x52005000
 8006a08:	5200a000 	.word	0x5200a000
 8006a0c:	5200b400 	.word	0x5200b400
 8006a10:	04040222 	.word	0x04040222
 8006a14:	5200b3fc 	.word	0x5200b3fc
      if (IOM_cfg[instance].ClkPort != 0U)
 8006a18:	f850 2c30 	ldr.w	r2, [r0, #-48]
 8006a1c:	2a00      	cmp	r2, #0
 8006a1e:	f43f af71 	beq.w	8006904 <HAL_OSPIM_Config+0x180>
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].ClkPort-1U)], OCTOSPIM_PCR_CLKEN);
 8006a22:	3a01      	subs	r2, #1
 8006a24:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8006a28:	6857      	ldr	r7, [r2, #4]
 8006a2a:	f027 0701 	bic.w	r7, r7, #1
 8006a2e:	6057      	str	r7, [r2, #4]
        if (IOM_cfg[instance].DQSPort != 0U)
 8006a30:	f850 2c2c 	ldr.w	r2, [r0, #-44]
 8006a34:	b132      	cbz	r2, 8006a44 <HAL_OSPIM_Config+0x2c0>
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].DQSPort-1U)], OCTOSPIM_PCR_DQSEN);
 8006a36:	3a01      	subs	r2, #1
 8006a38:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8006a3c:	685a      	ldr	r2, [r3, #4]
 8006a3e:	f022 0210 	bic.w	r2, r2, #16
 8006a42:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006a44:	2318      	movs	r3, #24
 8006a46:	aa0e      	add	r2, sp, #56	; 0x38
 8006a48:	fb03 2304 	mla	r3, r3, r4, r2
 8006a4c:	f853 3c24 	ldr.w	r3, [r3, #-36]
 8006a50:	b15b      	cbz	r3, 8006a6a <HAL_OSPIM_Config+0x2e6>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOLowPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLEN);
 8006a52:	3b01      	subs	r3, #1
 8006a54:	f003 0301 	and.w	r3, r3, #1
 8006a58:	009b      	lsls	r3, r3, #2
 8006a5a:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006a5e:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006a62:	685a      	ldr	r2, [r3, #4]
 8006a64:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8006a68:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006a6a:	2318      	movs	r3, #24
 8006a6c:	aa0e      	add	r2, sp, #56	; 0x38
 8006a6e:	fb03 2304 	mla	r3, r3, r4, r2
 8006a72:	f853 3c20 	ldr.w	r3, [r3, #-32]
 8006a76:	2b00      	cmp	r3, #0
 8006a78:	f43f af44 	beq.w	8006904 <HAL_OSPIM_Config+0x180>
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort-1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 8006a7c:	3b01      	subs	r3, #1
 8006a7e:	f003 0301 	and.w	r3, r3, #1
 8006a82:	009b      	lsls	r3, r3, #2
 8006a84:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006a88:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006a8c:	685a      	ldr	r2, [r3, #4]
 8006a8e:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8006a92:	e736      	b.n	8006902 <HAL_OSPIM_Config+0x17e>
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 8006a94:	45bb      	cmp	fp, r7
 8006a96:	f47f af56 	bne.w	8006946 <HAL_OSPIM_Config+0x1c2>
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 8006a9a:	f859 9c24 	ldr.w	r9, [r9, #-36]
 8006a9e:	4591      	cmp	r9, r2
 8006aa0:	f47f af51 	bne.w	8006946 <HAL_OSPIM_Config+0x1c2>
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006aa4:	4298      	cmp	r0, r3
 8006aa6:	f47f af4e 	bne.w	8006946 <HAL_OSPIM_Config+0x1c2>
        SET_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8006aaa:	f8df 81e0 	ldr.w	r8, [pc, #480]	; 8006c8c <HAL_OSPIM_Config+0x508>
 8006aae:	f8d8 0000 	ldr.w	r0, [r8]
 8006ab2:	f040 0001 	orr.w	r0, r0, #1
 8006ab6:	f8c8 0000 	str.w	r0, [r8]
        MODIFY_REG(OCTOSPIM->PCR[(cfg->NCSPort - 1U)], (OCTOSPIM_PCR_NCSEN | OCTOSPIM_PCR_NCSSRC),
 8006aba:	4874      	ldr	r0, [pc, #464]	; (8006c8c <HAL_OSPIM_Config+0x508>)
 8006abc:	f10e 3eff 	add.w	lr, lr, #4294967295
 8006ac0:	eb00 0e8e 	add.w	lr, r0, lr, lsl #2
 8006ac4:	f8de 8004 	ldr.w	r8, [lr, #4]
 8006ac8:	f428 7840 	bic.w	r8, r8, #768	; 0x300
 8006acc:	ea48 2844 	orr.w	r8, r8, r4, lsl #9
 8006ad0:	f448 7880 	orr.w	r8, r8, #256	; 0x100
 8006ad4:	f8ce 8004 	str.w	r8, [lr, #4]
    if ((cfg->Req2AckTime - 1U) > ((OCTOSPIM->CR & OCTOSPIM_CR_REQ2ACK_TIME) >> OCTOSPIM_CR_REQ2ACK_TIME_Pos))
 8006ad8:	6949      	ldr	r1, [r1, #20]
 8006ada:	f101 3eff 	add.w	lr, r1, #4294967295
 8006ade:	6801      	ldr	r1, [r0, #0]
 8006ae0:	f3c1 4107 	ubfx	r1, r1, #16, #8
 8006ae4:	458e      	cmp	lr, r1
 8006ae6:	d905      	bls.n	8006af4 <HAL_OSPIM_Config+0x370>
      MODIFY_REG(OCTOSPIM->CR, OCTOSPIM_CR_REQ2ACK_TIME, ((cfg->Req2AckTime - 1U) << OCTOSPIM_CR_REQ2ACK_TIME_Pos));
 8006ae8:	6801      	ldr	r1, [r0, #0]
 8006aea:	f421 017f 	bic.w	r1, r1, #16711680	; 0xff0000
 8006aee:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8006af2:	6001      	str	r1, [r0, #0]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006af4:	6801      	ldr	r1, [r0, #0]
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006af6:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006afa:	f402 3e80 	and.w	lr, r2, #65536	; 0x10000
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006afe:	f011 0f01 	tst.w	r1, #1
 8006b02:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8006b06:	f403 3180 	and.w	r1, r3, #65536	; 0x10000
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006b0a:	4484      	add	ip, r0
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006b0c:	d063      	beq.n	8006bd6 <HAL_OSPIM_Config+0x452>
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 8006b0e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8006b12:	f024 0403 	bic.w	r4, r4, #3
 8006b16:	f044 0401 	orr.w	r4, r4, #1
 8006b1a:	f8cc 4004 	str.w	r4, [ip, #4]
      if (cfg->DQSPort != 0U)
 8006b1e:	b147      	cbz	r7, 8006b32 <HAL_OSPIM_Config+0x3ae>
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort-1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC), OCTOSPIM_PCR_DQSEN);
 8006b20:	3f01      	subs	r7, #1
 8006b22:	eb00 0787 	add.w	r7, r0, r7, lsl #2
 8006b26:	6878      	ldr	r0, [r7, #4]
 8006b28:	f020 0030 	bic.w	r0, r0, #48	; 0x30
 8006b2c:	f040 0010 	orr.w	r0, r0, #16
 8006b30:	6078      	str	r0, [r7, #4]
      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006b32:	f1be 0f00 	cmp.w	lr, #0
 8006b36:	d02e      	beq.n	8006b96 <HAL_OSPIM_Config+0x412>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006b38:	3a01      	subs	r2, #1
 8006b3a:	f002 0201 	and.w	r2, r2, #1
 8006b3e:	0092      	lsls	r2, r2, #2
 8006b40:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 8006b44:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 8006b48:	6850      	ldr	r0, [r2, #4]
 8006b4a:	f420 20e0 	bic.w	r0, r0, #458752	; 0x70000
 8006b4e:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006b52:	6050      	str	r0, [r2, #4]
      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006b54:	b379      	cbz	r1, 8006bb6 <HAL_OSPIM_Config+0x432>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006b56:	3b01      	subs	r3, #1
 8006b58:	f003 0301 	and.w	r3, r3, #1
 8006b5c:	009b      	lsls	r3, r3, #2
 8006b5e:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006b62:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006b66:	685a      	ldr	r2, [r3, #4]
 8006b68:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006b6c:	f442 3240 	orr.w	r2, r2, #196608	; 0x30000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006b70:	605a      	str	r2, [r3, #4]
    if ((ospi_enabled & 0x1U) != 0U)
 8006b72:	b125      	cbz	r5, 8006b7e <HAL_OSPIM_Config+0x3fa>
      SET_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006b74:	4a46      	ldr	r2, [pc, #280]	; (8006c90 <HAL_OSPIM_Config+0x50c>)
 8006b76:	6813      	ldr	r3, [r2, #0]
 8006b78:	f043 0301 	orr.w	r3, r3, #1
 8006b7c:	6013      	str	r3, [r2, #0]
    if ((ospi_enabled & 0x2U) != 0U)
 8006b7e:	9b01      	ldr	r3, [sp, #4]
 8006b80:	079b      	lsls	r3, r3, #30
 8006b82:	d504      	bpl.n	8006b8e <HAL_OSPIM_Config+0x40a>
      SET_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8006b84:	4a43      	ldr	r2, [pc, #268]	; (8006c94 <HAL_OSPIM_Config+0x510>)
 8006b86:	6813      	ldr	r3, [r2, #0]
 8006b88:	f043 0301 	orr.w	r3, r3, #1
 8006b8c:	6013      	str	r3, [r2, #0]
}
 8006b8e:	2000      	movs	r0, #0
 8006b90:	b00f      	add	sp, #60	; 0x3c
 8006b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006b96:	2a00      	cmp	r2, #0
 8006b98:	d0dc      	beq.n	8006b54 <HAL_OSPIM_Config+0x3d0>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006b9a:	3a01      	subs	r2, #1
 8006b9c:	f002 0201 	and.w	r2, r2, #1
 8006ba0:	0092      	lsls	r2, r2, #2
 8006ba2:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 8006ba6:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 8006baa:	6850      	ldr	r0, [r2, #4]
 8006bac:	f020 60e0 	bic.w	r0, r0, #117440512	; 0x7000000
 8006bb0:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 8006bb4:	e7cd      	b.n	8006b52 <HAL_OSPIM_Config+0x3ce>
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006bb6:	2b00      	cmp	r3, #0
 8006bb8:	d0db      	beq.n	8006b72 <HAL_OSPIM_Config+0x3ee>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006bba:	3b01      	subs	r3, #1
 8006bbc:	f003 0301 	and.w	r3, r3, #1
 8006bc0:	009b      	lsls	r3, r3, #2
 8006bc2:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006bc6:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006bca:	685a      	ldr	r2, [r3, #4]
 8006bcc:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006bd0:	f042 7240 	orr.w	r2, r2, #50331648	; 0x3000000
 8006bd4:	e7cc      	b.n	8006b70 <HAL_OSPIM_Config+0x3ec>
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort-1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC),
 8006bd6:	f8dc 8004 	ldr.w	r8, [ip, #4]
 8006bda:	f028 0803 	bic.w	r8, r8, #3
 8006bde:	ea48 0844 	orr.w	r8, r8, r4, lsl #1
 8006be2:	f048 0801 	orr.w	r8, r8, #1
 8006be6:	f8cc 8004 	str.w	r8, [ip, #4]
      if (cfg->DQSPort != 0U)
 8006bea:	b157      	cbz	r7, 8006c02 <HAL_OSPIM_Config+0x47e>
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort-1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC),
 8006bec:	3f01      	subs	r7, #1
 8006bee:	eb00 0087 	add.w	r0, r0, r7, lsl #2
 8006bf2:	6847      	ldr	r7, [r0, #4]
 8006bf4:	f027 0730 	bic.w	r7, r7, #48	; 0x30
 8006bf8:	ea47 1744 	orr.w	r7, r7, r4, lsl #5
 8006bfc:	f047 0710 	orr.w	r7, r7, #16
 8006c00:	6047      	str	r7, [r0, #4]
      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006c02:	f1be 0f00 	cmp.w	lr, #0
 8006c06:	d01e      	beq.n	8006c46 <HAL_OSPIM_Config+0x4c2>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006c08:	3a01      	subs	r2, #1
 8006c0a:	f002 0201 	and.w	r2, r2, #1
 8006c0e:	0092      	lsls	r2, r2, #2
 8006c10:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 8006c14:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 8006c18:	6850      	ldr	r0, [r2, #4]
 8006c1a:	f420 20e0 	bic.w	r0, r0, #458752	; 0x70000
 8006c1e:	ea40 4084 	orr.w	r0, r0, r4, lsl #18
 8006c22:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006c26:	6050      	str	r0, [r2, #4]
      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006c28:	b1f9      	cbz	r1, 8006c6a <HAL_OSPIM_Config+0x4e6>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006c2a:	3b01      	subs	r3, #1
 8006c2c:	f003 0301 	and.w	r3, r3, #1
 8006c30:	009b      	lsls	r3, r3, #2
 8006c32:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006c36:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006c3a:	685a      	ldr	r2, [r3, #4]
 8006c3c:	f422 22e0 	bic.w	r2, r2, #458752	; 0x70000
 8006c40:	ea42 4284 	orr.w	r2, r2, r4, lsl #18
 8006c44:	e792      	b.n	8006b6c <HAL_OSPIM_Config+0x3e8>
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006c46:	2a00      	cmp	r2, #0
 8006c48:	d0ee      	beq.n	8006c28 <HAL_OSPIM_Config+0x4a4>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort-1U)& OSPI_IOM_PORT_MASK)],
 8006c4a:	3a01      	subs	r2, #1
 8006c4c:	f002 0201 	and.w	r2, r2, #1
 8006c50:	0092      	lsls	r2, r2, #2
 8006c52:	f102 42a4 	add.w	r2, r2, #1375731712	; 0x52000000
 8006c56:	f502 4234 	add.w	r2, r2, #46080	; 0xb400
 8006c5a:	6850      	ldr	r0, [r2, #4]
 8006c5c:	f020 60e0 	bic.w	r0, r0, #117440512	; 0x7000000
 8006c60:	ea40 6084 	orr.w	r0, r0, r4, lsl #26
 8006c64:	f040 7080 	orr.w	r0, r0, #16777216	; 0x1000000
 8006c68:	e7dd      	b.n	8006c26 <HAL_OSPIM_Config+0x4a2>
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8006c6a:	2b00      	cmp	r3, #0
 8006c6c:	d081      	beq.n	8006b72 <HAL_OSPIM_Config+0x3ee>
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort-1U)& OSPI_IOM_PORT_MASK)],
 8006c6e:	3b01      	subs	r3, #1
 8006c70:	f003 0301 	and.w	r3, r3, #1
 8006c74:	009b      	lsls	r3, r3, #2
 8006c76:	f103 43a4 	add.w	r3, r3, #1375731712	; 0x52000000
 8006c7a:	f503 4334 	add.w	r3, r3, #46080	; 0xb400
 8006c7e:	685a      	ldr	r2, [r3, #4]
 8006c80:	f022 62e0 	bic.w	r2, r2, #117440512	; 0x7000000
 8006c84:	ea42 6284 	orr.w	r2, r2, r4, lsl #26
 8006c88:	e7a2      	b.n	8006bd0 <HAL_OSPIM_Config+0x44c>
 8006c8a:	bf00      	nop
 8006c8c:	5200b400 	.word	0x5200b400
 8006c90:	52005000 	.word	0x52005000
 8006c94:	5200a000 	.word	0x5200a000

08006c98 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8006c98:	b570      	push	{r4, r5, r6, lr}

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 8006c9a:	4d1c      	ldr	r5, [pc, #112]	; (8006d0c <HAL_PWREx_ConfigSupply+0x74>)
{
 8006c9c:	4604      	mov	r4, r0
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
 8006c9e:	68eb      	ldr	r3, [r5, #12]
 8006ca0:	f003 0307 	and.w	r3, r3, #7
 8006ca4:	2b06      	cmp	r3, #6
 8006ca6:	d006      	beq.n	8006cb6 <HAL_PWREx_ConfigSupply+0x1e>
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8006ca8:	68e8      	ldr	r0, [r5, #12]
 8006caa:	f000 003f 	and.w	r0, r0, #63	; 0x3f
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 8006cae:	1b00      	subs	r0, r0, r4
 8006cb0:	bf18      	it	ne
 8006cb2:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
 8006cb4:	bd70      	pop	{r4, r5, r6, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 8006cb6:	68eb      	ldr	r3, [r5, #12]
 8006cb8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006cbc:	4303      	orrs	r3, r0
 8006cbe:	60eb      	str	r3, [r5, #12]
  tickstart = HAL_GetTick ();
 8006cc0:	f7fd fd64 	bl	800478c <HAL_GetTick>
 8006cc4:	4606      	mov	r6, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006cc6:	686b      	ldr	r3, [r5, #4]
 8006cc8:	049a      	lsls	r2, r3, #18
 8006cca:	d508      	bpl.n	8006cde <HAL_PWREx_ConfigSupply+0x46>
      (SupplySource == PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO) ||
 8006ccc:	f1a4 031d 	sub.w	r3, r4, #29
 8006cd0:	2b01      	cmp	r3, #1
 8006cd2:	d90c      	bls.n	8006cee <HAL_PWREx_ConfigSupply+0x56>
      (SupplySource == PWR_SMPS_1V8_SUPPLIES_EXT)         ||
 8006cd4:	3c2d      	subs	r4, #45	; 0x2d
 8006cd6:	2c01      	cmp	r4, #1
 8006cd8:	d909      	bls.n	8006cee <HAL_PWREx_ConfigSupply+0x56>
  return HAL_OK;
 8006cda:	2000      	movs	r0, #0
 8006cdc:	e7ea      	b.n	8006cb4 <HAL_PWREx_ConfigSupply+0x1c>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006cde:	f7fd fd55 	bl	800478c <HAL_GetTick>
 8006ce2:	1b80      	subs	r0, r0, r6
 8006ce4:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006ce8:	d9ed      	bls.n	8006cc6 <HAL_PWREx_ConfigSupply+0x2e>
      return HAL_ERROR;
 8006cea:	2001      	movs	r0, #1
 8006cec:	e7e2      	b.n	8006cb4 <HAL_PWREx_ConfigSupply+0x1c>
    tickstart = HAL_GetTick ();
 8006cee:	f7fd fd4d 	bl	800478c <HAL_GetTick>
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 8006cf2:	4d06      	ldr	r5, [pc, #24]	; (8006d0c <HAL_PWREx_ConfigSupply+0x74>)
    tickstart = HAL_GetTick ();
 8006cf4:	4604      	mov	r4, r0
    while (__HAL_PWR_GET_FLAG (PWR_FLAG_SMPSEXTRDY) == 0U)
 8006cf6:	68eb      	ldr	r3, [r5, #12]
 8006cf8:	03db      	lsls	r3, r3, #15
 8006cfa:	d4ee      	bmi.n	8006cda <HAL_PWREx_ConfigSupply+0x42>
      if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006cfc:	f7fd fd46 	bl	800478c <HAL_GetTick>
 8006d00:	1b00      	subs	r0, r0, r4
 8006d02:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006d06:	d9f6      	bls.n	8006cf6 <HAL_PWREx_ConfigSupply+0x5e>
 8006d08:	e7ef      	b.n	8006cea <HAL_PWREx_ConfigSupply+0x52>
 8006d0a:	bf00      	nop
 8006d0c:	58024800 	.word	0x58024800

08006d10 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

    /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8006d12:	4604      	mov	r4, r0
 8006d14:	b908      	cbnz	r0, 8006d1a <HAL_RCC_OscConfig+0xa>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
      {
        return HAL_ERROR;
 8006d16:	2001      	movs	r0, #1
 8006d18:	e080      	b.n	8006e1c <HAL_RCC_OscConfig+0x10c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006d1a:	6803      	ldr	r3, [r0, #0]
 8006d1c:	07d8      	lsls	r0, r3, #31
 8006d1e:	d453      	bmi.n	8006dc8 <HAL_RCC_OscConfig+0xb8>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006d20:	6823      	ldr	r3, [r4, #0]
 8006d22:	0799      	lsls	r1, r3, #30
 8006d24:	f100 80b7 	bmi.w	8006e96 <HAL_RCC_OscConfig+0x186>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8006d28:	6823      	ldr	r3, [r4, #0]
 8006d2a:	06da      	lsls	r2, r3, #27
 8006d2c:	d51c      	bpl.n	8006d68 <HAL_RCC_OscConfig+0x58>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006d2e:	4a97      	ldr	r2, [pc, #604]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
 8006d30:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006d32:	6a91      	ldr	r1, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006d34:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8006d38:	2b08      	cmp	r3, #8
 8006d3a:	d007      	beq.n	8006d4c <HAL_RCC_OscConfig+0x3c>
 8006d3c:	2b18      	cmp	r3, #24
 8006d3e:	f040 80f8 	bne.w	8006f32 <HAL_RCC_OscConfig+0x222>
 8006d42:	f001 0303 	and.w	r3, r1, #3
 8006d46:	2b01      	cmp	r3, #1
 8006d48:	f040 80f3 	bne.w	8006f32 <HAL_RCC_OscConfig+0x222>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8006d4c:	6813      	ldr	r3, [r2, #0]
 8006d4e:	05db      	lsls	r3, r3, #23
 8006d50:	d502      	bpl.n	8006d58 <HAL_RCC_OscConfig+0x48>
 8006d52:	69e3      	ldr	r3, [r4, #28]
 8006d54:	2b80      	cmp	r3, #128	; 0x80
 8006d56:	d1de      	bne.n	8006d16 <HAL_RCC_OscConfig+0x6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006d58:	4a8c      	ldr	r2, [pc, #560]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
 8006d5a:	6a21      	ldr	r1, [r4, #32]
 8006d5c:	68d3      	ldr	r3, [r2, #12]
 8006d5e:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 8006d62:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8006d66:	60d3      	str	r3, [r2, #12]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006d68:	6823      	ldr	r3, [r4, #0]
 8006d6a:	0719      	lsls	r1, r3, #28
 8006d6c:	f100 8112 	bmi.w	8006f94 <HAL_RCC_OscConfig+0x284>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8006d70:	6823      	ldr	r3, [r4, #0]
 8006d72:	069a      	lsls	r2, r3, #26
 8006d74:	f100 8133 	bmi.w	8006fde <HAL_RCC_OscConfig+0x2ce>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006d78:	6823      	ldr	r3, [r4, #0]
 8006d7a:	075d      	lsls	r5, r3, #29
 8006d7c:	d51e      	bpl.n	8006dbc <HAL_RCC_OscConfig+0xac>
    PWR->CR1 |= PWR_CR1_DBP;
 8006d7e:	4d84      	ldr	r5, [pc, #528]	; (8006f90 <HAL_RCC_OscConfig+0x280>)
 8006d80:	682b      	ldr	r3, [r5, #0]
 8006d82:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006d86:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8006d88:	f7fd fd00 	bl	800478c <HAL_GetTick>
 8006d8c:	4606      	mov	r6, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8006d8e:	682b      	ldr	r3, [r5, #0]
 8006d90:	05da      	lsls	r2, r3, #23
 8006d92:	f140 8149 	bpl.w	8007028 <HAL_RCC_OscConfig+0x318>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006d96:	68a3      	ldr	r3, [r4, #8]
 8006d98:	4d7c      	ldr	r5, [pc, #496]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
 8006d9a:	2b01      	cmp	r3, #1
 8006d9c:	f040 814b 	bne.w	8007036 <HAL_RCC_OscConfig+0x326>
 8006da0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006da2:	f043 0301 	orr.w	r3, r3, #1
 8006da6:	672b      	str	r3, [r5, #112]	; 0x70
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006da8:	f241 3788 	movw	r7, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006dac:	f7fd fcee 	bl	800478c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006db0:	4e76      	ldr	r6, [pc, #472]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
      tickstart = HAL_GetTick();
 8006db2:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006db4:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8006db6:	079b      	lsls	r3, r3, #30
 8006db8:	f140 8179 	bpl.w	80070ae <HAL_RCC_OscConfig+0x39e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006dbc:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8006dbe:	2800      	cmp	r0, #0
 8006dc0:	f040 817c 	bne.w	80070bc <HAL_RCC_OscConfig+0x3ac>
      }
    }
  }
  return HAL_OK;
 8006dc4:	2000      	movs	r0, #0
 8006dc6:	e029      	b.n	8006e1c <HAL_RCC_OscConfig+0x10c>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006dc8:	4a70      	ldr	r2, [pc, #448]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
 8006dca:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006dcc:	6a91      	ldr	r1, [r2, #40]	; 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006dce:	f003 0338 	and.w	r3, r3, #56	; 0x38
    if((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8006dd2:	2b10      	cmp	r3, #16
 8006dd4:	d005      	beq.n	8006de2 <HAL_RCC_OscConfig+0xd2>
 8006dd6:	2b18      	cmp	r3, #24
 8006dd8:	d10a      	bne.n	8006df0 <HAL_RCC_OscConfig+0xe0>
 8006dda:	f001 0303 	and.w	r3, r1, #3
 8006dde:	2b02      	cmp	r3, #2
 8006de0:	d106      	bne.n	8006df0 <HAL_RCC_OscConfig+0xe0>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006de2:	6813      	ldr	r3, [r2, #0]
 8006de4:	039a      	lsls	r2, r3, #14
 8006de6:	d59b      	bpl.n	8006d20 <HAL_RCC_OscConfig+0x10>
 8006de8:	6863      	ldr	r3, [r4, #4]
 8006dea:	2b00      	cmp	r3, #0
 8006dec:	d198      	bne.n	8006d20 <HAL_RCC_OscConfig+0x10>
 8006dee:	e792      	b.n	8006d16 <HAL_RCC_OscConfig+0x6>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006df0:	6863      	ldr	r3, [r4, #4]
 8006df2:	4d66      	ldr	r5, [pc, #408]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
 8006df4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006df8:	d111      	bne.n	8006e1e <HAL_RCC_OscConfig+0x10e>
 8006dfa:	682b      	ldr	r3, [r5, #0]
 8006dfc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006e00:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e02:	f7fd fcc3 	bl	800478c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006e06:	4e61      	ldr	r6, [pc, #388]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
        tickstart = HAL_GetTick();
 8006e08:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006e0a:	6833      	ldr	r3, [r6, #0]
 8006e0c:	039b      	lsls	r3, r3, #14
 8006e0e:	d487      	bmi.n	8006d20 <HAL_RCC_OscConfig+0x10>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006e10:	f7fd fcbc 	bl	800478c <HAL_GetTick>
 8006e14:	1b40      	subs	r0, r0, r5
 8006e16:	2864      	cmp	r0, #100	; 0x64
 8006e18:	d9f7      	bls.n	8006e0a <HAL_RCC_OscConfig+0xfa>
            return HAL_TIMEOUT;
 8006e1a:	2003      	movs	r0, #3
}
 8006e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006e1e:	b9c3      	cbnz	r3, 8006e52 <HAL_RCC_OscConfig+0x142>
 8006e20:	682b      	ldr	r3, [r5, #0]
 8006e22:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006e26:	602b      	str	r3, [r5, #0]
 8006e28:	682b      	ldr	r3, [r5, #0]
 8006e2a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8006e2e:	602b      	str	r3, [r5, #0]
 8006e30:	682b      	ldr	r3, [r5, #0]
 8006e32:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006e36:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006e38:	f7fd fca8 	bl	800478c <HAL_GetTick>
 8006e3c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006e3e:	682b      	ldr	r3, [r5, #0]
 8006e40:	039f      	lsls	r7, r3, #14
 8006e42:	f57f af6d 	bpl.w	8006d20 <HAL_RCC_OscConfig+0x10>
          if((uint32_t) (HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8006e46:	f7fd fca1 	bl	800478c <HAL_GetTick>
 8006e4a:	1b80      	subs	r0, r0, r6
 8006e4c:	2864      	cmp	r0, #100	; 0x64
 8006e4e:	d9f6      	bls.n	8006e3e <HAL_RCC_OscConfig+0x12e>
 8006e50:	e7e3      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006e52:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006e56:	d108      	bne.n	8006e6a <HAL_RCC_OscConfig+0x15a>
 8006e58:	682b      	ldr	r3, [r5, #0]
 8006e5a:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006e5e:	602b      	str	r3, [r5, #0]
 8006e60:	682b      	ldr	r3, [r5, #0]
 8006e62:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8006e66:	602b      	str	r3, [r5, #0]
 8006e68:	e7c7      	b.n	8006dfa <HAL_RCC_OscConfig+0xea>
 8006e6a:	f5b3 1fa8 	cmp.w	r3, #1376256	; 0x150000
 8006e6e:	682b      	ldr	r3, [r5, #0]
 8006e70:	d106      	bne.n	8006e80 <HAL_RCC_OscConfig+0x170>
 8006e72:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006e76:	602b      	str	r3, [r5, #0]
 8006e78:	682b      	ldr	r3, [r5, #0]
 8006e7a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006e7e:	e7f2      	b.n	8006e66 <HAL_RCC_OscConfig+0x156>
 8006e80:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006e84:	602b      	str	r3, [r5, #0]
 8006e86:	682b      	ldr	r3, [r5, #0]
 8006e88:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006e8c:	602b      	str	r3, [r5, #0]
 8006e8e:	682b      	ldr	r3, [r5, #0]
 8006e90:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8006e94:	e7b4      	b.n	8006e00 <HAL_RCC_OscConfig+0xf0>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006e96:	493d      	ldr	r1, [pc, #244]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
 8006e98:	68e2      	ldr	r2, [r4, #12]
 8006e9a:	690b      	ldr	r3, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006e9c:	6a88      	ldr	r0, [r1, #40]	; 0x28
    if((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8006e9e:	f013 0338 	ands.w	r3, r3, #56	; 0x38
 8006ea2:	d003      	beq.n	8006eac <HAL_RCC_OscConfig+0x19c>
 8006ea4:	2b18      	cmp	r3, #24
 8006ea6:	d121      	bne.n	8006eec <HAL_RCC_OscConfig+0x1dc>
 8006ea8:	0780      	lsls	r0, r0, #30
 8006eaa:	d11f      	bne.n	8006eec <HAL_RCC_OscConfig+0x1dc>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006eac:	680b      	ldr	r3, [r1, #0]
 8006eae:	075b      	lsls	r3, r3, #29
 8006eb0:	d502      	bpl.n	8006eb8 <HAL_RCC_OscConfig+0x1a8>
 8006eb2:	2a00      	cmp	r2, #0
 8006eb4:	f43f af2f 	beq.w	8006d16 <HAL_RCC_OscConfig+0x6>
          __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006eb8:	4d34      	ldr	r5, [pc, #208]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
 8006eba:	682b      	ldr	r3, [r5, #0]
 8006ebc:	f023 0319 	bic.w	r3, r3, #25
 8006ec0:	4313      	orrs	r3, r2
 8006ec2:	602b      	str	r3, [r5, #0]
          tickstart = HAL_GetTick();
 8006ec4:	f7fd fc62 	bl	800478c <HAL_GetTick>
 8006ec8:	4606      	mov	r6, r0
          while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006eca:	682b      	ldr	r3, [r5, #0]
 8006ecc:	075f      	lsls	r7, r3, #29
 8006ece:	d507      	bpl.n	8006ee0 <HAL_RCC_OscConfig+0x1d0>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006ed0:	686b      	ldr	r3, [r5, #4]
 8006ed2:	6922      	ldr	r2, [r4, #16]
 8006ed4:	f023 43fe 	bic.w	r3, r3, #2130706432	; 0x7f000000
 8006ed8:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006edc:	606b      	str	r3, [r5, #4]
 8006ede:	e723      	b.n	8006d28 <HAL_RCC_OscConfig+0x18>
            if((uint32_t) (HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006ee0:	f7fd fc54 	bl	800478c <HAL_GetTick>
 8006ee4:	1b80      	subs	r0, r0, r6
 8006ee6:	2802      	cmp	r0, #2
 8006ee8:	d9ef      	bls.n	8006eca <HAL_RCC_OscConfig+0x1ba>
 8006eea:	e796      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006eec:	4d27      	ldr	r5, [pc, #156]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006eee:	682b      	ldr	r3, [r5, #0]
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8006ef0:	b17a      	cbz	r2, 8006f12 <HAL_RCC_OscConfig+0x202>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006ef2:	f023 0319 	bic.w	r3, r3, #25
 8006ef6:	4313      	orrs	r3, r2
 8006ef8:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006efa:	f7fd fc47 	bl	800478c <HAL_GetTick>
 8006efe:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006f00:	682b      	ldr	r3, [r5, #0]
 8006f02:	0758      	lsls	r0, r3, #29
 8006f04:	d4e4      	bmi.n	8006ed0 <HAL_RCC_OscConfig+0x1c0>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006f06:	f7fd fc41 	bl	800478c <HAL_GetTick>
 8006f0a:	1b80      	subs	r0, r0, r6
 8006f0c:	2802      	cmp	r0, #2
 8006f0e:	d9f7      	bls.n	8006f00 <HAL_RCC_OscConfig+0x1f0>
 8006f10:	e783      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
        __HAL_RCC_HSI_DISABLE();
 8006f12:	f023 0301 	bic.w	r3, r3, #1
 8006f16:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006f18:	f7fd fc38 	bl	800478c <HAL_GetTick>
 8006f1c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006f1e:	682b      	ldr	r3, [r5, #0]
 8006f20:	0759      	lsls	r1, r3, #29
 8006f22:	f57f af01 	bpl.w	8006d28 <HAL_RCC_OscConfig+0x18>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006f26:	f7fd fc31 	bl	800478c <HAL_GetTick>
 8006f2a:	1b80      	subs	r0, r0, r6
 8006f2c:	2802      	cmp	r0, #2
 8006f2e:	d9f6      	bls.n	8006f1e <HAL_RCC_OscConfig+0x20e>
 8006f30:	e773      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
      if((RCC_OscInitStruct->CSIState)!= RCC_CSI_OFF)
 8006f32:	69e3      	ldr	r3, [r4, #28]
 8006f34:	4d15      	ldr	r5, [pc, #84]	; (8006f8c <HAL_RCC_OscConfig+0x27c>)
 8006f36:	b1bb      	cbz	r3, 8006f68 <HAL_RCC_OscConfig+0x258>
        __HAL_RCC_CSI_ENABLE();
 8006f38:	682b      	ldr	r3, [r5, #0]
 8006f3a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006f3e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006f40:	f7fd fc24 	bl	800478c <HAL_GetTick>
 8006f44:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006f46:	682b      	ldr	r3, [r5, #0]
 8006f48:	05df      	lsls	r7, r3, #23
 8006f4a:	d507      	bpl.n	8006f5c <HAL_RCC_OscConfig+0x24c>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006f4c:	68eb      	ldr	r3, [r5, #12]
 8006f4e:	6a22      	ldr	r2, [r4, #32]
 8006f50:	f023 537c 	bic.w	r3, r3, #1056964608	; 0x3f000000
 8006f54:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006f58:	60eb      	str	r3, [r5, #12]
 8006f5a:	e705      	b.n	8006d68 <HAL_RCC_OscConfig+0x58>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 8006f5c:	f7fd fc16 	bl	800478c <HAL_GetTick>
 8006f60:	1b80      	subs	r0, r0, r6
 8006f62:	2802      	cmp	r0, #2
 8006f64:	d9ef      	bls.n	8006f46 <HAL_RCC_OscConfig+0x236>
 8006f66:	e758      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
        __HAL_RCC_CSI_DISABLE();
 8006f68:	682b      	ldr	r3, [r5, #0]
 8006f6a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006f6e:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 8006f70:	f7fd fc0c 	bl	800478c <HAL_GetTick>
 8006f74:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8006f76:	682b      	ldr	r3, [r5, #0]
 8006f78:	05d8      	lsls	r0, r3, #23
 8006f7a:	f57f aef5 	bpl.w	8006d68 <HAL_RCC_OscConfig+0x58>
          if((HAL_GetTick() - tickstart ) > CSI_TIMEOUT_VALUE)
 8006f7e:	f7fd fc05 	bl	800478c <HAL_GetTick>
 8006f82:	1b80      	subs	r0, r0, r6
 8006f84:	2802      	cmp	r0, #2
 8006f86:	d9f6      	bls.n	8006f76 <HAL_RCC_OscConfig+0x266>
 8006f88:	e747      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
 8006f8a:	bf00      	nop
 8006f8c:	58024400 	.word	0x58024400
 8006f90:	58024800 	.word	0x58024800
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006f94:	6963      	ldr	r3, [r4, #20]
 8006f96:	4da1      	ldr	r5, [pc, #644]	; (800721c <HAL_RCC_OscConfig+0x50c>)
 8006f98:	b183      	cbz	r3, 8006fbc <HAL_RCC_OscConfig+0x2ac>
      __HAL_RCC_LSI_ENABLE();
 8006f9a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006f9c:	f043 0301 	orr.w	r3, r3, #1
 8006fa0:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006fa2:	f7fd fbf3 	bl	800478c <HAL_GetTick>
 8006fa6:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8006fa8:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006faa:	079b      	lsls	r3, r3, #30
 8006fac:	f53f aee0 	bmi.w	8006d70 <HAL_RCC_OscConfig+0x60>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006fb0:	f7fd fbec 	bl	800478c <HAL_GetTick>
 8006fb4:	1b80      	subs	r0, r0, r6
 8006fb6:	2802      	cmp	r0, #2
 8006fb8:	d9f6      	bls.n	8006fa8 <HAL_RCC_OscConfig+0x298>
 8006fba:	e72e      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
      __HAL_RCC_LSI_DISABLE();
 8006fbc:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006fbe:	f023 0301 	bic.w	r3, r3, #1
 8006fc2:	676b      	str	r3, [r5, #116]	; 0x74
      tickstart = HAL_GetTick();
 8006fc4:	f7fd fbe2 	bl	800478c <HAL_GetTick>
 8006fc8:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006fca:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8006fcc:	079f      	lsls	r7, r3, #30
 8006fce:	f57f aecf 	bpl.w	8006d70 <HAL_RCC_OscConfig+0x60>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8006fd2:	f7fd fbdb 	bl	800478c <HAL_GetTick>
 8006fd6:	1b80      	subs	r0, r0, r6
 8006fd8:	2802      	cmp	r0, #2
 8006fda:	d9f6      	bls.n	8006fca <HAL_RCC_OscConfig+0x2ba>
 8006fdc:	e71d      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
    if((RCC_OscInitStruct->HSI48State)!= RCC_HSI48_OFF)
 8006fde:	69a3      	ldr	r3, [r4, #24]
 8006fe0:	4d8e      	ldr	r5, [pc, #568]	; (800721c <HAL_RCC_OscConfig+0x50c>)
 8006fe2:	b183      	cbz	r3, 8007006 <HAL_RCC_OscConfig+0x2f6>
      __HAL_RCC_HSI48_ENABLE();
 8006fe4:	682b      	ldr	r3, [r5, #0]
 8006fe6:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006fea:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8006fec:	f7fd fbce 	bl	800478c <HAL_GetTick>
 8006ff0:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8006ff2:	682b      	ldr	r3, [r5, #0]
 8006ff4:	0498      	lsls	r0, r3, #18
 8006ff6:	f53f aebf 	bmi.w	8006d78 <HAL_RCC_OscConfig+0x68>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 8006ffa:	f7fd fbc7 	bl	800478c <HAL_GetTick>
 8006ffe:	1b80      	subs	r0, r0, r6
 8007000:	2802      	cmp	r0, #2
 8007002:	d9f6      	bls.n	8006ff2 <HAL_RCC_OscConfig+0x2e2>
 8007004:	e709      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
      __HAL_RCC_HSI48_DISABLE();
 8007006:	682b      	ldr	r3, [r5, #0]
 8007008:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800700c:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800700e:	f7fd fbbd 	bl	800478c <HAL_GetTick>
 8007012:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8007014:	682b      	ldr	r3, [r5, #0]
 8007016:	0499      	lsls	r1, r3, #18
 8007018:	f57f aeae 	bpl.w	8006d78 <HAL_RCC_OscConfig+0x68>
        if((HAL_GetTick() - tickstart ) > HSI48_TIMEOUT_VALUE)
 800701c:	f7fd fbb6 	bl	800478c <HAL_GetTick>
 8007020:	1b80      	subs	r0, r0, r6
 8007022:	2802      	cmp	r0, #2
 8007024:	d9f6      	bls.n	8007014 <HAL_RCC_OscConfig+0x304>
 8007026:	e6f8      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007028:	f7fd fbb0 	bl	800478c <HAL_GetTick>
 800702c:	1b80      	subs	r0, r0, r6
 800702e:	2864      	cmp	r0, #100	; 0x64
 8007030:	f67f aead 	bls.w	8006d8e <HAL_RCC_OscConfig+0x7e>
 8007034:	e6f1      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007036:	b9d3      	cbnz	r3, 800706e <HAL_RCC_OscConfig+0x35e>
 8007038:	6f2b      	ldr	r3, [r5, #112]	; 0x70
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800703a:	f241 3788 	movw	r7, #5000	; 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800703e:	f023 0301 	bic.w	r3, r3, #1
 8007042:	672b      	str	r3, [r5, #112]	; 0x70
 8007044:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007046:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800704a:	672b      	str	r3, [r5, #112]	; 0x70
 800704c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800704e:	f023 0304 	bic.w	r3, r3, #4
 8007052:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8007054:	f7fd fb9a 	bl	800478c <HAL_GetTick>
 8007058:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 800705a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800705c:	0798      	lsls	r0, r3, #30
 800705e:	f57f aead 	bpl.w	8006dbc <HAL_RCC_OscConfig+0xac>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007062:	f7fd fb93 	bl	800478c <HAL_GetTick>
 8007066:	1b80      	subs	r0, r0, r6
 8007068:	42b8      	cmp	r0, r7
 800706a:	d9f6      	bls.n	800705a <HAL_RCC_OscConfig+0x34a>
 800706c:	e6d5      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800706e:	2b05      	cmp	r3, #5
 8007070:	d108      	bne.n	8007084 <HAL_RCC_OscConfig+0x374>
 8007072:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007074:	f043 0304 	orr.w	r3, r3, #4
 8007078:	672b      	str	r3, [r5, #112]	; 0x70
 800707a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800707c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007080:	672b      	str	r3, [r5, #112]	; 0x70
 8007082:	e68d      	b.n	8006da0 <HAL_RCC_OscConfig+0x90>
 8007084:	2b85      	cmp	r3, #133	; 0x85
 8007086:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007088:	d106      	bne.n	8007098 <HAL_RCC_OscConfig+0x388>
 800708a:	f043 0304 	orr.w	r3, r3, #4
 800708e:	672b      	str	r3, [r5, #112]	; 0x70
 8007090:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007092:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007096:	e7f3      	b.n	8007080 <HAL_RCC_OscConfig+0x370>
 8007098:	f023 0301 	bic.w	r3, r3, #1
 800709c:	672b      	str	r3, [r5, #112]	; 0x70
 800709e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80070a0:	f023 0304 	bic.w	r3, r3, #4
 80070a4:	672b      	str	r3, [r5, #112]	; 0x70
 80070a6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80070a8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80070ac:	e67b      	b.n	8006da6 <HAL_RCC_OscConfig+0x96>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80070ae:	f7fd fb6d 	bl	800478c <HAL_GetTick>
 80070b2:	1b40      	subs	r0, r0, r5
 80070b4:	42b8      	cmp	r0, r7
 80070b6:	f67f ae7d 	bls.w	8006db4 <HAL_RCC_OscConfig+0xa4>
 80070ba:	e6ae      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 80070bc:	4d57      	ldr	r5, [pc, #348]	; (800721c <HAL_RCC_OscConfig+0x50c>)
 80070be:	692b      	ldr	r3, [r5, #16]
 80070c0:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80070c4:	2b18      	cmp	r3, #24
 80070c6:	d07a      	beq.n	80071be <HAL_RCC_OscConfig+0x4ae>
        __HAL_RCC_PLL_DISABLE();
 80070c8:	682b      	ldr	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80070ca:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80070cc:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80070d0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80070d2:	d167      	bne.n	80071a4 <HAL_RCC_OscConfig+0x494>
        tickstart = HAL_GetTick();
 80070d4:	f7fd fb5a 	bl	800478c <HAL_GetTick>
 80070d8:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80070da:	682b      	ldr	r3, [r5, #0]
 80070dc:	0199      	lsls	r1, r3, #6
 80070de:	d45b      	bmi.n	8007198 <HAL_RCC_OscConfig+0x488>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80070e0:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80070e2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80070e4:	f423 737c 	bic.w	r3, r3, #1008	; 0x3f0
 80070e8:	f023 0303 	bic.w	r3, r3, #3
 80070ec:	4313      	orrs	r3, r2
 80070ee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80070f0:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 80070f4:	62ab      	str	r3, [r5, #40]	; 0x28
 80070f6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80070f8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80070fa:	3b01      	subs	r3, #1
 80070fc:	3a01      	subs	r2, #1
 80070fe:	025b      	lsls	r3, r3, #9
 8007100:	0412      	lsls	r2, r2, #16
 8007102:	b29b      	uxth	r3, r3
 8007104:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 8007108:	4313      	orrs	r3, r2
 800710a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800710c:	3a01      	subs	r2, #1
 800710e:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007112:	4313      	orrs	r3, r2
 8007114:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8007116:	3a01      	subs	r2, #1
 8007118:	0612      	lsls	r2, r2, #24
 800711a:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 800711e:	4313      	orrs	r3, r2
 8007120:	632b      	str	r3, [r5, #48]	; 0x30
         __HAL_RCC_PLLFRACN_DISABLE();
 8007122:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8007124:	f023 0301 	bic.w	r3, r3, #1
 8007128:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 800712a:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800712c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800712e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007132:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007136:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800713a:	636b      	str	r3, [r5, #52]	; 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 800713c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800713e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007140:	f023 030c 	bic.w	r3, r3, #12
 8007144:	4313      	orrs	r3, r2
 8007146:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 8007148:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800714a:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800714c:	f023 0302 	bic.w	r3, r3, #2
 8007150:	4313      	orrs	r3, r2
 8007152:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 8007154:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8007156:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800715a:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800715c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800715e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007162:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8007164:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8007166:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800716a:	62eb      	str	r3, [r5, #44]	; 0x2c
         __HAL_RCC_PLLFRACN_ENABLE();
 800716c:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800716e:	f043 0301 	orr.w	r3, r3, #1
 8007172:	62eb      	str	r3, [r5, #44]	; 0x2c
        __HAL_RCC_PLL_ENABLE();
 8007174:	682b      	ldr	r3, [r5, #0]
 8007176:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800717a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
 800717c:	f7fd fb06 	bl	800478c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007180:	4d26      	ldr	r5, [pc, #152]	; (800721c <HAL_RCC_OscConfig+0x50c>)
        tickstart = HAL_GetTick();
 8007182:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8007184:	682b      	ldr	r3, [r5, #0]
 8007186:	019a      	lsls	r2, r3, #6
 8007188:	f53f ae1c 	bmi.w	8006dc4 <HAL_RCC_OscConfig+0xb4>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800718c:	f7fd fafe 	bl	800478c <HAL_GetTick>
 8007190:	1b00      	subs	r0, r0, r4
 8007192:	2802      	cmp	r0, #2
 8007194:	d9f6      	bls.n	8007184 <HAL_RCC_OscConfig+0x474>
 8007196:	e640      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007198:	f7fd faf8 	bl	800478c <HAL_GetTick>
 800719c:	1b80      	subs	r0, r0, r6
 800719e:	2802      	cmp	r0, #2
 80071a0:	d99b      	bls.n	80070da <HAL_RCC_OscConfig+0x3ca>
 80071a2:	e63a      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
        tickstart = HAL_GetTick();
 80071a4:	f7fd faf2 	bl	800478c <HAL_GetTick>
 80071a8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 80071aa:	682b      	ldr	r3, [r5, #0]
 80071ac:	019b      	lsls	r3, r3, #6
 80071ae:	f57f ae09 	bpl.w	8006dc4 <HAL_RCC_OscConfig+0xb4>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80071b2:	f7fd faeb 	bl	800478c <HAL_GetTick>
 80071b6:	1b00      	subs	r0, r0, r4
 80071b8:	2802      	cmp	r0, #2
 80071ba:	d9f6      	bls.n	80071aa <HAL_RCC_OscConfig+0x49a>
 80071bc:	e62d      	b.n	8006e1a <HAL_RCC_OscConfig+0x10a>
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80071be:	2801      	cmp	r0, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
 80071c0:	6aaa      	ldr	r2, [r5, #40]	; 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
 80071c2:	6b2b      	ldr	r3, [r5, #48]	; 0x30
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80071c4:	f43f ae2a 	beq.w	8006e1c <HAL_RCC_OscConfig+0x10c>
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80071c8:	f002 0103 	and.w	r1, r2, #3
      if(((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80071cc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80071ce:	4281      	cmp	r1, r0
 80071d0:	f47f ada1 	bne.w	8006d16 <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 80071d4:	f3c2 1205 	ubfx	r2, r2, #4, #6
	 (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80071d8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80071da:	428a      	cmp	r2, r1
 80071dc:	f47f ad9b 	bne.w	8006d16 <HAL_RCC_OscConfig+0x6>
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80071e0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80071e2:	f3c3 0108 	ubfx	r1, r3, #0, #9
 80071e6:	3a01      	subs	r2, #1
         ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 80071e8:	4291      	cmp	r1, r2
 80071ea:	f47f ad94 	bne.w	8006d16 <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80071ee:	6b62      	ldr	r2, [r4, #52]	; 0x34
 80071f0:	f3c3 2146 	ubfx	r1, r3, #9, #7
 80071f4:	3a01      	subs	r2, #1
         (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80071f6:	4291      	cmp	r1, r2
 80071f8:	f47f ad8d 	bne.w	8006d16 <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80071fc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80071fe:	f3c3 4106 	ubfx	r1, r3, #16, #7
 8007202:	3a01      	subs	r2, #1
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 8007204:	4291      	cmp	r1, r2
 8007206:	f47f ad86 	bne.w	8006d16 <HAL_RCC_OscConfig+0x6>
         ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 800720a:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800720c:	f3c3 6306 	ubfx	r3, r3, #24, #7
 8007210:	3801      	subs	r0, #1
    return HAL_ERROR;
 8007212:	1a18      	subs	r0, r3, r0
 8007214:	bf18      	it	ne
 8007216:	2001      	movne	r0, #1
 8007218:	e600      	b.n	8006e1c <HAL_RCC_OscConfig+0x10c>
 800721a:	bf00      	nop
 800721c:	58024400 	.word	0x58024400

08007220 <HAL_RCC_MCOConfig>:
  *          This parameter can be one of the following values:
  *            @arg RCC_MCODIV_1 up to RCC_MCODIV_15  : divider applied to MCOx clock
  * @retval None
  */
void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
{
 8007220:	b570      	push	{r4, r5, r6, lr}
 8007222:	4c23      	ldr	r4, [pc, #140]	; (80072b0 <HAL_RCC_MCOConfig+0x90>)
 8007224:	b088      	sub	sp, #32
 8007226:	460e      	mov	r6, r1
 8007228:	4615      	mov	r5, r2
  if(RCC_MCOx == RCC_MCO1)
  {
    assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));

    /* MCO1 Clock Enable */
    MCO1_CLK_ENABLE();
 800722a:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
  if(RCC_MCOx == RCC_MCO1)
 800722e:	b9f8      	cbnz	r0, 8007270 <HAL_RCC_MCOConfig+0x50>
    MCO1_CLK_ENABLE();
 8007230:	f043 0301 	orr.w	r3, r3, #1

    /* Configure the MCO1 pin in alternate function mode */
    GPIO_InitStruct.Pin = MCO1_PIN;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007234:	f44f 7c80 	mov.w	ip, #256	; 0x100
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
    HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 8007238:	a903      	add	r1, sp, #12
    MCO1_CLK_ENABLE();
 800723a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 800723e:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 8007242:	9007      	str	r0, [sp, #28]
    MCO1_CLK_ENABLE();
 8007244:	f003 0301 	and.w	r3, r3, #1
 8007248:	9301      	str	r3, [sp, #4]
 800724a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800724c:	2302      	movs	r3, #2
 800724e:	e9cd c303 	strd	ip, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8007252:	2303      	movs	r3, #3
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007254:	e9cd 0305 	strd	r0, r3, [sp, #20]
    HAL_GPIO_Init(MCO1_GPIO_PORT, &GPIO_InitStruct);
 8007258:	4816      	ldr	r0, [pc, #88]	; (80072b4 <HAL_RCC_MCOConfig+0x94>)
 800725a:	f7fd feb9 	bl	8004fd0 <HAL_GPIO_Init>

    /* Mask MCO1 and MCO1PRE[3:0] bits then Select MCO1 clock source and pre-scaler */
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO1 | RCC_CFGR_MCO1PRE), (RCC_MCOSource | RCC_MCODiv));
 800725e:	6923      	ldr	r3, [r4, #16]
 8007260:	f023 73fe 	bic.w	r3, r3, #33292288	; 0x1fc0000
 8007264:	ea43 0106 	orr.w	r1, r3, r6
 8007268:	4329      	orrs	r1, r5
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);

    /* Mask MCO2 and MCO2PRE[3:0] bits then Select MCO2 clock source and pre-scaler */
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)));
 800726a:	6121      	str	r1, [r4, #16]
  }
}
 800726c:	b008      	add	sp, #32
 800726e:	bd70      	pop	{r4, r5, r6, pc}
    MCO2_CLK_ENABLE();
 8007270:	f043 0304 	orr.w	r3, r3, #4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007274:	f44f 7200 	mov.w	r2, #512	; 0x200
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007278:	2103      	movs	r1, #3
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 800727a:	480f      	ldr	r0, [pc, #60]	; (80072b8 <HAL_RCC_MCOConfig+0x98>)
    MCO2_CLK_ENABLE();
 800727c:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
 8007280:	f8d4 3140 	ldr.w	r3, [r4, #320]	; 0x140
 8007284:	f003 0304 	and.w	r3, r3, #4
 8007288:	9302      	str	r3, [sp, #8]
 800728a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800728c:	2302      	movs	r3, #2
 800728e:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007292:	2300      	movs	r3, #0
 8007294:	e9cd 3105 	strd	r3, r1, [sp, #20]
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 8007298:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 800729a:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(MCO2_GPIO_PORT, &GPIO_InitStruct);
 800729c:	f7fd fe98 	bl	8004fd0 <HAL_GPIO_Init>
    MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCO2 | RCC_CFGR_MCO2PRE), (RCC_MCOSource | (RCC_MCODiv << 7U)));
 80072a0:	6923      	ldr	r3, [r4, #16]
 80072a2:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
 80072a6:	ea43 0106 	orr.w	r1, r3, r6
 80072aa:	ea41 11c5 	orr.w	r1, r1, r5, lsl #7
 80072ae:	e7dc      	b.n	800726a <HAL_RCC_MCOConfig+0x4a>
 80072b0:	58024400 	.word	0x58024400
 80072b4:	58020000 	.word	0x58020000
 80072b8:	58020800 	.word	0x58020800

080072bc <HAL_RCC_GetSysClockFreq>:
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 80072bc:	4b49      	ldr	r3, [pc, #292]	; (80073e4 <HAL_RCC_GetSysClockFreq+0x128>)
 80072be:	691a      	ldr	r2, [r3, #16]
 80072c0:	f002 0238 	and.w	r2, r2, #56	; 0x38
 80072c4:	2a10      	cmp	r2, #16
{
 80072c6:	b530      	push	{r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80072c8:	f000 8088 	beq.w	80073dc <HAL_RCC_GetSysClockFreq+0x120>
 80072cc:	2a18      	cmp	r2, #24
 80072ce:	d00c      	beq.n	80072ea <HAL_RCC_GetSysClockFreq+0x2e>
 80072d0:	2a00      	cmp	r2, #0
 80072d2:	f040 8085 	bne.w	80073e0 <HAL_RCC_GetSysClockFreq+0x124>
  {
  case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

   if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80072d6:	681a      	ldr	r2, [r3, #0]
 80072d8:	4843      	ldr	r0, [pc, #268]	; (80073e8 <HAL_RCC_GetSysClockFreq+0x12c>)
 80072da:	f012 0f20 	tst.w	r2, #32
 80072de:	d003      	beq.n	80072e8 <HAL_RCC_GetSysClockFreq+0x2c>
      {
        sysclockfreq = (uint32_t) (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 80072e0:	681b      	ldr	r3, [r3, #0]
 80072e2:	f3c3 03c1 	ubfx	r3, r3, #3, #2
 80072e6:	40d8      	lsrs	r0, r3
    sysclockfreq = CSI_VALUE;
    break;
  }

  return sysclockfreq;
}
 80072e8:	bd30      	pop	{r4, r5, pc}
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 80072ea:	6a99      	ldr	r1, [r3, #40]	; 0x28
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 80072ec:	6a9d      	ldr	r5, [r3, #40]	; 0x28
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 80072ee:	6adc      	ldr	r4, [r3, #44]	; 0x2c
    if (pllm != 0U)
 80072f0:	f415 7f7c 	tst.w	r5, #1008	; 0x3f0
    pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 80072f4:	f3c5 1005 	ubfx	r0, r5, #4, #6
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80072f8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    if (pllm != 0U)
 80072fa:	d0f5      	beq.n	80072e8 <HAL_RCC_GetSysClockFreq+0x2c>
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 80072fc:	f3c2 02cc 	ubfx	r2, r2, #3, #13
    pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 8007300:	f004 0401 	and.w	r4, r4, #1
    pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8007304:	f001 0103 	and.w	r1, r1, #3
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8007308:	ee07 0a90 	vmov	s15, r0
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 800730c:	4362      	muls	r2, r4
 800730e:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8007312:	2901      	cmp	r1, #1
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8007314:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
    fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 8007318:	ee06 2a90 	vmov	s13, r2
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 800731c:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
 8007320:	d04e      	beq.n	80073c0 <HAL_RCC_GetSysClockFreq+0x104>
 8007322:	2902      	cmp	r1, #2
 8007324:	d03e      	beq.n	80073a4 <HAL_RCC_GetSysClockFreq+0xe8>
 8007326:	2900      	cmp	r1, #0
 8007328:	d14a      	bne.n	80073c0 <HAL_RCC_GetSysClockFreq+0x104>
       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800732a:	681a      	ldr	r2, [r3, #0]
 800732c:	0692      	lsls	r2, r2, #26
 800732e:	d527      	bpl.n	8007380 <HAL_RCC_GetSysClockFreq+0xc4>
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 8007330:	6819      	ldr	r1, [r3, #0]
 8007332:	4a2d      	ldr	r2, [pc, #180]	; (80073e8 <HAL_RCC_GetSysClockFreq+0x12c>)
 8007334:	f3c1 01c1 	ubfx	r1, r1, #3, #2
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8007338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
          hsivalue= (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER()>> 3));
 800733a:	40ca      	lsrs	r2, r1
          pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 800733c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007340:	ee07 2a90 	vmov	s15, r2
 8007344:	eef8 5ae7 	vcvt.f32.s32	s11, s15
 8007348:	eec5 7a87 	vdiv.f32	s15, s11, s14
 800734c:	ee07 3a10 	vmov	s14, r3
 8007350:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8007354:	ee37 7a26 	vadd.f32	s14, s14, s13
 8007358:	ee37 7a06 	vadd.f32	s14, s14, s12
 800735c:	ee67 7a87 	vmul.f32	s15, s15, s14
      pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 8007360:	4b20      	ldr	r3, [pc, #128]	; (80073e4 <HAL_RCC_GetSysClockFreq+0x128>)
 8007362:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007364:	f3c3 2346 	ubfx	r3, r3, #9, #7
 8007368:	3301      	adds	r3, #1
      sysclockfreq =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 800736a:	ee07 3a10 	vmov	s14, r3
 800736e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8007372:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8007376:	eefc 7ac7 	vcvt.u32.f32	s15, s14
 800737a:	ee17 0a90 	vmov	r0, s15
 800737e:	e7b3      	b.n	80072e8 <HAL_RCC_GetSysClockFreq+0x2c>
          pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 8007380:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007382:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007386:	ee07 3a90 	vmov	s15, r3
 800738a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800738e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007392:	ee77 7a86 	vadd.f32	s15, s15, s12
 8007396:	ed9f 6a15 	vldr	s12, [pc, #84]	; 80073ec <HAL_RCC_GetSysClockFreq+0x130>
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 800739a:	eec6 6a07 	vdiv.f32	s13, s12, s14
 800739e:	ee67 7aa6 	vmul.f32	s15, s15, s13
        break;
 80073a2:	e7dd      	b.n	8007360 <HAL_RCC_GetSysClockFreq+0xa4>
        pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80073a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80073a6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80073aa:	ee07 3a90 	vmov	s15, r3
 80073ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80073b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80073b6:	ee77 7a86 	vadd.f32	s15, s15, s12
 80073ba:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 80073f0 <HAL_RCC_GetSysClockFreq+0x134>
 80073be:	e7ec      	b.n	800739a <HAL_RCC_GetSysClockFreq+0xde>
        pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1/(float_t)0x2000) +(float_t)1 );
 80073c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80073c2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80073c6:	ee07 3a90 	vmov	s15, r3
 80073ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80073ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80073d2:	ee77 7a86 	vadd.f32	s15, s15, s12
 80073d6:	ed9f 6a07 	vldr	s12, [pc, #28]	; 80073f4 <HAL_RCC_GetSysClockFreq+0x138>
 80073da:	e7de      	b.n	800739a <HAL_RCC_GetSysClockFreq+0xde>
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80073dc:	4806      	ldr	r0, [pc, #24]	; (80073f8 <HAL_RCC_GetSysClockFreq+0x13c>)
 80073de:	e783      	b.n	80072e8 <HAL_RCC_GetSysClockFreq+0x2c>
    sysclockfreq = CSI_VALUE;
 80073e0:	4806      	ldr	r0, [pc, #24]	; (80073fc <HAL_RCC_GetSysClockFreq+0x140>)
 80073e2:	e781      	b.n	80072e8 <HAL_RCC_GetSysClockFreq+0x2c>
 80073e4:	58024400 	.word	0x58024400
 80073e8:	03d09000 	.word	0x03d09000
 80073ec:	4c742400 	.word	0x4c742400
 80073f0:	4bb71b00 	.word	0x4bb71b00
 80073f4:	4a742400 	.word	0x4a742400
 80073f8:	016e3600 	.word	0x016e3600
 80073fc:	003d0900 	.word	0x003d0900

08007400 <HAL_RCC_ClockConfig>:
{
 8007400:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007404:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007406:	4604      	mov	r4, r0
 8007408:	b910      	cbnz	r0, 8007410 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800740a:	2001      	movs	r0, #1
}
 800740c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8007410:	4a88      	ldr	r2, [pc, #544]	; (8007634 <HAL_RCC_ClockConfig+0x234>)
 8007412:	6813      	ldr	r3, [r2, #0]
 8007414:	f003 030f 	and.w	r3, r3, #15
 8007418:	428b      	cmp	r3, r1
 800741a:	f0c0 8093 	bcc.w	8007544 <HAL_RCC_ClockConfig+0x144>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 800741e:	6823      	ldr	r3, [r4, #0]
 8007420:	075f      	lsls	r7, r3, #29
 8007422:	f100 809b 	bmi.w	800755c <HAL_RCC_ClockConfig+0x15c>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007426:	071e      	lsls	r6, r3, #28
 8007428:	d50b      	bpl.n	8007442 <HAL_RCC_ClockConfig+0x42>
    if((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1))
 800742a:	4983      	ldr	r1, [pc, #524]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 800742c:	6960      	ldr	r0, [r4, #20]
 800742e:	69ca      	ldr	r2, [r1, #28]
 8007430:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8007434:	4290      	cmp	r0, r2
 8007436:	d904      	bls.n	8007442 <HAL_RCC_ClockConfig+0x42>
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8007438:	69ca      	ldr	r2, [r1, #28]
 800743a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800743e:	4302      	orrs	r2, r0
 8007440:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007442:	06d8      	lsls	r0, r3, #27
 8007444:	d50b      	bpl.n	800745e <HAL_RCC_ClockConfig+0x5e>
     if((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2))
 8007446:	497c      	ldr	r1, [pc, #496]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 8007448:	69a0      	ldr	r0, [r4, #24]
 800744a:	69ca      	ldr	r2, [r1, #28]
 800744c:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8007450:	4290      	cmp	r0, r2
 8007452:	d904      	bls.n	800745e <HAL_RCC_ClockConfig+0x5e>
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8007454:	69ca      	ldr	r2, [r1, #28]
 8007456:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 800745a:	4302      	orrs	r2, r0
 800745c:	61ca      	str	r2, [r1, #28]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 800745e:	0699      	lsls	r1, r3, #26
 8007460:	d50b      	bpl.n	800747a <HAL_RCC_ClockConfig+0x7a>
    if((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE))
 8007462:	4975      	ldr	r1, [pc, #468]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 8007464:	69e0      	ldr	r0, [r4, #28]
 8007466:	6a0a      	ldr	r2, [r1, #32]
 8007468:	f002 0270 	and.w	r2, r2, #112	; 0x70
 800746c:	4290      	cmp	r0, r2
 800746e:	d904      	bls.n	800747a <HAL_RCC_ClockConfig+0x7a>
      MODIFY_REG(RCC->SRDCFGR, RCC_SRDCFGR_SRDPPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 8007470:	6a0a      	ldr	r2, [r1, #32]
 8007472:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007476:	4302      	orrs	r2, r0
 8007478:	620a      	str	r2, [r1, #32]
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800747a:	079a      	lsls	r2, r3, #30
 800747c:	d50b      	bpl.n	8007496 <HAL_RCC_ClockConfig+0x96>
        if((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->CDCFGR1 & RCC_CDCFGR1_HPRE))
 800747e:	496e      	ldr	r1, [pc, #440]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 8007480:	68e0      	ldr	r0, [r4, #12]
 8007482:	698a      	ldr	r2, [r1, #24]
 8007484:	f002 020f 	and.w	r2, r2, #15
 8007488:	4290      	cmp	r0, r2
 800748a:	d904      	bls.n	8007496 <HAL_RCC_ClockConfig+0x96>
      MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800748c:	698a      	ldr	r2, [r1, #24]
 800748e:	f022 020f 	bic.w	r2, r2, #15
 8007492:	4302      	orrs	r2, r0
 8007494:	618a      	str	r2, [r1, #24]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007496:	07df      	lsls	r7, r3, #31
 8007498:	d46e      	bmi.n	8007578 <HAL_RCC_ClockConfig+0x178>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800749a:	6823      	ldr	r3, [r4, #0]
 800749c:	079e      	lsls	r6, r3, #30
 800749e:	f100 80a1 	bmi.w	80075e4 <HAL_RCC_ClockConfig+0x1e4>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80074a2:	4964      	ldr	r1, [pc, #400]	; (8007634 <HAL_RCC_ClockConfig+0x234>)
 80074a4:	680a      	ldr	r2, [r1, #0]
 80074a6:	f002 020f 	and.w	r2, r2, #15
 80074aa:	42aa      	cmp	r2, r5
 80074ac:	f200 80a8 	bhi.w	8007600 <HAL_RCC_ClockConfig+0x200>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 80074b0:	0758      	lsls	r0, r3, #29
 80074b2:	f100 80b1 	bmi.w	8007618 <HAL_RCC_ClockConfig+0x218>
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80074b6:	0719      	lsls	r1, r3, #28
 80074b8:	d50b      	bpl.n	80074d2 <HAL_RCC_ClockConfig+0xd2>
   if((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1))
 80074ba:	495f      	ldr	r1, [pc, #380]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 80074bc:	6960      	ldr	r0, [r4, #20]
 80074be:	69ca      	ldr	r2, [r1, #28]
 80074c0:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80074c4:	4290      	cmp	r0, r2
 80074c6:	d204      	bcs.n	80074d2 <HAL_RCC_ClockConfig+0xd2>
     MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80074c8:	69ca      	ldr	r2, [r1, #28]
 80074ca:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80074ce:	4302      	orrs	r2, r0
 80074d0:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80074d2:	06da      	lsls	r2, r3, #27
 80074d4:	d50b      	bpl.n	80074ee <HAL_RCC_ClockConfig+0xee>
   if((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2))
 80074d6:	4958      	ldr	r1, [pc, #352]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 80074d8:	69a0      	ldr	r0, [r4, #24]
 80074da:	69ca      	ldr	r2, [r1, #28]
 80074dc:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80074e0:	4290      	cmp	r0, r2
 80074e2:	d204      	bcs.n	80074ee <HAL_RCC_ClockConfig+0xee>
     MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 80074e4:	69ca      	ldr	r2, [r1, #28]
 80074e6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80074ea:	4302      	orrs	r2, r0
 80074ec:	61ca      	str	r2, [r1, #28]
 if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 80074ee:	069b      	lsls	r3, r3, #26
 80074f0:	d50b      	bpl.n	800750a <HAL_RCC_ClockConfig+0x10a>
   if((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE))
 80074f2:	4a51      	ldr	r2, [pc, #324]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 80074f4:	69e1      	ldr	r1, [r4, #28]
 80074f6:	6a13      	ldr	r3, [r2, #32]
 80074f8:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80074fc:	4299      	cmp	r1, r3
 80074fe:	d204      	bcs.n	800750a <HAL_RCC_ClockConfig+0x10a>
     MODIFY_REG(RCC->SRDCFGR, RCC_SRDCFGR_SRDPPRE, (RCC_ClkInitStruct->APB4CLKDivider) );
 8007500:	6a13      	ldr	r3, [r2, #32]
 8007502:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007506:	430b      	orrs	r3, r1
 8007508:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
 800750a:	f7ff fed7 	bl	80072bc <HAL_RCC_GetSysClockFreq>
 800750e:	494a      	ldr	r1, [pc, #296]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 8007510:	4a4a      	ldr	r2, [pc, #296]	; (800763c <HAL_RCC_ClockConfig+0x23c>)
 8007512:	698b      	ldr	r3, [r1, #24]
 8007514:	f3c3 2303 	ubfx	r3, r3, #8, #4
 8007518:	5cd3      	ldrb	r3, [r2, r3]
 800751a:	f003 031f 	and.w	r3, r3, #31
 800751e:	40d8      	lsrs	r0, r3
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RCC_CDCFGR1_HPRE_Pos]) & 0x1FU));
 8007520:	698b      	ldr	r3, [r1, #24]
 8007522:	f003 030f 	and.w	r3, r3, #15
 8007526:	5cd3      	ldrb	r3, [r2, r3]
 8007528:	4a45      	ldr	r2, [pc, #276]	; (8007640 <HAL_RCC_ClockConfig+0x240>)
 800752a:	f003 031f 	and.w	r3, r3, #31
 800752e:	fa20 f303 	lsr.w	r3, r0, r3
 8007532:	6013      	str	r3, [r2, #0]
  SystemCoreClock = common_system_clock;
 8007534:	4b43      	ldr	r3, [pc, #268]	; (8007644 <HAL_RCC_ClockConfig+0x244>)
 8007536:	6018      	str	r0, [r3, #0]
  halstatus = HAL_InitTick (uwTickPrio);
 8007538:	4b43      	ldr	r3, [pc, #268]	; (8007648 <HAL_RCC_ClockConfig+0x248>)
}
 800753a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick (uwTickPrio);
 800753e:	6818      	ldr	r0, [r3, #0]
 8007540:	f7f9 bd24 	b.w	8000f8c <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007544:	6813      	ldr	r3, [r2, #0]
 8007546:	f023 030f 	bic.w	r3, r3, #15
 800754a:	430b      	orrs	r3, r1
 800754c:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800754e:	6813      	ldr	r3, [r2, #0]
 8007550:	f003 030f 	and.w	r3, r3, #15
 8007554:	428b      	cmp	r3, r1
 8007556:	f47f af58 	bne.w	800740a <HAL_RCC_ClockConfig+0xa>
 800755a:	e760      	b.n	800741e <HAL_RCC_ClockConfig+0x1e>
    if((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE))
 800755c:	4936      	ldr	r1, [pc, #216]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 800755e:	6920      	ldr	r0, [r4, #16]
 8007560:	698a      	ldr	r2, [r1, #24]
 8007562:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8007566:	4290      	cmp	r0, r2
 8007568:	f67f af5d 	bls.w	8007426 <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDPPRE, RCC_ClkInitStruct->APB3CLKDivider);
 800756c:	698a      	ldr	r2, [r1, #24]
 800756e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8007572:	4302      	orrs	r2, r0
 8007574:	618a      	str	r2, [r1, #24]
 8007576:	e756      	b.n	8007426 <HAL_RCC_ClockConfig+0x26>
      MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
 8007578:	4b2f      	ldr	r3, [pc, #188]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 800757a:	68a1      	ldr	r1, [r4, #8]
 800757c:	699a      	ldr	r2, [r3, #24]
 800757e:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8007582:	430a      	orrs	r2, r1
 8007584:	619a      	str	r2, [r3, #24]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007586:	6861      	ldr	r1, [r4, #4]
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8007588:	681a      	ldr	r2, [r3, #0]
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800758a:	2902      	cmp	r1, #2
 800758c:	d11d      	bne.n	80075ca <HAL_RCC_ClockConfig+0x1ca>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800758e:	f412 3f00 	tst.w	r2, #131072	; 0x20000
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007592:	f43f af3a 	beq.w	800740a <HAL_RCC_ClockConfig+0xa>
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8007596:	691a      	ldr	r2, [r3, #16]
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007598:	f241 3888 	movw	r8, #5000	; 0x1388
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800759c:	4f26      	ldr	r7, [pc, #152]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
      MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 800759e:	f022 0207 	bic.w	r2, r2, #7
 80075a2:	430a      	orrs	r2, r1
 80075a4:	611a      	str	r2, [r3, #16]
      tickstart = HAL_GetTick();
 80075a6:	f7fd f8f1 	bl	800478c <HAL_GetTick>
 80075aa:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_SYSCLK_SOURCE() !=  (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80075ac:	693b      	ldr	r3, [r7, #16]
 80075ae:	6862      	ldr	r2, [r4, #4]
 80075b0:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80075b4:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
 80075b8:	f43f af6f 	beq.w	800749a <HAL_RCC_ClockConfig+0x9a>
          if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80075bc:	f7fd f8e6 	bl	800478c <HAL_GetTick>
 80075c0:	1b80      	subs	r0, r0, r6
 80075c2:	4540      	cmp	r0, r8
 80075c4:	d9f2      	bls.n	80075ac <HAL_RCC_ClockConfig+0x1ac>
            return HAL_TIMEOUT;
 80075c6:	2003      	movs	r0, #3
 80075c8:	e720      	b.n	800740c <HAL_RCC_ClockConfig+0xc>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80075ca:	2903      	cmp	r1, #3
 80075cc:	d102      	bne.n	80075d4 <HAL_RCC_ClockConfig+0x1d4>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80075ce:	f012 7f00 	tst.w	r2, #33554432	; 0x2000000
 80075d2:	e7de      	b.n	8007592 <HAL_RCC_ClockConfig+0x192>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 80075d4:	2901      	cmp	r1, #1
 80075d6:	d102      	bne.n	80075de <HAL_RCC_ClockConfig+0x1de>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80075d8:	f412 7f80 	tst.w	r2, #256	; 0x100
 80075dc:	e7d9      	b.n	8007592 <HAL_RCC_ClockConfig+0x192>
        if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80075de:	f012 0f04 	tst.w	r2, #4
 80075e2:	e7d6      	b.n	8007592 <HAL_RCC_ClockConfig+0x192>
    if((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->CDCFGR1 & RCC_CDCFGR1_HPRE))
 80075e4:	4914      	ldr	r1, [pc, #80]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 80075e6:	68e0      	ldr	r0, [r4, #12]
 80075e8:	698a      	ldr	r2, [r1, #24]
 80075ea:	f002 020f 	and.w	r2, r2, #15
 80075ee:	4290      	cmp	r0, r2
 80075f0:	f4bf af57 	bcs.w	80074a2 <HAL_RCC_ClockConfig+0xa2>
      MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80075f4:	698a      	ldr	r2, [r1, #24]
 80075f6:	f022 020f 	bic.w	r2, r2, #15
 80075fa:	4302      	orrs	r2, r0
 80075fc:	618a      	str	r2, [r1, #24]
 80075fe:	e750      	b.n	80074a2 <HAL_RCC_ClockConfig+0xa2>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007600:	680a      	ldr	r2, [r1, #0]
 8007602:	f022 020f 	bic.w	r2, r2, #15
 8007606:	432a      	orrs	r2, r5
 8007608:	600a      	str	r2, [r1, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800760a:	680a      	ldr	r2, [r1, #0]
 800760c:	f002 020f 	and.w	r2, r2, #15
 8007610:	42aa      	cmp	r2, r5
 8007612:	f47f aefa 	bne.w	800740a <HAL_RCC_ClockConfig+0xa>
 8007616:	e74b      	b.n	80074b0 <HAL_RCC_ClockConfig+0xb0>
   if((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE))
 8007618:	4907      	ldr	r1, [pc, #28]	; (8007638 <HAL_RCC_ClockConfig+0x238>)
 800761a:	6920      	ldr	r0, [r4, #16]
 800761c:	698a      	ldr	r2, [r1, #24]
 800761e:	f002 0270 	and.w	r2, r2, #112	; 0x70
 8007622:	4290      	cmp	r0, r2
 8007624:	f4bf af47 	bcs.w	80074b6 <HAL_RCC_ClockConfig+0xb6>
     MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDPPRE, RCC_ClkInitStruct->APB3CLKDivider);
 8007628:	698a      	ldr	r2, [r1, #24]
 800762a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 800762e:	4302      	orrs	r2, r0
 8007630:	618a      	str	r2, [r1, #24]
 8007632:	e740      	b.n	80074b6 <HAL_RCC_ClockConfig+0xb6>
 8007634:	52002000 	.word	0x52002000
 8007638:	58024400 	.word	0x58024400
 800763c:	0801ecd0 	.word	0x0801ecd0
 8007640:	24000040 	.word	0x24000040
 8007644:	2400003c 	.word	0x2400003c
 8007648:	24000048 	.word	0x24000048

0800764c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800764c:	b510      	push	{r4, lr}
uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
 800764e:	4c0c      	ldr	r4, [pc, #48]	; (8007680 <HAL_RCC_GetHCLKFreq+0x34>)
 8007650:	f7ff fe34 	bl	80072bc <HAL_RCC_GetSysClockFreq>
 8007654:	490b      	ldr	r1, [pc, #44]	; (8007684 <HAL_RCC_GetHCLKFreq+0x38>)
 8007656:	69a3      	ldr	r3, [r4, #24]
 8007658:	f3c3 2303 	ubfx	r3, r3, #8, #4
 800765c:	5ccb      	ldrb	r3, [r1, r3]
 800765e:	f003 031f 	and.w	r3, r3, #31
 8007662:	fa20 f203 	lsr.w	r2, r0, r3
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
#else
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RCC_CDCFGR1_HPRE_Pos]) & 0x1FU));
 8007666:	69a3      	ldr	r3, [r4, #24]
 8007668:	f003 030f 	and.w	r3, r3, #15
 800766c:	5ccb      	ldrb	r3, [r1, r3]
 800766e:	f003 031f 	and.w	r3, r3, #31
 8007672:	fa22 f003 	lsr.w	r0, r2, r3
 8007676:	4b04      	ldr	r3, [pc, #16]	; (8007688 <HAL_RCC_GetHCLKFreq+0x3c>)
 8007678:	6018      	str	r0, [r3, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 800767a:	4b04      	ldr	r3, [pc, #16]	; (800768c <HAL_RCC_GetHCLKFreq+0x40>)
 800767c:	601a      	str	r2, [r3, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
 800767e:	bd10      	pop	{r4, pc}
 8007680:	58024400 	.word	0x58024400
 8007684:	0801ecd0 	.word	0x0801ecd0
 8007688:	24000040 	.word	0x24000040
 800768c:	2400003c 	.word	0x2400003c

08007690 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007690:	b508      	push	{r3, lr}
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1)>> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
#else
 /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1)>> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
 8007692:	f7ff ffdb 	bl	800764c <HAL_RCC_GetHCLKFreq>
 8007696:	4b05      	ldr	r3, [pc, #20]	; (80076ac <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007698:	4a05      	ldr	r2, [pc, #20]	; (80076b0 <HAL_RCC_GetPCLK1Freq+0x20>)
 800769a:	69db      	ldr	r3, [r3, #28]
 800769c:	f3c3 1302 	ubfx	r3, r3, #4, #3
 80076a0:	5cd3      	ldrb	r3, [r2, r3]
 80076a2:	f003 031f 	and.w	r3, r3, #31
#endif
}
 80076a6:	40d8      	lsrs	r0, r3
 80076a8:	bd08      	pop	{r3, pc}
 80076aa:	bf00      	nop
 80076ac:	58024400 	.word	0x58024400
 80076b0:	0801ecd0 	.word	0x0801ecd0

080076b4 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
 80076b4:	233f      	movs	r3, #63	; 0x3f
 80076b6:	6003      	str	r3, [r0, #0]
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80076b8:	4b11      	ldr	r3, [pc, #68]	; (8007700 <HAL_RCC_GetClockConfig+0x4c>)
 80076ba:	691a      	ldr	r2, [r3, #16]
 80076bc:	f002 0207 	and.w	r2, r2, #7
 80076c0:	6042      	str	r2, [r0, #4]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
#else
  /* Get the SYSCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE);
 80076c2:	699a      	ldr	r2, [r3, #24]
 80076c4:	f402 6270 	and.w	r2, r2, #3840	; 0xf00
 80076c8:	6082      	str	r2, [r0, #8]

  /* Get the D1HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE);
 80076ca:	699a      	ldr	r2, [r3, #24]
 80076cc:	f002 020f 	and.w	r2, r2, #15
 80076d0:	60c2      	str	r2, [r0, #12]

  /* Get the APB3 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->CDCFGR1 & RCC_CDCFGR1_CDPPRE);
 80076d2:	699a      	ldr	r2, [r3, #24]
 80076d4:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80076d8:	6102      	str	r2, [r0, #16]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1);
 80076da:	69da      	ldr	r2, [r3, #28]
 80076dc:	f002 0270 	and.w	r2, r2, #112	; 0x70
 80076e0:	6142      	str	r2, [r0, #20]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2);
 80076e2:	69da      	ldr	r2, [r3, #28]
 80076e4:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 80076e8:	6182      	str	r2, [r0, #24]

  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
 80076ea:	6a1b      	ldr	r3, [r3, #32]
 80076ec:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80076f0:	61c3      	str	r3, [r0, #28]
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80076f2:	4b04      	ldr	r3, [pc, #16]	; (8007704 <HAL_RCC_GetClockConfig+0x50>)
 80076f4:	681b      	ldr	r3, [r3, #0]
 80076f6:	f003 030f 	and.w	r3, r3, #15
 80076fa:	600b      	str	r3, [r1, #0]
}
 80076fc:	4770      	bx	lr
 80076fe:	bf00      	nop
 8007700:	58024400 	.word	0x58024400
 8007704:	52002000 	.word	0x52002000

08007708 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 8007708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 800770a:	4c3a      	ldr	r4, [pc, #232]	; (80077f4 <RCCEx_PLL2_Config+0xec>)
{
 800770c:	4606      	mov	r6, r0
 800770e:	460d      	mov	r5, r1
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8007710:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007712:	f003 0303 	and.w	r3, r3, #3
 8007716:	2b03      	cmp	r3, #3
 8007718:	d069      	beq.n	80077ee <RCCEx_PLL2_Config+0xe6>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 800771a:	6823      	ldr	r3, [r4, #0]
 800771c:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8007720:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007722:	f7fd f833 	bl	800478c <HAL_GetTick>
 8007726:	4607      	mov	r7, r0

    /* Wait till PLL is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8007728:	6823      	ldr	r3, [r4, #0]
 800772a:	011a      	lsls	r2, r3, #4
 800772c:	d44b      	bmi.n	80077c6 <RCCEx_PLL2_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 800772e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007730:	6832      	ldr	r2, [r6, #0]
 8007732:	f423 337c 	bic.w	r3, r3, #258048	; 0x3f000
 8007736:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
 800773a:	62a3      	str	r3, [r4, #40]	; 0x28
 800773c:	68b3      	ldr	r3, [r6, #8]
 800773e:	68f2      	ldr	r2, [r6, #12]
 8007740:	3b01      	subs	r3, #1
 8007742:	3a01      	subs	r2, #1
 8007744:	025b      	lsls	r3, r3, #9
 8007746:	0412      	lsls	r2, r2, #16
 8007748:	b29b      	uxth	r3, r3
 800774a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 800774e:	4313      	orrs	r3, r2
 8007750:	6872      	ldr	r2, [r6, #4]
 8007752:	3a01      	subs	r2, #1
 8007754:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007758:	4313      	orrs	r3, r2
 800775a:	6932      	ldr	r2, [r6, #16]
 800775c:	3a01      	subs	r2, #1
 800775e:	0612      	lsls	r2, r2, #24
 8007760:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8007764:	4313      	orrs	r3, r2
 8007766:	63a3      	str	r3, [r4, #56]	; 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 8007768:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800776a:	6972      	ldr	r2, [r6, #20]
 800776c:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 8007770:	4313      	orrs	r3, r2
 8007772:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 8007774:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007776:	69b2      	ldr	r2, [r6, #24]
 8007778:	f023 0320 	bic.w	r3, r3, #32
 800777c:	4313      	orrs	r3, r2
 800777e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 8007780:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007782:	f023 0310 	bic.w	r3, r3, #16
 8007786:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 8007788:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800778a:	69f2      	ldr	r2, [r6, #28]
 800778c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007790:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007794:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007798:	63e3      	str	r3, [r4, #60]	; 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 800779a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800779c:	f043 0310 	orr.w	r3, r3, #16
 80077a0:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL2 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 80077a2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
 80077a4:	b9b5      	cbnz	r5, 80077d4 <RCCEx_PLL2_Config+0xcc>
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 80077a6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 80077aa:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 80077ac:	4c11      	ldr	r4, [pc, #68]	; (80077f4 <RCCEx_PLL2_Config+0xec>)
 80077ae:	6823      	ldr	r3, [r4, #0]
 80077b0:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80077b4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80077b6:	f7fc ffe9 	bl	800478c <HAL_GetTick>
 80077ba:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 80077bc:	6823      	ldr	r3, [r4, #0]
 80077be:	011b      	lsls	r3, r3, #4
 80077c0:	d50f      	bpl.n	80077e2 <RCCEx_PLL2_Config+0xda>
    }

  }


  return status;
 80077c2:	2000      	movs	r0, #0
 80077c4:	e005      	b.n	80077d2 <RCCEx_PLL2_Config+0xca>
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 80077c6:	f7fc ffe1 	bl	800478c <HAL_GetTick>
 80077ca:	1bc0      	subs	r0, r0, r7
 80077cc:	2802      	cmp	r0, #2
 80077ce:	d9ab      	bls.n	8007728 <RCCEx_PLL2_Config+0x20>
        return HAL_TIMEOUT;
 80077d0:	2003      	movs	r0, #3
}
 80077d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if(Divider == DIVIDER_Q_UPDATE)
 80077d4:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 80077d6:	bf0c      	ite	eq
 80077d8:	f443 1380 	orreq.w	r3, r3, #1048576	; 0x100000
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 80077dc:	f443 1300 	orrne.w	r3, r3, #2097152	; 0x200000
 80077e0:	e7e3      	b.n	80077aa <RCCEx_PLL2_Config+0xa2>
      if( (HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 80077e2:	f7fc ffd3 	bl	800478c <HAL_GetTick>
 80077e6:	1b40      	subs	r0, r0, r5
 80077e8:	2802      	cmp	r0, #2
 80077ea:	d9e7      	bls.n	80077bc <RCCEx_PLL2_Config+0xb4>
 80077ec:	e7f0      	b.n	80077d0 <RCCEx_PLL2_Config+0xc8>
    return HAL_ERROR;
 80077ee:	2001      	movs	r0, #1
 80077f0:	e7ef      	b.n	80077d2 <RCCEx_PLL2_Config+0xca>
 80077f2:	bf00      	nop
 80077f4:	58024400 	.word	0x58024400

080077f8 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 80077f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80077fa:	4c3a      	ldr	r4, [pc, #232]	; (80078e4 <RCCEx_PLL3_Config+0xec>)
{
 80077fc:	4606      	mov	r6, r0
 80077fe:	460d      	mov	r5, r1
  if(__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8007800:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007802:	f003 0303 	and.w	r3, r3, #3
 8007806:	2b03      	cmp	r3, #3
 8007808:	d069      	beq.n	80078de <RCCEx_PLL3_Config+0xe6>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 800780a:	6823      	ldr	r3, [r4, #0]
 800780c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007810:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007812:	f7fc ffbb 	bl	800478c <HAL_GetTick>
 8007816:	4607      	mov	r7, r0
    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 8007818:	6823      	ldr	r3, [r4, #0]
 800781a:	009a      	lsls	r2, r3, #2
 800781c:	d44b      	bmi.n	80078b6 <RCCEx_PLL3_Config+0xbe>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 800781e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007820:	6832      	ldr	r2, [r6, #0]
 8007822:	f023 737c 	bic.w	r3, r3, #66060288	; 0x3f00000
 8007826:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 800782a:	62a3      	str	r3, [r4, #40]	; 0x28
 800782c:	68b3      	ldr	r3, [r6, #8]
 800782e:	68f2      	ldr	r2, [r6, #12]
 8007830:	3b01      	subs	r3, #1
 8007832:	3a01      	subs	r2, #1
 8007834:	025b      	lsls	r3, r3, #9
 8007836:	0412      	lsls	r2, r2, #16
 8007838:	b29b      	uxth	r3, r3
 800783a:	f402 02fe 	and.w	r2, r2, #8323072	; 0x7f0000
 800783e:	4313      	orrs	r3, r2
 8007840:	6872      	ldr	r2, [r6, #4]
 8007842:	3a01      	subs	r2, #1
 8007844:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007848:	4313      	orrs	r3, r2
 800784a:	6932      	ldr	r2, [r6, #16]
 800784c:	3a01      	subs	r2, #1
 800784e:	0612      	lsls	r2, r2, #24
 8007850:	f002 42fe 	and.w	r2, r2, #2130706432	; 0x7f000000
 8007854:	4313      	orrs	r3, r2
 8007856:	6423      	str	r3, [r4, #64]	; 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8007858:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800785a:	6972      	ldr	r2, [r6, #20]
 800785c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8007860:	4313      	orrs	r3, r2
 8007862:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 8007864:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007866:	69b2      	ldr	r2, [r6, #24]
 8007868:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800786c:	4313      	orrs	r3, r2
 800786e:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8007870:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007872:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007876:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8007878:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800787a:	69f2      	ldr	r2, [r6, #28]
 800787c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8007880:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007884:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8007888:	6463      	str	r3, [r4, #68]	; 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 800788a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800788c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007890:	62e3      	str	r3, [r4, #44]	; 0x2c

    /* Enable the PLL3 clock output */
    if(Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8007892:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    if(Divider == DIVIDER_P_UPDATE)
 8007894:	b9b5      	cbnz	r5, 80078c4 <RCCEx_PLL3_Config+0xcc>
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8007896:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 800789a:	62e3      	str	r3, [r4, #44]	; 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 800789c:	4c11      	ldr	r4, [pc, #68]	; (80078e4 <RCCEx_PLL3_Config+0xec>)
 800789e:	6823      	ldr	r3, [r4, #0]
 80078a0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80078a4:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80078a6:	f7fc ff71 	bl	800478c <HAL_GetTick>
 80078aa:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80078ac:	6823      	ldr	r3, [r4, #0]
 80078ae:	009b      	lsls	r3, r3, #2
 80078b0:	d50f      	bpl.n	80078d2 <RCCEx_PLL3_Config+0xda>
    }

  }


  return status;
 80078b2:	2000      	movs	r0, #0
 80078b4:	e005      	b.n	80078c2 <RCCEx_PLL3_Config+0xca>
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
 80078b6:	f7fc ff69 	bl	800478c <HAL_GetTick>
 80078ba:	1bc0      	subs	r0, r0, r7
 80078bc:	2802      	cmp	r0, #2
 80078be:	d9ab      	bls.n	8007818 <RCCEx_PLL3_Config+0x20>
        return HAL_TIMEOUT;
 80078c0:	2003      	movs	r0, #3
}
 80078c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    else if(Divider == DIVIDER_Q_UPDATE)
 80078c4:	2d01      	cmp	r5, #1
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 80078c6:	bf0c      	ite	eq
 80078c8:	f443 0300 	orreq.w	r3, r3, #8388608	; 0x800000
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 80078cc:	f043 7380 	orrne.w	r3, r3, #16777216	; 0x1000000
 80078d0:	e7e3      	b.n	800789a <RCCEx_PLL3_Config+0xa2>
      if( (HAL_GetTick() - tickstart ) > PLL3_TIMEOUT_VALUE)
 80078d2:	f7fc ff5b 	bl	800478c <HAL_GetTick>
 80078d6:	1b40      	subs	r0, r0, r5
 80078d8:	2802      	cmp	r0, #2
 80078da:	d9e7      	bls.n	80078ac <RCCEx_PLL3_Config+0xb4>
 80078dc:	e7f0      	b.n	80078c0 <RCCEx_PLL3_Config+0xc8>
    return HAL_ERROR;
 80078de:	2001      	movs	r0, #1
 80078e0:	e7ef      	b.n	80078c2 <RCCEx_PLL3_Config+0xca>
 80078e2:	bf00      	nop
 80078e4:	58024400 	.word	0x58024400

080078e8 <HAL_RCCEx_PeriphCLKConfig>:
{
 80078e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80078ec:	6806      	ldr	r6, [r0, #0]
{
 80078ee:	4605      	mov	r5, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80078f0:	f016 6600 	ands.w	r6, r6, #134217728	; 0x8000000
 80078f4:	d009      	beq.n	800790a <HAL_RCCEx_PeriphCLKConfig+0x22>
    switch(PeriphClkInit->SpdifrxClockSelection)
 80078f6:	6e83      	ldr	r3, [r0, #104]	; 0x68
 80078f8:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80078fc:	d02c      	beq.n	8007958 <HAL_RCCEx_PeriphCLKConfig+0x70>
 80078fe:	d811      	bhi.n	8007924 <HAL_RCCEx_PeriphCLKConfig+0x3c>
 8007900:	b1e3      	cbz	r3, 800793c <HAL_RCCEx_PeriphCLKConfig+0x54>
 8007902:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007906:	d01f      	beq.n	8007948 <HAL_RCCEx_PeriphCLKConfig+0x60>
 8007908:	2601      	movs	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 800790a:	682b      	ldr	r3, [r5, #0]
 800790c:	05d8      	lsls	r0, r3, #23
 800790e:	f140 80d3 	bpl.w	8007ab8 <HAL_RCCEx_PeriphCLKConfig+0x1d0>
    switch(PeriphClkInit->Sai1ClockSelection)
 8007912:	6d6b      	ldr	r3, [r5, #84]	; 0x54
 8007914:	2b04      	cmp	r3, #4
 8007916:	f200 80ce 	bhi.w	8007ab6 <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 800791a:	e8df f003 	tbb	[pc, r3]
 800791e:	2922      	.short	0x2922
 8007920:	27c6      	.short	0x27c6
 8007922:	27          	.byte	0x27
 8007923:	00          	.byte	0x00
    switch(PeriphClkInit->SpdifrxClockSelection)
 8007924:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007928:	d1ee      	bne.n	8007908 <HAL_RCCEx_PeriphCLKConfig+0x20>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 800792a:	4aaa      	ldr	r2, [pc, #680]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800792c:	2600      	movs	r6, #0
 800792e:	6ea9      	ldr	r1, [r5, #104]	; 0x68
 8007930:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007932:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8007936:	430b      	orrs	r3, r1
 8007938:	6513      	str	r3, [r2, #80]	; 0x50
 800793a:	e7e6      	b.n	800790a <HAL_RCCEx_PeriphCLKConfig+0x22>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800793c:	4aa5      	ldr	r2, [pc, #660]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 800793e:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007940:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007944:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8007946:	e7f0      	b.n	800792a <HAL_RCCEx_PeriphCLKConfig+0x42>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8007948:	2102      	movs	r1, #2
 800794a:	3004      	adds	r0, #4
 800794c:	f7ff fedc 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8007950:	4606      	mov	r6, r0
    if(ret == HAL_OK)
 8007952:	2800      	cmp	r0, #0
 8007954:	d1d9      	bne.n	800790a <HAL_RCCEx_PeriphCLKConfig+0x22>
 8007956:	e7e8      	b.n	800792a <HAL_RCCEx_PeriphCLKConfig+0x42>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8007958:	2102      	movs	r1, #2
 800795a:	3024      	adds	r0, #36	; 0x24
 800795c:	f7ff ff4c 	bl	80077f8 <RCCEx_PLL3_Config>
 8007960:	e7f6      	b.n	8007950 <HAL_RCCEx_PeriphCLKConfig+0x68>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007962:	4a9c      	ldr	r2, [pc, #624]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007964:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007966:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800796a:	62d3      	str	r3, [r2, #44]	; 0x2c
    switch(PeriphClkInit->Sai1ClockSelection)
 800796c:	4634      	mov	r4, r6
 800796e:	e004      	b.n	800797a <HAL_RCCEx_PeriphCLKConfig+0x92>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8007970:	2100      	movs	r1, #0
 8007972:	1d28      	adds	r0, r5, #4
 8007974:	f7ff fec8 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8007978:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 800797a:	2c00      	cmp	r4, #0
 800797c:	f040 809e 	bne.w	8007abc <HAL_RCCEx_PeriphCLKConfig+0x1d4>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007980:	4a94      	ldr	r2, [pc, #592]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007982:	6d69      	ldr	r1, [r5, #84]	; 0x54
 8007984:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007986:	f023 0307 	bic.w	r3, r3, #7
 800798a:	430b      	orrs	r3, r1
 800798c:	6513      	str	r3, [r2, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2A) == RCC_PERIPHCLK_SAI2A)
 800798e:	682b      	ldr	r3, [r5, #0]
 8007990:	0599      	lsls	r1, r3, #22
 8007992:	d50d      	bpl.n	80079b0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch(PeriphClkInit->Sai2AClockSelection)
 8007994:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8007996:	2b80      	cmp	r3, #128	; 0x80
 8007998:	f000 80af 	beq.w	8007afa <HAL_RCCEx_PeriphCLKConfig+0x212>
 800799c:	f200 8090 	bhi.w	8007ac0 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
 80079a0:	2b00      	cmp	r3, #0
 80079a2:	f000 809e 	beq.w	8007ae2 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 80079a6:	2b40      	cmp	r3, #64	; 0x40
 80079a8:	f000 80a1 	beq.w	8007aee <HAL_RCCEx_PeriphCLKConfig+0x206>
 80079ac:	2601      	movs	r6, #1
 80079ae:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2B) == RCC_PERIPHCLK_SAI2B)
 80079b0:	682b      	ldr	r3, [r5, #0]
 80079b2:	055a      	lsls	r2, r3, #21
 80079b4:	d50f      	bpl.n	80079d6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    switch(PeriphClkInit->Sai2BClockSelection)
 80079b6:	6deb      	ldr	r3, [r5, #92]	; 0x5c
 80079b8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80079bc:	f000 80c3 	beq.w	8007b46 <HAL_RCCEx_PeriphCLKConfig+0x25e>
 80079c0:	f200 80a3 	bhi.w	8007b0a <HAL_RCCEx_PeriphCLKConfig+0x222>
 80079c4:	2b00      	cmp	r3, #0
 80079c6:	f000 80b2 	beq.w	8007b2e <HAL_RCCEx_PeriphCLKConfig+0x246>
 80079ca:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079ce:	f000 80b4 	beq.w	8007b3a <HAL_RCCEx_PeriphCLKConfig+0x252>
 80079d2:	2601      	movs	r6, #1
 80079d4:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 80079d6:	682b      	ldr	r3, [r5, #0]
 80079d8:	019b      	lsls	r3, r3, #6
 80079da:	d50d      	bpl.n	80079f8 <HAL_RCCEx_PeriphCLKConfig+0x110>
    switch(PeriphClkInit->OspiClockSelection)
 80079dc:	6cab      	ldr	r3, [r5, #72]	; 0x48
 80079de:	2b20      	cmp	r3, #32
 80079e0:	f000 80cb 	beq.w	8007b7a <HAL_RCCEx_PeriphCLKConfig+0x292>
 80079e4:	f200 80b7 	bhi.w	8007b56 <HAL_RCCEx_PeriphCLKConfig+0x26e>
 80079e8:	2b00      	cmp	r3, #0
 80079ea:	f000 80b7 	beq.w	8007b5c <HAL_RCCEx_PeriphCLKConfig+0x274>
 80079ee:	2b10      	cmp	r3, #16
 80079f0:	f000 80bd 	beq.w	8007b6e <HAL_RCCEx_PeriphCLKConfig+0x286>
 80079f4:	2601      	movs	r6, #1
 80079f6:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 80079f8:	682b      	ldr	r3, [r5, #0]
 80079fa:	04df      	lsls	r7, r3, #19
 80079fc:	d50f      	bpl.n	8007a1e <HAL_RCCEx_PeriphCLKConfig+0x136>
    switch(PeriphClkInit->Spi123ClockSelection)
 80079fe:	6e2b      	ldr	r3, [r5, #96]	; 0x60
 8007a00:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007a04:	f000 80dd 	beq.w	8007bc2 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8007a08:	f200 80bf 	bhi.w	8007b8a <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 8007a0c:	2b00      	cmp	r3, #0
 8007a0e:	f000 80cc 	beq.w	8007baa <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 8007a12:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007a16:	f000 80ce 	beq.w	8007bb6 <HAL_RCCEx_PeriphCLKConfig+0x2ce>
 8007a1a:	2601      	movs	r6, #1
 8007a1c:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8007a1e:	682b      	ldr	r3, [r5, #0]
 8007a20:	0498      	lsls	r0, r3, #18
 8007a22:	d50f      	bpl.n	8007a44 <HAL_RCCEx_PeriphCLKConfig+0x15c>
    switch(PeriphClkInit->Spi45ClockSelection)
 8007a24:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8007a26:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8007a2a:	f000 80ed 	beq.w	8007c08 <HAL_RCCEx_PeriphCLKConfig+0x320>
 8007a2e:	f200 80d3 	bhi.w	8007bd8 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
 8007a32:	2b00      	cmp	r3, #0
 8007a34:	f000 80d9 	beq.w	8007bea <HAL_RCCEx_PeriphCLKConfig+0x302>
 8007a38:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007a3c:	f000 80de 	beq.w	8007bfc <HAL_RCCEx_PeriphCLKConfig+0x314>
 8007a40:	2601      	movs	r6, #1
 8007a42:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8007a44:	682b      	ldr	r3, [r5, #0]
 8007a46:	0459      	lsls	r1, r3, #17
 8007a48:	d510      	bpl.n	8007a6c <HAL_RCCEx_PeriphCLKConfig+0x184>
    switch(PeriphClkInit->Spi6ClockSelection)
 8007a4a:	f8d5 30ac 	ldr.w	r3, [r5, #172]	; 0xac
 8007a4e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007a52:	f000 80ff 	beq.w	8007c54 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8007a56:	f200 80df 	bhi.w	8007c18 <HAL_RCCEx_PeriphCLKConfig+0x330>
 8007a5a:	2b00      	cmp	r3, #0
 8007a5c:	f000 80e7 	beq.w	8007c2e <HAL_RCCEx_PeriphCLKConfig+0x346>
 8007a60:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007a64:	f000 80f0 	beq.w	8007c48 <HAL_RCCEx_PeriphCLKConfig+0x360>
 8007a68:	2601      	movs	r6, #1
 8007a6a:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8007a6c:	682b      	ldr	r3, [r5, #0]
 8007a6e:	041a      	lsls	r2, r3, #16
 8007a70:	d50d      	bpl.n	8007a8e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
    switch(PeriphClkInit->FdcanClockSelection)
 8007a72:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8007a74:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007a78:	f000 80f4 	beq.w	8007c64 <HAL_RCCEx_PeriphCLKConfig+0x37c>
 8007a7c:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007a80:	f000 80fe 	beq.w	8007c80 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8007a84:	2b00      	cmp	r3, #0
 8007a86:	f000 80f2 	beq.w	8007c6e <HAL_RCCEx_PeriphCLKConfig+0x386>
 8007a8a:	2601      	movs	r6, #1
 8007a8c:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 8007a8e:	682b      	ldr	r3, [r5, #0]
 8007a90:	01db      	lsls	r3, r3, #7
 8007a92:	f140 810b 	bpl.w	8007cac <HAL_RCCEx_PeriphCLKConfig+0x3c4>
    switch(PeriphClkInit->FmcClockSelection)
 8007a96:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 8007a98:	2b03      	cmp	r3, #3
 8007a9a:	f200 814b 	bhi.w	8007d34 <HAL_RCCEx_PeriphCLKConfig+0x44c>
 8007a9e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007aa2:	00fc      	.short	0x00fc
 8007aa4:	014300f7 	.word	0x014300f7
 8007aa8:	00fc      	.short	0x00fc
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8007aaa:	2100      	movs	r1, #0
 8007aac:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007ab0:	f7ff fea2 	bl	80077f8 <RCCEx_PLL3_Config>
 8007ab4:	e760      	b.n	8007978 <HAL_RCCEx_PeriphCLKConfig+0x90>
    switch(PeriphClkInit->Sai1ClockSelection)
 8007ab6:	2601      	movs	r6, #1
 8007ab8:	4634      	mov	r4, r6
 8007aba:	e768      	b.n	800798e <HAL_RCCEx_PeriphCLKConfig+0xa6>
 8007abc:	4626      	mov	r6, r4
 8007abe:	e766      	b.n	800798e <HAL_RCCEx_PeriphCLKConfig+0xa6>
    switch(PeriphClkInit->Sai2AClockSelection)
 8007ac0:	f023 0240 	bic.w	r2, r3, #64	; 0x40
 8007ac4:	f5b2 7f80 	cmp.w	r2, #256	; 0x100
 8007ac8:	d002      	beq.n	8007ad0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8007aca:	2bc0      	cmp	r3, #192	; 0xc0
 8007acc:	f47f af6e 	bne.w	80079ac <HAL_RCCEx_PeriphCLKConfig+0xc4>
    if(ret == HAL_OK)
 8007ad0:	b9cc      	cbnz	r4, 8007b06 <HAL_RCCEx_PeriphCLKConfig+0x21e>
      __HAL_RCC_SAI2A_CONFIG(PeriphClkInit->Sai2AClockSelection);
 8007ad2:	4a40      	ldr	r2, [pc, #256]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007ad4:	6da9      	ldr	r1, [r5, #88]	; 0x58
 8007ad6:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007ad8:	f423 73e0 	bic.w	r3, r3, #448	; 0x1c0
 8007adc:	430b      	orrs	r3, r1
 8007ade:	6513      	str	r3, [r2, #80]	; 0x50
 8007ae0:	e766      	b.n	80079b0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007ae2:	4a3c      	ldr	r2, [pc, #240]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007ae4:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007ae6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007aea:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8007aec:	e7f0      	b.n	8007ad0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8007aee:	2100      	movs	r1, #0
 8007af0:	1d28      	adds	r0, r5, #4
 8007af2:	f7ff fe09 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8007af6:	4604      	mov	r4, r0
      break;
 8007af8:	e7ea      	b.n	8007ad0 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8007afa:	2100      	movs	r1, #0
 8007afc:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007b00:	f7ff fe7a 	bl	80077f8 <RCCEx_PLL3_Config>
 8007b04:	e7f7      	b.n	8007af6 <HAL_RCCEx_PeriphCLKConfig+0x20e>
 8007b06:	4626      	mov	r6, r4
 8007b08:	e752      	b.n	80079b0 <HAL_RCCEx_PeriphCLKConfig+0xc8>
    switch(PeriphClkInit->Sai2BClockSelection)
 8007b0a:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 8007b0e:	f5b2 6f00 	cmp.w	r2, #2048	; 0x800
 8007b12:	d003      	beq.n	8007b1c <HAL_RCCEx_PeriphCLKConfig+0x234>
 8007b14:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8007b18:	f47f af5b 	bne.w	80079d2 <HAL_RCCEx_PeriphCLKConfig+0xea>
    if(ret == HAL_OK)
 8007b1c:	b9cc      	cbnz	r4, 8007b52 <HAL_RCCEx_PeriphCLKConfig+0x26a>
      __HAL_RCC_SAI2B_CONFIG(PeriphClkInit->Sai2BClockSelection);
 8007b1e:	4a2d      	ldr	r2, [pc, #180]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007b20:	6de9      	ldr	r1, [r5, #92]	; 0x5c
 8007b22:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007b24:	f423 6360 	bic.w	r3, r3, #3584	; 0xe00
 8007b28:	430b      	orrs	r3, r1
 8007b2a:	6513      	str	r3, [r2, #80]	; 0x50
 8007b2c:	e753      	b.n	80079d6 <HAL_RCCEx_PeriphCLKConfig+0xee>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007b2e:	4a29      	ldr	r2, [pc, #164]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007b30:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007b32:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007b36:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8007b38:	e7f0      	b.n	8007b1c <HAL_RCCEx_PeriphCLKConfig+0x234>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8007b3a:	2100      	movs	r1, #0
 8007b3c:	1d28      	adds	r0, r5, #4
 8007b3e:	f7ff fde3 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8007b42:	4604      	mov	r4, r0
      break;
 8007b44:	e7ea      	b.n	8007b1c <HAL_RCCEx_PeriphCLKConfig+0x234>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8007b46:	2100      	movs	r1, #0
 8007b48:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007b4c:	f7ff fe54 	bl	80077f8 <RCCEx_PLL3_Config>
 8007b50:	e7f7      	b.n	8007b42 <HAL_RCCEx_PeriphCLKConfig+0x25a>
 8007b52:	4626      	mov	r6, r4
 8007b54:	e73f      	b.n	80079d6 <HAL_RCCEx_PeriphCLKConfig+0xee>
    switch(PeriphClkInit->OspiClockSelection)
 8007b56:	2b30      	cmp	r3, #48	; 0x30
 8007b58:	f47f af4c 	bne.w	80079f4 <HAL_RCCEx_PeriphCLKConfig+0x10c>
    if(ret == HAL_OK)
 8007b5c:	b99c      	cbnz	r4, 8007b86 <HAL_RCCEx_PeriphCLKConfig+0x29e>
      __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 8007b5e:	4a1d      	ldr	r2, [pc, #116]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007b60:	6ca9      	ldr	r1, [r5, #72]	; 0x48
 8007b62:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007b64:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8007b68:	430b      	orrs	r3, r1
 8007b6a:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007b6c:	e744      	b.n	80079f8 <HAL_RCCEx_PeriphCLKConfig+0x110>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007b6e:	4a19      	ldr	r2, [pc, #100]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007b70:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007b72:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007b76:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8007b78:	e7f0      	b.n	8007b5c <HAL_RCCEx_PeriphCLKConfig+0x274>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8007b7a:	2102      	movs	r1, #2
 8007b7c:	1d28      	adds	r0, r5, #4
 8007b7e:	f7ff fdc3 	bl	8007708 <RCCEx_PLL2_Config>
 8007b82:	4604      	mov	r4, r0
      break;
 8007b84:	e7ea      	b.n	8007b5c <HAL_RCCEx_PeriphCLKConfig+0x274>
 8007b86:	4626      	mov	r6, r4
 8007b88:	e736      	b.n	80079f8 <HAL_RCCEx_PeriphCLKConfig+0x110>
    switch(PeriphClkInit->Spi123ClockSelection)
 8007b8a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8007b8e:	d003      	beq.n	8007b98 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
 8007b90:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007b94:	f47f af41 	bne.w	8007a1a <HAL_RCCEx_PeriphCLKConfig+0x132>
    if(ret == HAL_OK)
 8007b98:	b9cc      	cbnz	r4, 8007bce <HAL_RCCEx_PeriphCLKConfig+0x2e6>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8007b9a:	4a0e      	ldr	r2, [pc, #56]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007b9c:	6e29      	ldr	r1, [r5, #96]	; 0x60
 8007b9e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007ba0:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8007ba4:	430b      	orrs	r3, r1
 8007ba6:	6513      	str	r3, [r2, #80]	; 0x50
 8007ba8:	e739      	b.n	8007a1e <HAL_RCCEx_PeriphCLKConfig+0x136>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007baa:	4a0a      	ldr	r2, [pc, #40]	; (8007bd4 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 8007bac:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007bae:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007bb2:	62d3      	str	r3, [r2, #44]	; 0x2c
      break;
 8007bb4:	e7f0      	b.n	8007b98 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8007bb6:	2100      	movs	r1, #0
 8007bb8:	1d28      	adds	r0, r5, #4
 8007bba:	f7ff fda5 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8007bbe:	4604      	mov	r4, r0
      break;
 8007bc0:	e7ea      	b.n	8007b98 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_P_UPDATE);
 8007bc2:	2100      	movs	r1, #0
 8007bc4:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007bc8:	f7ff fe16 	bl	80077f8 <RCCEx_PLL3_Config>
 8007bcc:	e7f7      	b.n	8007bbe <HAL_RCCEx_PeriphCLKConfig+0x2d6>
 8007bce:	4626      	mov	r6, r4
 8007bd0:	e725      	b.n	8007a1e <HAL_RCCEx_PeriphCLKConfig+0x136>
 8007bd2:	bf00      	nop
 8007bd4:	58024400 	.word	0x58024400
    switch(PeriphClkInit->Spi45ClockSelection)
 8007bd8:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8007bdc:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 8007be0:	d003      	beq.n	8007bea <HAL_RCCEx_PeriphCLKConfig+0x302>
 8007be2:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8007be6:	f47f af2b 	bne.w	8007a40 <HAL_RCCEx_PeriphCLKConfig+0x158>
    if(ret == HAL_OK)
 8007bea:	b99c      	cbnz	r4, 8007c14 <HAL_RCCEx_PeriphCLKConfig+0x32c>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8007bec:	4a92      	ldr	r2, [pc, #584]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007bee:	6e69      	ldr	r1, [r5, #100]	; 0x64
 8007bf0:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007bf2:	f423 23e0 	bic.w	r3, r3, #458752	; 0x70000
 8007bf6:	430b      	orrs	r3, r1
 8007bf8:	6513      	str	r3, [r2, #80]	; 0x50
 8007bfa:	e723      	b.n	8007a44 <HAL_RCCEx_PeriphCLKConfig+0x15c>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8007bfc:	2101      	movs	r1, #1
 8007bfe:	1d28      	adds	r0, r5, #4
 8007c00:	f7ff fd82 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007c04:	4604      	mov	r4, r0
      break;
 8007c06:	e7f0      	b.n	8007bea <HAL_RCCEx_PeriphCLKConfig+0x302>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007c08:	2101      	movs	r1, #1
 8007c0a:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007c0e:	f7ff fdf3 	bl	80077f8 <RCCEx_PLL3_Config>
 8007c12:	e7f7      	b.n	8007c04 <HAL_RCCEx_PeriphCLKConfig+0x31c>
 8007c14:	4626      	mov	r6, r4
 8007c16:	e715      	b.n	8007a44 <HAL_RCCEx_PeriphCLKConfig+0x15c>
    switch(PeriphClkInit->Spi6ClockSelection)
 8007c18:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8007c1c:	d007      	beq.n	8007c2e <HAL_RCCEx_PeriphCLKConfig+0x346>
 8007c1e:	d810      	bhi.n	8007c42 <HAL_RCCEx_PeriphCLKConfig+0x35a>
 8007c20:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8007c24:	d003      	beq.n	8007c2e <HAL_RCCEx_PeriphCLKConfig+0x346>
 8007c26:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007c2a:	f47f af1d 	bne.w	8007a68 <HAL_RCCEx_PeriphCLKConfig+0x180>
    if(ret == HAL_OK)
 8007c2e:	b9bc      	cbnz	r4, 8007c60 <HAL_RCCEx_PeriphCLKConfig+0x378>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 8007c30:	4a81      	ldr	r2, [pc, #516]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007c32:	f8d5 10ac 	ldr.w	r1, [r5, #172]	; 0xac
 8007c36:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007c38:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 8007c3c:	430b      	orrs	r3, r1
 8007c3e:	6593      	str	r3, [r2, #88]	; 0x58
 8007c40:	e714      	b.n	8007a6c <HAL_RCCEx_PeriphCLKConfig+0x184>
    switch(PeriphClkInit->Spi6ClockSelection)
 8007c42:	f1b3 4fc0 	cmp.w	r3, #1610612736	; 0x60000000
 8007c46:	e7f0      	b.n	8007c2a <HAL_RCCEx_PeriphCLKConfig+0x342>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8007c48:	2101      	movs	r1, #1
 8007c4a:	1d28      	adds	r0, r5, #4
 8007c4c:	f7ff fd5c 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007c50:	4604      	mov	r4, r0
      break;
 8007c52:	e7ec      	b.n	8007c2e <HAL_RCCEx_PeriphCLKConfig+0x346>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007c54:	2101      	movs	r1, #1
 8007c56:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007c5a:	f7ff fdcd 	bl	80077f8 <RCCEx_PLL3_Config>
 8007c5e:	e7f7      	b.n	8007c50 <HAL_RCCEx_PeriphCLKConfig+0x368>
 8007c60:	4626      	mov	r6, r4
 8007c62:	e703      	b.n	8007a6c <HAL_RCCEx_PeriphCLKConfig+0x184>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c64:	4a74      	ldr	r2, [pc, #464]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007c66:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007c68:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007c6c:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8007c6e:	b96c      	cbnz	r4, 8007c8c <HAL_RCCEx_PeriphCLKConfig+0x3a4>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8007c70:	4a71      	ldr	r2, [pc, #452]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007c72:	6f69      	ldr	r1, [r5, #116]	; 0x74
 8007c74:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8007c76:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 8007c7a:	430b      	orrs	r3, r1
 8007c7c:	6513      	str	r3, [r2, #80]	; 0x50
 8007c7e:	e706      	b.n	8007a8e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8007c80:	2101      	movs	r1, #1
 8007c82:	1d28      	adds	r0, r5, #4
 8007c84:	f7ff fd40 	bl	8007708 <RCCEx_PLL2_Config>
 8007c88:	4604      	mov	r4, r0
      break;
 8007c8a:	e7f0      	b.n	8007c6e <HAL_RCCEx_PeriphCLKConfig+0x386>
 8007c8c:	4626      	mov	r6, r4
 8007c8e:	e6fe      	b.n	8007a8e <HAL_RCCEx_PeriphCLKConfig+0x1a6>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c90:	4a69      	ldr	r2, [pc, #420]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007c92:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007c94:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007c98:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8007c9a:	2c00      	cmp	r4, #0
 8007c9c:	d14d      	bne.n	8007d3a <HAL_RCCEx_PeriphCLKConfig+0x452>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8007c9e:	4a66      	ldr	r2, [pc, #408]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007ca0:	6c69      	ldr	r1, [r5, #68]	; 0x44
 8007ca2:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8007ca4:	f023 0303 	bic.w	r3, r3, #3
 8007ca8:	430b      	orrs	r3, r1
 8007caa:	64d3      	str	r3, [r2, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8007cac:	682b      	ldr	r3, [r5, #0]
 8007cae:	025f      	lsls	r7, r3, #9
 8007cb0:	d54d      	bpl.n	8007d4e <HAL_RCCEx_PeriphCLKConfig+0x466>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8007cb2:	4f62      	ldr	r7, [pc, #392]	; (8007e3c <HAL_RCCEx_PeriphCLKConfig+0x554>)
 8007cb4:	683b      	ldr	r3, [r7, #0]
 8007cb6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007cba:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
 8007cbc:	f7fc fd66 	bl	800478c <HAL_GetTick>
 8007cc0:	4680      	mov	r8, r0
    while((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8007cc2:	683b      	ldr	r3, [r7, #0]
 8007cc4:	05d8      	lsls	r0, r3, #23
 8007cc6:	d53a      	bpl.n	8007d3e <HAL_RCCEx_PeriphCLKConfig+0x456>
    if(ret == HAL_OK)
 8007cc8:	2c00      	cmp	r4, #0
 8007cca:	d16d      	bne.n	8007da8 <HAL_RCCEx_PeriphCLKConfig+0x4c0>
      if((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8007ccc:	4b5a      	ldr	r3, [pc, #360]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007cce:	f8d5 00b0 	ldr.w	r0, [r5, #176]	; 0xb0
 8007cd2:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 8007cd4:	4042      	eors	r2, r0
 8007cd6:	f412 7f40 	tst.w	r2, #768	; 0x300
 8007cda:	d00b      	beq.n	8007cf4 <HAL_RCCEx_PeriphCLKConfig+0x40c>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007cdc:	6f1a      	ldr	r2, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
 8007cde:	6f19      	ldr	r1, [r3, #112]	; 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007ce0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
 8007ce4:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
 8007ce8:	6719      	str	r1, [r3, #112]	; 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 8007cea:	6f19      	ldr	r1, [r3, #112]	; 0x70
 8007cec:	f421 3180 	bic.w	r1, r1, #65536	; 0x10000
 8007cf0:	6719      	str	r1, [r3, #112]	; 0x70
        RCC->BDCR = tmpreg;
 8007cf2:	671a      	str	r2, [r3, #112]	; 0x70
      if(PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 8007cf4:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8007cf8:	d041      	beq.n	8007d7e <HAL_RCCEx_PeriphCLKConfig+0x496>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007cfa:	f8d5 30b0 	ldr.w	r3, [r5, #176]	; 0xb0
 8007cfe:	494e      	ldr	r1, [pc, #312]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007d00:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007d04:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007d08:	d14a      	bne.n	8007da0 <HAL_RCCEx_PeriphCLKConfig+0x4b8>
 8007d0a:	6908      	ldr	r0, [r1, #16]
 8007d0c:	4a4c      	ldr	r2, [pc, #304]	; (8007e40 <HAL_RCCEx_PeriphCLKConfig+0x558>)
 8007d0e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8007d12:	ea02 1213 	and.w	r2, r2, r3, lsr #4
 8007d16:	4302      	orrs	r2, r0
 8007d18:	610a      	str	r2, [r1, #16]
 8007d1a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007d1e:	4a46      	ldr	r2, [pc, #280]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007d20:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007d22:	430b      	orrs	r3, r1
 8007d24:	6713      	str	r3, [r2, #112]	; 0x70
 8007d26:	e012      	b.n	8007d4e <HAL_RCCEx_PeriphCLKConfig+0x466>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 8007d28:	2102      	movs	r1, #2
 8007d2a:	1d28      	adds	r0, r5, #4
 8007d2c:	f7ff fcec 	bl	8007708 <RCCEx_PLL2_Config>
 8007d30:	4604      	mov	r4, r0
      break;
 8007d32:	e7b2      	b.n	8007c9a <HAL_RCCEx_PeriphCLKConfig+0x3b2>
    switch(PeriphClkInit->FmcClockSelection)
 8007d34:	2601      	movs	r6, #1
 8007d36:	4634      	mov	r4, r6
 8007d38:	e7b8      	b.n	8007cac <HAL_RCCEx_PeriphCLKConfig+0x3c4>
 8007d3a:	4626      	mov	r6, r4
 8007d3c:	e7b6      	b.n	8007cac <HAL_RCCEx_PeriphCLKConfig+0x3c4>
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007d3e:	f7fc fd25 	bl	800478c <HAL_GetTick>
 8007d42:	eba0 0008 	sub.w	r0, r0, r8
 8007d46:	2864      	cmp	r0, #100	; 0x64
 8007d48:	d9bb      	bls.n	8007cc2 <HAL_RCCEx_PeriphCLKConfig+0x3da>
        ret = HAL_TIMEOUT;
 8007d4a:	2603      	movs	r6, #3
 8007d4c:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8007d4e:	682b      	ldr	r3, [r5, #0]
 8007d50:	07da      	lsls	r2, r3, #31
 8007d52:	d509      	bpl.n	8007d68 <HAL_RCCEx_PeriphCLKConfig+0x480>
    switch(PeriphClkInit->Usart16ClockSelection)
 8007d54:	f8d5 3080 	ldr.w	r3, [r5, #128]	; 0x80
 8007d58:	2b10      	cmp	r3, #16
 8007d5a:	d03d      	beq.n	8007dd8 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 8007d5c:	d826      	bhi.n	8007dac <HAL_RCCEx_PeriphCLKConfig+0x4c4>
 8007d5e:	b35b      	cbz	r3, 8007db8 <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 8007d60:	2b08      	cmp	r3, #8
 8007d62:	d033      	beq.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x4e4>
 8007d64:	2601      	movs	r6, #1
 8007d66:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 8007d68:	682b      	ldr	r3, [r5, #0]
 8007d6a:	079b      	lsls	r3, r3, #30
 8007d6c:	d549      	bpl.n	8007e02 <HAL_RCCEx_PeriphCLKConfig+0x51a>
    switch(PeriphClkInit->Usart234578ClockSelection)
 8007d6e:	6feb      	ldr	r3, [r5, #124]	; 0x7c
 8007d70:	2b05      	cmp	r3, #5
 8007d72:	d85c      	bhi.n	8007e2e <HAL_RCCEx_PeriphCLKConfig+0x546>
 8007d74:	e8df f003 	tbb	[pc, r3]
 8007d78:	3d55383d 	.word	0x3d55383d
 8007d7c:	3d3d      	.short	0x3d3d
        tickstart = HAL_GetTick();
 8007d7e:	f7fc fd05 	bl	800478c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007d82:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>
        tickstart = HAL_GetTick();
 8007d86:	4607      	mov	r7, r0
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007d88:	f241 3988 	movw	r9, #5000	; 0x1388
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8007d8c:	f8d8 3070 	ldr.w	r3, [r8, #112]	; 0x70
 8007d90:	0799      	lsls	r1, r3, #30
 8007d92:	d4b2      	bmi.n	8007cfa <HAL_RCCEx_PeriphCLKConfig+0x412>
          if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007d94:	f7fc fcfa 	bl	800478c <HAL_GetTick>
 8007d98:	1bc0      	subs	r0, r0, r7
 8007d9a:	4548      	cmp	r0, r9
 8007d9c:	d9f6      	bls.n	8007d8c <HAL_RCCEx_PeriphCLKConfig+0x4a4>
 8007d9e:	e7d4      	b.n	8007d4a <HAL_RCCEx_PeriphCLKConfig+0x462>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007da0:	690a      	ldr	r2, [r1, #16]
 8007da2:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8007da6:	e7b7      	b.n	8007d18 <HAL_RCCEx_PeriphCLKConfig+0x430>
 8007da8:	4626      	mov	r6, r4
 8007daa:	e7d0      	b.n	8007d4e <HAL_RCCEx_PeriphCLKConfig+0x466>
    switch(PeriphClkInit->Usart16ClockSelection)
 8007dac:	f023 0208 	bic.w	r2, r3, #8
 8007db0:	2a20      	cmp	r2, #32
 8007db2:	d001      	beq.n	8007db8 <HAL_RCCEx_PeriphCLKConfig+0x4d0>
 8007db4:	2b18      	cmp	r3, #24
 8007db6:	d1d5      	bne.n	8007d64 <HAL_RCCEx_PeriphCLKConfig+0x47c>
    if(ret == HAL_OK)
 8007db8:	b9a4      	cbnz	r4, 8007de4 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 8007dba:	4a1f      	ldr	r2, [pc, #124]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007dbc:	f8d5 1080 	ldr.w	r1, [r5, #128]	; 0x80
 8007dc0:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007dc2:	f023 0338 	bic.w	r3, r3, #56	; 0x38
 8007dc6:	430b      	orrs	r3, r1
 8007dc8:	6553      	str	r3, [r2, #84]	; 0x54
 8007dca:	e7cd      	b.n	8007d68 <HAL_RCCEx_PeriphCLKConfig+0x480>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8007dcc:	2101      	movs	r1, #1
 8007dce:	1d28      	adds	r0, r5, #4
 8007dd0:	f7ff fc9a 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007dd4:	4604      	mov	r4, r0
      break;
 8007dd6:	e7ef      	b.n	8007db8 <HAL_RCCEx_PeriphCLKConfig+0x4d0>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007dd8:	2101      	movs	r1, #1
 8007dda:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007dde:	f7ff fd0b 	bl	80077f8 <RCCEx_PLL3_Config>
 8007de2:	e7f7      	b.n	8007dd4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>
 8007de4:	4626      	mov	r6, r4
 8007de6:	e7bf      	b.n	8007d68 <HAL_RCCEx_PeriphCLKConfig+0x480>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8007de8:	2101      	movs	r1, #1
 8007dea:	1d28      	adds	r0, r5, #4
 8007dec:	f7ff fc8c 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007df0:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8007df2:	b9fc      	cbnz	r4, 8007e34 <HAL_RCCEx_PeriphCLKConfig+0x54c>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 8007df4:	4a10      	ldr	r2, [pc, #64]	; (8007e38 <HAL_RCCEx_PeriphCLKConfig+0x550>)
 8007df6:	6fe9      	ldr	r1, [r5, #124]	; 0x7c
 8007df8:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007dfa:	f023 0307 	bic.w	r3, r3, #7
 8007dfe:	430b      	orrs	r3, r1
 8007e00:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8007e02:	682b      	ldr	r3, [r5, #0]
 8007e04:	075f      	lsls	r7, r3, #29
 8007e06:	d52d      	bpl.n	8007e64 <HAL_RCCEx_PeriphCLKConfig+0x57c>
    switch(PeriphClkInit->Lpuart1ClockSelection)
 8007e08:	f8d5 3098 	ldr.w	r3, [r5, #152]	; 0x98
 8007e0c:	2b05      	cmp	r3, #5
 8007e0e:	f200 813f 	bhi.w	8008090 <HAL_RCCEx_PeriphCLKConfig+0x7a8>
 8007e12:	e8df f013 	tbh	[pc, r3, lsl #1]
 8007e16:	001c      	.short	0x001c
 8007e18:	01370017 	.word	0x01370017
 8007e1c:	001c001c 	.word	0x001c001c
 8007e20:	001c      	.short	0x001c
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007e22:	2101      	movs	r1, #1
 8007e24:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007e28:	f7ff fce6 	bl	80077f8 <RCCEx_PLL3_Config>
 8007e2c:	e7e0      	b.n	8007df0 <HAL_RCCEx_PeriphCLKConfig+0x508>
    switch(PeriphClkInit->Usart234578ClockSelection)
 8007e2e:	2601      	movs	r6, #1
 8007e30:	4634      	mov	r4, r6
 8007e32:	e7e6      	b.n	8007e02 <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8007e34:	4626      	mov	r6, r4
 8007e36:	e7e4      	b.n	8007e02 <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8007e38:	58024400 	.word	0x58024400
 8007e3c:	58024800 	.word	0x58024800
 8007e40:	00ffffcf 	.word	0x00ffffcf
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_Q_UPDATE);
 8007e44:	2101      	movs	r1, #1
 8007e46:	1d28      	adds	r0, r5, #4
 8007e48:	f7ff fc5e 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8007e4c:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8007e4e:	2c00      	cmp	r4, #0
 8007e50:	f040 8121 	bne.w	8008096 <HAL_RCCEx_PeriphCLKConfig+0x7ae>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8007e54:	4aab      	ldr	r2, [pc, #684]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 8007e56:	f8d5 1098 	ldr.w	r1, [r5, #152]	; 0x98
 8007e5a:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007e5c:	f023 0307 	bic.w	r3, r3, #7
 8007e60:	430b      	orrs	r3, r1
 8007e62:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8007e64:	682b      	ldr	r3, [r5, #0]
 8007e66:	0698      	lsls	r0, r3, #26
 8007e68:	d510      	bpl.n	8007e8c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch(PeriphClkInit->Lptim1ClockSelection)
 8007e6a:	f8d5 3094 	ldr.w	r3, [r5, #148]	; 0x94
 8007e6e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8007e72:	f000 812b 	beq.w	80080cc <HAL_RCCEx_PeriphCLKConfig+0x7e4>
 8007e76:	f200 8110 	bhi.w	800809a <HAL_RCCEx_PeriphCLKConfig+0x7b2>
 8007e7a:	2b00      	cmp	r3, #0
 8007e7c:	f000 8116 	beq.w	80080ac <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 8007e80:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8007e84:	f000 811c 	beq.w	80080c0 <HAL_RCCEx_PeriphCLKConfig+0x7d8>
 8007e88:	2601      	movs	r6, #1
 8007e8a:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 8007e8c:	682b      	ldr	r3, [r5, #0]
 8007e8e:	0659      	lsls	r1, r3, #25
 8007e90:	d510      	bpl.n	8007eb4 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    switch(PeriphClkInit->Lptim2ClockSelection)
 8007e92:	f8d5 30a0 	ldr.w	r3, [r5, #160]	; 0xa0
 8007e96:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8007e9a:	f000 813b 	beq.w	8008114 <HAL_RCCEx_PeriphCLKConfig+0x82c>
 8007e9e:	f200 811d 	bhi.w	80080dc <HAL_RCCEx_PeriphCLKConfig+0x7f4>
 8007ea2:	2b00      	cmp	r3, #0
 8007ea4:	f000 8123 	beq.w	80080ee <HAL_RCCEx_PeriphCLKConfig+0x806>
 8007ea8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007eac:	f000 812c 	beq.w	8008108 <HAL_RCCEx_PeriphCLKConfig+0x820>
 8007eb0:	2601      	movs	r6, #1
 8007eb2:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 8007eb4:	682b      	ldr	r3, [r5, #0]
 8007eb6:	061a      	lsls	r2, r3, #24
 8007eb8:	d510      	bpl.n	8007edc <HAL_RCCEx_PeriphCLKConfig+0x5f4>
    switch(PeriphClkInit->Lptim345ClockSelection)
 8007eba:	f8d5 30a4 	ldr.w	r3, [r5, #164]	; 0xa4
 8007ebe:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8007ec2:	f000 8148 	beq.w	8008156 <HAL_RCCEx_PeriphCLKConfig+0x86e>
 8007ec6:	f200 812d 	bhi.w	8008124 <HAL_RCCEx_PeriphCLKConfig+0x83c>
 8007eca:	2b00      	cmp	r3, #0
 8007ecc:	f000 8133 	beq.w	8008136 <HAL_RCCEx_PeriphCLKConfig+0x84e>
 8007ed0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007ed4:	f000 8139 	beq.w	800814a <HAL_RCCEx_PeriphCLKConfig+0x862>
 8007ed8:	2601      	movs	r6, #1
 8007eda:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
 8007edc:	682b      	ldr	r3, [r5, #0]
 8007ede:	071b      	lsls	r3, r3, #28
 8007ee0:	d514      	bpl.n	8007f0c <HAL_RCCEx_PeriphCLKConfig+0x624>
    if ((PeriphClkInit->I2c123ClockSelection )== RCC_I2C123CLKSOURCE_PLL3 )
 8007ee2:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
 8007ee6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007eea:	d107      	bne.n	8007efc <HAL_RCCEx_PeriphCLKConfig+0x614>
        if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
 8007eec:	2102      	movs	r1, #2
 8007eee:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007ef2:	f7ff fc81 	bl	80077f8 <RCCEx_PLL3_Config>
          status = HAL_ERROR;
 8007ef6:	2800      	cmp	r0, #0
 8007ef8:	bf18      	it	ne
 8007efa:	2601      	movne	r6, #1
      __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
 8007efc:	4a81      	ldr	r2, [pc, #516]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 8007efe:	f8d5 1088 	ldr.w	r1, [r5, #136]	; 0x88
 8007f02:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007f04:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8007f08:	430b      	orrs	r3, r1
 8007f0a:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8007f0c:	682b      	ldr	r3, [r5, #0]
 8007f0e:	06df      	lsls	r7, r3, #27
 8007f10:	d514      	bpl.n	8007f3c <HAL_RCCEx_PeriphCLKConfig+0x654>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3 )
 8007f12:	f8d5 309c 	ldr.w	r3, [r5, #156]	; 0x9c
 8007f16:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8007f1a:	d107      	bne.n	8007f2c <HAL_RCCEx_PeriphCLKConfig+0x644>
      if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!= HAL_OK)
 8007f1c:	2102      	movs	r1, #2
 8007f1e:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007f22:	f7ff fc69 	bl	80077f8 <RCCEx_PLL3_Config>
        status = HAL_ERROR;
 8007f26:	2800      	cmp	r0, #0
 8007f28:	bf18      	it	ne
 8007f2a:	2601      	movne	r6, #1
      __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8007f2c:	4a75      	ldr	r2, [pc, #468]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 8007f2e:	f8d5 109c 	ldr.w	r1, [r5, #156]	; 0x9c
 8007f32:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007f34:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007f38:	430b      	orrs	r3, r1
 8007f3a:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 8007f3c:	682b      	ldr	r3, [r5, #0]
 8007f3e:	0318      	lsls	r0, r3, #12
 8007f40:	d51a      	bpl.n	8007f78 <HAL_RCCEx_PeriphCLKConfig+0x690>
    switch(PeriphClkInit->AdcClockSelection)
 8007f42:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
 8007f46:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8007f4a:	f000 810c 	beq.w	8008166 <HAL_RCCEx_PeriphCLKConfig+0x87e>
 8007f4e:	f5b1 3f00 	cmp.w	r1, #131072	; 0x20000
 8007f52:	d006      	beq.n	8007f62 <HAL_RCCEx_PeriphCLKConfig+0x67a>
 8007f54:	2900      	cmp	r1, #0
 8007f56:	f040 810c 	bne.w	8008172 <HAL_RCCEx_PeriphCLKConfig+0x88a>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8007f5a:	1d28      	adds	r0, r5, #4
 8007f5c:	f7ff fbd4 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8007f60:	4604      	mov	r4, r0
    if(ret == HAL_OK)
 8007f62:	2c00      	cmp	r4, #0
 8007f64:	f040 8108 	bne.w	8008178 <HAL_RCCEx_PeriphCLKConfig+0x890>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8007f68:	4a66      	ldr	r2, [pc, #408]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 8007f6a:	f8d5 10a8 	ldr.w	r1, [r5, #168]	; 0xa8
 8007f6e:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8007f70:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007f74:	430b      	orrs	r3, r1
 8007f76:	6593      	str	r3, [r2, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8007f78:	682b      	ldr	r3, [r5, #0]
 8007f7a:	0359      	lsls	r1, r3, #13
 8007f7c:	d51c      	bpl.n	8007fb8 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    switch(PeriphClkInit->UsbClockSelection)
 8007f7e:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007f82:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8007f86:	f000 80f9 	beq.w	800817c <HAL_RCCEx_PeriphCLKConfig+0x894>
 8007f8a:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8007f8e:	d008      	beq.n	8007fa2 <HAL_RCCEx_PeriphCLKConfig+0x6ba>
 8007f90:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8007f94:	f040 80f9 	bne.w	800818a <HAL_RCCEx_PeriphCLKConfig+0x8a2>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007f98:	4a5a      	ldr	r2, [pc, #360]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 8007f9a:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8007f9c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8007fa0:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 8007fa2:	2c00      	cmp	r4, #0
 8007fa4:	f040 80f4 	bne.w	8008190 <HAL_RCCEx_PeriphCLKConfig+0x8a8>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 8007fa8:	4a56      	ldr	r2, [pc, #344]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 8007faa:	f8d5 108c 	ldr.w	r1, [r5, #140]	; 0x8c
 8007fae:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8007fb0:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8007fb4:	430b      	orrs	r3, r1
 8007fb6:	6553      	str	r3, [r2, #84]	; 0x54
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 8007fb8:	682b      	ldr	r3, [r5, #0]
 8007fba:	03da      	lsls	r2, r3, #15
 8007fbc:	d509      	bpl.n	8007fd2 <HAL_RCCEx_PeriphCLKConfig+0x6ea>
    switch(PeriphClkInit->SdmmcClockSelection)
 8007fbe:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8007fc0:	2b00      	cmp	r3, #0
 8007fc2:	f000 80e7 	beq.w	8008194 <HAL_RCCEx_PeriphCLKConfig+0x8ac>
 8007fc6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007fca:	f000 80f1 	beq.w	80081b0 <HAL_RCCEx_PeriphCLKConfig+0x8c8>
 8007fce:	2601      	movs	r6, #1
 8007fd0:	4634      	mov	r4, r6
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007fd2:	682b      	ldr	r3, [r5, #0]
 8007fd4:	009b      	lsls	r3, r3, #2
 8007fd6:	d507      	bpl.n	8007fe8 <HAL_RCCEx_PeriphCLKConfig+0x700>
    if(RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE)!=HAL_OK)
 8007fd8:	2102      	movs	r1, #2
 8007fda:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8007fde:	f7ff fc0b 	bl	80077f8 <RCCEx_PLL3_Config>
      status=HAL_ERROR;
 8007fe2:	2800      	cmp	r0, #0
 8007fe4:	bf18      	it	ne
 8007fe6:	2601      	movne	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 8007fe8:	682b      	ldr	r3, [r5, #0]
 8007fea:	039f      	lsls	r7, r3, #14
 8007fec:	d50b      	bpl.n	8008006 <HAL_RCCEx_PeriphCLKConfig+0x71e>
    switch(PeriphClkInit->RngClockSelection)
 8007fee:	f8d5 1084 	ldr.w	r1, [r5, #132]	; 0x84
 8007ff2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8007ff6:	f000 80f1 	beq.w	80081dc <HAL_RCCEx_PeriphCLKConfig+0x8f4>
 8007ffa:	f200 80e1 	bhi.w	80081c0 <HAL_RCCEx_PeriphCLKConfig+0x8d8>
 8007ffe:	2900      	cmp	r1, #0
 8008000:	f000 80e4 	beq.w	80081cc <HAL_RCCEx_PeriphCLKConfig+0x8e4>
 8008004:	2601      	movs	r6, #1
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8008006:	02dc      	lsls	r4, r3, #11
 8008008:	d506      	bpl.n	8008018 <HAL_RCCEx_PeriphCLKConfig+0x730>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 800800a:	493e      	ldr	r1, [pc, #248]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 800800c:	6fa8      	ldr	r0, [r5, #120]	; 0x78
 800800e:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008010:	f022 4200 	bic.w	r2, r2, #2147483648	; 0x80000000
 8008014:	4302      	orrs	r2, r0
 8008016:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8008018:	0298      	lsls	r0, r3, #10
 800801a:	d506      	bpl.n	800802a <HAL_RCCEx_PeriphCLKConfig+0x742>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 800801c:	4939      	ldr	r1, [pc, #228]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 800801e:	6ee8      	ldr	r0, [r5, #108]	; 0x6c
 8008020:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8008022:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8008026:	4302      	orrs	r2, r0
 8008028:	650a      	str	r2, [r1, #80]	; 0x50
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM2) == RCC_PERIPHCLK_DFSDM2)
 800802a:	0519      	lsls	r1, r3, #20
 800802c:	d506      	bpl.n	800803c <HAL_RCCEx_PeriphCLKConfig+0x754>
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
 800802e:	4935      	ldr	r1, [pc, #212]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 8008030:	6f28      	ldr	r0, [r5, #112]	; 0x70
 8008032:	6d8a      	ldr	r2, [r1, #88]	; 0x58
 8008034:	f022 6200 	bic.w	r2, r2, #134217728	; 0x8000000
 8008038:	4302      	orrs	r2, r0
 800803a:	658a      	str	r2, [r1, #88]	; 0x58
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 800803c:	005a      	lsls	r2, r3, #1
 800803e:	d509      	bpl.n	8008054 <HAL_RCCEx_PeriphCLKConfig+0x76c>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8008040:	4a30      	ldr	r2, [pc, #192]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 8008042:	6911      	ldr	r1, [r2, #16]
 8008044:	f421 4100 	bic.w	r1, r1, #32768	; 0x8000
 8008048:	6111      	str	r1, [r2, #16]
 800804a:	6911      	ldr	r1, [r2, #16]
 800804c:	f8d5 00b4 	ldr.w	r0, [r5, #180]	; 0xb4
 8008050:	4301      	orrs	r1, r0
 8008052:	6111      	str	r1, [r2, #16]
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8008054:	2b00      	cmp	r3, #0
 8008056:	da06      	bge.n	8008066 <HAL_RCCEx_PeriphCLKConfig+0x77e>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8008058:	492a      	ldr	r1, [pc, #168]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 800805a:	6d28      	ldr	r0, [r5, #80]	; 0x50
 800805c:	6cca      	ldr	r2, [r1, #76]	; 0x4c
 800805e:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8008062:	4302      	orrs	r2, r0
 8008064:	64ca      	str	r2, [r1, #76]	; 0x4c
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8008066:	021b      	lsls	r3, r3, #8
 8008068:	d507      	bpl.n	800807a <HAL_RCCEx_PeriphCLKConfig+0x792>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 800806a:	4a26      	ldr	r2, [pc, #152]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 800806c:	f8d5 1090 	ldr.w	r1, [r5, #144]	; 0x90
 8008070:	6d53      	ldr	r3, [r2, #84]	; 0x54
 8008072:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8008076:	430b      	orrs	r3, r1
 8008078:	6553      	str	r3, [r2, #84]	; 0x54
}
 800807a:	1e30      	subs	r0, r6, #0
 800807c:	bf18      	it	ne
 800807e:	2001      	movne	r0, #1
 8008080:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 8008084:	2101      	movs	r1, #1
 8008086:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800808a:	f7ff fbb5 	bl	80077f8 <RCCEx_PLL3_Config>
 800808e:	e6dd      	b.n	8007e4c <HAL_RCCEx_PeriphCLKConfig+0x564>
    switch(PeriphClkInit->Lpuart1ClockSelection)
 8008090:	2601      	movs	r6, #1
 8008092:	4634      	mov	r4, r6
 8008094:	e6e6      	b.n	8007e64 <HAL_RCCEx_PeriphCLKConfig+0x57c>
 8008096:	4626      	mov	r6, r4
 8008098:	e6e4      	b.n	8007e64 <HAL_RCCEx_PeriphCLKConfig+0x57c>
    switch(PeriphClkInit->Lptim1ClockSelection)
 800809a:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 800809e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 80080a2:	d003      	beq.n	80080ac <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 80080a4:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 80080a8:	f47f aeee 	bne.w	8007e88 <HAL_RCCEx_PeriphCLKConfig+0x5a0>
    if(ret == HAL_OK)
 80080ac:	b9a4      	cbnz	r4, 80080d8 <HAL_RCCEx_PeriphCLKConfig+0x7f0>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 80080ae:	4a15      	ldr	r2, [pc, #84]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 80080b0:	f8d5 1094 	ldr.w	r1, [r5, #148]	; 0x94
 80080b4:	6d53      	ldr	r3, [r2, #84]	; 0x54
 80080b6:	f023 43e0 	bic.w	r3, r3, #1879048192	; 0x70000000
 80080ba:	430b      	orrs	r3, r1
 80080bc:	6553      	str	r3, [r2, #84]	; 0x54
 80080be:	e6e5      	b.n	8007e8c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 80080c0:	2100      	movs	r1, #0
 80080c2:	1d28      	adds	r0, r5, #4
 80080c4:	f7ff fb20 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80080c8:	4604      	mov	r4, r0
      break;
 80080ca:	e7ef      	b.n	80080ac <HAL_RCCEx_PeriphCLKConfig+0x7c4>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 80080cc:	2102      	movs	r1, #2
 80080ce:	f105 0024 	add.w	r0, r5, #36	; 0x24
 80080d2:	f7ff fb91 	bl	80077f8 <RCCEx_PLL3_Config>
 80080d6:	e7f7      	b.n	80080c8 <HAL_RCCEx_PeriphCLKConfig+0x7e0>
 80080d8:	4626      	mov	r6, r4
 80080da:	e6d7      	b.n	8007e8c <HAL_RCCEx_PeriphCLKConfig+0x5a4>
    switch(PeriphClkInit->Lptim2ClockSelection)
 80080dc:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 80080e0:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 80080e4:	d003      	beq.n	80080ee <HAL_RCCEx_PeriphCLKConfig+0x806>
 80080e6:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80080ea:	f47f aee1 	bne.w	8007eb0 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
    if(ret == HAL_OK)
 80080ee:	b9bc      	cbnz	r4, 8008120 <HAL_RCCEx_PeriphCLKConfig+0x838>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 80080f0:	4a04      	ldr	r2, [pc, #16]	; (8008104 <HAL_RCCEx_PeriphCLKConfig+0x81c>)
 80080f2:	f8d5 10a0 	ldr.w	r1, [r5, #160]	; 0xa0
 80080f6:	6d93      	ldr	r3, [r2, #88]	; 0x58
 80080f8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80080fc:	430b      	orrs	r3, r1
 80080fe:	6593      	str	r3, [r2, #88]	; 0x58
 8008100:	e6d8      	b.n	8007eb4 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8008102:	bf00      	nop
 8008104:	58024400 	.word	0x58024400
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 8008108:	2100      	movs	r1, #0
 800810a:	1d28      	adds	r0, r5, #4
 800810c:	f7ff fafc 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008110:	4604      	mov	r4, r0
      break;
 8008112:	e7ec      	b.n	80080ee <HAL_RCCEx_PeriphCLKConfig+0x806>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008114:	2102      	movs	r1, #2
 8008116:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800811a:	f7ff fb6d 	bl	80077f8 <RCCEx_PLL3_Config>
 800811e:	e7f7      	b.n	8008110 <HAL_RCCEx_PeriphCLKConfig+0x828>
 8008120:	4626      	mov	r6, r4
 8008122:	e6c7      	b.n	8007eb4 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    switch(PeriphClkInit->Lptim345ClockSelection)
 8008124:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8008128:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800812c:	d003      	beq.n	8008136 <HAL_RCCEx_PeriphCLKConfig+0x84e>
 800812e:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8008132:	f47f aed1 	bne.w	8007ed8 <HAL_RCCEx_PeriphCLKConfig+0x5f0>
    if(ret == HAL_OK)
 8008136:	b9a4      	cbnz	r4, 8008162 <HAL_RCCEx_PeriphCLKConfig+0x87a>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 8008138:	4a2c      	ldr	r2, [pc, #176]	; (80081ec <HAL_RCCEx_PeriphCLKConfig+0x904>)
 800813a:	f8d5 10a4 	ldr.w	r1, [r5, #164]	; 0xa4
 800813e:	6d93      	ldr	r3, [r2, #88]	; 0x58
 8008140:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8008144:	430b      	orrs	r3, r1
 8008146:	6593      	str	r3, [r2, #88]	; 0x58
 8008148:	e6c8      	b.n	8007edc <HAL_RCCEx_PeriphCLKConfig+0x5f4>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_P_UPDATE);
 800814a:	2100      	movs	r1, #0
 800814c:	1d28      	adds	r0, r5, #4
 800814e:	f7ff fadb 	bl	8007708 <RCCEx_PLL2_Config>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008152:	4604      	mov	r4, r0
      break;
 8008154:	e7ef      	b.n	8008136 <HAL_RCCEx_PeriphCLKConfig+0x84e>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008156:	2102      	movs	r1, #2
 8008158:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800815c:	f7ff fb4c 	bl	80077f8 <RCCEx_PLL3_Config>
 8008160:	e7f7      	b.n	8008152 <HAL_RCCEx_PeriphCLKConfig+0x86a>
 8008162:	4626      	mov	r6, r4
 8008164:	e6ba      	b.n	8007edc <HAL_RCCEx_PeriphCLKConfig+0x5f4>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_R_UPDATE);
 8008166:	2102      	movs	r1, #2
 8008168:	f105 0024 	add.w	r0, r5, #36	; 0x24
 800816c:	f7ff fb44 	bl	80077f8 <RCCEx_PLL3_Config>
 8008170:	e6f6      	b.n	8007f60 <HAL_RCCEx_PeriphCLKConfig+0x678>
    switch(PeriphClkInit->AdcClockSelection)
 8008172:	2601      	movs	r6, #1
 8008174:	4634      	mov	r4, r6
 8008176:	e6ff      	b.n	8007f78 <HAL_RCCEx_PeriphCLKConfig+0x690>
 8008178:	4626      	mov	r6, r4
 800817a:	e6fd      	b.n	8007f78 <HAL_RCCEx_PeriphCLKConfig+0x690>
      ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3),DIVIDER_Q_UPDATE);
 800817c:	2101      	movs	r1, #1
 800817e:	f105 0024 	add.w	r0, r5, #36	; 0x24
 8008182:	f7ff fb39 	bl	80077f8 <RCCEx_PLL3_Config>
 8008186:	4604      	mov	r4, r0
      break;
 8008188:	e70b      	b.n	8007fa2 <HAL_RCCEx_PeriphCLKConfig+0x6ba>
    switch(PeriphClkInit->UsbClockSelection)
 800818a:	2601      	movs	r6, #1
 800818c:	4634      	mov	r4, r6
 800818e:	e713      	b.n	8007fb8 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
 8008190:	4626      	mov	r6, r4
 8008192:	e711      	b.n	8007fb8 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008194:	4a15      	ldr	r2, [pc, #84]	; (80081ec <HAL_RCCEx_PeriphCLKConfig+0x904>)
 8008196:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8008198:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800819c:	62d3      	str	r3, [r2, #44]	; 0x2c
    if(ret == HAL_OK)
 800819e:	b96c      	cbnz	r4, 80081bc <HAL_RCCEx_PeriphCLKConfig+0x8d4>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 80081a0:	4a12      	ldr	r2, [pc, #72]	; (80081ec <HAL_RCCEx_PeriphCLKConfig+0x904>)
 80081a2:	6ce9      	ldr	r1, [r5, #76]	; 0x4c
 80081a4:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80081a6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80081aa:	430b      	orrs	r3, r1
 80081ac:	64d3      	str	r3, [r2, #76]	; 0x4c
 80081ae:	e710      	b.n	8007fd2 <HAL_RCCEx_PeriphCLKConfig+0x6ea>
      ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2),DIVIDER_R_UPDATE);
 80081b0:	2102      	movs	r1, #2
 80081b2:	1d28      	adds	r0, r5, #4
 80081b4:	f7ff faa8 	bl	8007708 <RCCEx_PLL2_Config>
 80081b8:	4604      	mov	r4, r0
      break;
 80081ba:	e7f0      	b.n	800819e <HAL_RCCEx_PeriphCLKConfig+0x8b6>
 80081bc:	4626      	mov	r6, r4
 80081be:	e708      	b.n	8007fd2 <HAL_RCCEx_PeriphCLKConfig+0x6ea>
    switch(PeriphClkInit->RngClockSelection)
 80081c0:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 80081c4:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 80081c8:	f47f af1c 	bne.w	8008004 <HAL_RCCEx_PeriphCLKConfig+0x71c>
    if(ret == HAL_OK)
 80081cc:	b964      	cbnz	r4, 80081e8 <HAL_RCCEx_PeriphCLKConfig+0x900>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 80081ce:	4807      	ldr	r0, [pc, #28]	; (80081ec <HAL_RCCEx_PeriphCLKConfig+0x904>)
 80081d0:	6d42      	ldr	r2, [r0, #84]	; 0x54
 80081d2:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80081d6:	430a      	orrs	r2, r1
 80081d8:	6542      	str	r2, [r0, #84]	; 0x54
 80081da:	e714      	b.n	8008006 <HAL_RCCEx_PeriphCLKConfig+0x71e>
      __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80081dc:	4803      	ldr	r0, [pc, #12]	; (80081ec <HAL_RCCEx_PeriphCLKConfig+0x904>)
 80081de:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80081e0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80081e4:	62c2      	str	r2, [r0, #44]	; 0x2c
      break;
 80081e6:	e7f1      	b.n	80081cc <HAL_RCCEx_PeriphCLKConfig+0x8e4>
 80081e8:	4626      	mov	r6, r4
 80081ea:	e70c      	b.n	8008006 <HAL_RCCEx_PeriphCLKConfig+0x71e>
 80081ec:	58024400 	.word	0x58024400

080081f0 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 80081f0:	b538      	push	{r3, r4, r5, lr}
 80081f2:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 80081f4:	4604      	mov	r4, r0
 80081f6:	b1f0      	cbz	r0, 8008236 <HAL_SDRAM_Init+0x46>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 80081f8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80081fc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008200:	b91b      	cbnz	r3, 800820a <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8008202:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8008206:	f7f8 fdf1 	bl	8000dec <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800820a:	2302      	movs	r3, #2

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800820c:	1d21      	adds	r1, r4, #4
 800820e:	6820      	ldr	r0, [r4, #0]
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008210:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8008214:	f000 f9e5 	bl	80085e2 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8008218:	6862      	ldr	r2, [r4, #4]
 800821a:	4629      	mov	r1, r5
 800821c:	6820      	ldr	r0, [r4, #0]
 800821e:	f000 fa18 	bl	8008652 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
 8008222:	4a06      	ldr	r2, [pc, #24]	; (800823c <HAL_SDRAM_Init+0x4c>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;

  return HAL_OK;
 8008224:	2000      	movs	r0, #0
  __FMC_ENABLE();
 8008226:	6813      	ldr	r3, [r2, #0]
 8008228:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800822c:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
 800822e:	2301      	movs	r3, #1
 8008230:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
}
 8008234:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008236:	2001      	movs	r0, #1
 8008238:	e7fc      	b.n	8008234 <HAL_SDRAM_Init+0x44>
 800823a:	bf00      	nop
 800823c:	52004000 	.word	0x52004000

08008240 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8008240:	b510      	push	{r4, lr}
 8008242:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8008244:	f7f8 fe5e 	bl	8000f04 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8008248:	e9d4 0100 	ldrd	r0, r1, [r4]
 800824c:	f000 fa37 	bl	80086be <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8008250:	2000      	movs	r0, #0
 8008252:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8008256:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800825a:	bd10      	pop	{r4, pc}

0800825c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800825c:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800825e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 8008262:	4605      	mov	r5, r0
 8008264:	460e      	mov	r6, r1

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8008266:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8008268:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800826a:	d010      	beq.n	800828e <HAL_SDRAM_SendCommand+0x32>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800826c:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8008270:	2c01      	cmp	r4, #1
 8008272:	d110      	bne.n	8008296 <HAL_SDRAM_SendCommand+0x3a>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008274:	2302      	movs	r3, #2

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8008276:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008278:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800827c:	f000 fa2e 	bl	80086dc <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008280:	6833      	ldr	r3, [r6, #0]
 8008282:	2b02      	cmp	r3, #2
 8008284:	d104      	bne.n	8008290 <HAL_SDRAM_SendCommand+0x34>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8008286:	2305      	movs	r3, #5
 8008288:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800828c:	2000      	movs	r0, #0
}
 800828e:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_READY;
 8008290:	f885 402c 	strb.w	r4, [r5, #44]	; 0x2c
 8008294:	e7fa      	b.n	800828c <HAL_SDRAM_SendCommand+0x30>
    return HAL_ERROR;
 8008296:	2001      	movs	r0, #1
 8008298:	e7f9      	b.n	800828e <HAL_SDRAM_SendCommand+0x32>

0800829a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800829a:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800829c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
{
 80082a0:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80082a2:	2b02      	cmp	r3, #2
 80082a4:	b2d8      	uxtb	r0, r3
 80082a6:	d00d      	beq.n	80082c4 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 80082a8:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80082ac:	2b01      	cmp	r3, #1
 80082ae:	b2dd      	uxtb	r5, r3
 80082b0:	d109      	bne.n	80082c6 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80082b2:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80082b4:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80082b6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 80082ba:	f000 fa21 	bl	8008700 <FMC_SDRAM_ProgramRefreshRate>
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 80082be:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
 80082c0:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
}
 80082c4:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80082c6:	2001      	movs	r0, #1
 80082c8:	e7fc      	b.n	80082c4 <HAL_SDRAM_ProgramRefreshRate+0x2a>

080082ca <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80082ca:	4770      	bx	lr

080082cc <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80082cc:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80082d0:	2b01      	cmp	r3, #1
 80082d2:	d133      	bne.n	800833c <HAL_TIM_Base_Start_IT+0x70>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80082d4:	2302      	movs	r3, #2
 80082d6:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80082da:	6803      	ldr	r3, [r0, #0]
 80082dc:	68da      	ldr	r2, [r3, #12]
 80082de:	f042 0201 	orr.w	r2, r2, #1
 80082e2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80082e4:	4a16      	ldr	r2, [pc, #88]	; (8008340 <HAL_TIM_Base_Start_IT+0x74>)
 80082e6:	4293      	cmp	r3, r2
 80082e8:	d01a      	beq.n	8008320 <HAL_TIM_Base_Start_IT+0x54>
 80082ea:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80082ee:	d017      	beq.n	8008320 <HAL_TIM_Base_Start_IT+0x54>
 80082f0:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80082f4:	4293      	cmp	r3, r2
 80082f6:	d013      	beq.n	8008320 <HAL_TIM_Base_Start_IT+0x54>
 80082f8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80082fc:	4293      	cmp	r3, r2
 80082fe:	d00f      	beq.n	8008320 <HAL_TIM_Base_Start_IT+0x54>
 8008300:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008304:	4293      	cmp	r3, r2
 8008306:	d00b      	beq.n	8008320 <HAL_TIM_Base_Start_IT+0x54>
 8008308:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800830c:	4293      	cmp	r3, r2
 800830e:	d007      	beq.n	8008320 <HAL_TIM_Base_Start_IT+0x54>
 8008310:	f5a2 426c 	sub.w	r2, r2, #60416	; 0xec00
 8008314:	4293      	cmp	r3, r2
 8008316:	d003      	beq.n	8008320 <HAL_TIM_Base_Start_IT+0x54>
 8008318:	f502 3294 	add.w	r2, r2, #75776	; 0x12800
 800831c:	4293      	cmp	r3, r2
 800831e:	d107      	bne.n	8008330 <HAL_TIM_Base_Start_IT+0x64>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008320:	6899      	ldr	r1, [r3, #8]
 8008322:	4a08      	ldr	r2, [pc, #32]	; (8008344 <HAL_TIM_Base_Start_IT+0x78>)
 8008324:	400a      	ands	r2, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008326:	2a06      	cmp	r2, #6
 8008328:	d006      	beq.n	8008338 <HAL_TIM_Base_Start_IT+0x6c>
 800832a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800832e:	d003      	beq.n	8008338 <HAL_TIM_Base_Start_IT+0x6c>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8008330:	681a      	ldr	r2, [r3, #0]
 8008332:	f042 0201 	orr.w	r2, r2, #1
 8008336:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8008338:	2000      	movs	r0, #0
}
 800833a:	4770      	bx	lr
    return HAL_ERROR;
 800833c:	2001      	movs	r0, #1
 800833e:	4770      	bx	lr
 8008340:	40010000 	.word	0x40010000
 8008344:	00010007 	.word	0x00010007

08008348 <HAL_TIM_OC_DelayElapsedCallback>:
 8008348:	4770      	bx	lr

0800834a <HAL_TIM_IC_CaptureCallback>:
 800834a:	4770      	bx	lr

0800834c <HAL_TIM_PWM_PulseFinishedCallback>:
 800834c:	4770      	bx	lr

0800834e <HAL_TIM_TriggerCallback>:
 800834e:	4770      	bx	lr

08008350 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008350:	6803      	ldr	r3, [r0, #0]
 8008352:	691a      	ldr	r2, [r3, #16]
 8008354:	0791      	lsls	r1, r2, #30
{
 8008356:	b510      	push	{r4, lr}
 8008358:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800835a:	d50f      	bpl.n	800837c <HAL_TIM_IRQHandler+0x2c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800835c:	68da      	ldr	r2, [r3, #12]
 800835e:	0792      	lsls	r2, r2, #30
 8008360:	d50c      	bpl.n	800837c <HAL_TIM_IRQHandler+0x2c>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8008362:	f06f 0202 	mvn.w	r2, #2
 8008366:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008368:	2201      	movs	r2, #1
 800836a:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800836c:	699b      	ldr	r3, [r3, #24]
 800836e:	0799      	lsls	r1, r3, #30
 8008370:	f000 8085 	beq.w	800847e <HAL_TIM_IRQHandler+0x12e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8008374:	f7ff ffe9 	bl	800834a <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008378:	2300      	movs	r3, #0
 800837a:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800837c:	6823      	ldr	r3, [r4, #0]
 800837e:	691a      	ldr	r2, [r3, #16]
 8008380:	0752      	lsls	r2, r2, #29
 8008382:	d510      	bpl.n	80083a6 <HAL_TIM_IRQHandler+0x56>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8008384:	68da      	ldr	r2, [r3, #12]
 8008386:	0750      	lsls	r0, r2, #29
 8008388:	d50d      	bpl.n	80083a6 <HAL_TIM_IRQHandler+0x56>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800838a:	f06f 0204 	mvn.w	r2, #4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800838e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8008390:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8008392:	2202      	movs	r2, #2
 8008394:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8008396:	699b      	ldr	r3, [r3, #24]
 8008398:	f413 7f40 	tst.w	r3, #768	; 0x300
 800839c:	d075      	beq.n	800848a <HAL_TIM_IRQHandler+0x13a>
        HAL_TIM_IC_CaptureCallback(htim);
 800839e:	f7ff ffd4 	bl	800834a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80083a2:	2300      	movs	r3, #0
 80083a4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80083a6:	6823      	ldr	r3, [r4, #0]
 80083a8:	691a      	ldr	r2, [r3, #16]
 80083aa:	0711      	lsls	r1, r2, #28
 80083ac:	d50f      	bpl.n	80083ce <HAL_TIM_IRQHandler+0x7e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80083ae:	68da      	ldr	r2, [r3, #12]
 80083b0:	0712      	lsls	r2, r2, #28
 80083b2:	d50c      	bpl.n	80083ce <HAL_TIM_IRQHandler+0x7e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80083b4:	f06f 0208 	mvn.w	r2, #8
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80083b8:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80083ba:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80083bc:	2204      	movs	r2, #4
 80083be:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80083c0:	69db      	ldr	r3, [r3, #28]
 80083c2:	079b      	lsls	r3, r3, #30
 80083c4:	d067      	beq.n	8008496 <HAL_TIM_IRQHandler+0x146>
        HAL_TIM_IC_CaptureCallback(htim);
 80083c6:	f7ff ffc0 	bl	800834a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80083ca:	2300      	movs	r3, #0
 80083cc:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80083ce:	6823      	ldr	r3, [r4, #0]
 80083d0:	691a      	ldr	r2, [r3, #16]
 80083d2:	06d0      	lsls	r0, r2, #27
 80083d4:	d510      	bpl.n	80083f8 <HAL_TIM_IRQHandler+0xa8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80083d6:	68da      	ldr	r2, [r3, #12]
 80083d8:	06d1      	lsls	r1, r2, #27
 80083da:	d50d      	bpl.n	80083f8 <HAL_TIM_IRQHandler+0xa8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80083dc:	f06f 0210 	mvn.w	r2, #16
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80083e0:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80083e2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80083e4:	2208      	movs	r2, #8
 80083e6:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80083e8:	69db      	ldr	r3, [r3, #28]
 80083ea:	f413 7f40 	tst.w	r3, #768	; 0x300
 80083ee:	d058      	beq.n	80084a2 <HAL_TIM_IRQHandler+0x152>
        HAL_TIM_IC_CaptureCallback(htim);
 80083f0:	f7ff ffab 	bl	800834a <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80083f4:	2300      	movs	r3, #0
 80083f6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80083f8:	6823      	ldr	r3, [r4, #0]
 80083fa:	691a      	ldr	r2, [r3, #16]
 80083fc:	07d2      	lsls	r2, r2, #31
 80083fe:	d508      	bpl.n	8008412 <HAL_TIM_IRQHandler+0xc2>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008400:	68da      	ldr	r2, [r3, #12]
 8008402:	07d0      	lsls	r0, r2, #31
 8008404:	d505      	bpl.n	8008412 <HAL_TIM_IRQHandler+0xc2>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008406:	f06f 0201 	mvn.w	r2, #1
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800840a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800840c:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 800840e:	f7f8 fac5 	bl	800099c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008412:	6823      	ldr	r3, [r4, #0]
 8008414:	691a      	ldr	r2, [r3, #16]
 8008416:	0611      	lsls	r1, r2, #24
 8008418:	d508      	bpl.n	800842c <HAL_TIM_IRQHandler+0xdc>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800841a:	68da      	ldr	r2, [r3, #12]
 800841c:	0612      	lsls	r2, r2, #24
 800841e:	d505      	bpl.n	800842c <HAL_TIM_IRQHandler+0xdc>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008420:	f06f 0280 	mvn.w	r2, #128	; 0x80
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008424:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008426:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8008428:	f000 f8d9 	bl	80085de <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK2) != RESET)
 800842c:	6823      	ldr	r3, [r4, #0]
 800842e:	691a      	ldr	r2, [r3, #16]
 8008430:	05d0      	lsls	r0, r2, #23
 8008432:	d508      	bpl.n	8008446 <HAL_TIM_IRQHandler+0xf6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008434:	68da      	ldr	r2, [r3, #12]
 8008436:	0611      	lsls	r1, r2, #24
 8008438:	d505      	bpl.n	8008446 <HAL_TIM_IRQHandler+0xf6>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800843a:	f46f 7280 	mvn.w	r2, #256	; 0x100
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
#else
      HAL_TIMEx_Break2Callback(htim);
 800843e:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8008440:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
 8008442:	f000 f8cd 	bl	80085e0 <HAL_TIMEx_Break2Callback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008446:	6823      	ldr	r3, [r4, #0]
 8008448:	691a      	ldr	r2, [r3, #16]
 800844a:	0652      	lsls	r2, r2, #25
 800844c:	d508      	bpl.n	8008460 <HAL_TIM_IRQHandler+0x110>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800844e:	68da      	ldr	r2, [r3, #12]
 8008450:	0650      	lsls	r0, r2, #25
 8008452:	d505      	bpl.n	8008460 <HAL_TIM_IRQHandler+0x110>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008454:	f06f 0240 	mvn.w	r2, #64	; 0x40
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008458:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800845a:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800845c:	f7ff ff77 	bl	800834e <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8008460:	6823      	ldr	r3, [r4, #0]
 8008462:	691a      	ldr	r2, [r3, #16]
 8008464:	0691      	lsls	r1, r2, #26
 8008466:	d522      	bpl.n	80084ae <HAL_TIM_IRQHandler+0x15e>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8008468:	68da      	ldr	r2, [r3, #12]
 800846a:	0692      	lsls	r2, r2, #26
 800846c:	d51f      	bpl.n	80084ae <HAL_TIM_IRQHandler+0x15e>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800846e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008472:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008474:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800847a:	f000 b8af 	b.w	80085dc <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800847e:	f7ff ff63 	bl	8008348 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008482:	4620      	mov	r0, r4
 8008484:	f7ff ff62 	bl	800834c <HAL_TIM_PWM_PulseFinishedCallback>
 8008488:	e776      	b.n	8008378 <HAL_TIM_IRQHandler+0x28>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800848a:	f7ff ff5d 	bl	8008348 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800848e:	4620      	mov	r0, r4
 8008490:	f7ff ff5c 	bl	800834c <HAL_TIM_PWM_PulseFinishedCallback>
 8008494:	e785      	b.n	80083a2 <HAL_TIM_IRQHandler+0x52>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008496:	f7ff ff57 	bl	8008348 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800849a:	4620      	mov	r0, r4
 800849c:	f7ff ff56 	bl	800834c <HAL_TIM_PWM_PulseFinishedCallback>
 80084a0:	e793      	b.n	80083ca <HAL_TIM_IRQHandler+0x7a>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80084a2:	f7ff ff51 	bl	8008348 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80084a6:	4620      	mov	r0, r4
 80084a8:	f7ff ff50 	bl	800834c <HAL_TIM_PWM_PulseFinishedCallback>
 80084ac:	e7a2      	b.n	80083f4 <HAL_TIM_IRQHandler+0xa4>
}
 80084ae:	bd10      	pop	{r4, pc}

080084b0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80084b0:	4a30      	ldr	r2, [pc, #192]	; (8008574 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80084b2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80084b4:	4290      	cmp	r0, r2
 80084b6:	d012      	beq.n	80084de <TIM_Base_SetConfig+0x2e>
 80084b8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80084bc:	d00f      	beq.n	80084de <TIM_Base_SetConfig+0x2e>
 80084be:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80084c2:	4290      	cmp	r0, r2
 80084c4:	d00b      	beq.n	80084de <TIM_Base_SetConfig+0x2e>
 80084c6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80084ca:	4290      	cmp	r0, r2
 80084cc:	d007      	beq.n	80084de <TIM_Base_SetConfig+0x2e>
 80084ce:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80084d2:	4290      	cmp	r0, r2
 80084d4:	d003      	beq.n	80084de <TIM_Base_SetConfig+0x2e>
 80084d6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80084da:	4290      	cmp	r0, r2
 80084dc:	d119      	bne.n	8008512 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80084de:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80084e0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80084e4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80084e6:	4a23      	ldr	r2, [pc, #140]	; (8008574 <TIM_Base_SetConfig+0xc4>)
 80084e8:	4290      	cmp	r0, r2
 80084ea:	d01d      	beq.n	8008528 <TIM_Base_SetConfig+0x78>
 80084ec:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80084f0:	d01a      	beq.n	8008528 <TIM_Base_SetConfig+0x78>
 80084f2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80084f6:	4290      	cmp	r0, r2
 80084f8:	d016      	beq.n	8008528 <TIM_Base_SetConfig+0x78>
 80084fa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80084fe:	4290      	cmp	r0, r2
 8008500:	d012      	beq.n	8008528 <TIM_Base_SetConfig+0x78>
 8008502:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008506:	4290      	cmp	r0, r2
 8008508:	d00e      	beq.n	8008528 <TIM_Base_SetConfig+0x78>
 800850a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800850e:	4290      	cmp	r0, r2
 8008510:	d00a      	beq.n	8008528 <TIM_Base_SetConfig+0x78>
 8008512:	4a19      	ldr	r2, [pc, #100]	; (8008578 <TIM_Base_SetConfig+0xc8>)
 8008514:	4290      	cmp	r0, r2
 8008516:	d007      	beq.n	8008528 <TIM_Base_SetConfig+0x78>
 8008518:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800851c:	4290      	cmp	r0, r2
 800851e:	d003      	beq.n	8008528 <TIM_Base_SetConfig+0x78>
 8008520:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008524:	4290      	cmp	r0, r2
 8008526:	d103      	bne.n	8008530 <TIM_Base_SetConfig+0x80>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8008528:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800852c:	68ca      	ldr	r2, [r1, #12]
 800852e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008530:	694a      	ldr	r2, [r1, #20]
 8008532:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008536:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008538:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800853a:	688b      	ldr	r3, [r1, #8]
 800853c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800853e:	680b      	ldr	r3, [r1, #0]
 8008540:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008542:	4b0c      	ldr	r3, [pc, #48]	; (8008574 <TIM_Base_SetConfig+0xc4>)
 8008544:	4298      	cmp	r0, r3
 8008546:	d00f      	beq.n	8008568 <TIM_Base_SetConfig+0xb8>
 8008548:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800854c:	4298      	cmp	r0, r3
 800854e:	d00b      	beq.n	8008568 <TIM_Base_SetConfig+0xb8>
 8008550:	f503 5370 	add.w	r3, r3, #15360	; 0x3c00
 8008554:	4298      	cmp	r0, r3
 8008556:	d007      	beq.n	8008568 <TIM_Base_SetConfig+0xb8>
 8008558:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800855c:	4298      	cmp	r0, r3
 800855e:	d003      	beq.n	8008568 <TIM_Base_SetConfig+0xb8>
 8008560:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008564:	4298      	cmp	r0, r3
 8008566:	d101      	bne.n	800856c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008568:	690b      	ldr	r3, [r1, #16]
 800856a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800856c:	2301      	movs	r3, #1
 800856e:	6143      	str	r3, [r0, #20]
}
 8008570:	4770      	bx	lr
 8008572:	bf00      	nop
 8008574:	40010000 	.word	0x40010000
 8008578:	40014000 	.word	0x40014000

0800857c <HAL_TIM_Base_Init>:
{
 800857c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800857e:	4604      	mov	r4, r0
 8008580:	b350      	cbz	r0, 80085d8 <HAL_TIM_Base_Init+0x5c>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008582:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008586:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800858a:	b91b      	cbnz	r3, 8008594 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800858c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8008590:	f7ff fe9b 	bl	80082ca <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8008594:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008596:	6820      	ldr	r0, [r4, #0]
 8008598:	1d21      	adds	r1, r4, #4
  htim->State = HAL_TIM_STATE_BUSY;
 800859a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800859e:	f7ff ff87 	bl	80084b0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80085a2:	2301      	movs	r3, #1
  return HAL_OK;
 80085a4:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80085a6:	f884 3048 	strb.w	r3, [r4, #72]	; 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80085aa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80085ae:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80085b2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80085b6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
 80085ba:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80085be:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80085c2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80085c6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80085ca:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
 80085ce:	f884 3047 	strb.w	r3, [r4, #71]	; 0x47
  htim->State = HAL_TIM_STATE_READY;
 80085d2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80085d6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80085d8:	2001      	movs	r0, #1
 80085da:	e7fc      	b.n	80085d6 <HAL_TIM_Base_Init+0x5a>

080085dc <HAL_TIMEx_CommutCallback>:
 80085dc:	4770      	bx	lr

080085de <HAL_TIMEx_BreakCallback>:
 80085de:	4770      	bx	lr

080085e0 <HAL_TIMEx_Break2Callback>:
 80085e0:	4770      	bx	lr

080085e2 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80085e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80085e6:	e9d1 2c01 	ldrd	r2, ip, [r1, #4]
 80085ea:	e9d1 3807 	ldrd	r3, r8, [r1, #28]
 80085ee:	f8d1 e024 	ldr.w	lr, [r1, #36]	; 0x24
 80085f2:	ea43 0308 	orr.w	r3, r3, r8
 80085f6:	e9d1 7603 	ldrd	r7, r6, [r1, #12]
 80085fa:	e9d1 5405 	ldrd	r5, r4, [r1, #20]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80085fe:	6809      	ldr	r1, [r1, #0]
 8008600:	b991      	cbnz	r1, 8008628 <FMC_SDRAM_Init+0x46>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008602:	ea43 030e 	orr.w	r3, r3, lr
 8008606:	6801      	ldr	r1, [r0, #0]
 8008608:	4313      	orrs	r3, r2
 800860a:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800860e:	ea43 030c 	orr.w	r3, r3, ip
 8008612:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8008616:	433b      	orrs	r3, r7
 8008618:	4333      	orrs	r3, r6
 800861a:	432b      	orrs	r3, r5
 800861c:	4323      	orrs	r3, r4
 800861e:	430b      	orrs	r3, r1
 8008620:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8008622:	2000      	movs	r0, #0
 8008624:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008628:	6801      	ldr	r1, [r0, #0]
 800862a:	ea43 030e 	orr.w	r3, r3, lr
 800862e:	f421 41f8 	bic.w	r1, r1, #31744	; 0x7c00
 8008632:	430b      	orrs	r3, r1
 8008634:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8008636:	ea42 030c 	orr.w	r3, r2, ip
 800863a:	6841      	ldr	r1, [r0, #4]
 800863c:	433b      	orrs	r3, r7
 800863e:	f421 42ff 	bic.w	r2, r1, #32640	; 0x7f80
 8008642:	4333      	orrs	r3, r6
 8008644:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8008648:	432b      	orrs	r3, r5
 800864a:	4323      	orrs	r3, r4
 800864c:	4313      	orrs	r3, r2
 800864e:	6043      	str	r3, [r0, #4]
 8008650:	e7e7      	b.n	8008622 <FMC_SDRAM_Init+0x40>

08008652 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008652:	68cb      	ldr	r3, [r1, #12]
 8008654:	f103 3cff 	add.w	ip, r3, #4294967295
 8008658:	694b      	ldr	r3, [r1, #20]
{
 800865a:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800865c:	3b01      	subs	r3, #1
 800865e:	680f      	ldr	r7, [r1, #0]
 8008660:	684c      	ldr	r4, [r1, #4]
 8008662:	688e      	ldr	r6, [r1, #8]
 8008664:	051b      	lsls	r3, r3, #20
 8008666:	690d      	ldr	r5, [r1, #16]
 8008668:	3c01      	subs	r4, #1
 800866a:	6989      	ldr	r1, [r1, #24]
 800866c:	3e01      	subs	r6, #1
 800866e:	3d01      	subs	r5, #1
 8008670:	3f01      	subs	r7, #1
 8008672:	3901      	subs	r1, #1
 8008674:	0124      	lsls	r4, r4, #4
 8008676:	0236      	lsls	r6, r6, #8
 8008678:	042d      	lsls	r5, r5, #16
 800867a:	0609      	lsls	r1, r1, #24
 800867c:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8008680:	b95a      	cbnz	r2, 800869a <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008682:	433b      	orrs	r3, r7
 8008684:	6882      	ldr	r2, [r0, #8]
 8008686:	4323      	orrs	r3, r4
 8008688:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800868c:	4333      	orrs	r3, r6
 800868e:	432b      	orrs	r3, r5
 8008690:	430b      	orrs	r3, r1
 8008692:	4313      	orrs	r3, r2
 8008694:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
 8008696:	2000      	movs	r0, #0
 8008698:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800869a:	6882      	ldr	r2, [r0, #8]
 800869c:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80086a0:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80086a4:	431a      	orrs	r2, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80086a6:	ea44 0306 	orr.w	r3, r4, r6
 80086aa:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80086ac:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80086ae:	68c2      	ldr	r2, [r0, #12]
 80086b0:	432b      	orrs	r3, r5
 80086b2:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80086b6:	430b      	orrs	r3, r1
 80086b8:	4313      	orrs	r3, r2
 80086ba:	60c3      	str	r3, [r0, #12]
 80086bc:	e7eb      	b.n	8008696 <FMC_SDRAM_Timing_Init+0x44>

080086be <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80086be:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 80086c2:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80086c6:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 80086ca:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80086ce:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 80086d0:	2300      	movs	r3, #0
 80086d2:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 80086d4:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 80086d6:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 80086d8:	4618      	mov	r0, r3
 80086da:	4770      	bx	lr

080086dc <FMC_SDRAM_SendCommand>:
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80086dc:	6902      	ldr	r2, [r0, #16]
{
 80086de:	b510      	push	{r4, lr}
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80086e0:	e9d1 3400 	ldrd	r3, r4, [r1]
 80086e4:	0d92      	lsrs	r2, r2, #22
 80086e6:	4323      	orrs	r3, r4
 80086e8:	68cc      	ldr	r4, [r1, #12]
 80086ea:	0592      	lsls	r2, r2, #22
 80086ec:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
 80086f0:	4313      	orrs	r3, r2
 80086f2:	688a      	ldr	r2, [r1, #8]
 80086f4:	3a01      	subs	r2, #1
 80086f6:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80086fa:	6103      	str	r3, [r0, #16]
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
 80086fc:	2000      	movs	r0, #0
 80086fe:	bd10      	pop	{r4, pc}

08008700 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8008700:	6943      	ldr	r3, [r0, #20]
 8008702:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8008706:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800870a:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800870e:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8008710:	2000      	movs	r0, #0
 8008712:	4770      	bx	lr

08008714 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8008714:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8008716:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800871a:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800871c:	f001 fe38 	bl	800a390 <xTaskGetSchedulerState>
 8008720:	2801      	cmp	r0, #1
 8008722:	d003      	beq.n	800872c <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8008724:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8008728:	f000 bbdc 	b.w	8008ee4 <xPortSysTickHandler>
}
 800872c:	bd08      	pop	{r3, pc}
	...

08008730 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008730:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008734:	b92b      	cbnz	r3, 8008742 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8008736:	4b06      	ldr	r3, [pc, #24]	; (8008750 <osKernelInitialize+0x20>)
 8008738:	6818      	ldr	r0, [r3, #0]
 800873a:	b928      	cbnz	r0, 8008748 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800873c:	2201      	movs	r2, #1
 800873e:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008740:	4770      	bx	lr
    stat = osErrorISR;
 8008742:	f06f 0005 	mvn.w	r0, #5
 8008746:	4770      	bx	lr
    } else {
      stat = osError;
 8008748:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800874c:	4770      	bx	lr
 800874e:	bf00      	nop
 8008750:	24002560 	.word	0x24002560

08008754 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008754:	b510      	push	{r4, lr}
 8008756:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800875a:	b95c      	cbnz	r4, 8008774 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800875c:	4b08      	ldr	r3, [pc, #32]	; (8008780 <osKernelStart+0x2c>)
 800875e:	681a      	ldr	r2, [r3, #0]
 8008760:	2a01      	cmp	r2, #1
 8008762:	d10a      	bne.n	800877a <osKernelStart+0x26>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008764:	4a07      	ldr	r2, [pc, #28]	; (8008784 <osKernelStart+0x30>)
 8008766:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8008768:	2202      	movs	r2, #2
 800876a:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800876c:	f001 fcb4 	bl	800a0d8 <vTaskStartScheduler>
      stat = osOK;
 8008770:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8008772:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008774:	f06f 0005 	mvn.w	r0, #5
 8008778:	e7fb      	b.n	8008772 <osKernelStart+0x1e>
      stat = osError;
 800877a:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800877e:	e7f8      	b.n	8008772 <osKernelStart+0x1e>
 8008780:	24002560 	.word	0x24002560
 8008784:	e000ed00 	.word	0xe000ed00

08008788 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008788:	b5f0      	push	{r4, r5, r6, r7, lr}
 800878a:	460b      	mov	r3, r1
 800878c:	b087      	sub	sp, #28
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800878e:	2100      	movs	r1, #0
 8008790:	9105      	str	r1, [sp, #20]
 8008792:	f3ef 8405 	mrs	r4, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008796:	b9cc      	cbnz	r4, 80087cc <osThreadNew+0x44>
 8008798:	b1c0      	cbz	r0, 80087cc <osThreadNew+0x44>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800879a:	b36a      	cbz	r2, 80087f8 <osThreadNew+0x70>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800879c:	6995      	ldr	r5, [r2, #24]
 800879e:	428d      	cmp	r5, r1
 80087a0:	bf08      	it	eq
 80087a2:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80087a4:	1e69      	subs	r1, r5, #1
 80087a6:	46ac      	mov	ip, r5
 80087a8:	2937      	cmp	r1, #55	; 0x37
 80087aa:	d82a      	bhi.n	8008802 <osThreadNew+0x7a>
 80087ac:	6851      	ldr	r1, [r2, #4]
 80087ae:	07c9      	lsls	r1, r1, #31
 80087b0:	d427      	bmi.n	8008802 <osThreadNew+0x7a>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80087b2:	6956      	ldr	r6, [r2, #20]
 80087b4:	b16e      	cbz	r6, 80087d2 <osThreadNew+0x4a>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80087b6:	08b4      	lsrs	r4, r6, #2
      if (attr->name != NULL) {
 80087b8:	6811      	ldr	r1, [r2, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80087ba:	e9d2 7e02 	ldrd	r7, lr, [r2, #8]
 80087be:	b157      	cbz	r7, 80087d6 <osThreadNew+0x4e>
 80087c0:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 80087c4:	d902      	bls.n	80087cc <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80087c6:	6912      	ldr	r2, [r2, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80087c8:	b102      	cbz	r2, 80087cc <osThreadNew+0x44>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80087ca:	b9e6      	cbnz	r6, 8008806 <osThreadNew+0x7e>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80087cc:	9805      	ldr	r0, [sp, #20]
}
 80087ce:	b007      	add	sp, #28
 80087d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80087d2:	2480      	movs	r4, #128	; 0x80
 80087d4:	e7f0      	b.n	80087b8 <osThreadNew+0x30>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80087d6:	f1be 0f00 	cmp.w	lr, #0
 80087da:	d1f7      	bne.n	80087cc <osThreadNew+0x44>
      if (mem == 0) {
 80087dc:	6912      	ldr	r2, [r2, #16]
 80087de:	2a00      	cmp	r2, #0
 80087e0:	d1f4      	bne.n	80087cc <osThreadNew+0x44>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80087e2:	aa05      	add	r2, sp, #20
 80087e4:	e9cd c200 	strd	ip, r2, [sp]
 80087e8:	b2a2      	uxth	r2, r4
 80087ea:	f001 faf0 	bl	8009dce <xTaskCreate>
 80087ee:	2801      	cmp	r0, #1
            hTask = NULL;
 80087f0:	bf1c      	itt	ne
 80087f2:	2300      	movne	r3, #0
 80087f4:	9305      	strne	r3, [sp, #20]
 80087f6:	e7e9      	b.n	80087cc <osThreadNew+0x44>
    name = NULL;
 80087f8:	4611      	mov	r1, r2
    prio  = (UBaseType_t)osPriorityNormal;
 80087fa:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80087fe:	2480      	movs	r4, #128	; 0x80
 8008800:	e7ef      	b.n	80087e2 <osThreadNew+0x5a>
        return (NULL);
 8008802:	4620      	mov	r0, r4
 8008804:	e7e3      	b.n	80087ce <osThreadNew+0x46>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008806:	e9cd 2701 	strd	r2, r7, [sp, #4]
 800880a:	9500      	str	r5, [sp, #0]
 800880c:	4622      	mov	r2, r4
 800880e:	f001 faa6 	bl	8009d5e <xTaskCreateStatic>
 8008812:	9005      	str	r0, [sp, #20]
 8008814:	e7da      	b.n	80087cc <osThreadNew+0x44>

08008816 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8008816:	b510      	push	{r4, lr}
 8008818:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800881c:	b924      	cbnz	r4, 8008828 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800881e:	b110      	cbz	r0, 8008826 <osDelay+0x10>
      vTaskDelay(ticks);
 8008820:	f001 fc1a 	bl	800a058 <vTaskDelay>
    stat = osOK;
 8008824:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8008826:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008828:	f06f 0005 	mvn.w	r0, #5
 800882c:	e7fb      	b.n	8008826 <osDelay+0x10>

0800882e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800882e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008830:	4604      	mov	r4, r0
 8008832:	460e      	mov	r6, r1
 8008834:	4615      	mov	r5, r2
 8008836:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800883a:	b11a      	cbz	r2, 8008844 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800883c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800883e:	4620      	mov	r0, r4
 8008840:	b003      	add	sp, #12
 8008842:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008844:	2800      	cmp	r0, #0
 8008846:	d0f9      	beq.n	800883c <osSemaphoreNew+0xe>
 8008848:	4288      	cmp	r0, r1
 800884a:	d3f7      	bcc.n	800883c <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800884c:	b1e5      	cbz	r5, 8008888 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800884e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8008852:	b1bb      	cbz	r3, 8008884 <osSemaphoreNew+0x56>
 8008854:	2f4f      	cmp	r7, #79	; 0x4f
 8008856:	d9f1      	bls.n	800883c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8008858:	2801      	cmp	r0, #1
 800885a:	d12a      	bne.n	80088b2 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800885c:	2103      	movs	r1, #3
 800885e:	9100      	str	r1, [sp, #0]
 8008860:	4611      	mov	r1, r2
 8008862:	f000 fce7 	bl	8009234 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8008866:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008868:	2800      	cmp	r0, #0
 800886a:	d0e7      	beq.n	800883c <osSemaphoreNew+0xe>
 800886c:	b1de      	cbz	r6, 80088a6 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800886e:	2300      	movs	r3, #0
 8008870:	461a      	mov	r2, r3
 8008872:	4619      	mov	r1, r3
 8008874:	f000 fd93 	bl	800939e <xQueueGenericSend>
 8008878:	2801      	cmp	r0, #1
 800887a:	d014      	beq.n	80088a6 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800887c:	4620      	mov	r0, r4
 800887e:	f001 f8cf 	bl	8009a20 <vQueueDelete>
 8008882:	e7db      	b.n	800883c <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008884:	2f00      	cmp	r7, #0
 8008886:	d1d9      	bne.n	800883c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8008888:	2c01      	cmp	r4, #1
 800888a:	d105      	bne.n	8008898 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800888c:	2203      	movs	r2, #3
 800888e:	2100      	movs	r1, #0
 8008890:	4620      	mov	r0, r4
 8008892:	f000 fd1d 	bl	80092d0 <xQueueGenericCreate>
 8008896:	e7e6      	b.n	8008866 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008898:	4620      	mov	r0, r4
 800889a:	4631      	mov	r1, r6
 800889c:	f000 fd61 	bl	8009362 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80088a0:	4604      	mov	r4, r0
 80088a2:	2800      	cmp	r0, #0
 80088a4:	d0ca      	beq.n	800883c <osSemaphoreNew+0xe>
        if (attr != NULL) {
 80088a6:	b955      	cbnz	r5, 80088be <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 80088a8:	4629      	mov	r1, r5
 80088aa:	4620      	mov	r0, r4
 80088ac:	f001 f892 	bl	80099d4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80088b0:	e7c5      	b.n	800883e <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80088b2:	461a      	mov	r2, r3
 80088b4:	f000 fd33 	bl	800931e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80088b8:	4604      	mov	r4, r0
 80088ba:	2800      	cmp	r0, #0
 80088bc:	d0be      	beq.n	800883c <osSemaphoreNew+0xe>
          name = attr->name;
 80088be:	682d      	ldr	r5, [r5, #0]
 80088c0:	e7f2      	b.n	80088a8 <osSemaphoreNew+0x7a>

080088c2 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80088c2:	b513      	push	{r0, r1, r4, lr}
 80088c4:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80088c6:	b308      	cbz	r0, 800890c <osSemaphoreAcquire+0x4a>
 80088c8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80088cc:	b1b3      	cbz	r3, 80088fc <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 80088ce:	b9e9      	cbnz	r1, 800890c <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80088d0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80088d2:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80088d4:	f001 f82e 	bl	8009934 <xQueueReceiveFromISR>
 80088d8:	2801      	cmp	r0, #1
 80088da:	d114      	bne.n	8008906 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80088dc:	9b01      	ldr	r3, [sp, #4]
 80088de:	b913      	cbnz	r3, 80088e6 <osSemaphoreAcquire+0x24>
  stat = osOK;
 80088e0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80088e2:	b002      	add	sp, #8
 80088e4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80088e6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088ea:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088ee:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80088f2:	f3bf 8f4f 	dsb	sy
 80088f6:	f3bf 8f6f 	isb	sy
 80088fa:	e7f1      	b.n	80088e0 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80088fc:	f000 ff57 	bl	80097ae <xQueueSemaphoreTake>
 8008900:	2801      	cmp	r0, #1
 8008902:	d0ed      	beq.n	80088e0 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 8008904:	b92c      	cbnz	r4, 8008912 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 8008906:	f06f 0002 	mvn.w	r0, #2
 800890a:	e7ea      	b.n	80088e2 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800890c:	f06f 0003 	mvn.w	r0, #3
 8008910:	e7e7      	b.n	80088e2 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 8008912:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008916:	e7e4      	b.n	80088e2 <osSemaphoreAcquire+0x20>

08008918 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008918:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800891a:	b310      	cbz	r0, 8008962 <osSemaphoreRelease+0x4a>
 800891c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008920:	b1b3      	cbz	r3, 8008950 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8008922:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008924:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008926:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008928:	f000 fe4e 	bl	80095c8 <xQueueGiveFromISR>
 800892c:	2801      	cmp	r0, #1
 800892e:	d115      	bne.n	800895c <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8008930:	9b01      	ldr	r3, [sp, #4]
 8008932:	b913      	cbnz	r3, 800893a <osSemaphoreRelease+0x22>
  stat = osOK;
 8008934:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8008936:	b002      	add	sp, #8
 8008938:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800893a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800893e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008942:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008946:	f3bf 8f4f 	dsb	sy
 800894a:	f3bf 8f6f 	isb	sy
 800894e:	e7f1      	b.n	8008934 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008950:	461a      	mov	r2, r3
 8008952:	4619      	mov	r1, r3
 8008954:	f000 fd23 	bl	800939e <xQueueGenericSend>
 8008958:	2801      	cmp	r0, #1
 800895a:	d0eb      	beq.n	8008934 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800895c:	f06f 0002 	mvn.w	r0, #2
 8008960:	e7e9      	b.n	8008936 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8008962:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8008966:	e7e6      	b.n	8008936 <osSemaphoreRelease+0x1e>

08008968 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008968:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800896a:	4605      	mov	r5, r0
 800896c:	460e      	mov	r6, r1
 800896e:	4614      	mov	r4, r2
 8008970:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008974:	b11f      	cbz	r7, 800897e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8008976:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8008978:	4628      	mov	r0, r5
 800897a:	b003      	add	sp, #12
 800897c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800897e:	2800      	cmp	r0, #0
 8008980:	d0f9      	beq.n	8008976 <osMessageQueueNew+0xe>
 8008982:	2900      	cmp	r1, #0
 8008984:	d0f7      	beq.n	8008976 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8008986:	b1da      	cbz	r2, 80089c0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008988:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800898c:	b183      	cbz	r3, 80089b0 <osMessageQueueNew+0x48>
 800898e:	2a4f      	cmp	r2, #79	; 0x4f
 8008990:	d9f1      	bls.n	8008976 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008992:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008994:	2a00      	cmp	r2, #0
 8008996:	d0ee      	beq.n	8008976 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8008998:	434d      	muls	r5, r1
 800899a:	6966      	ldr	r6, [r4, #20]
 800899c:	42ae      	cmp	r6, r5
 800899e:	d3ea      	bcc.n	8008976 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80089a0:	9700      	str	r7, [sp, #0]
 80089a2:	f000 fc47 	bl	8009234 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80089a6:	4605      	mov	r5, r0
 80089a8:	2800      	cmp	r0, #0
 80089aa:	d0e4      	beq.n	8008976 <osMessageQueueNew+0xe>
        name = attr->name;
 80089ac:	6824      	ldr	r4, [r4, #0]
 80089ae:	e011      	b.n	80089d4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80089b0:	2a00      	cmp	r2, #0
 80089b2:	d1e0      	bne.n	8008976 <osMessageQueueNew+0xe>
 80089b4:	6923      	ldr	r3, [r4, #16]
 80089b6:	2b00      	cmp	r3, #0
 80089b8:	d1dd      	bne.n	8008976 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80089ba:	6963      	ldr	r3, [r4, #20]
 80089bc:	2b00      	cmp	r3, #0
 80089be:	d1da      	bne.n	8008976 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80089c0:	4628      	mov	r0, r5
 80089c2:	2200      	movs	r2, #0
 80089c4:	4631      	mov	r1, r6
 80089c6:	f000 fc83 	bl	80092d0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80089ca:	4605      	mov	r5, r0
 80089cc:	2800      	cmp	r0, #0
 80089ce:	d0d2      	beq.n	8008976 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80089d0:	2c00      	cmp	r4, #0
 80089d2:	d1eb      	bne.n	80089ac <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80089d4:	4621      	mov	r1, r4
 80089d6:	4628      	mov	r0, r5
 80089d8:	f000 fffc 	bl	80099d4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80089dc:	e7cc      	b.n	8008978 <osMessageQueueNew+0x10>

080089de <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80089de:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80089e0:	461c      	mov	r4, r3
 80089e2:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80089e6:	b1c6      	cbz	r6, 8008a1a <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80089e8:	b318      	cbz	r0, 8008a32 <osMessageQueuePut+0x54>
 80089ea:	b311      	cbz	r1, 8008a32 <osMessageQueuePut+0x54>
 80089ec:	bb0b      	cbnz	r3, 8008a32 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80089ee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80089f0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80089f2:	f000 fd87 	bl	8009504 <xQueueGenericSendFromISR>
 80089f6:	2801      	cmp	r0, #1
 80089f8:	d118      	bne.n	8008a2c <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80089fa:	9b01      	ldr	r3, [sp, #4]
 80089fc:	b913      	cbnz	r3, 8008a04 <osMessageQueuePut+0x26>
  stat = osOK;
 80089fe:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008a00:	b002      	add	sp, #8
 8008a02:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8008a04:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008a08:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a0c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008a10:	f3bf 8f4f 	dsb	sy
 8008a14:	f3bf 8f6f 	isb	sy
 8008a18:	e7f1      	b.n	80089fe <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008a1a:	b150      	cbz	r0, 8008a32 <osMessageQueuePut+0x54>
 8008a1c:	b149      	cbz	r1, 8008a32 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008a1e:	4633      	mov	r3, r6
 8008a20:	4622      	mov	r2, r4
 8008a22:	f000 fcbc 	bl	800939e <xQueueGenericSend>
 8008a26:	2801      	cmp	r0, #1
 8008a28:	d0e9      	beq.n	80089fe <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8008a2a:	b92c      	cbnz	r4, 8008a38 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8008a2c:	f06f 0002 	mvn.w	r0, #2
 8008a30:	e7e6      	b.n	8008a00 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8008a32:	f06f 0003 	mvn.w	r0, #3
 8008a36:	e7e3      	b.n	8008a00 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8008a38:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008a3c:	e7e0      	b.n	8008a00 <osMessageQueuePut+0x22>

08008a3e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008a3e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008a40:	461c      	mov	r4, r3
 8008a42:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008a46:	b1c3      	cbz	r3, 8008a7a <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008a48:	b310      	cbz	r0, 8008a90 <osMessageQueueGet+0x52>
 8008a4a:	b309      	cbz	r1, 8008a90 <osMessageQueueGet+0x52>
 8008a4c:	bb04      	cbnz	r4, 8008a90 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008a4e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008a50:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8008a52:	f000 ff6f 	bl	8009934 <xQueueReceiveFromISR>
 8008a56:	2801      	cmp	r0, #1
 8008a58:	d117      	bne.n	8008a8a <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8008a5a:	9b01      	ldr	r3, [sp, #4]
 8008a5c:	b913      	cbnz	r3, 8008a64 <osMessageQueueGet+0x26>
  stat = osOK;
 8008a5e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8008a60:	b003      	add	sp, #12
 8008a62:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8008a64:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008a68:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a6c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008a70:	f3bf 8f4f 	dsb	sy
 8008a74:	f3bf 8f6f 	isb	sy
 8008a78:	e7f1      	b.n	8008a5e <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008a7a:	b148      	cbz	r0, 8008a90 <osMessageQueueGet+0x52>
 8008a7c:	b141      	cbz	r1, 8008a90 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008a7e:	4622      	mov	r2, r4
 8008a80:	f000 fdf6 	bl	8009670 <xQueueReceive>
 8008a84:	2801      	cmp	r0, #1
 8008a86:	d0ea      	beq.n	8008a5e <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8008a88:	b92c      	cbnz	r4, 8008a96 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8008a8a:	f06f 0002 	mvn.w	r0, #2
 8008a8e:	e7e7      	b.n	8008a60 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8008a90:	f06f 0003 	mvn.w	r0, #3
 8008a94:	e7e4      	b.n	8008a60 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8008a96:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008a9a:	e7e1      	b.n	8008a60 <osMessageQueueGet+0x22>

08008a9c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008a9c:	4b03      	ldr	r3, [pc, #12]	; (8008aac <vApplicationGetIdleTaskMemory+0x10>)
 8008a9e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008aa0:	4b03      	ldr	r3, [pc, #12]	; (8008ab0 <vApplicationGetIdleTaskMemory+0x14>)
 8008aa2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008aa4:	2380      	movs	r3, #128	; 0x80
 8008aa6:	6013      	str	r3, [r2, #0]
}
 8008aa8:	4770      	bx	lr
 8008aaa:	bf00      	nop
 8008aac:	24002500 	.word	0x24002500
 8008ab0:	24002300 	.word	0x24002300

08008ab4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008ab4:	4b03      	ldr	r3, [pc, #12]	; (8008ac4 <vApplicationGetTimerTaskMemory+0x10>)
 8008ab6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008ab8:	4b03      	ldr	r3, [pc, #12]	; (8008ac8 <vApplicationGetTimerTaskMemory+0x14>)
 8008aba:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008abc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008ac0:	6013      	str	r3, [r2, #0]
}
 8008ac2:	4770      	bx	lr
 8008ac4:	24002964 	.word	0x24002964
 8008ac8:	24002564 	.word	0x24002564

08008acc <prvInsertBlockIntoFreeList>:
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008acc:	4b10      	ldr	r3, [pc, #64]	; (8008b10 <prvInsertBlockIntoFreeList+0x44>)
{
 8008ace:	b510      	push	{r4, lr}
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008ad0:	461a      	mov	r2, r3
 8008ad2:	681b      	ldr	r3, [r3, #0]
 8008ad4:	4283      	cmp	r3, r0
 8008ad6:	d3fb      	bcc.n	8008ad0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008ad8:	6854      	ldr	r4, [r2, #4]
 8008ada:	1911      	adds	r1, r2, r4
 8008adc:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008ade:	bf01      	itttt	eq
 8008ae0:	6841      	ldreq	r1, [r0, #4]
 8008ae2:	4610      	moveq	r0, r2
 8008ae4:	1909      	addeq	r1, r1, r4
 8008ae6:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008ae8:	6844      	ldr	r4, [r0, #4]
 8008aea:	1901      	adds	r1, r0, r4
 8008aec:	428b      	cmp	r3, r1
 8008aee:	d10c      	bne.n	8008b0a <prvInsertBlockIntoFreeList+0x3e>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008af0:	4908      	ldr	r1, [pc, #32]	; (8008b14 <prvInsertBlockIntoFreeList+0x48>)
 8008af2:	6809      	ldr	r1, [r1, #0]
 8008af4:	428b      	cmp	r3, r1
 8008af6:	d003      	beq.n	8008b00 <prvInsertBlockIntoFreeList+0x34>
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008af8:	6859      	ldr	r1, [r3, #4]
 8008afa:	4421      	add	r1, r4
 8008afc:	6041      	str	r1, [r0, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008afe:	6819      	ldr	r1, [r3, #0]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008b00:	4290      	cmp	r0, r2
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
 8008b02:	6001      	str	r1, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008b04:	bf18      	it	ne
 8008b06:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008b08:	bd10      	pop	{r4, pc}
 8008b0a:	4619      	mov	r1, r3
 8008b0c:	e7f8      	b.n	8008b00 <prvInsertBlockIntoFreeList+0x34>
 8008b0e:	bf00      	nop
 8008b10:	2400a9dc 	.word	0x2400a9dc
 8008b14:	240029c4 	.word	0x240029c4

08008b18 <pvPortMalloc>:
{
 8008b18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008b1c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008b1e:	f001 f983 	bl	8009e28 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008b22:	4942      	ldr	r1, [pc, #264]	; (8008c2c <pvPortMalloc+0x114>)
 8008b24:	4d42      	ldr	r5, [pc, #264]	; (8008c30 <pvPortMalloc+0x118>)
 8008b26:	680b      	ldr	r3, [r1, #0]
 8008b28:	bb0b      	cbnz	r3, 8008b6e <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008b2a:	4a42      	ldr	r2, [pc, #264]	; (8008c34 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008b2c:	0756      	lsls	r6, r2, #29
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008b2e:	4e42      	ldr	r6, [pc, #264]	; (8008c38 <pvPortMalloc+0x120>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008b30:	bf1b      	ittet	ne
 8008b32:	1dd0      	addne	r0, r2, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008b34:	f502 4200 	addne.w	r2, r2, #32768	; 0x8000
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008b38:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008b3c:	f020 0007 	bicne.w	r0, r0, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008b40:	bf1c      	itt	ne
 8008b42:	1a13      	subne	r3, r2, r0
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008b44:	4602      	movne	r2, r0
	xStart.xBlockSize = ( size_t ) 0;
 8008b46:	2000      	movs	r0, #0
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008b48:	4413      	add	r3, r2
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008b4a:	6032      	str	r2, [r6, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8008b4c:	6070      	str	r0, [r6, #4]
	uxAddress -= xHeapStructSize;
 8008b4e:	3b08      	subs	r3, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008b50:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8008b54:	e9c3 0000 	strd	r0, r0, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008b58:	1a98      	subs	r0, r3, r2
	pxEnd = ( void * ) uxAddress;
 8008b5a:	600b      	str	r3, [r1, #0]
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008b5c:	e9c2 3000 	strd	r3, r0, [r2]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008b60:	4b36      	ldr	r3, [pc, #216]	; (8008c3c <pvPortMalloc+0x124>)
 8008b62:	6018      	str	r0, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008b64:	4b36      	ldr	r3, [pc, #216]	; (8008c40 <pvPortMalloc+0x128>)
 8008b66:	6018      	str	r0, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008b68:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008b6c:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008b6e:	682e      	ldr	r6, [r5, #0]
 8008b70:	4226      	tst	r6, r4
 8008b72:	d155      	bne.n	8008c20 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8008b74:	2c00      	cmp	r4, #0
 8008b76:	d046      	beq.n	8008c06 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8008b78:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008b7c:	0760      	lsls	r0, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008b7e:	bf1c      	itt	ne
 8008b80:	f023 0307 	bicne.w	r3, r3, #7
 8008b84:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008b86:	2b00      	cmp	r3, #0
 8008b88:	d04a      	beq.n	8008c20 <pvPortMalloc+0x108>
 8008b8a:	4f2d      	ldr	r7, [pc, #180]	; (8008c40 <pvPortMalloc+0x128>)
 8008b8c:	683c      	ldr	r4, [r7, #0]
 8008b8e:	429c      	cmp	r4, r3
 8008b90:	d346      	bcc.n	8008c20 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8008b92:	4a29      	ldr	r2, [pc, #164]	; (8008c38 <pvPortMalloc+0x120>)
 8008b94:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008b96:	6868      	ldr	r0, [r5, #4]
 8008b98:	4298      	cmp	r0, r3
 8008b9a:	d204      	bcs.n	8008ba6 <pvPortMalloc+0x8e>
 8008b9c:	f8d5 c000 	ldr.w	ip, [r5]
 8008ba0:	f1bc 0f00 	cmp.w	ip, #0
 8008ba4:	d115      	bne.n	8008bd2 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008ba6:	6809      	ldr	r1, [r1, #0]
 8008ba8:	42a9      	cmp	r1, r5
 8008baa:	d039      	beq.n	8008c20 <pvPortMalloc+0x108>
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008bac:	6829      	ldr	r1, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008bae:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008bb2:	6011      	str	r1, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008bb4:	1ac2      	subs	r2, r0, r3
 8008bb6:	2a10      	cmp	r2, #16
 8008bb8:	d912      	bls.n	8008be0 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008bba:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008bbc:	0741      	lsls	r1, r0, #29
 8008bbe:	d00b      	beq.n	8008bd8 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008bc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bc4:	f383 8811 	msr	BASEPRI, r3
 8008bc8:	f3bf 8f6f 	isb	sy
 8008bcc:	f3bf 8f4f 	dsb	sy
 8008bd0:	e7fe      	b.n	8008bd0 <pvPortMalloc+0xb8>
 8008bd2:	462a      	mov	r2, r5
 8008bd4:	4665      	mov	r5, ip
 8008bd6:	e7de      	b.n	8008b96 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008bd8:	6042      	str	r2, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008bda:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008bdc:	f7ff ff76 	bl	8008acc <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008be0:	686a      	ldr	r2, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008be2:	2300      	movs	r3, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008be4:	4915      	ldr	r1, [pc, #84]	; (8008c3c <pvPortMalloc+0x124>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008be6:	1aa4      	subs	r4, r4, r2
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008be8:	4316      	orrs	r6, r2
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008bea:	6808      	ldr	r0, [r1, #0]
					xNumberOfSuccessfulAllocations++;
 8008bec:	4a15      	ldr	r2, [pc, #84]	; (8008c44 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008bee:	4284      	cmp	r4, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008bf0:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8008bf2:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008bf4:	603c      	str	r4, [r7, #0]
					xNumberOfSuccessfulAllocations++;
 8008bf6:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008bfa:	bf38      	it	cc
 8008bfc:	600c      	strcc	r4, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008bfe:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008c02:	606e      	str	r6, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8008c04:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8008c06:	f001 f9b3 	bl	8009f70 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008c0a:	0763      	lsls	r3, r4, #29
 8008c0c:	d00a      	beq.n	8008c24 <pvPortMalloc+0x10c>
 8008c0e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c12:	f383 8811 	msr	BASEPRI, r3
 8008c16:	f3bf 8f6f 	isb	sy
 8008c1a:	f3bf 8f4f 	dsb	sy
 8008c1e:	e7fe      	b.n	8008c1e <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8008c20:	2400      	movs	r4, #0
 8008c22:	e7f0      	b.n	8008c06 <pvPortMalloc+0xee>
}
 8008c24:	4620      	mov	r0, r4
 8008c26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008c2a:	bf00      	nop
 8008c2c:	240029c4 	.word	0x240029c4
 8008c30:	2400a9c8 	.word	0x2400a9c8
 8008c34:	240029c8 	.word	0x240029c8
 8008c38:	2400a9dc 	.word	0x2400a9dc
 8008c3c:	2400a9d0 	.word	0x2400a9d0
 8008c40:	2400a9cc 	.word	0x2400a9cc
 8008c44:	2400a9d4 	.word	0x2400a9d4

08008c48 <vPortFree>:
{
 8008c48:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008c4a:	4604      	mov	r4, r0
 8008c4c:	b390      	cbz	r0, 8008cb4 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008c4e:	4a1a      	ldr	r2, [pc, #104]	; (8008cb8 <vPortFree+0x70>)
 8008c50:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008c54:	6812      	ldr	r2, [r2, #0]
 8008c56:	4213      	tst	r3, r2
 8008c58:	d108      	bne.n	8008c6c <vPortFree+0x24>
 8008c5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c5e:	f383 8811 	msr	BASEPRI, r3
 8008c62:	f3bf 8f6f 	isb	sy
 8008c66:	f3bf 8f4f 	dsb	sy
 8008c6a:	e7fe      	b.n	8008c6a <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008c6c:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008c70:	b141      	cbz	r1, 8008c84 <vPortFree+0x3c>
 8008c72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c76:	f383 8811 	msr	BASEPRI, r3
 8008c7a:	f3bf 8f6f 	isb	sy
 8008c7e:	f3bf 8f4f 	dsb	sy
 8008c82:	e7fe      	b.n	8008c82 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008c84:	ea23 0302 	bic.w	r3, r3, r2
 8008c88:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008c8c:	f001 f8cc 	bl	8009e28 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008c90:	4a0a      	ldr	r2, [pc, #40]	; (8008cbc <vPortFree+0x74>)
 8008c92:	f854 3c04 	ldr.w	r3, [r4, #-4]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008c96:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008c9a:	6811      	ldr	r1, [r2, #0]
 8008c9c:	440b      	add	r3, r1
 8008c9e:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008ca0:	f7ff ff14 	bl	8008acc <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8008ca4:	4a06      	ldr	r2, [pc, #24]	; (8008cc0 <vPortFree+0x78>)
 8008ca6:	6813      	ldr	r3, [r2, #0]
 8008ca8:	3301      	adds	r3, #1
}
 8008caa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8008cae:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8008cb0:	f001 b95e 	b.w	8009f70 <xTaskResumeAll>
}
 8008cb4:	bd10      	pop	{r4, pc}
 8008cb6:	bf00      	nop
 8008cb8:	2400a9c8 	.word	0x2400a9c8
 8008cbc:	2400a9cc 	.word	0x2400a9cc
 8008cc0:	2400a9d8 	.word	0x2400a9d8

08008cc4 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008cc4:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008cc8:	f04f 32ff 	mov.w	r2, #4294967295
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008ccc:	6043      	str	r3, [r0, #4]

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008cce:	6103      	str	r3, [r0, #16]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008cd0:	e9c0 2302 	strd	r2, r3, [r0, #8]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008cd4:	2300      	movs	r3, #0
 8008cd6:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008cd8:	4770      	bx	lr

08008cda <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008cda:	2300      	movs	r3, #0
 8008cdc:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008cde:	4770      	bx	lr

08008ce0 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008ce0:	6843      	ldr	r3, [r0, #4]

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008ce2:	689a      	ldr	r2, [r3, #8]
	pxNewListItem->pxNext = pxIndex;
 8008ce4:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008ce6:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008ce8:	689a      	ldr	r2, [r3, #8]
 8008cea:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008cec:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008cee:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008cf0:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008cf2:	3301      	adds	r3, #1
 8008cf4:	6003      	str	r3, [r0, #0]
}
 8008cf6:	4770      	bx	lr

08008cf8 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008cf8:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008cfa:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008cfc:	1c63      	adds	r3, r4, #1
 8008cfe:	d10a      	bne.n	8008d16 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008d00:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008d02:	685a      	ldr	r2, [r3, #4]
 8008d04:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008d06:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008d08:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008d0a:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008d0c:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008d0e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008d10:	3301      	adds	r3, #1
 8008d12:	6003      	str	r3, [r0, #0]
}
 8008d14:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008d16:	f100 0208 	add.w	r2, r0, #8
 8008d1a:	4613      	mov	r3, r2
 8008d1c:	6852      	ldr	r2, [r2, #4]
 8008d1e:	6815      	ldr	r5, [r2, #0]
 8008d20:	42a5      	cmp	r5, r4
 8008d22:	d9fa      	bls.n	8008d1a <vListInsert+0x22>
 8008d24:	e7ed      	b.n	8008d02 <vListInsert+0xa>

08008d26 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
 8008d26:	6903      	ldr	r3, [r0, #16]

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008d28:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
 8008d2c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008d2e:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008d30:	6859      	ldr	r1, [r3, #4]
 8008d32:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008d34:	bf08      	it	eq
 8008d36:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008d38:	2200      	movs	r2, #0
 8008d3a:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008d3c:	681a      	ldr	r2, [r3, #0]
 8008d3e:	3a01      	subs	r2, #1
 8008d40:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008d42:	6818      	ldr	r0, [r3, #0]
}
 8008d44:	4770      	bx	lr
	...

08008d48 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008d48:	4808      	ldr	r0, [pc, #32]	; (8008d6c <prvPortStartFirstTask+0x24>)
 8008d4a:	6800      	ldr	r0, [r0, #0]
 8008d4c:	6800      	ldr	r0, [r0, #0]
 8008d4e:	f380 8808 	msr	MSP, r0
 8008d52:	f04f 0000 	mov.w	r0, #0
 8008d56:	f380 8814 	msr	CONTROL, r0
 8008d5a:	b662      	cpsie	i
 8008d5c:	b661      	cpsie	f
 8008d5e:	f3bf 8f4f 	dsb	sy
 8008d62:	f3bf 8f6f 	isb	sy
 8008d66:	df00      	svc	0
 8008d68:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008d6a:	0000      	.short	0x0000
 8008d6c:	e000ed08 	.word	0xe000ed08

08008d70 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008d70:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008d80 <vPortEnableVFP+0x10>
 8008d74:	6801      	ldr	r1, [r0, #0]
 8008d76:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008d7a:	6001      	str	r1, [r0, #0]
 8008d7c:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008d7e:	0000      	.short	0x0000
 8008d80:	e000ed88 	.word	0xe000ed88

08008d84 <prvTaskExitError>:
volatile uint32_t ulDummy = 0;
 8008d84:	2300      	movs	r3, #0
{
 8008d86:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008d88:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008d8a:	4b0d      	ldr	r3, [pc, #52]	; (8008dc0 <prvTaskExitError+0x3c>)
 8008d8c:	681b      	ldr	r3, [r3, #0]
 8008d8e:	3301      	adds	r3, #1
 8008d90:	d008      	beq.n	8008da4 <prvTaskExitError+0x20>
 8008d92:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d96:	f383 8811 	msr	BASEPRI, r3
 8008d9a:	f3bf 8f6f 	isb	sy
 8008d9e:	f3bf 8f4f 	dsb	sy
 8008da2:	e7fe      	b.n	8008da2 <prvTaskExitError+0x1e>
 8008da4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008da8:	f383 8811 	msr	BASEPRI, r3
 8008dac:	f3bf 8f6f 	isb	sy
 8008db0:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008db4:	9b01      	ldr	r3, [sp, #4]
 8008db6:	2b00      	cmp	r3, #0
 8008db8:	d0fc      	beq.n	8008db4 <prvTaskExitError+0x30>
}
 8008dba:	b002      	add	sp, #8
 8008dbc:	4770      	bx	lr
 8008dbe:	bf00      	nop
 8008dc0:	2400004c 	.word	0x2400004c

08008dc4 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008dc4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008dc8:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008dcc:	f840 2c20 	str.w	r2, [r0, #-32]
}
 8008dd0:	3844      	subs	r0, #68	; 0x44
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008dd2:	6403      	str	r3, [r0, #64]	; 0x40
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008dd4:	4b03      	ldr	r3, [pc, #12]	; (8008de4 <pxPortInitialiseStack+0x20>)
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008dd6:	63c1      	str	r1, [r0, #60]	; 0x3c
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008dd8:	6383      	str	r3, [r0, #56]	; 0x38
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008dda:	f06f 0302 	mvn.w	r3, #2
 8008dde:	6203      	str	r3, [r0, #32]
}
 8008de0:	4770      	bx	lr
 8008de2:	bf00      	nop
 8008de4:	08008d85 	.word	0x08008d85
	...

08008df0 <SVC_Handler>:
	__asm volatile (
 8008df0:	4b07      	ldr	r3, [pc, #28]	; (8008e10 <pxCurrentTCBConst2>)
 8008df2:	6819      	ldr	r1, [r3, #0]
 8008df4:	6808      	ldr	r0, [r1, #0]
 8008df6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008dfa:	f380 8809 	msr	PSP, r0
 8008dfe:	f3bf 8f6f 	isb	sy
 8008e02:	f04f 0000 	mov.w	r0, #0
 8008e06:	f380 8811 	msr	BASEPRI, r0
 8008e0a:	4770      	bx	lr
 8008e0c:	f3af 8000 	nop.w

08008e10 <pxCurrentTCBConst2>:
 8008e10:	2400aa2c 	.word	0x2400aa2c

08008e14 <vPortEnterCritical>:
 8008e14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e18:	f383 8811 	msr	BASEPRI, r3
 8008e1c:	f3bf 8f6f 	isb	sy
 8008e20:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008e24:	4a0a      	ldr	r2, [pc, #40]	; (8008e50 <vPortEnterCritical+0x3c>)
 8008e26:	6813      	ldr	r3, [r2, #0]
 8008e28:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008e2a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008e2c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008e2e:	d10e      	bne.n	8008e4e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008e30:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e34:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008e38:	b2db      	uxtb	r3, r3
 8008e3a:	b143      	cbz	r3, 8008e4e <vPortEnterCritical+0x3a>
 8008e3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e40:	f383 8811 	msr	BASEPRI, r3
 8008e44:	f3bf 8f6f 	isb	sy
 8008e48:	f3bf 8f4f 	dsb	sy
 8008e4c:	e7fe      	b.n	8008e4c <vPortEnterCritical+0x38>
}
 8008e4e:	4770      	bx	lr
 8008e50:	2400004c 	.word	0x2400004c

08008e54 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008e54:	4a08      	ldr	r2, [pc, #32]	; (8008e78 <vPortExitCritical+0x24>)
 8008e56:	6813      	ldr	r3, [r2, #0]
 8008e58:	b943      	cbnz	r3, 8008e6c <vPortExitCritical+0x18>
 8008e5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e5e:	f383 8811 	msr	BASEPRI, r3
 8008e62:	f3bf 8f6f 	isb	sy
 8008e66:	f3bf 8f4f 	dsb	sy
 8008e6a:	e7fe      	b.n	8008e6a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008e6c:	3b01      	subs	r3, #1
 8008e6e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008e70:	b90b      	cbnz	r3, 8008e76 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008e72:	f383 8811 	msr	BASEPRI, r3
}
 8008e76:	4770      	bx	lr
 8008e78:	2400004c 	.word	0x2400004c
 8008e7c:	00000000 	.word	0x00000000

08008e80 <PendSV_Handler>:
	__asm volatile
 8008e80:	f3ef 8009 	mrs	r0, PSP
 8008e84:	f3bf 8f6f 	isb	sy
 8008e88:	4b15      	ldr	r3, [pc, #84]	; (8008ee0 <pxCurrentTCBConst>)
 8008e8a:	681a      	ldr	r2, [r3, #0]
 8008e8c:	f01e 0f10 	tst.w	lr, #16
 8008e90:	bf08      	it	eq
 8008e92:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008e96:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e9a:	6010      	str	r0, [r2, #0]
 8008e9c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008ea0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008ea4:	f380 8811 	msr	BASEPRI, r0
 8008ea8:	f3bf 8f4f 	dsb	sy
 8008eac:	f3bf 8f6f 	isb	sy
 8008eb0:	f001 f960 	bl	800a174 <vTaskSwitchContext>
 8008eb4:	f04f 0000 	mov.w	r0, #0
 8008eb8:	f380 8811 	msr	BASEPRI, r0
 8008ebc:	bc09      	pop	{r0, r3}
 8008ebe:	6819      	ldr	r1, [r3, #0]
 8008ec0:	6808      	ldr	r0, [r1, #0]
 8008ec2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ec6:	f01e 0f10 	tst.w	lr, #16
 8008eca:	bf08      	it	eq
 8008ecc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008ed0:	f380 8809 	msr	PSP, r0
 8008ed4:	f3bf 8f6f 	isb	sy
 8008ed8:	4770      	bx	lr
 8008eda:	bf00      	nop
 8008edc:	f3af 8000 	nop.w

08008ee0 <pxCurrentTCBConst>:
 8008ee0:	2400aa2c 	.word	0x2400aa2c

08008ee4 <xPortSysTickHandler>:
{
 8008ee4:	b508      	push	{r3, lr}
	__asm volatile
 8008ee6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eea:	f383 8811 	msr	BASEPRI, r3
 8008eee:	f3bf 8f6f 	isb	sy
 8008ef2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008ef6:	f000 ffa5 	bl	8009e44 <xTaskIncrementTick>
 8008efa:	b128      	cbz	r0, 8008f08 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008efc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008f00:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008f04:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008f08:	2300      	movs	r3, #0
 8008f0a:	f383 8811 	msr	BASEPRI, r3
}
 8008f0e:	bd08      	pop	{r3, pc}

08008f10 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008f10:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008f14:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008f16:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008f1a:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008f1c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008f1e:	4b04      	ldr	r3, [pc, #16]	; (8008f30 <vPortSetupTimerInterrupt+0x20>)
 8008f20:	681b      	ldr	r3, [r3, #0]
 8008f22:	fbb3 f3f1 	udiv	r3, r3, r1
 8008f26:	3b01      	subs	r3, #1
 8008f28:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008f2a:	2307      	movs	r3, #7
 8008f2c:	6113      	str	r3, [r2, #16]
}
 8008f2e:	4770      	bx	lr
 8008f30:	2400003c 	.word	0x2400003c

08008f34 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008f34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008f38:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008f3a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008f3e:	4a3a      	ldr	r2, [pc, #232]	; (8009028 <xPortStartScheduler+0xf4>)
 8008f40:	4291      	cmp	r1, r2
 8008f42:	d108      	bne.n	8008f56 <xPortStartScheduler+0x22>
	__asm volatile
 8008f44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f48:	f383 8811 	msr	BASEPRI, r3
 8008f4c:	f3bf 8f6f 	isb	sy
 8008f50:	f3bf 8f4f 	dsb	sy
 8008f54:	e7fe      	b.n	8008f54 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008f56:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008f5a:	4b34      	ldr	r3, [pc, #208]	; (800902c <xPortStartScheduler+0xf8>)
 8008f5c:	429a      	cmp	r2, r3
 8008f5e:	d108      	bne.n	8008f72 <xPortStartScheduler+0x3e>
 8008f60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f64:	f383 8811 	msr	BASEPRI, r3
 8008f68:	f3bf 8f6f 	isb	sy
 8008f6c:	f3bf 8f4f 	dsb	sy
 8008f70:	e7fe      	b.n	8008f70 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008f72:	4b2f      	ldr	r3, [pc, #188]	; (8009030 <xPortStartScheduler+0xfc>)
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008f74:	2100      	movs	r1, #0
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008f76:	781a      	ldrb	r2, [r3, #0]
 8008f78:	b2d2      	uxtb	r2, r2
 8008f7a:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008f7c:	22ff      	movs	r2, #255	; 0xff
 8008f7e:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008f80:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008f82:	4a2c      	ldr	r2, [pc, #176]	; (8009034 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008f84:	b2db      	uxtb	r3, r3
 8008f86:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008f8a:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008f8e:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008f92:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008f94:	2307      	movs	r3, #7
 8008f96:	4a28      	ldr	r2, [pc, #160]	; (8009038 <xPortStartScheduler+0x104>)
 8008f98:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008f9a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008f9e:	1e5c      	subs	r4, r3, #1
 8008fa0:	0600      	lsls	r0, r0, #24
 8008fa2:	d40c      	bmi.n	8008fbe <xPortStartScheduler+0x8a>
 8008fa4:	b111      	cbz	r1, 8008fac <xPortStartScheduler+0x78>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008fa6:	2b03      	cmp	r3, #3
 8008fa8:	6013      	str	r3, [r2, #0]
 8008faa:	d011      	beq.n	8008fd0 <xPortStartScheduler+0x9c>
 8008fac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fb0:	f383 8811 	msr	BASEPRI, r3
 8008fb4:	f3bf 8f6f 	isb	sy
 8008fb8:	f3bf 8f4f 	dsb	sy
 8008fbc:	e7fe      	b.n	8008fbc <xPortStartScheduler+0x88>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008fbe:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008fc2:	2101      	movs	r1, #1
 8008fc4:	005b      	lsls	r3, r3, #1
 8008fc6:	b2db      	uxtb	r3, r3
 8008fc8:	f88d 3003 	strb.w	r3, [sp, #3]
 8008fcc:	4623      	mov	r3, r4
 8008fce:	e7e4      	b.n	8008f9a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008fd0:	f44f 7340 	mov.w	r3, #768	; 0x300
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008fd4:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
	uxCriticalNesting = 0;
 8008fd8:	2500      	movs	r5, #0
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008fda:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008fdc:	9b01      	ldr	r3, [sp, #4]
 8008fde:	4a14      	ldr	r2, [pc, #80]	; (8009030 <xPortStartScheduler+0xfc>)
 8008fe0:	b2db      	uxtb	r3, r3
 8008fe2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008fe4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008fe8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008fec:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008ff0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008ff4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008ff8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008ffc:	f7ff ff88 	bl	8008f10 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8009000:	4b0e      	ldr	r3, [pc, #56]	; (800903c <xPortStartScheduler+0x108>)
 8009002:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8009004:	f7ff feb4 	bl	8008d70 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8009008:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800900c:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8009010:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8009014:	f7ff fe98 	bl	8008d48 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8009018:	f001 f8ac 	bl	800a174 <vTaskSwitchContext>
}
 800901c:	4628      	mov	r0, r5
	prvTaskExitError();
 800901e:	f7ff feb1 	bl	8008d84 <prvTaskExitError>
}
 8009022:	b003      	add	sp, #12
 8009024:	bd30      	pop	{r4, r5, pc}
 8009026:	bf00      	nop
 8009028:	410fc271 	.word	0x410fc271
 800902c:	410fc270 	.word	0x410fc270
 8009030:	e000e400 	.word	0xe000e400
 8009034:	2400a9e4 	.word	0x2400a9e4
 8009038:	2400a9e8 	.word	0x2400a9e8
 800903c:	2400004c 	.word	0x2400004c

08009040 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8009040:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8009044:	2b0f      	cmp	r3, #15
 8009046:	d90e      	bls.n	8009066 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8009048:	4a11      	ldr	r2, [pc, #68]	; (8009090 <vPortValidateInterruptPriority+0x50>)
 800904a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800904c:	4a11      	ldr	r2, [pc, #68]	; (8009094 <vPortValidateInterruptPriority+0x54>)
 800904e:	7812      	ldrb	r2, [r2, #0]
 8009050:	429a      	cmp	r2, r3
 8009052:	d908      	bls.n	8009066 <vPortValidateInterruptPriority+0x26>
 8009054:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009058:	f383 8811 	msr	BASEPRI, r3
 800905c:	f3bf 8f6f 	isb	sy
 8009060:	f3bf 8f4f 	dsb	sy
 8009064:	e7fe      	b.n	8009064 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8009066:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800906a:	4a0b      	ldr	r2, [pc, #44]	; (8009098 <vPortValidateInterruptPriority+0x58>)
 800906c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8009070:	6812      	ldr	r2, [r2, #0]
 8009072:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8009076:	4293      	cmp	r3, r2
 8009078:	d908      	bls.n	800908c <vPortValidateInterruptPriority+0x4c>
 800907a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800907e:	f383 8811 	msr	BASEPRI, r3
 8009082:	f3bf 8f6f 	isb	sy
 8009086:	f3bf 8f4f 	dsb	sy
 800908a:	e7fe      	b.n	800908a <vPortValidateInterruptPriority+0x4a>
	}
 800908c:	4770      	bx	lr
 800908e:	bf00      	nop
 8009090:	e000e3f0 	.word	0xe000e3f0
 8009094:	2400a9e4 	.word	0x2400a9e4
 8009098:	2400a9e8 	.word	0x2400a9e8

0800909c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800909c:	b510      	push	{r4, lr}
 800909e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80090a0:	f7ff feb8 	bl	8008e14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80090a4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80090a6:	f7ff fed5 	bl	8008e54 <vPortExitCritical>

	return xReturn;
}
 80090aa:	fab4 f084 	clz	r0, r4
 80090ae:	0940      	lsrs	r0, r0, #5
 80090b0:	bd10      	pop	{r4, pc}

080090b2 <prvCopyDataToQueue>:
{
 80090b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80090b4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80090b6:	6c02      	ldr	r2, [r0, #64]	; 0x40
{
 80090b8:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80090ba:	6b86      	ldr	r6, [r0, #56]	; 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80090bc:	b952      	cbnz	r2, 80090d4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80090be:	6807      	ldr	r7, [r0, #0]
 80090c0:	bb47      	cbnz	r7, 8009114 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80090c2:	6880      	ldr	r0, [r0, #8]
 80090c4:	f001 f9b4 	bl	800a430 <xTaskPriorityDisinherit>
 80090c8:	4605      	mov	r5, r0
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80090ca:	60a7      	str	r7, [r4, #8]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80090cc:	3601      	adds	r6, #1
}
 80090ce:	4628      	mov	r0, r5
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80090d0:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80090d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80090d4:	b965      	cbnz	r5, 80090f0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80090d6:	6840      	ldr	r0, [r0, #4]
 80090d8:	f014 f83f 	bl	801d15a <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80090dc:	6863      	ldr	r3, [r4, #4]
 80090de:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80090e0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80090e2:	68a2      	ldr	r2, [r4, #8]
 80090e4:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80090e6:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80090e8:	d3f0      	bcc.n	80090cc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80090ea:	6823      	ldr	r3, [r4, #0]
 80090ec:	6063      	str	r3, [r4, #4]
 80090ee:	e7ed      	b.n	80090cc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80090f0:	68c0      	ldr	r0, [r0, #12]
 80090f2:	f014 f832 	bl	801d15a <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80090f6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80090f8:	68e3      	ldr	r3, [r4, #12]
 80090fa:	4251      	negs	r1, r2
 80090fc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80090fe:	6822      	ldr	r2, [r4, #0]
 8009100:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009102:	60e3      	str	r3, [r4, #12]
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009104:	bf3e      	ittt	cc
 8009106:	68a3      	ldrcc	r3, [r4, #8]
 8009108:	185b      	addcc	r3, r3, r1
 800910a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800910c:	2d02      	cmp	r5, #2
 800910e:	d101      	bne.n	8009114 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009110:	b116      	cbz	r6, 8009118 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8009112:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8009114:	2500      	movs	r5, #0
 8009116:	e7d9      	b.n	80090cc <prvCopyDataToQueue+0x1a>
 8009118:	4635      	mov	r5, r6
 800911a:	e7d7      	b.n	80090cc <prvCopyDataToQueue+0x1a>

0800911c <prvCopyDataFromQueue>:
{
 800911c:	4603      	mov	r3, r0
 800911e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009120:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8009122:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009124:	b162      	cbz	r2, 8009140 <prvCopyDataFromQueue+0x24>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009126:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009128:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800912a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800912c:	428c      	cmp	r4, r1
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800912e:	60dc      	str	r4, [r3, #12]
}
 8009130:	f85d 4b04 	ldr.w	r4, [sp], #4
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009134:	bf24      	itt	cs
 8009136:	6819      	ldrcs	r1, [r3, #0]
 8009138:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800913a:	68d9      	ldr	r1, [r3, #12]
 800913c:	f014 b80d 	b.w	801d15a <memcpy>
}
 8009140:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009144:	4770      	bx	lr

08009146 <prvUnlockQueue>:
{
 8009146:	b570      	push	{r4, r5, r6, lr}
 8009148:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800914a:	f7ff fe63 	bl	8008e14 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800914e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009152:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8009156:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8009158:	2d00      	cmp	r5, #0
 800915a:	dc14      	bgt.n	8009186 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800915c:	23ff      	movs	r3, #255	; 0xff
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800915e:	f104 0610 	add.w	r6, r4, #16
		pxQueue->cTxLock = queueUNLOCKED;
 8009162:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8009166:	f7ff fe75 	bl	8008e54 <vPortExitCritical>
	taskENTER_CRITICAL();
 800916a:	f7ff fe53 	bl	8008e14 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800916e:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
 8009172:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8009174:	2d00      	cmp	r5, #0
 8009176:	dc12      	bgt.n	800919e <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8009178:	23ff      	movs	r3, #255	; 0xff
 800917a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800917e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8009182:	f7ff be67 	b.w	8008e54 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009186:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009188:	2b00      	cmp	r3, #0
 800918a:	d0e7      	beq.n	800915c <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800918c:	4630      	mov	r0, r6
 800918e:	f001 f86d 	bl	800a26c <xTaskRemoveFromEventList>
 8009192:	b108      	cbz	r0, 8009198 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009194:	f001 f8f6 	bl	800a384 <vTaskMissedYield>
			--cTxLock;
 8009198:	3d01      	subs	r5, #1
 800919a:	b26d      	sxtb	r5, r5
 800919c:	e7dc      	b.n	8009158 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800919e:	6923      	ldr	r3, [r4, #16]
 80091a0:	2b00      	cmp	r3, #0
 80091a2:	d0e9      	beq.n	8009178 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091a4:	4630      	mov	r0, r6
 80091a6:	f001 f861 	bl	800a26c <xTaskRemoveFromEventList>
 80091aa:	b108      	cbz	r0, 80091b0 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80091ac:	f001 f8ea 	bl	800a384 <vTaskMissedYield>
				--cRxLock;
 80091b0:	3d01      	subs	r5, #1
 80091b2:	b26d      	sxtb	r5, r5
 80091b4:	e7de      	b.n	8009174 <prvUnlockQueue+0x2e>

080091b6 <xQueueGenericReset>:
{
 80091b6:	b538      	push	{r3, r4, r5, lr}
 80091b8:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80091ba:	4604      	mov	r4, r0
 80091bc:	b940      	cbnz	r0, 80091d0 <xQueueGenericReset+0x1a>
 80091be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091c2:	f383 8811 	msr	BASEPRI, r3
 80091c6:	f3bf 8f6f 	isb	sy
 80091ca:	f3bf 8f4f 	dsb	sy
 80091ce:	e7fe      	b.n	80091ce <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80091d0:	f7ff fe20 	bl	8008e14 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091d4:	6822      	ldr	r2, [r4, #0]
 80091d6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80091da:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091dc:	434b      	muls	r3, r1
 80091de:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091e0:	1a5b      	subs	r3, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091e2:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091e4:	441a      	add	r2, r3
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80091e6:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80091e8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80091ea:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80091ec:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80091ee:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80091f2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 80091f6:	b9a5      	cbnz	r5, 8009222 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80091f8:	6923      	ldr	r3, [r4, #16]
 80091fa:	b173      	cbz	r3, 800921a <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80091fc:	f104 0010 	add.w	r0, r4, #16
 8009200:	f001 f834 	bl	800a26c <xTaskRemoveFromEventList>
 8009204:	b148      	cbz	r0, 800921a <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009206:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800920a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800920e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009212:	f3bf 8f4f 	dsb	sy
 8009216:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800921a:	f7ff fe1b 	bl	8008e54 <vPortExitCritical>
}
 800921e:	2001      	movs	r0, #1
 8009220:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009222:	f104 0010 	add.w	r0, r4, #16
 8009226:	f7ff fd4d 	bl	8008cc4 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800922a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800922e:	f7ff fd49 	bl	8008cc4 <vListInitialise>
 8009232:	e7f2      	b.n	800921a <xQueueGenericReset+0x64>

08009234 <xQueueGenericCreateStatic>:
	{
 8009234:	b513      	push	{r0, r1, r4, lr}
 8009236:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009238:	b940      	cbnz	r0, 800924c <xQueueGenericCreateStatic+0x18>
 800923a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800923e:	f383 8811 	msr	BASEPRI, r3
 8009242:	f3bf 8f6f 	isb	sy
 8009246:	f3bf 8f4f 	dsb	sy
 800924a:	e7fe      	b.n	800924a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800924c:	b943      	cbnz	r3, 8009260 <xQueueGenericCreateStatic+0x2c>
 800924e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009252:	f383 8811 	msr	BASEPRI, r3
 8009256:	f3bf 8f6f 	isb	sy
 800925a:	f3bf 8f4f 	dsb	sy
 800925e:	e7fe      	b.n	800925e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8009260:	b14a      	cbz	r2, 8009276 <xQueueGenericCreateStatic+0x42>
 8009262:	b991      	cbnz	r1, 800928a <xQueueGenericCreateStatic+0x56>
 8009264:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009268:	f383 8811 	msr	BASEPRI, r3
 800926c:	f3bf 8f6f 	isb	sy
 8009270:	f3bf 8f4f 	dsb	sy
 8009274:	e7fe      	b.n	8009274 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8009276:	b141      	cbz	r1, 800928a <xQueueGenericCreateStatic+0x56>
 8009278:	f04f 0350 	mov.w	r3, #80	; 0x50
 800927c:	f383 8811 	msr	BASEPRI, r3
 8009280:	f3bf 8f6f 	isb	sy
 8009284:	f3bf 8f4f 	dsb	sy
 8009288:	e7fe      	b.n	8009288 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800928a:	2350      	movs	r3, #80	; 0x50
 800928c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800928e:	9b01      	ldr	r3, [sp, #4]
 8009290:	2b50      	cmp	r3, #80	; 0x50
 8009292:	d008      	beq.n	80092a6 <xQueueGenericCreateStatic+0x72>
 8009294:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009298:	f383 8811 	msr	BASEPRI, r3
 800929c:	f3bf 8f6f 	isb	sy
 80092a0:	f3bf 8f4f 	dsb	sy
 80092a4:	e7fe      	b.n	80092a4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80092a6:	2900      	cmp	r1, #0
 80092a8:	bf08      	it	eq
 80092aa:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80092ac:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80092ae:	2301      	movs	r3, #1
 80092b0:	6022      	str	r2, [r4, #0]
 80092b2:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	pxNewQueue->uxItemSize = uxItemSize;
 80092b6:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80092ba:	4619      	mov	r1, r3
 80092bc:	4620      	mov	r0, r4
 80092be:	f7ff ff7a 	bl	80091b6 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80092c2:	f89d 3010 	ldrb.w	r3, [sp, #16]
	}
 80092c6:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
 80092c8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80092cc:	b002      	add	sp, #8
 80092ce:	bd10      	pop	{r4, pc}

080092d0 <xQueueGenericCreate>:
	{
 80092d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80092d2:	460d      	mov	r5, r1
 80092d4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80092d6:	4606      	mov	r6, r0
 80092d8:	b940      	cbnz	r0, 80092ec <xQueueGenericCreate+0x1c>
 80092da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092de:	f383 8811 	msr	BASEPRI, r3
 80092e2:	f3bf 8f6f 	isb	sy
 80092e6:	f3bf 8f4f 	dsb	sy
 80092ea:	e7fe      	b.n	80092ea <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80092ec:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80092ee:	3050      	adds	r0, #80	; 0x50
 80092f0:	f7ff fc12 	bl	8008b18 <pvPortMalloc>
		if( pxNewQueue != NULL )
 80092f4:	4604      	mov	r4, r0
 80092f6:	b170      	cbz	r0, 8009316 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 80092f8:	2300      	movs	r3, #0
 80092fa:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 80092fe:	b165      	cbz	r5, 800931a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009300:	f100 0350 	add.w	r3, r0, #80	; 0x50
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009304:	2101      	movs	r1, #1
 8009306:	4620      	mov	r0, r4
 8009308:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
 800930a:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800930e:	f7ff ff52 	bl	80091b6 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009312:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009316:	4620      	mov	r0, r4
 8009318:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800931a:	4603      	mov	r3, r0
 800931c:	e7f2      	b.n	8009304 <xQueueGenericCreate+0x34>

0800931e <xQueueCreateCountingSemaphoreStatic>:
	{
 800931e:	b513      	push	{r0, r1, r4, lr}
 8009320:	4613      	mov	r3, r2
 8009322:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009324:	b940      	cbnz	r0, 8009338 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009326:	f04f 0350 	mov.w	r3, #80	; 0x50
 800932a:	f383 8811 	msr	BASEPRI, r3
 800932e:	f3bf 8f6f 	isb	sy
 8009332:	f3bf 8f4f 	dsb	sy
 8009336:	e7fe      	b.n	8009336 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8009338:	4288      	cmp	r0, r1
 800933a:	d208      	bcs.n	800934e <xQueueCreateCountingSemaphoreStatic+0x30>
 800933c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009340:	f383 8811 	msr	BASEPRI, r3
 8009344:	f3bf 8f6f 	isb	sy
 8009348:	f3bf 8f4f 	dsb	sy
 800934c:	e7fe      	b.n	800934c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800934e:	2202      	movs	r2, #2
 8009350:	9200      	str	r2, [sp, #0]
 8009352:	2200      	movs	r2, #0
 8009354:	4611      	mov	r1, r2
 8009356:	f7ff ff6d 	bl	8009234 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800935a:	b100      	cbz	r0, 800935e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800935c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800935e:	b002      	add	sp, #8
 8009360:	bd10      	pop	{r4, pc}

08009362 <xQueueCreateCountingSemaphore>:
	{
 8009362:	b510      	push	{r4, lr}
 8009364:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009366:	b940      	cbnz	r0, 800937a <xQueueCreateCountingSemaphore+0x18>
 8009368:	f04f 0350 	mov.w	r3, #80	; 0x50
 800936c:	f383 8811 	msr	BASEPRI, r3
 8009370:	f3bf 8f6f 	isb	sy
 8009374:	f3bf 8f4f 	dsb	sy
 8009378:	e7fe      	b.n	8009378 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800937a:	4288      	cmp	r0, r1
 800937c:	d208      	bcs.n	8009390 <xQueueCreateCountingSemaphore+0x2e>
 800937e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009382:	f383 8811 	msr	BASEPRI, r3
 8009386:	f3bf 8f6f 	isb	sy
 800938a:	f3bf 8f4f 	dsb	sy
 800938e:	e7fe      	b.n	800938e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009390:	2202      	movs	r2, #2
 8009392:	2100      	movs	r1, #0
 8009394:	f7ff ff9c 	bl	80092d0 <xQueueGenericCreate>
		if( xHandle != NULL )
 8009398:	b100      	cbz	r0, 800939c <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800939a:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800939c:	bd10      	pop	{r4, pc}

0800939e <xQueueGenericSend>:
{
 800939e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80093a2:	b085      	sub	sp, #20
 80093a4:	4688      	mov	r8, r1
 80093a6:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80093a8:	4604      	mov	r4, r0
{
 80093aa:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
 80093ac:	b940      	cbnz	r0, 80093c0 <xQueueGenericSend+0x22>
 80093ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093b2:	f383 8811 	msr	BASEPRI, r3
 80093b6:	f3bf 8f6f 	isb	sy
 80093ba:	f3bf 8f4f 	dsb	sy
 80093be:	e7fe      	b.n	80093be <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80093c0:	b951      	cbnz	r1, 80093d8 <xQueueGenericSend+0x3a>
 80093c2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80093c4:	b143      	cbz	r3, 80093d8 <xQueueGenericSend+0x3a>
 80093c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093ca:	f383 8811 	msr	BASEPRI, r3
 80093ce:	f3bf 8f6f 	isb	sy
 80093d2:	f3bf 8f4f 	dsb	sy
 80093d6:	e7fe      	b.n	80093d6 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80093d8:	2f02      	cmp	r7, #2
 80093da:	d10b      	bne.n	80093f4 <xQueueGenericSend+0x56>
 80093dc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093de:	2b01      	cmp	r3, #1
 80093e0:	d008      	beq.n	80093f4 <xQueueGenericSend+0x56>
 80093e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093e6:	f383 8811 	msr	BASEPRI, r3
 80093ea:	f3bf 8f6f 	isb	sy
 80093ee:	f3bf 8f4f 	dsb	sy
 80093f2:	e7fe      	b.n	80093f2 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80093f4:	f000 ffcc 	bl	800a390 <xTaskGetSchedulerState>
 80093f8:	4606      	mov	r6, r0
 80093fa:	b950      	cbnz	r0, 8009412 <xQueueGenericSend+0x74>
 80093fc:	9b01      	ldr	r3, [sp, #4]
 80093fe:	b14b      	cbz	r3, 8009414 <xQueueGenericSend+0x76>
 8009400:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009404:	f383 8811 	msr	BASEPRI, r3
 8009408:	f3bf 8f6f 	isb	sy
 800940c:	f3bf 8f4f 	dsb	sy
 8009410:	e7fe      	b.n	8009410 <xQueueGenericSend+0x72>
 8009412:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009414:	f04f 0900 	mov.w	r9, #0
 8009418:	e037      	b.n	800948a <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800941a:	9d01      	ldr	r5, [sp, #4]
 800941c:	b91d      	cbnz	r5, 8009426 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800941e:	f7ff fd19 	bl	8008e54 <vPortExitCritical>
			return errQUEUE_FULL;
 8009422:	2000      	movs	r0, #0
 8009424:	e052      	b.n	80094cc <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009426:	b916      	cbnz	r6, 800942e <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009428:	a802      	add	r0, sp, #8
 800942a:	f000 ff63 	bl	800a2f4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800942e:	f7ff fd11 	bl	8008e54 <vPortExitCritical>
		vTaskSuspendAll();
 8009432:	f000 fcf9 	bl	8009e28 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009436:	f7ff fced 	bl	8008e14 <vPortEnterCritical>
 800943a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800943e:	2bff      	cmp	r3, #255	; 0xff
 8009440:	d101      	bne.n	8009446 <xQueueGenericSend+0xa8>
 8009442:	f884 9044 	strb.w	r9, [r4, #68]	; 0x44
 8009446:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800944a:	2bff      	cmp	r3, #255	; 0xff
 800944c:	d101      	bne.n	8009452 <xQueueGenericSend+0xb4>
 800944e:	f884 9045 	strb.w	r9, [r4, #69]	; 0x45
 8009452:	f7ff fcff 	bl	8008e54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009456:	a901      	add	r1, sp, #4
 8009458:	a802      	add	r0, sp, #8
 800945a:	f000 ff57 	bl	800a30c <xTaskCheckForTimeOut>
 800945e:	2800      	cmp	r0, #0
 8009460:	d14a      	bne.n	80094f8 <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009462:	f7ff fcd7 	bl	8008e14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009466:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009468:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800946a:	429a      	cmp	r2, r3
 800946c:	d131      	bne.n	80094d2 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800946e:	f7ff fcf1 	bl	8008e54 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009472:	9901      	ldr	r1, [sp, #4]
 8009474:	f104 0010 	add.w	r0, r4, #16
 8009478:	f000 fec0 	bl	800a1fc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800947c:	4620      	mov	r0, r4
 800947e:	f7ff fe62 	bl	8009146 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009482:	f000 fd75 	bl	8009f70 <xTaskResumeAll>
 8009486:	b360      	cbz	r0, 80094e2 <xQueueGenericSend+0x144>
 8009488:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800948a:	f7ff fcc3 	bl	8008e14 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800948e:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009490:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009492:	429a      	cmp	r2, r3
 8009494:	d301      	bcc.n	800949a <xQueueGenericSend+0xfc>
 8009496:	2f02      	cmp	r7, #2
 8009498:	d1bf      	bne.n	800941a <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800949a:	463a      	mov	r2, r7
 800949c:	4641      	mov	r1, r8
 800949e:	4620      	mov	r0, r4
 80094a0:	f7ff fe07 	bl	80090b2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80094a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80094a6:	b11b      	cbz	r3, 80094b0 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80094a8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80094ac:	f000 fede 	bl	800a26c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80094b0:	b148      	cbz	r0, 80094c6 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80094b2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80094b6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80094ba:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80094be:	f3bf 8f4f 	dsb	sy
 80094c2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80094c6:	f7ff fcc5 	bl	8008e54 <vPortExitCritical>
				return pdPASS;
 80094ca:	2001      	movs	r0, #1
}
 80094cc:	b005      	add	sp, #20
 80094ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 80094d2:	f7ff fcbf 	bl	8008e54 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80094d6:	4620      	mov	r0, r4
 80094d8:	f7ff fe35 	bl	8009146 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80094dc:	f000 fd48 	bl	8009f70 <xTaskResumeAll>
 80094e0:	e7d2      	b.n	8009488 <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 80094e2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80094e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80094ea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80094ee:	f3bf 8f4f 	dsb	sy
 80094f2:	f3bf 8f6f 	isb	sy
 80094f6:	e7c7      	b.n	8009488 <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 80094f8:	4620      	mov	r0, r4
 80094fa:	f7ff fe24 	bl	8009146 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80094fe:	f000 fd37 	bl	8009f70 <xTaskResumeAll>
 8009502:	e78e      	b.n	8009422 <xQueueGenericSend+0x84>

08009504 <xQueueGenericSendFromISR>:
{
 8009504:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009508:	4689      	mov	r9, r1
 800950a:	4690      	mov	r8, r2
 800950c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800950e:	4604      	mov	r4, r0
 8009510:	b940      	cbnz	r0, 8009524 <xQueueGenericSendFromISR+0x20>
 8009512:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009516:	f383 8811 	msr	BASEPRI, r3
 800951a:	f3bf 8f6f 	isb	sy
 800951e:	f3bf 8f4f 	dsb	sy
 8009522:	e7fe      	b.n	8009522 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009524:	b951      	cbnz	r1, 800953c <xQueueGenericSendFromISR+0x38>
 8009526:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009528:	b143      	cbz	r3, 800953c <xQueueGenericSendFromISR+0x38>
 800952a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800952e:	f383 8811 	msr	BASEPRI, r3
 8009532:	f3bf 8f6f 	isb	sy
 8009536:	f3bf 8f4f 	dsb	sy
 800953a:	e7fe      	b.n	800953a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800953c:	2f02      	cmp	r7, #2
 800953e:	d10b      	bne.n	8009558 <xQueueGenericSendFromISR+0x54>
 8009540:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009542:	2b01      	cmp	r3, #1
 8009544:	d008      	beq.n	8009558 <xQueueGenericSendFromISR+0x54>
 8009546:	f04f 0350 	mov.w	r3, #80	; 0x50
 800954a:	f383 8811 	msr	BASEPRI, r3
 800954e:	f3bf 8f6f 	isb	sy
 8009552:	f3bf 8f4f 	dsb	sy
 8009556:	e7fe      	b.n	8009556 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009558:	f7ff fd72 	bl	8009040 <vPortValidateInterruptPriority>
	__asm volatile
 800955c:	f3ef 8611 	mrs	r6, BASEPRI
 8009560:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009564:	f383 8811 	msr	BASEPRI, r3
 8009568:	f3bf 8f6f 	isb	sy
 800956c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009570:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009572:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009574:	429a      	cmp	r2, r3
 8009576:	d301      	bcc.n	800957c <xQueueGenericSendFromISR+0x78>
 8009578:	2f02      	cmp	r7, #2
 800957a:	d123      	bne.n	80095c4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800957c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009580:	463a      	mov	r2, r7
 8009582:	4649      	mov	r1, r9
 8009584:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
 8009586:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009588:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800958a:	f7ff fd92 	bl	80090b2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800958e:	1c6b      	adds	r3, r5, #1
 8009590:	d113      	bne.n	80095ba <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009592:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009594:	b90b      	cbnz	r3, 800959a <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8009596:	2001      	movs	r0, #1
 8009598:	e00b      	b.n	80095b2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800959a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800959e:	f000 fe65 	bl	800a26c <xTaskRemoveFromEventList>
 80095a2:	2800      	cmp	r0, #0
 80095a4:	d0f7      	beq.n	8009596 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 80095a6:	f1b8 0f00 	cmp.w	r8, #0
 80095aa:	d0f4      	beq.n	8009596 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80095ac:	2001      	movs	r0, #1
 80095ae:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80095b2:	f386 8811 	msr	BASEPRI, r6
}
 80095b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80095ba:	3501      	adds	r5, #1
 80095bc:	b26d      	sxtb	r5, r5
 80095be:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80095c2:	e7e8      	b.n	8009596 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 80095c4:	2000      	movs	r0, #0
 80095c6:	e7f4      	b.n	80095b2 <xQueueGenericSendFromISR+0xae>

080095c8 <xQueueGiveFromISR>:
{
 80095c8:	b570      	push	{r4, r5, r6, lr}
 80095ca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80095cc:	4604      	mov	r4, r0
 80095ce:	b940      	cbnz	r0, 80095e2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80095d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095d4:	f383 8811 	msr	BASEPRI, r3
 80095d8:	f3bf 8f6f 	isb	sy
 80095dc:	f3bf 8f4f 	dsb	sy
 80095e0:	e7fe      	b.n	80095e0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80095e2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80095e4:	b143      	cbz	r3, 80095f8 <xQueueGiveFromISR+0x30>
 80095e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095ea:	f383 8811 	msr	BASEPRI, r3
 80095ee:	f3bf 8f6f 	isb	sy
 80095f2:	f3bf 8f4f 	dsb	sy
 80095f6:	e7fe      	b.n	80095f6 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 80095f8:	6803      	ldr	r3, [r0, #0]
 80095fa:	b953      	cbnz	r3, 8009612 <xQueueGiveFromISR+0x4a>
 80095fc:	6883      	ldr	r3, [r0, #8]
 80095fe:	b143      	cbz	r3, 8009612 <xQueueGiveFromISR+0x4a>
 8009600:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009604:	f383 8811 	msr	BASEPRI, r3
 8009608:	f3bf 8f6f 	isb	sy
 800960c:	f3bf 8f4f 	dsb	sy
 8009610:	e7fe      	b.n	8009610 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009612:	f7ff fd15 	bl	8009040 <vPortValidateInterruptPriority>
	__asm volatile
 8009616:	f3ef 8611 	mrs	r6, BASEPRI
 800961a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800961e:	f383 8811 	msr	BASEPRI, r3
 8009622:	f3bf 8f6f 	isb	sy
 8009626:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800962a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800962c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800962e:	4293      	cmp	r3, r2
 8009630:	d91c      	bls.n	800966c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009632:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009636:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009638:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800963a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800963c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800963e:	d110      	bne.n	8009662 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009640:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009642:	b90b      	cbnz	r3, 8009648 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009644:	2001      	movs	r0, #1
 8009646:	e009      	b.n	800965c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009648:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800964c:	f000 fe0e 	bl	800a26c <xTaskRemoveFromEventList>
 8009650:	2800      	cmp	r0, #0
 8009652:	d0f7      	beq.n	8009644 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009654:	2d00      	cmp	r5, #0
 8009656:	d0f5      	beq.n	8009644 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009658:	2001      	movs	r0, #1
 800965a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800965c:	f386 8811 	msr	BASEPRI, r6
}
 8009660:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009662:	3301      	adds	r3, #1
 8009664:	b25b      	sxtb	r3, r3
 8009666:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800966a:	e7eb      	b.n	8009644 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800966c:	2000      	movs	r0, #0
 800966e:	e7f5      	b.n	800965c <xQueueGiveFromISR+0x94>

08009670 <xQueueReceive>:
{
 8009670:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009674:	460f      	mov	r7, r1
	configASSERT( ( pxQueue ) );
 8009676:	4604      	mov	r4, r0
{
 8009678:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800967a:	b940      	cbnz	r0, 800968e <xQueueReceive+0x1e>
	__asm volatile
 800967c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009680:	f383 8811 	msr	BASEPRI, r3
 8009684:	f3bf 8f6f 	isb	sy
 8009688:	f3bf 8f4f 	dsb	sy
 800968c:	e7fe      	b.n	800968c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800968e:	b951      	cbnz	r1, 80096a6 <xQueueReceive+0x36>
 8009690:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009692:	b143      	cbz	r3, 80096a6 <xQueueReceive+0x36>
 8009694:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009698:	f383 8811 	msr	BASEPRI, r3
 800969c:	f3bf 8f6f 	isb	sy
 80096a0:	f3bf 8f4f 	dsb	sy
 80096a4:	e7fe      	b.n	80096a4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80096a6:	f000 fe73 	bl	800a390 <xTaskGetSchedulerState>
 80096aa:	4606      	mov	r6, r0
 80096ac:	b950      	cbnz	r0, 80096c4 <xQueueReceive+0x54>
 80096ae:	9b01      	ldr	r3, [sp, #4]
 80096b0:	b14b      	cbz	r3, 80096c6 <xQueueReceive+0x56>
 80096b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096b6:	f383 8811 	msr	BASEPRI, r3
 80096ba:	f3bf 8f6f 	isb	sy
 80096be:	f3bf 8f4f 	dsb	sy
 80096c2:	e7fe      	b.n	80096c2 <xQueueReceive+0x52>
 80096c4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 80096c6:	f04f 0800 	mov.w	r8, #0
 80096ca:	e03d      	b.n	8009748 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 80096cc:	9d01      	ldr	r5, [sp, #4]
 80096ce:	b91d      	cbnz	r5, 80096d8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 80096d0:	f7ff fbc0 	bl	8008e54 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80096d4:	2000      	movs	r0, #0
 80096d6:	e056      	b.n	8009786 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 80096d8:	b916      	cbnz	r6, 80096e0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80096da:	a802      	add	r0, sp, #8
 80096dc:	f000 fe0a 	bl	800a2f4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80096e0:	f7ff fbb8 	bl	8008e54 <vPortExitCritical>
		vTaskSuspendAll();
 80096e4:	f000 fba0 	bl	8009e28 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80096e8:	f7ff fb94 	bl	8008e14 <vPortEnterCritical>
 80096ec:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80096f0:	2bff      	cmp	r3, #255	; 0xff
 80096f2:	d101      	bne.n	80096f8 <xQueueReceive+0x88>
 80096f4:	f884 8044 	strb.w	r8, [r4, #68]	; 0x44
 80096f8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80096fc:	2bff      	cmp	r3, #255	; 0xff
 80096fe:	d101      	bne.n	8009704 <xQueueReceive+0x94>
 8009700:	f884 8045 	strb.w	r8, [r4, #69]	; 0x45
 8009704:	f7ff fba6 	bl	8008e54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009708:	a901      	add	r1, sp, #4
 800970a:	a802      	add	r0, sp, #8
 800970c:	f000 fdfe 	bl	800a30c <xTaskCheckForTimeOut>
 8009710:	2800      	cmp	r0, #0
 8009712:	d141      	bne.n	8009798 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009714:	4620      	mov	r0, r4
 8009716:	f7ff fcc1 	bl	800909c <prvIsQueueEmpty>
 800971a:	b3b8      	cbz	r0, 800978c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800971c:	9901      	ldr	r1, [sp, #4]
 800971e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009722:	f000 fd6b 	bl	800a1fc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009726:	4620      	mov	r0, r4
 8009728:	f7ff fd0d 	bl	8009146 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800972c:	f000 fc20 	bl	8009f70 <xTaskResumeAll>
 8009730:	b948      	cbnz	r0, 8009746 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009732:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009736:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800973a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800973e:	f3bf 8f4f 	dsb	sy
 8009742:	f3bf 8f6f 	isb	sy
 8009746:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009748:	f7ff fb64 	bl	8008e14 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800974c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800974e:	2d00      	cmp	r5, #0
 8009750:	d0bc      	beq.n	80096cc <xQueueReceive+0x5c>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009752:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009754:	4639      	mov	r1, r7
 8009756:	4620      	mov	r0, r4
 8009758:	f7ff fce0 	bl	800911c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800975c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800975e:	6923      	ldr	r3, [r4, #16]
 8009760:	b173      	cbz	r3, 8009780 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009762:	f104 0010 	add.w	r0, r4, #16
 8009766:	f000 fd81 	bl	800a26c <xTaskRemoveFromEventList>
 800976a:	b148      	cbz	r0, 8009780 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800976c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009770:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009774:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009778:	f3bf 8f4f 	dsb	sy
 800977c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009780:	f7ff fb68 	bl	8008e54 <vPortExitCritical>
				return pdPASS;
 8009784:	2001      	movs	r0, #1
}
 8009786:	b004      	add	sp, #16
 8009788:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800978c:	4620      	mov	r0, r4
 800978e:	f7ff fcda 	bl	8009146 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009792:	f000 fbed 	bl	8009f70 <xTaskResumeAll>
 8009796:	e7d6      	b.n	8009746 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009798:	4620      	mov	r0, r4
 800979a:	f7ff fcd4 	bl	8009146 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800979e:	f000 fbe7 	bl	8009f70 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80097a2:	4620      	mov	r0, r4
 80097a4:	f7ff fc7a 	bl	800909c <prvIsQueueEmpty>
 80097a8:	2800      	cmp	r0, #0
 80097aa:	d0cc      	beq.n	8009746 <xQueueReceive+0xd6>
 80097ac:	e792      	b.n	80096d4 <xQueueReceive+0x64>

080097ae <xQueueSemaphoreTake>:
{
 80097ae:	b5f0      	push	{r4, r5, r6, r7, lr}
 80097b0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80097b2:	4604      	mov	r4, r0
{
 80097b4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80097b6:	b940      	cbnz	r0, 80097ca <xQueueSemaphoreTake+0x1c>
 80097b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097bc:	f383 8811 	msr	BASEPRI, r3
 80097c0:	f3bf 8f6f 	isb	sy
 80097c4:	f3bf 8f4f 	dsb	sy
 80097c8:	e7fe      	b.n	80097c8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80097ca:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80097cc:	b145      	cbz	r5, 80097e0 <xQueueSemaphoreTake+0x32>
 80097ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097d2:	f383 8811 	msr	BASEPRI, r3
 80097d6:	f3bf 8f6f 	isb	sy
 80097da:	f3bf 8f4f 	dsb	sy
 80097de:	e7fe      	b.n	80097de <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80097e0:	f000 fdd6 	bl	800a390 <xTaskGetSchedulerState>
 80097e4:	4606      	mov	r6, r0
 80097e6:	b950      	cbnz	r0, 80097fe <xQueueSemaphoreTake+0x50>
 80097e8:	9b01      	ldr	r3, [sp, #4]
 80097ea:	b15b      	cbz	r3, 8009804 <xQueueSemaphoreTake+0x56>
 80097ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097f0:	f383 8811 	msr	BASEPRI, r3
 80097f4:	f3bf 8f6f 	isb	sy
 80097f8:	f3bf 8f4f 	dsb	sy
 80097fc:	e7fe      	b.n	80097fc <xQueueSemaphoreTake+0x4e>
 80097fe:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009800:	2700      	movs	r7, #0
 8009802:	e053      	b.n	80098ac <xQueueSemaphoreTake+0xfe>
 8009804:	4605      	mov	r5, r0
 8009806:	e7fb      	b.n	8009800 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009808:	9b01      	ldr	r3, [sp, #4]
 800980a:	b963      	cbnz	r3, 8009826 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800980c:	b145      	cbz	r5, 8009820 <xQueueSemaphoreTake+0x72>
 800980e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009812:	f383 8811 	msr	BASEPRI, r3
 8009816:	f3bf 8f6f 	isb	sy
 800981a:	f3bf 8f4f 	dsb	sy
 800981e:	e7fe      	b.n	800981e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009820:	f7ff fb18 	bl	8008e54 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009824:	e062      	b.n	80098ec <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009826:	b916      	cbnz	r6, 800982e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009828:	a802      	add	r0, sp, #8
 800982a:	f000 fd63 	bl	800a2f4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800982e:	f7ff fb11 	bl	8008e54 <vPortExitCritical>
		vTaskSuspendAll();
 8009832:	f000 faf9 	bl	8009e28 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009836:	f7ff faed 	bl	8008e14 <vPortEnterCritical>
 800983a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800983e:	2bff      	cmp	r3, #255	; 0xff
 8009840:	d101      	bne.n	8009846 <xQueueSemaphoreTake+0x98>
 8009842:	f884 7044 	strb.w	r7, [r4, #68]	; 0x44
 8009846:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800984a:	2bff      	cmp	r3, #255	; 0xff
 800984c:	d101      	bne.n	8009852 <xQueueSemaphoreTake+0xa4>
 800984e:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8009852:	f7ff faff 	bl	8008e54 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009856:	a901      	add	r1, sp, #4
 8009858:	a802      	add	r0, sp, #8
 800985a:	f000 fd57 	bl	800a30c <xTaskCheckForTimeOut>
 800985e:	2800      	cmp	r0, #0
 8009860:	d14d      	bne.n	80098fe <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009862:	4620      	mov	r0, r4
 8009864:	f7ff fc1a 	bl	800909c <prvIsQueueEmpty>
 8009868:	2800      	cmp	r0, #0
 800986a:	d042      	beq.n	80098f2 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800986c:	6823      	ldr	r3, [r4, #0]
 800986e:	b93b      	cbnz	r3, 8009880 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8009870:	f7ff fad0 	bl	8008e14 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009874:	68a0      	ldr	r0, [r4, #8]
 8009876:	f000 fd9b 	bl	800a3b0 <xTaskPriorityInherit>
 800987a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800987c:	f7ff faea 	bl	8008e54 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009880:	9901      	ldr	r1, [sp, #4]
 8009882:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009886:	f000 fcb9 	bl	800a1fc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800988a:	4620      	mov	r0, r4
 800988c:	f7ff fc5b 	bl	8009146 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009890:	f000 fb6e 	bl	8009f70 <xTaskResumeAll>
 8009894:	b948      	cbnz	r0, 80098aa <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009896:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800989a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800989e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80098a2:	f3bf 8f4f 	dsb	sy
 80098a6:	f3bf 8f6f 	isb	sy
 80098aa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80098ac:	f7ff fab2 	bl	8008e14 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80098b0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80098b2:	2b00      	cmp	r3, #0
 80098b4:	d0a8      	beq.n	8009808 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80098b6:	3b01      	subs	r3, #1
 80098b8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80098ba:	6823      	ldr	r3, [r4, #0]
 80098bc:	b913      	cbnz	r3, 80098c4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80098be:	f000 fe4d 	bl	800a55c <pvTaskIncrementMutexHeldCount>
 80098c2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80098c4:	6923      	ldr	r3, [r4, #16]
 80098c6:	b173      	cbz	r3, 80098e6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80098c8:	f104 0010 	add.w	r0, r4, #16
 80098cc:	f000 fcce 	bl	800a26c <xTaskRemoveFromEventList>
 80098d0:	b148      	cbz	r0, 80098e6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 80098d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80098d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80098da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80098de:	f3bf 8f4f 	dsb	sy
 80098e2:	f3bf 8f6f 	isb	sy
				return pdPASS;
 80098e6:	2501      	movs	r5, #1
				taskEXIT_CRITICAL();
 80098e8:	f7ff fab4 	bl	8008e54 <vPortExitCritical>
}
 80098ec:	4628      	mov	r0, r5
 80098ee:	b005      	add	sp, #20
 80098f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 80098f2:	4620      	mov	r0, r4
 80098f4:	f7ff fc27 	bl	8009146 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80098f8:	f000 fb3a 	bl	8009f70 <xTaskResumeAll>
 80098fc:	e7d5      	b.n	80098aa <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 80098fe:	4620      	mov	r0, r4
 8009900:	f7ff fc21 	bl	8009146 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009904:	f000 fb34 	bl	8009f70 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009908:	4620      	mov	r0, r4
 800990a:	f7ff fbc7 	bl	800909c <prvIsQueueEmpty>
 800990e:	2800      	cmp	r0, #0
 8009910:	d0cb      	beq.n	80098aa <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009912:	2d00      	cmp	r5, #0
 8009914:	d0ea      	beq.n	80098ec <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009916:	f7ff fa7d 	bl	8008e14 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800991a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800991c:	b119      	cbz	r1, 8009926 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800991e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009920:	6819      	ldr	r1, [r3, #0]
 8009922:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009926:	68a0      	ldr	r0, [r4, #8]
				return errQUEUE_EMPTY;
 8009928:	2500      	movs	r5, #0
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800992a:	f000 fdc5 	bl	800a4b8 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
 800992e:	f7ff fa91 	bl	8008e54 <vPortExitCritical>
 8009932:	e7db      	b.n	80098ec <xQueueSemaphoreTake+0x13e>

08009934 <xQueueReceiveFromISR>:
{
 8009934:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009938:	4689      	mov	r9, r1
 800993a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800993c:	4605      	mov	r5, r0
 800993e:	b940      	cbnz	r0, 8009952 <xQueueReceiveFromISR+0x1e>
 8009940:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009944:	f383 8811 	msr	BASEPRI, r3
 8009948:	f3bf 8f6f 	isb	sy
 800994c:	f3bf 8f4f 	dsb	sy
 8009950:	e7fe      	b.n	8009950 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009952:	b951      	cbnz	r1, 800996a <xQueueReceiveFromISR+0x36>
 8009954:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009956:	b143      	cbz	r3, 800996a <xQueueReceiveFromISR+0x36>
 8009958:	f04f 0350 	mov.w	r3, #80	; 0x50
 800995c:	f383 8811 	msr	BASEPRI, r3
 8009960:	f3bf 8f6f 	isb	sy
 8009964:	f3bf 8f4f 	dsb	sy
 8009968:	e7fe      	b.n	8009968 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800996a:	f7ff fb69 	bl	8009040 <vPortValidateInterruptPriority>
	__asm volatile
 800996e:	f3ef 8711 	mrs	r7, BASEPRI
 8009972:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009976:	f383 8811 	msr	BASEPRI, r3
 800997a:	f3bf 8f6f 	isb	sy
 800997e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009982:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009984:	b31c      	cbz	r4, 80099ce <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8009986:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800998a:	4649      	mov	r1, r9
 800998c:	4628      	mov	r0, r5
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800998e:	3c01      	subs	r4, #1
			const int8_t cRxLock = pxQueue->cRxLock;
 8009990:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009992:	f7ff fbc3 	bl	800911c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009996:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 8009998:	1c73      	adds	r3, r6, #1
 800999a:	d113      	bne.n	80099c4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800999c:	692b      	ldr	r3, [r5, #16]
 800999e:	b90b      	cbnz	r3, 80099a4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80099a0:	2001      	movs	r0, #1
 80099a2:	e00b      	b.n	80099bc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80099a4:	f105 0010 	add.w	r0, r5, #16
 80099a8:	f000 fc60 	bl	800a26c <xTaskRemoveFromEventList>
 80099ac:	2800      	cmp	r0, #0
 80099ae:	d0f7      	beq.n	80099a0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80099b0:	f1b8 0f00 	cmp.w	r8, #0
 80099b4:	d0f4      	beq.n	80099a0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80099b6:	2001      	movs	r0, #1
 80099b8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80099bc:	f387 8811 	msr	BASEPRI, r7
}
 80099c0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80099c4:	3601      	adds	r6, #1
 80099c6:	b276      	sxtb	r6, r6
 80099c8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80099cc:	e7e8      	b.n	80099a0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80099ce:	4620      	mov	r0, r4
 80099d0:	e7f4      	b.n	80099bc <xQueueReceiveFromISR+0x88>
	...

080099d4 <vQueueAddToRegistry>:
	{
	UBaseType_t ux;

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80099d4:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80099d6:	4a07      	ldr	r2, [pc, #28]	; (80099f4 <vQueueAddToRegistry+0x20>)
	{
 80099d8:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80099da:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80099de:	b92c      	cbnz	r4, 80099ec <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80099e0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80099e4:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 80099e8:	6050      	str	r0, [r2, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80099ea:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80099ec:	3301      	adds	r3, #1
 80099ee:	2b08      	cmp	r3, #8
 80099f0:	d1f3      	bne.n	80099da <vQueueAddToRegistry+0x6>
 80099f2:	e7fa      	b.n	80099ea <vQueueAddToRegistry+0x16>
 80099f4:	2400a9ec 	.word	0x2400a9ec

080099f8 <vQueueUnregisterQueue>:
	{
	UBaseType_t ux;

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80099f8:	2300      	movs	r3, #0
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80099fa:	4a08      	ldr	r2, [pc, #32]	; (8009a1c <vQueueUnregisterQueue+0x24>)
	{
 80099fc:	b510      	push	{r4, lr}
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 80099fe:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009a02:	684c      	ldr	r4, [r1, #4]
 8009a04:	4284      	cmp	r4, r0
 8009a06:	d104      	bne.n	8009a12 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009a08:	2000      	movs	r0, #0
 8009a0a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8009a0e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009a10:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009a12:	3301      	adds	r3, #1
 8009a14:	2b08      	cmp	r3, #8
 8009a16:	d1f2      	bne.n	80099fe <vQueueUnregisterQueue+0x6>
 8009a18:	e7fa      	b.n	8009a10 <vQueueUnregisterQueue+0x18>
 8009a1a:	bf00      	nop
 8009a1c:	2400a9ec 	.word	0x2400a9ec

08009a20 <vQueueDelete>:
{
 8009a20:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009a22:	4604      	mov	r4, r0
 8009a24:	b940      	cbnz	r0, 8009a38 <vQueueDelete+0x18>
	__asm volatile
 8009a26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a2a:	f383 8811 	msr	BASEPRI, r3
 8009a2e:	f3bf 8f6f 	isb	sy
 8009a32:	f3bf 8f4f 	dsb	sy
 8009a36:	e7fe      	b.n	8009a36 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009a38:	f7ff ffde 	bl	80099f8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8009a3c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009a40:	b923      	cbnz	r3, 8009a4c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009a42:	4620      	mov	r0, r4
}
 8009a44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009a48:	f7ff b8fe 	b.w	8008c48 <vPortFree>
}
 8009a4c:	bd10      	pop	{r4, pc}

08009a4e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8009a4e:	b570      	push	{r4, r5, r6, lr}
 8009a50:	4604      	mov	r4, r0
 8009a52:	460d      	mov	r5, r1
 8009a54:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009a56:	f7ff f9dd 	bl	8008e14 <vPortEnterCritical>
 8009a5a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009a5e:	2bff      	cmp	r3, #255	; 0xff
 8009a60:	d102      	bne.n	8009a68 <vQueueWaitForMessageRestricted+0x1a>
 8009a62:	2300      	movs	r3, #0
 8009a64:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 8009a68:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009a6c:	2bff      	cmp	r3, #255	; 0xff
 8009a6e:	d102      	bne.n	8009a76 <vQueueWaitForMessageRestricted+0x28>
 8009a70:	2300      	movs	r3, #0
 8009a72:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009a76:	f7ff f9ed 	bl	8008e54 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8009a7a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8009a7c:	b92b      	cbnz	r3, 8009a8a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8009a7e:	4632      	mov	r2, r6
 8009a80:	4629      	mov	r1, r5
 8009a82:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009a86:	f000 fbd3 	bl	800a230 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 8009a8a:	4620      	mov	r0, r4
	}
 8009a8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009a90:	f7ff bb59 	b.w	8009146 <prvUnlockQueue>

08009a94 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009a94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a98:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009a9a:	f7ff f9bb 	bl	8008e14 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009a9e:	4b2f      	ldr	r3, [pc, #188]	; (8009b5c <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 8009aa0:	4e2f      	ldr	r6, [pc, #188]	; (8009b60 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 8009aa2:	681a      	ldr	r2, [r3, #0]
 8009aa4:	4f2f      	ldr	r7, [pc, #188]	; (8009b64 <prvAddNewTaskToReadyList+0xd0>)
 8009aa6:	3201      	adds	r2, #1
 8009aa8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009aaa:	6835      	ldr	r5, [r6, #0]
 8009aac:	2d00      	cmp	r5, #0
 8009aae:	d14a      	bne.n	8009b46 <prvAddNewTaskToReadyList+0xb2>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009ab0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009ab2:	681b      	ldr	r3, [r3, #0]
 8009ab4:	2b01      	cmp	r3, #1
 8009ab6:	d11f      	bne.n	8009af8 <prvAddNewTaskToReadyList+0x64>
 8009ab8:	46b8      	mov	r8, r7

static void prvInitialiseTaskLists( void )
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009aba:	3501      	adds	r5, #1
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009abc:	4640      	mov	r0, r8
 8009abe:	f7ff f901 	bl	8008cc4 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009ac2:	f108 0814 	add.w	r8, r8, #20
 8009ac6:	2d38      	cmp	r5, #56	; 0x38
 8009ac8:	d1f7      	bne.n	8009aba <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009aca:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8009b8c <prvAddNewTaskToReadyList+0xf8>
	vListInitialise( &xDelayedTaskList2 );
 8009ace:	4d26      	ldr	r5, [pc, #152]	; (8009b68 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 8009ad0:	4640      	mov	r0, r8
 8009ad2:	f7ff f8f7 	bl	8008cc4 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009ad6:	4628      	mov	r0, r5
 8009ad8:	f7ff f8f4 	bl	8008cc4 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009adc:	4823      	ldr	r0, [pc, #140]	; (8009b6c <prvAddNewTaskToReadyList+0xd8>)
 8009ade:	f7ff f8f1 	bl	8008cc4 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009ae2:	4823      	ldr	r0, [pc, #140]	; (8009b70 <prvAddNewTaskToReadyList+0xdc>)
 8009ae4:	f7ff f8ee 	bl	8008cc4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009ae8:	4822      	ldr	r0, [pc, #136]	; (8009b74 <prvAddNewTaskToReadyList+0xe0>)
 8009aea:	f7ff f8eb 	bl	8008cc4 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009aee:	4b22      	ldr	r3, [pc, #136]	; (8009b78 <prvAddNewTaskToReadyList+0xe4>)
 8009af0:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009af4:	4b21      	ldr	r3, [pc, #132]	; (8009b7c <prvAddNewTaskToReadyList+0xe8>)
 8009af6:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009af8:	4a21      	ldr	r2, [pc, #132]	; (8009b80 <prvAddNewTaskToReadyList+0xec>)
 8009afa:	6813      	ldr	r3, [r2, #0]
 8009afc:	3301      	adds	r3, #1
 8009afe:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009b00:	4a20      	ldr	r2, [pc, #128]	; (8009b84 <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009b02:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009b04:	6811      	ldr	r1, [r2, #0]
 8009b06:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009b08:	428b      	cmp	r3, r1
 8009b0a:	d900      	bls.n	8009b0e <prvAddNewTaskToReadyList+0x7a>
 8009b0c:	6013      	str	r3, [r2, #0]
 8009b0e:	2014      	movs	r0, #20
 8009b10:	1d21      	adds	r1, r4, #4
 8009b12:	fb00 7003 	mla	r0, r0, r3, r7
 8009b16:	f7ff f8e3 	bl	8008ce0 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009b1a:	f7ff f99b 	bl	8008e54 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009b1e:	4b1a      	ldr	r3, [pc, #104]	; (8009b88 <prvAddNewTaskToReadyList+0xf4>)
 8009b20:	681b      	ldr	r3, [r3, #0]
 8009b22:	b173      	cbz	r3, 8009b42 <prvAddNewTaskToReadyList+0xae>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009b24:	6833      	ldr	r3, [r6, #0]
 8009b26:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009b28:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009b2a:	429a      	cmp	r2, r3
 8009b2c:	d209      	bcs.n	8009b42 <prvAddNewTaskToReadyList+0xae>
			taskYIELD_IF_USING_PREEMPTION();
 8009b2e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009b32:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009b36:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009b3a:	f3bf 8f4f 	dsb	sy
 8009b3e:	f3bf 8f6f 	isb	sy
}
 8009b42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009b46:	4b10      	ldr	r3, [pc, #64]	; (8009b88 <prvAddNewTaskToReadyList+0xf4>)
 8009b48:	681a      	ldr	r2, [r3, #0]
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009b4a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
			if( xSchedulerRunning == pdFALSE )
 8009b4c:	2a00      	cmp	r2, #0
 8009b4e:	d1d3      	bne.n	8009af8 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009b50:	6832      	ldr	r2, [r6, #0]
 8009b52:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8009b54:	429a      	cmp	r2, r3
 8009b56:	d8cf      	bhi.n	8009af8 <prvAddNewTaskToReadyList+0x64>
					pxCurrentTCB = pxNewTCB;
 8009b58:	6034      	str	r4, [r6, #0]
 8009b5a:	e7cd      	b.n	8009af8 <prvAddNewTaskToReadyList+0x64>
 8009b5c:	2400ae98 	.word	0x2400ae98
 8009b60:	2400aa2c 	.word	0x2400aa2c
 8009b64:	2400aa38 	.word	0x2400aa38
 8009b68:	2400aec0 	.word	0x2400aec0
 8009b6c:	2400aee0 	.word	0x2400aee0
 8009b70:	2400af0c 	.word	0x2400af0c
 8009b74:	2400aef8 	.word	0x2400aef8
 8009b78:	2400aa30 	.word	0x2400aa30
 8009b7c:	2400aa34 	.word	0x2400aa34
 8009b80:	2400aea4 	.word	0x2400aea4
 8009b84:	2400aea8 	.word	0x2400aea8
 8009b88:	2400aef4 	.word	0x2400aef4
 8009b8c:	2400aeac 	.word	0x2400aeac

08009b90 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009b90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009b92:	4b15      	ldr	r3, [pc, #84]	; (8009be8 <prvAddCurrentTaskToDelayedList+0x58>)
{
 8009b94:	4606      	mov	r6, r0
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b96:	4d15      	ldr	r5, [pc, #84]	; (8009bec <prvAddCurrentTaskToDelayedList+0x5c>)
{
 8009b98:	460f      	mov	r7, r1
const TickType_t xConstTickCount = xTickCount;
 8009b9a:	681c      	ldr	r4, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b9c:	6828      	ldr	r0, [r5, #0]
 8009b9e:	3004      	adds	r0, #4
 8009ba0:	f7ff f8c1 	bl	8008d26 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009ba4:	1c73      	adds	r3, r6, #1
 8009ba6:	d107      	bne.n	8009bb8 <prvAddCurrentTaskToDelayedList+0x28>
 8009ba8:	b137      	cbz	r7, 8009bb8 <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009baa:	6829      	ldr	r1, [r5, #0]
 8009bac:	4810      	ldr	r0, [pc, #64]	; (8009bf0 <prvAddCurrentTaskToDelayedList+0x60>)
 8009bae:	3104      	adds	r1, #4

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009bb0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009bb4:	f7ff b894 	b.w	8008ce0 <vListInsertEnd>
			xTimeToWake = xConstTickCount + xTicksToWait;
 8009bb8:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009bba:	682b      	ldr	r3, [r5, #0]
 8009bbc:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009bbe:	d307      	bcc.n	8009bd0 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009bc0:	4b0c      	ldr	r3, [pc, #48]	; (8009bf4 <prvAddCurrentTaskToDelayedList+0x64>)
 8009bc2:	6818      	ldr	r0, [r3, #0]
 8009bc4:	6829      	ldr	r1, [r5, #0]
}
 8009bc6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009bca:	3104      	adds	r1, #4
 8009bcc:	f7ff b894 	b.w	8008cf8 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009bd0:	4b09      	ldr	r3, [pc, #36]	; (8009bf8 <prvAddCurrentTaskToDelayedList+0x68>)
 8009bd2:	6818      	ldr	r0, [r3, #0]
 8009bd4:	6829      	ldr	r1, [r5, #0]
 8009bd6:	3104      	adds	r1, #4
 8009bd8:	f7ff f88e 	bl	8008cf8 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009bdc:	4b07      	ldr	r3, [pc, #28]	; (8009bfc <prvAddCurrentTaskToDelayedList+0x6c>)
 8009bde:	681a      	ldr	r2, [r3, #0]
 8009be0:	42a2      	cmp	r2, r4
 8009be2:	d900      	bls.n	8009be6 <prvAddCurrentTaskToDelayedList+0x56>
					xNextTaskUnblockTime = xTimeToWake;
 8009be4:	601c      	str	r4, [r3, #0]
}
 8009be6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009be8:	2400af20 	.word	0x2400af20
 8009bec:	2400aa2c 	.word	0x2400aa2c
 8009bf0:	2400aef8 	.word	0x2400aef8
 8009bf4:	2400aa34 	.word	0x2400aa34
 8009bf8:	2400aa30 	.word	0x2400aa30
 8009bfc:	2400aed4 	.word	0x2400aed4

08009c00 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009c00:	4a06      	ldr	r2, [pc, #24]	; (8009c1c <prvResetNextTaskUnblockTime+0x1c>)
 8009c02:	6813      	ldr	r3, [r2, #0]
 8009c04:	6819      	ldr	r1, [r3, #0]
 8009c06:	4b06      	ldr	r3, [pc, #24]	; (8009c20 <prvResetNextTaskUnblockTime+0x20>)
 8009c08:	b919      	cbnz	r1, 8009c12 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009c0a:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009c0e:	601a      	str	r2, [r3, #0]
}
 8009c10:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c12:	6812      	ldr	r2, [r2, #0]
 8009c14:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009c16:	68d2      	ldr	r2, [r2, #12]
 8009c18:	6852      	ldr	r2, [r2, #4]
 8009c1a:	e7f8      	b.n	8009c0e <prvResetNextTaskUnblockTime+0xe>
 8009c1c:	2400aa30 	.word	0x2400aa30
 8009c20:	2400aed4 	.word	0x2400aed4

08009c24 <prvDeleteTCB>:
	{
 8009c24:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009c26:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 8009c2a:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009c2c:	b93b      	cbnz	r3, 8009c3e <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 8009c2e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8009c30:	f7ff f80a 	bl	8008c48 <vPortFree>
				vPortFree( pxTCB );
 8009c34:	4620      	mov	r0, r4
	}
 8009c36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009c3a:	f7ff b805 	b.w	8008c48 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009c3e:	2b01      	cmp	r3, #1
 8009c40:	d0f9      	beq.n	8009c36 <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009c42:	2b02      	cmp	r3, #2
 8009c44:	d008      	beq.n	8009c58 <prvDeleteTCB+0x34>
 8009c46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c4a:	f383 8811 	msr	BASEPRI, r3
 8009c4e:	f3bf 8f6f 	isb	sy
 8009c52:	f3bf 8f4f 	dsb	sy
 8009c56:	e7fe      	b.n	8009c56 <prvDeleteTCB+0x32>
	}
 8009c58:	bd10      	pop	{r4, pc}
	...

08009c5c <prvIdleTask>:
{
 8009c5c:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009c5e:	4c14      	ldr	r4, [pc, #80]	; (8009cb0 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c60:	4f14      	ldr	r7, [pc, #80]	; (8009cb4 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 8009c62:	4d15      	ldr	r5, [pc, #84]	; (8009cb8 <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009c64:	6823      	ldr	r3, [r4, #0]
 8009c66:	b983      	cbnz	r3, 8009c8a <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009c68:	4b14      	ldr	r3, [pc, #80]	; (8009cbc <prvIdleTask+0x60>)
 8009c6a:	681b      	ldr	r3, [r3, #0]
 8009c6c:	2b01      	cmp	r3, #1
 8009c6e:	d909      	bls.n	8009c84 <prvIdleTask+0x28>
				taskYIELD();
 8009c70:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009c74:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009c78:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009c7c:	f3bf 8f4f 	dsb	sy
 8009c80:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8009c84:	f7f6 fb84 	bl	8000390 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8009c88:	e7eb      	b.n	8009c62 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009c8a:	f7ff f8c3 	bl	8008e14 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c8e:	68fb      	ldr	r3, [r7, #12]
 8009c90:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009c92:	1d30      	adds	r0, r6, #4
 8009c94:	f7ff f847 	bl	8008d26 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009c98:	682b      	ldr	r3, [r5, #0]
 8009c9a:	3b01      	subs	r3, #1
 8009c9c:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009c9e:	6823      	ldr	r3, [r4, #0]
 8009ca0:	3b01      	subs	r3, #1
 8009ca2:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009ca4:	f7ff f8d6 	bl	8008e54 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009ca8:	4630      	mov	r0, r6
 8009caa:	f7ff ffbb 	bl	8009c24 <prvDeleteTCB>
 8009cae:	e7d9      	b.n	8009c64 <prvIdleTask+0x8>
 8009cb0:	2400ae9c 	.word	0x2400ae9c
 8009cb4:	2400af0c 	.word	0x2400af0c
 8009cb8:	2400ae98 	.word	0x2400ae98
 8009cbc:	2400aa38 	.word	0x2400aa38

08009cc0 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009cc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009cc4:	ea4f 0982 	mov.w	r9, r2, lsl #2
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009cc8:	4606      	mov	r6, r0
 8009cca:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009ccc:	21a5      	movs	r1, #165	; 0xa5
 8009cce:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009cd0:	461f      	mov	r7, r3
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009cd2:	f1a9 0904 	sub.w	r9, r9, #4
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009cd6:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009cda:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009cdc:	f013 f96d 	bl	801cfba <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009ce0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009ce2:	444b      	add	r3, r9
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009ce4:	f023 0907 	bic.w	r9, r3, #7
	if( pcName != NULL )
 8009ce8:	b3b5      	cbz	r5, 8009d58 <prvInitialiseNewTask.constprop.0+0x98>
 8009cea:	1e6b      	subs	r3, r5, #1
 8009cec:	f104 0233 	add.w	r2, r4, #51	; 0x33
 8009cf0:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009cf2:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009cf6:	f802 1f01 	strb.w	r1, [r2, #1]!
			if( pcName[ x ] == ( char ) 0x00 )
 8009cfa:	b109      	cbz	r1, 8009d00 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009cfc:	42ab      	cmp	r3, r5
 8009cfe:	d1f8      	bne.n	8009cf2 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009d00:	2300      	movs	r3, #0
 8009d02:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009d06:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
 8009d08:	f04f 0a00 	mov.w	sl, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009d0c:	1d20      	adds	r0, r4, #4
 8009d0e:	2d37      	cmp	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009d10:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
 8009d14:	bf28      	it	cs
 8009d16:	2537      	movcs	r5, #55	; 0x37
	pxNewTCB->uxPriority = uxPriority;
 8009d18:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009d1a:	64e5      	str	r5, [r4, #76]	; 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d1c:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009d20:	f7fe ffdb 	bl	8008cda <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009d24:	f104 0018 	add.w	r0, r4, #24
 8009d28:	f7fe ffd7 	bl	8008cda <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009d2c:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009d30:	463a      	mov	r2, r7
 8009d32:	4631      	mov	r1, r6
 8009d34:	4648      	mov	r0, r9
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009d36:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009d38:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009d3a:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009d3c:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009d40:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009d44:	f7ff f83e 	bl	8008dc4 <pxPortInitialiseStack>
 8009d48:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009d4a:	f1b8 0f00 	cmp.w	r8, #0
 8009d4e:	d001      	beq.n	8009d54 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009d50:	f8c8 4000 	str.w	r4, [r8]
}
 8009d54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009d58:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009d5c:	e7d3      	b.n	8009d06 <prvInitialiseNewTask.constprop.0+0x46>

08009d5e <xTaskCreateStatic>:
	{
 8009d5e:	b570      	push	{r4, r5, r6, lr}
 8009d60:	b086      	sub	sp, #24
 8009d62:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009d66:	b945      	cbnz	r5, 8009d7a <xTaskCreateStatic+0x1c>
 8009d68:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d6c:	f383 8811 	msr	BASEPRI, r3
 8009d70:	f3bf 8f6f 	isb	sy
 8009d74:	f3bf 8f4f 	dsb	sy
 8009d78:	e7fe      	b.n	8009d78 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009d7a:	b944      	cbnz	r4, 8009d8e <xTaskCreateStatic+0x30>
 8009d7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d80:	f383 8811 	msr	BASEPRI, r3
 8009d84:	f3bf 8f6f 	isb	sy
 8009d88:	f3bf 8f4f 	dsb	sy
 8009d8c:	e7fe      	b.n	8009d8c <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009d8e:	2660      	movs	r6, #96	; 0x60
 8009d90:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009d92:	9e05      	ldr	r6, [sp, #20]
 8009d94:	2e60      	cmp	r6, #96	; 0x60
 8009d96:	d008      	beq.n	8009daa <xTaskCreateStatic+0x4c>
 8009d98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d9c:	f383 8811 	msr	BASEPRI, r3
 8009da0:	f3bf 8f6f 	isb	sy
 8009da4:	f3bf 8f4f 	dsb	sy
 8009da8:	e7fe      	b.n	8009da8 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009daa:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009dac:	2502      	movs	r5, #2
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009dae:	9e05      	ldr	r6, [sp, #20]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009db0:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009db4:	ad04      	add	r5, sp, #16
 8009db6:	9402      	str	r4, [sp, #8]
 8009db8:	9501      	str	r5, [sp, #4]
 8009dba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009dbc:	9500      	str	r5, [sp, #0]
 8009dbe:	f7ff ff7f 	bl	8009cc0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009dc2:	4620      	mov	r0, r4
 8009dc4:	f7ff fe66 	bl	8009a94 <prvAddNewTaskToReadyList>
	}
 8009dc8:	9804      	ldr	r0, [sp, #16]
 8009dca:	b006      	add	sp, #24
 8009dcc:	bd70      	pop	{r4, r5, r6, pc}

08009dce <xTaskCreate>:
	{
 8009dce:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009dd2:	4607      	mov	r7, r0
 8009dd4:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009dd6:	0090      	lsls	r0, r2, #2
	{
 8009dd8:	4688      	mov	r8, r1
 8009dda:	4616      	mov	r6, r2
 8009ddc:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009dde:	f7fe fe9b 	bl	8008b18 <pvPortMalloc>
			if( pxStack != NULL )
 8009de2:	4605      	mov	r5, r0
 8009de4:	b1e8      	cbz	r0, 8009e22 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009de6:	2060      	movs	r0, #96	; 0x60
 8009de8:	f7fe fe96 	bl	8008b18 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009dec:	4604      	mov	r4, r0
 8009dee:	b1a8      	cbz	r0, 8009e1c <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009df0:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
 8009df2:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009df4:	4632      	mov	r2, r6
 8009df6:	4641      	mov	r1, r8
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009df8:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009dfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8009dfe:	9002      	str	r0, [sp, #8]
 8009e00:	4638      	mov	r0, r7
 8009e02:	9301      	str	r3, [sp, #4]
 8009e04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009e06:	9300      	str	r3, [sp, #0]
 8009e08:	464b      	mov	r3, r9
 8009e0a:	f7ff ff59 	bl	8009cc0 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009e0e:	4620      	mov	r0, r4
 8009e10:	f7ff fe40 	bl	8009a94 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009e14:	2001      	movs	r0, #1
	}
 8009e16:	b005      	add	sp, #20
 8009e18:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009e1c:	4628      	mov	r0, r5
 8009e1e:	f7fe ff13 	bl	8008c48 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009e22:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009e26:	e7f6      	b.n	8009e16 <xTaskCreate+0x48>

08009e28 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009e28:	4a02      	ldr	r2, [pc, #8]	; (8009e34 <vTaskSuspendAll+0xc>)
 8009e2a:	6813      	ldr	r3, [r2, #0]
 8009e2c:	3301      	adds	r3, #1
 8009e2e:	6013      	str	r3, [r2, #0]
}
 8009e30:	4770      	bx	lr
 8009e32:	bf00      	nop
 8009e34:	2400aea0 	.word	0x2400aea0

08009e38 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009e38:	4b01      	ldr	r3, [pc, #4]	; (8009e40 <xTaskGetTickCount+0x8>)
 8009e3a:	6818      	ldr	r0, [r3, #0]
}
 8009e3c:	4770      	bx	lr
 8009e3e:	bf00      	nop
 8009e40:	2400af20 	.word	0x2400af20

08009e44 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e44:	4b3f      	ldr	r3, [pc, #252]	; (8009f44 <xTaskIncrementTick+0x100>)
 8009e46:	681b      	ldr	r3, [r3, #0]
{
 8009e48:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e4c:	2b00      	cmp	r3, #0
 8009e4e:	d172      	bne.n	8009f36 <xTaskIncrementTick+0xf2>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009e50:	4b3d      	ldr	r3, [pc, #244]	; (8009f48 <xTaskIncrementTick+0x104>)
 8009e52:	681d      	ldr	r5, [r3, #0]
 8009e54:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009e56:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009e58:	b9bd      	cbnz	r5, 8009e8a <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009e5a:	4b3c      	ldr	r3, [pc, #240]	; (8009f4c <xTaskIncrementTick+0x108>)
 8009e5c:	681a      	ldr	r2, [r3, #0]
 8009e5e:	6812      	ldr	r2, [r2, #0]
 8009e60:	b142      	cbz	r2, 8009e74 <xTaskIncrementTick+0x30>
 8009e62:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e66:	f383 8811 	msr	BASEPRI, r3
 8009e6a:	f3bf 8f6f 	isb	sy
 8009e6e:	f3bf 8f4f 	dsb	sy
 8009e72:	e7fe      	b.n	8009e72 <xTaskIncrementTick+0x2e>
 8009e74:	4a36      	ldr	r2, [pc, #216]	; (8009f50 <xTaskIncrementTick+0x10c>)
 8009e76:	6819      	ldr	r1, [r3, #0]
 8009e78:	6810      	ldr	r0, [r2, #0]
 8009e7a:	6018      	str	r0, [r3, #0]
 8009e7c:	6011      	str	r1, [r2, #0]
 8009e7e:	4a35      	ldr	r2, [pc, #212]	; (8009f54 <xTaskIncrementTick+0x110>)
 8009e80:	6813      	ldr	r3, [r2, #0]
 8009e82:	3301      	adds	r3, #1
 8009e84:	6013      	str	r3, [r2, #0]
 8009e86:	f7ff febb 	bl	8009c00 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009e8a:	4e33      	ldr	r6, [pc, #204]	; (8009f58 <xTaskIncrementTick+0x114>)
BaseType_t xSwitchRequired = pdFALSE;
 8009e8c:	2400      	movs	r4, #0
 8009e8e:	4f33      	ldr	r7, [pc, #204]	; (8009f5c <xTaskIncrementTick+0x118>)
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009e90:	6833      	ldr	r3, [r6, #0]
 8009e92:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009f68 <xTaskIncrementTick+0x124>
 8009e96:	429d      	cmp	r5, r3
 8009e98:	d211      	bcs.n	8009ebe <xTaskIncrementTick+0x7a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009e9a:	f8d8 3000 	ldr.w	r3, [r8]
 8009e9e:	2214      	movs	r2, #20
 8009ea0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ea2:	4353      	muls	r3, r2
 8009ea4:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009ea6:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8009ea8:	4b2d      	ldr	r3, [pc, #180]	; (8009f60 <xTaskIncrementTick+0x11c>)
 8009eaa:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8009eac:	bf28      	it	cs
 8009eae:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8009eb0:	2b00      	cmp	r3, #0
 8009eb2:	bf18      	it	ne
 8009eb4:	2401      	movne	r4, #1
}
 8009eb6:	4620      	mov	r0, r4
 8009eb8:	b003      	add	sp, #12
 8009eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009ebe:	f8df 908c 	ldr.w	r9, [pc, #140]	; 8009f4c <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009ec2:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 8009f6c <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009ec6:	f8d9 3000 	ldr.w	r3, [r9]
 8009eca:	681b      	ldr	r3, [r3, #0]
 8009ecc:	b91b      	cbnz	r3, 8009ed6 <xTaskIncrementTick+0x92>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009ece:	f04f 33ff 	mov.w	r3, #4294967295
 8009ed2:	6033      	str	r3, [r6, #0]
					break;
 8009ed4:	e7e1      	b.n	8009e9a <xTaskIncrementTick+0x56>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ed6:	f8d9 3000 	ldr.w	r3, [r9]
 8009eda:	68db      	ldr	r3, [r3, #12]
 8009edc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009ee0:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009ee4:	4295      	cmp	r5, r2
 8009ee6:	d201      	bcs.n	8009eec <xTaskIncrementTick+0xa8>
						xNextTaskUnblockTime = xItemValue;
 8009ee8:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009eea:	e7d6      	b.n	8009e9a <xTaskIncrementTick+0x56>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009eec:	f10b 0104 	add.w	r1, fp, #4
 8009ef0:	4608      	mov	r0, r1
 8009ef2:	9101      	str	r1, [sp, #4]
 8009ef4:	f7fe ff17 	bl	8008d26 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009ef8:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009efc:	9901      	ldr	r1, [sp, #4]
 8009efe:	b122      	cbz	r2, 8009f0a <xTaskIncrementTick+0xc6>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009f00:	f10b 0018 	add.w	r0, fp, #24
 8009f04:	f7fe ff0f 	bl	8008d26 <uxListRemove>
 8009f08:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009f0a:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009f0e:	f8da 2000 	ldr.w	r2, [sl]
 8009f12:	4290      	cmp	r0, r2
 8009f14:	d901      	bls.n	8009f1a <xTaskIncrementTick+0xd6>
 8009f16:	f8ca 0000 	str.w	r0, [sl]
 8009f1a:	2314      	movs	r3, #20
 8009f1c:	fb03 7000 	mla	r0, r3, r0, r7
 8009f20:	f7fe fede 	bl	8008ce0 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009f24:	f8d8 1000 	ldr.w	r1, [r8]
 8009f28:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009f2c:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009f2e:	429a      	cmp	r2, r3
 8009f30:	bf28      	it	cs
 8009f32:	2401      	movcs	r4, #1
 8009f34:	e7c7      	b.n	8009ec6 <xTaskIncrementTick+0x82>
		++xPendedTicks;
 8009f36:	4a0b      	ldr	r2, [pc, #44]	; (8009f64 <xTaskIncrementTick+0x120>)
BaseType_t xSwitchRequired = pdFALSE;
 8009f38:	2400      	movs	r4, #0
		++xPendedTicks;
 8009f3a:	6813      	ldr	r3, [r2, #0]
 8009f3c:	3301      	adds	r3, #1
 8009f3e:	6013      	str	r3, [r2, #0]
	return xSwitchRequired;
 8009f40:	e7b9      	b.n	8009eb6 <xTaskIncrementTick+0x72>
 8009f42:	bf00      	nop
 8009f44:	2400aea0 	.word	0x2400aea0
 8009f48:	2400af20 	.word	0x2400af20
 8009f4c:	2400aa30 	.word	0x2400aa30
 8009f50:	2400aa34 	.word	0x2400aa34
 8009f54:	2400aed8 	.word	0x2400aed8
 8009f58:	2400aed4 	.word	0x2400aed4
 8009f5c:	2400aa38 	.word	0x2400aa38
 8009f60:	2400af24 	.word	0x2400af24
 8009f64:	2400aedc 	.word	0x2400aedc
 8009f68:	2400aa2c 	.word	0x2400aa2c
 8009f6c:	2400aea8 	.word	0x2400aea8

08009f70 <xTaskResumeAll>:
{
 8009f70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009f72:	4c31      	ldr	r4, [pc, #196]	; (800a038 <xTaskResumeAll+0xc8>)
 8009f74:	6823      	ldr	r3, [r4, #0]
 8009f76:	b943      	cbnz	r3, 8009f8a <xTaskResumeAll+0x1a>
 8009f78:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f7c:	f383 8811 	msr	BASEPRI, r3
 8009f80:	f3bf 8f6f 	isb	sy
 8009f84:	f3bf 8f4f 	dsb	sy
 8009f88:	e7fe      	b.n	8009f88 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009f8a:	f7fe ff43 	bl	8008e14 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009f8e:	6823      	ldr	r3, [r4, #0]
 8009f90:	3b01      	subs	r3, #1
 8009f92:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009f94:	6824      	ldr	r4, [r4, #0]
 8009f96:	b12c      	cbz	r4, 8009fa4 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009f98:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009f9a:	f7fe ff5b 	bl	8008e54 <vPortExitCritical>
}
 8009f9e:	4620      	mov	r0, r4
 8009fa0:	b003      	add	sp, #12
 8009fa2:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009fa4:	4b25      	ldr	r3, [pc, #148]	; (800a03c <xTaskResumeAll+0xcc>)
 8009fa6:	681b      	ldr	r3, [r3, #0]
 8009fa8:	2b00      	cmp	r3, #0
 8009faa:	d0f5      	beq.n	8009f98 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009fac:	4d24      	ldr	r5, [pc, #144]	; (800a040 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009fae:	4e25      	ldr	r6, [pc, #148]	; (800a044 <xTaskResumeAll+0xd4>)
 8009fb0:	4f25      	ldr	r7, [pc, #148]	; (800a048 <xTaskResumeAll+0xd8>)
 8009fb2:	e01e      	b.n	8009ff2 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fb4:	68eb      	ldr	r3, [r5, #12]
 8009fb6:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009fb8:	f104 0018 	add.w	r0, r4, #24
 8009fbc:	f7fe feb3 	bl	8008d26 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009fc0:	1d21      	adds	r1, r4, #4
 8009fc2:	4608      	mov	r0, r1
 8009fc4:	9101      	str	r1, [sp, #4]
 8009fc6:	f7fe feae 	bl	8008d26 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009fca:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009fcc:	6832      	ldr	r2, [r6, #0]
 8009fce:	9901      	ldr	r1, [sp, #4]
 8009fd0:	4293      	cmp	r3, r2
 8009fd2:	d900      	bls.n	8009fd6 <xTaskResumeAll+0x66>
 8009fd4:	6033      	str	r3, [r6, #0]
 8009fd6:	2014      	movs	r0, #20
 8009fd8:	fb00 7003 	mla	r0, r0, r3, r7
 8009fdc:	f7fe fe80 	bl	8008ce0 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009fe0:	4b1a      	ldr	r3, [pc, #104]	; (800a04c <xTaskResumeAll+0xdc>)
 8009fe2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009fe4:	681b      	ldr	r3, [r3, #0]
 8009fe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009fe8:	429a      	cmp	r2, r3
 8009fea:	d302      	bcc.n	8009ff2 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009fec:	4b18      	ldr	r3, [pc, #96]	; (800a050 <xTaskResumeAll+0xe0>)
 8009fee:	2201      	movs	r2, #1
 8009ff0:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009ff2:	682b      	ldr	r3, [r5, #0]
 8009ff4:	2b00      	cmp	r3, #0
 8009ff6:	d1dd      	bne.n	8009fb4 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009ff8:	b10c      	cbz	r4, 8009ffe <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009ffa:	f7ff fe01 	bl	8009c00 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8009ffe:	4d15      	ldr	r5, [pc, #84]	; (800a054 <xTaskResumeAll+0xe4>)
 800a000:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800a002:	b144      	cbz	r4, 800a016 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800a004:	4e12      	ldr	r6, [pc, #72]	; (800a050 <xTaskResumeAll+0xe0>)
 800a006:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a008:	f7ff ff1c 	bl	8009e44 <xTaskIncrementTick>
 800a00c:	b100      	cbz	r0, 800a010 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800a00e:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800a010:	3c01      	subs	r4, #1
 800a012:	d1f9      	bne.n	800a008 <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800a014:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a016:	4b0e      	ldr	r3, [pc, #56]	; (800a050 <xTaskResumeAll+0xe0>)
 800a018:	681b      	ldr	r3, [r3, #0]
 800a01a:	2b00      	cmp	r3, #0
 800a01c:	d0bc      	beq.n	8009f98 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800a01e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a022:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a026:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a02a:	f3bf 8f4f 	dsb	sy
 800a02e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a032:	2401      	movs	r4, #1
 800a034:	e7b1      	b.n	8009f9a <xTaskResumeAll+0x2a>
 800a036:	bf00      	nop
 800a038:	2400aea0 	.word	0x2400aea0
 800a03c:	2400ae98 	.word	0x2400ae98
 800a040:	2400aee0 	.word	0x2400aee0
 800a044:	2400aea8 	.word	0x2400aea8
 800a048:	2400aa38 	.word	0x2400aa38
 800a04c:	2400aa2c 	.word	0x2400aa2c
 800a050:	2400af24 	.word	0x2400af24
 800a054:	2400aedc 	.word	0x2400aedc

0800a058 <vTaskDelay>:
	{
 800a058:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a05a:	b950      	cbnz	r0, 800a072 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800a05c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a060:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a064:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a068:	f3bf 8f4f 	dsb	sy
 800a06c:	f3bf 8f6f 	isb	sy
	}
 800a070:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800a072:	4b0a      	ldr	r3, [pc, #40]	; (800a09c <vTaskDelay+0x44>)
 800a074:	6819      	ldr	r1, [r3, #0]
 800a076:	b141      	cbz	r1, 800a08a <vTaskDelay+0x32>
 800a078:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a07c:	f383 8811 	msr	BASEPRI, r3
 800a080:	f3bf 8f6f 	isb	sy
 800a084:	f3bf 8f4f 	dsb	sy
 800a088:	e7fe      	b.n	800a088 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800a08a:	f7ff fecd 	bl	8009e28 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a08e:	f7ff fd7f 	bl	8009b90 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800a092:	f7ff ff6d 	bl	8009f70 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800a096:	2800      	cmp	r0, #0
 800a098:	d0e0      	beq.n	800a05c <vTaskDelay+0x4>
 800a09a:	e7e9      	b.n	800a070 <vTaskDelay+0x18>
 800a09c:	2400aea0 	.word	0x2400aea0

0800a0a0 <vTaskSetApplicationTaskTag>:
	{
 800a0a0:	b538      	push	{r3, r4, r5, lr}
 800a0a2:	460d      	mov	r5, r1
		if( xTask == NULL )
 800a0a4:	4604      	mov	r4, r0
 800a0a6:	b908      	cbnz	r0, 800a0ac <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800a0a8:	4b04      	ldr	r3, [pc, #16]	; (800a0bc <vTaskSetApplicationTaskTag+0x1c>)
 800a0aa:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800a0ac:	f7fe feb2 	bl	8008e14 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800a0b0:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800a0b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800a0b6:	f7fe becd 	b.w	8008e54 <vPortExitCritical>
 800a0ba:	bf00      	nop
 800a0bc:	2400aa2c 	.word	0x2400aa2c

0800a0c0 <xTaskCallApplicationTaskHook>:
	{
 800a0c0:	4603      	mov	r3, r0
 800a0c2:	4608      	mov	r0, r1
		if( xTask == NULL )
 800a0c4:	b90b      	cbnz	r3, 800a0ca <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800a0c6:	4b03      	ldr	r3, [pc, #12]	; (800a0d4 <xTaskCallApplicationTaskHook+0x14>)
 800a0c8:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800a0ca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a0cc:	b103      	cbz	r3, 800a0d0 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800a0ce:	4718      	bx	r3
	}
 800a0d0:	4618      	mov	r0, r3
 800a0d2:	4770      	bx	lr
 800a0d4:	2400aa2c 	.word	0x2400aa2c

0800a0d8 <vTaskStartScheduler>:
{
 800a0d8:	b510      	push	{r4, lr}
 800a0da:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800a0dc:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a0de:	aa07      	add	r2, sp, #28
 800a0e0:	a906      	add	r1, sp, #24
 800a0e2:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800a0e4:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a0e8:	f7fe fcd8 	bl	8008a9c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800a0ec:	9b05      	ldr	r3, [sp, #20]
 800a0ee:	9a07      	ldr	r2, [sp, #28]
 800a0f0:	9302      	str	r3, [sp, #8]
 800a0f2:	9b06      	ldr	r3, [sp, #24]
 800a0f4:	4919      	ldr	r1, [pc, #100]	; (800a15c <vTaskStartScheduler+0x84>)
 800a0f6:	481a      	ldr	r0, [pc, #104]	; (800a160 <vTaskStartScheduler+0x88>)
 800a0f8:	e9cd 4300 	strd	r4, r3, [sp]
 800a0fc:	4623      	mov	r3, r4
 800a0fe:	f7ff fe2e 	bl	8009d5e <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800a102:	b340      	cbz	r0, 800a156 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800a104:	f000 fa88 	bl	800a618 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800a108:	2801      	cmp	r0, #1
 800a10a:	d119      	bne.n	800a140 <vTaskStartScheduler+0x68>
 800a10c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a110:	f383 8811 	msr	BASEPRI, r3
 800a114:	f3bf 8f6f 	isb	sy
 800a118:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800a11c:	f04f 32ff 	mov.w	r2, #4294967295
 800a120:	4b10      	ldr	r3, [pc, #64]	; (800a164 <vTaskStartScheduler+0x8c>)
		traceTASK_SWITCHED_IN();
 800a122:	4621      	mov	r1, r4
		xNextTaskUnblockTime = portMAX_DELAY;
 800a124:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800a126:	4b10      	ldr	r3, [pc, #64]	; (800a168 <vTaskStartScheduler+0x90>)
 800a128:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800a12a:	4b10      	ldr	r3, [pc, #64]	; (800a16c <vTaskStartScheduler+0x94>)
 800a12c:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800a12e:	4b10      	ldr	r3, [pc, #64]	; (800a170 <vTaskStartScheduler+0x98>)
 800a130:	6818      	ldr	r0, [r3, #0]
 800a132:	f7ff ffc5 	bl	800a0c0 <xTaskCallApplicationTaskHook>
}
 800a136:	b008      	add	sp, #32
 800a138:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800a13c:	f7fe befa 	b.w	8008f34 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a140:	3001      	adds	r0, #1
 800a142:	d108      	bne.n	800a156 <vTaskStartScheduler+0x7e>
 800a144:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a148:	f383 8811 	msr	BASEPRI, r3
 800a14c:	f3bf 8f6f 	isb	sy
 800a150:	f3bf 8f4f 	dsb	sy
 800a154:	e7fe      	b.n	800a154 <vTaskStartScheduler+0x7c>
}
 800a156:	b008      	add	sp, #32
 800a158:	bd10      	pop	{r4, pc}
 800a15a:	bf00      	nop
 800a15c:	0801ecef 	.word	0x0801ecef
 800a160:	08009c5d 	.word	0x08009c5d
 800a164:	2400aed4 	.word	0x2400aed4
 800a168:	2400aef4 	.word	0x2400aef4
 800a16c:	2400af20 	.word	0x2400af20
 800a170:	2400aa2c 	.word	0x2400aa2c

0800a174 <vTaskSwitchContext>:
{
 800a174:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a176:	4b1c      	ldr	r3, [pc, #112]	; (800a1e8 <vTaskSwitchContext+0x74>)
 800a178:	681a      	ldr	r2, [r3, #0]
 800a17a:	4b1c      	ldr	r3, [pc, #112]	; (800a1ec <vTaskSwitchContext+0x78>)
 800a17c:	b112      	cbz	r2, 800a184 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a17e:	2201      	movs	r2, #1
 800a180:	601a      	str	r2, [r3, #0]
}
 800a182:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800a184:	4c1a      	ldr	r4, [pc, #104]	; (800a1f0 <vTaskSwitchContext+0x7c>)
 800a186:	2101      	movs	r1, #1
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a188:	4e1a      	ldr	r6, [pc, #104]	; (800a1f4 <vTaskSwitchContext+0x80>)
 800a18a:	2714      	movs	r7, #20
		xYieldPending = pdFALSE;
 800a18c:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 800a18e:	6820      	ldr	r0, [r4, #0]
 800a190:	f7ff ff96 	bl	800a0c0 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a194:	6832      	ldr	r2, [r6, #0]
 800a196:	4918      	ldr	r1, [pc, #96]	; (800a1f8 <vTaskSwitchContext+0x84>)
 800a198:	fb07 f302 	mul.w	r3, r7, r2
 800a19c:	58cd      	ldr	r5, [r1, r3]
 800a19e:	18c8      	adds	r0, r1, r3
 800a1a0:	b1ad      	cbz	r5, 800a1ce <vTaskSwitchContext+0x5a>
 800a1a2:	6845      	ldr	r5, [r0, #4]
 800a1a4:	3308      	adds	r3, #8
 800a1a6:	686d      	ldr	r5, [r5, #4]
 800a1a8:	440b      	add	r3, r1
 800a1aa:	429d      	cmp	r5, r3
 800a1ac:	6045      	str	r5, [r0, #4]
 800a1ae:	bf04      	itt	eq
 800a1b0:	686b      	ldreq	r3, [r5, #4]
 800a1b2:	6043      	streq	r3, [r0, #4]
 800a1b4:	2314      	movs	r3, #20
 800a1b6:	fb03 1102 	mla	r1, r3, r2, r1
 800a1ba:	684b      	ldr	r3, [r1, #4]
		traceTASK_SWITCHED_IN();
 800a1bc:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1be:	68db      	ldr	r3, [r3, #12]
 800a1c0:	6023      	str	r3, [r4, #0]
 800a1c2:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800a1c4:	6820      	ldr	r0, [r4, #0]
}
 800a1c6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800a1ca:	f7ff bf79 	b.w	800a0c0 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1ce:	b942      	cbnz	r2, 800a1e2 <vTaskSwitchContext+0x6e>
 800a1d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1d4:	f383 8811 	msr	BASEPRI, r3
 800a1d8:	f3bf 8f6f 	isb	sy
 800a1dc:	f3bf 8f4f 	dsb	sy
 800a1e0:	e7fe      	b.n	800a1e0 <vTaskSwitchContext+0x6c>
 800a1e2:	3a01      	subs	r2, #1
 800a1e4:	e7d8      	b.n	800a198 <vTaskSwitchContext+0x24>
 800a1e6:	bf00      	nop
 800a1e8:	2400aea0 	.word	0x2400aea0
 800a1ec:	2400af24 	.word	0x2400af24
 800a1f0:	2400aa2c 	.word	0x2400aa2c
 800a1f4:	2400aea8 	.word	0x2400aea8
 800a1f8:	2400aa38 	.word	0x2400aa38

0800a1fc <vTaskPlaceOnEventList>:
{
 800a1fc:	b510      	push	{r4, lr}
 800a1fe:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a200:	b940      	cbnz	r0, 800a214 <vTaskPlaceOnEventList+0x18>
 800a202:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a206:	f383 8811 	msr	BASEPRI, r3
 800a20a:	f3bf 8f6f 	isb	sy
 800a20e:	f3bf 8f4f 	dsb	sy
 800a212:	e7fe      	b.n	800a212 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a214:	4b05      	ldr	r3, [pc, #20]	; (800a22c <vTaskPlaceOnEventList+0x30>)
 800a216:	6819      	ldr	r1, [r3, #0]
 800a218:	3118      	adds	r1, #24
 800a21a:	f7fe fd6d 	bl	8008cf8 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a21e:	4620      	mov	r0, r4
 800a220:	2101      	movs	r1, #1
}
 800a222:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a226:	f7ff bcb3 	b.w	8009b90 <prvAddCurrentTaskToDelayedList>
 800a22a:	bf00      	nop
 800a22c:	2400aa2c 	.word	0x2400aa2c

0800a230 <vTaskPlaceOnEventListRestricted>:
	{
 800a230:	b538      	push	{r3, r4, r5, lr}
 800a232:	460d      	mov	r5, r1
 800a234:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a236:	b940      	cbnz	r0, 800a24a <vTaskPlaceOnEventListRestricted+0x1a>
 800a238:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a23c:	f383 8811 	msr	BASEPRI, r3
 800a240:	f3bf 8f6f 	isb	sy
 800a244:	f3bf 8f4f 	dsb	sy
 800a248:	e7fe      	b.n	800a248 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a24a:	4b07      	ldr	r3, [pc, #28]	; (800a268 <vTaskPlaceOnEventListRestricted+0x38>)
 800a24c:	6819      	ldr	r1, [r3, #0]
 800a24e:	3118      	adds	r1, #24
 800a250:	f7fe fd46 	bl	8008ce0 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a254:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a256:	4621      	mov	r1, r4
 800a258:	bf0c      	ite	eq
 800a25a:	4628      	moveq	r0, r5
 800a25c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a260:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a264:	f7ff bc94 	b.w	8009b90 <prvAddCurrentTaskToDelayedList>
 800a268:	2400aa2c 	.word	0x2400aa2c

0800a26c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a26c:	68c3      	ldr	r3, [r0, #12]
{
 800a26e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a270:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a272:	b944      	cbnz	r4, 800a286 <xTaskRemoveFromEventList+0x1a>
 800a274:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a278:	f383 8811 	msr	BASEPRI, r3
 800a27c:	f3bf 8f6f 	isb	sy
 800a280:	f3bf 8f4f 	dsb	sy
 800a284:	e7fe      	b.n	800a284 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a286:	f104 0118 	add.w	r1, r4, #24
 800a28a:	4608      	mov	r0, r1
 800a28c:	9101      	str	r1, [sp, #4]
 800a28e:	f7fe fd4a 	bl	8008d26 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a292:	4b12      	ldr	r3, [pc, #72]	; (800a2dc <xTaskRemoveFromEventList+0x70>)
 800a294:	9901      	ldr	r1, [sp, #4]
 800a296:	681b      	ldr	r3, [r3, #0]
 800a298:	b9e3      	cbnz	r3, 800a2d4 <xTaskRemoveFromEventList+0x68>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a29a:	1d21      	adds	r1, r4, #4
 800a29c:	4608      	mov	r0, r1
 800a29e:	9101      	str	r1, [sp, #4]
 800a2a0:	f7fe fd41 	bl	8008d26 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a2a4:	4a0e      	ldr	r2, [pc, #56]	; (800a2e0 <xTaskRemoveFromEventList+0x74>)
 800a2a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a2a8:	6810      	ldr	r0, [r2, #0]
 800a2aa:	9901      	ldr	r1, [sp, #4]
 800a2ac:	4283      	cmp	r3, r0
 800a2ae:	d900      	bls.n	800a2b2 <xTaskRemoveFromEventList+0x46>
 800a2b0:	6013      	str	r3, [r2, #0]
 800a2b2:	4a0c      	ldr	r2, [pc, #48]	; (800a2e4 <xTaskRemoveFromEventList+0x78>)
 800a2b4:	2014      	movs	r0, #20
 800a2b6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a2ba:	f7fe fd11 	bl	8008ce0 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a2be:	4b0a      	ldr	r3, [pc, #40]	; (800a2e8 <xTaskRemoveFromEventList+0x7c>)
 800a2c0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a2c2:	681b      	ldr	r3, [r3, #0]
 800a2c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a2c6:	429a      	cmp	r2, r3
 800a2c8:	d906      	bls.n	800a2d8 <xTaskRemoveFromEventList+0x6c>
		xYieldPending = pdTRUE;
 800a2ca:	2001      	movs	r0, #1
 800a2cc:	4b07      	ldr	r3, [pc, #28]	; (800a2ec <xTaskRemoveFromEventList+0x80>)
 800a2ce:	6018      	str	r0, [r3, #0]
}
 800a2d0:	b002      	add	sp, #8
 800a2d2:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a2d4:	4806      	ldr	r0, [pc, #24]	; (800a2f0 <xTaskRemoveFromEventList+0x84>)
 800a2d6:	e7f0      	b.n	800a2ba <xTaskRemoveFromEventList+0x4e>
		xReturn = pdFALSE;
 800a2d8:	2000      	movs	r0, #0
	return xReturn;
 800a2da:	e7f9      	b.n	800a2d0 <xTaskRemoveFromEventList+0x64>
 800a2dc:	2400aea0 	.word	0x2400aea0
 800a2e0:	2400aea8 	.word	0x2400aea8
 800a2e4:	2400aa38 	.word	0x2400aa38
 800a2e8:	2400aa2c 	.word	0x2400aa2c
 800a2ec:	2400af24 	.word	0x2400af24
 800a2f0:	2400aee0 	.word	0x2400aee0

0800a2f4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a2f4:	4b03      	ldr	r3, [pc, #12]	; (800a304 <vTaskInternalSetTimeOutState+0x10>)
 800a2f6:	681b      	ldr	r3, [r3, #0]
 800a2f8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a2fa:	4b03      	ldr	r3, [pc, #12]	; (800a308 <vTaskInternalSetTimeOutState+0x14>)
 800a2fc:	681b      	ldr	r3, [r3, #0]
 800a2fe:	6043      	str	r3, [r0, #4]
}
 800a300:	4770      	bx	lr
 800a302:	bf00      	nop
 800a304:	2400aed8 	.word	0x2400aed8
 800a308:	2400af20 	.word	0x2400af20

0800a30c <xTaskCheckForTimeOut>:
{
 800a30c:	b570      	push	{r4, r5, r6, lr}
 800a30e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a310:	4605      	mov	r5, r0
 800a312:	b940      	cbnz	r0, 800a326 <xTaskCheckForTimeOut+0x1a>
 800a314:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a318:	f383 8811 	msr	BASEPRI, r3
 800a31c:	f3bf 8f6f 	isb	sy
 800a320:	f3bf 8f4f 	dsb	sy
 800a324:	e7fe      	b.n	800a324 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a326:	b941      	cbnz	r1, 800a33a <xTaskCheckForTimeOut+0x2e>
 800a328:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a32c:	f383 8811 	msr	BASEPRI, r3
 800a330:	f3bf 8f6f 	isb	sy
 800a334:	f3bf 8f4f 	dsb	sy
 800a338:	e7fe      	b.n	800a338 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a33a:	f7fe fd6b 	bl	8008e14 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a33e:	4b0f      	ldr	r3, [pc, #60]	; (800a37c <xTaskCheckForTimeOut+0x70>)
 800a340:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a342:	6823      	ldr	r3, [r4, #0]
 800a344:	1c5a      	adds	r2, r3, #1
 800a346:	d010      	beq.n	800a36a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a348:	480d      	ldr	r0, [pc, #52]	; (800a380 <xTaskCheckForTimeOut+0x74>)
 800a34a:	682e      	ldr	r6, [r5, #0]
 800a34c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a34e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a350:	4286      	cmp	r6, r0
 800a352:	d001      	beq.n	800a358 <xTaskCheckForTimeOut+0x4c>
 800a354:	428a      	cmp	r2, r1
 800a356:	d90f      	bls.n	800a378 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a358:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a35a:	4283      	cmp	r3, r0
 800a35c:	d90a      	bls.n	800a374 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a35e:	1a5b      	subs	r3, r3, r1
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a360:	4628      	mov	r0, r5
			*pxTicksToWait -= xElapsedTime;
 800a362:	4413      	add	r3, r2
 800a364:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a366:	f7ff ffc5 	bl	800a2f4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a36a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a36c:	f7fe fd72 	bl	8008e54 <vPortExitCritical>
}
 800a370:	4620      	mov	r0, r4
 800a372:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a374:	2300      	movs	r3, #0
 800a376:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a378:	2401      	movs	r4, #1
 800a37a:	e7f7      	b.n	800a36c <xTaskCheckForTimeOut+0x60>
 800a37c:	2400af20 	.word	0x2400af20
 800a380:	2400aed8 	.word	0x2400aed8

0800a384 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a384:	4b01      	ldr	r3, [pc, #4]	; (800a38c <vTaskMissedYield+0x8>)
 800a386:	2201      	movs	r2, #1
 800a388:	601a      	str	r2, [r3, #0]
}
 800a38a:	4770      	bx	lr
 800a38c:	2400af24 	.word	0x2400af24

0800a390 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a390:	4b05      	ldr	r3, [pc, #20]	; (800a3a8 <xTaskGetSchedulerState+0x18>)
 800a392:	681b      	ldr	r3, [r3, #0]
 800a394:	b133      	cbz	r3, 800a3a4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a396:	4b05      	ldr	r3, [pc, #20]	; (800a3ac <xTaskGetSchedulerState+0x1c>)
 800a398:	6818      	ldr	r0, [r3, #0]
 800a39a:	fab0 f080 	clz	r0, r0
 800a39e:	0940      	lsrs	r0, r0, #5
 800a3a0:	0040      	lsls	r0, r0, #1
 800a3a2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a3a4:	2001      	movs	r0, #1
	}
 800a3a6:	4770      	bx	lr
 800a3a8:	2400aef4 	.word	0x2400aef4
 800a3ac:	2400aea0 	.word	0x2400aea0

0800a3b0 <xTaskPriorityInherit>:
	{
 800a3b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a3b2:	4604      	mov	r4, r0
 800a3b4:	b340      	cbz	r0, 800a408 <xTaskPriorityInherit+0x58>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a3b6:	4d1b      	ldr	r5, [pc, #108]	; (800a424 <xTaskPriorityInherit+0x74>)
 800a3b8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a3ba:	682a      	ldr	r2, [r5, #0]
 800a3bc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a3be:	4293      	cmp	r3, r2
 800a3c0:	d228      	bcs.n	800a414 <xTaskPriorityInherit+0x64>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a3c2:	6982      	ldr	r2, [r0, #24]
 800a3c4:	2a00      	cmp	r2, #0
 800a3c6:	db04      	blt.n	800a3d2 <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3c8:	682a      	ldr	r2, [r5, #0]
 800a3ca:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a3cc:	f1c2 0238 	rsb	r2, r2, #56	; 0x38
 800a3d0:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a3d2:	2214      	movs	r2, #20
 800a3d4:	4e14      	ldr	r6, [pc, #80]	; (800a428 <xTaskPriorityInherit+0x78>)
 800a3d6:	fb02 6303 	mla	r3, r2, r3, r6
 800a3da:	6962      	ldr	r2, [r4, #20]
 800a3dc:	429a      	cmp	r2, r3
 800a3de:	d115      	bne.n	800a40c <xTaskPriorityInherit+0x5c>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a3e0:	1d21      	adds	r1, r4, #4
 800a3e2:	4608      	mov	r0, r1
 800a3e4:	9101      	str	r1, [sp, #4]
 800a3e6:	f7fe fc9e 	bl	8008d26 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a3ea:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a3ec:	4a0f      	ldr	r2, [pc, #60]	; (800a42c <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a3ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a3f0:	6810      	ldr	r0, [r2, #0]
 800a3f2:	9901      	ldr	r1, [sp, #4]
 800a3f4:	4283      	cmp	r3, r0
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a3f6:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a3f8:	d900      	bls.n	800a3fc <xTaskPriorityInherit+0x4c>
 800a3fa:	6013      	str	r3, [r2, #0]
 800a3fc:	2014      	movs	r0, #20
 800a3fe:	fb00 6003 	mla	r0, r0, r3, r6
 800a402:	f7fe fc6d 	bl	8008ce0 <vListInsertEnd>
				xReturn = pdTRUE;
 800a406:	2001      	movs	r0, #1
	}
 800a408:	b002      	add	sp, #8
 800a40a:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a40c:	682b      	ldr	r3, [r5, #0]
 800a40e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a410:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a412:	e7f8      	b.n	800a406 <xTaskPriorityInherit+0x56>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a414:	682b      	ldr	r3, [r5, #0]
 800a416:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a418:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a41a:	4298      	cmp	r0, r3
 800a41c:	bf2c      	ite	cs
 800a41e:	2000      	movcs	r0, #0
 800a420:	2001      	movcc	r0, #1
 800a422:	e7f1      	b.n	800a408 <xTaskPriorityInherit+0x58>
 800a424:	2400aa2c 	.word	0x2400aa2c
 800a428:	2400aa38 	.word	0x2400aa38
 800a42c:	2400aea8 	.word	0x2400aea8

0800a430 <xTaskPriorityDisinherit>:
	{
 800a430:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a432:	b910      	cbnz	r0, 800a43a <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a434:	2000      	movs	r0, #0
	}
 800a436:	b002      	add	sp, #8
 800a438:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a43a:	4b1c      	ldr	r3, [pc, #112]	; (800a4ac <xTaskPriorityDisinherit+0x7c>)
 800a43c:	681c      	ldr	r4, [r3, #0]
 800a43e:	4284      	cmp	r4, r0
 800a440:	d008      	beq.n	800a454 <xTaskPriorityDisinherit+0x24>
 800a442:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a446:	f383 8811 	msr	BASEPRI, r3
 800a44a:	f3bf 8f6f 	isb	sy
 800a44e:	f3bf 8f4f 	dsb	sy
 800a452:	e7fe      	b.n	800a452 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a454:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a456:	b943      	cbnz	r3, 800a46a <xTaskPriorityDisinherit+0x3a>
 800a458:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a45c:	f383 8811 	msr	BASEPRI, r3
 800a460:	f3bf 8f6f 	isb	sy
 800a464:	f3bf 8f4f 	dsb	sy
 800a468:	e7fe      	b.n	800a468 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a46a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
			( pxTCB->uxMutexesHeld )--;
 800a46c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a46e:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a470:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a472:	4291      	cmp	r1, r2
 800a474:	d0de      	beq.n	800a434 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a476:	2b00      	cmp	r3, #0
 800a478:	d1dc      	bne.n	800a434 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a47a:	1d21      	adds	r1, r4, #4
 800a47c:	4608      	mov	r0, r1
 800a47e:	9101      	str	r1, [sp, #4]
 800a480:	f7fe fc51 	bl	8008d26 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a484:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a486:	9901      	ldr	r1, [sp, #4]
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a488:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a48c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a48e:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a490:	4a07      	ldr	r2, [pc, #28]	; (800a4b0 <xTaskPriorityDisinherit+0x80>)
 800a492:	6810      	ldr	r0, [r2, #0]
 800a494:	4283      	cmp	r3, r0
 800a496:	d900      	bls.n	800a49a <xTaskPriorityDisinherit+0x6a>
 800a498:	6013      	str	r3, [r2, #0]
 800a49a:	4a06      	ldr	r2, [pc, #24]	; (800a4b4 <xTaskPriorityDisinherit+0x84>)
 800a49c:	2014      	movs	r0, #20
 800a49e:	fb00 2003 	mla	r0, r0, r3, r2
 800a4a2:	f7fe fc1d 	bl	8008ce0 <vListInsertEnd>
					xReturn = pdTRUE;
 800a4a6:	2001      	movs	r0, #1
		return xReturn;
 800a4a8:	e7c5      	b.n	800a436 <xTaskPriorityDisinherit+0x6>
 800a4aa:	bf00      	nop
 800a4ac:	2400aa2c 	.word	0x2400aa2c
 800a4b0:	2400aea8 	.word	0x2400aea8
 800a4b4:	2400aa38 	.word	0x2400aa38

0800a4b8 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a4b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a4ba:	4604      	mov	r4, r0
 800a4bc:	2800      	cmp	r0, #0
 800a4be:	d044      	beq.n	800a54a <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a4c0:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a4c2:	b942      	cbnz	r2, 800a4d6 <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a4c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4c8:	f383 8811 	msr	BASEPRI, r3
 800a4cc:	f3bf 8f6f 	isb	sy
 800a4d0:	f3bf 8f4f 	dsb	sy
 800a4d4:	e7fe      	b.n	800a4d4 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a4d6:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a4d8:	4299      	cmp	r1, r3
 800a4da:	bf38      	it	cc
 800a4dc:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a4de:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a4e0:	428b      	cmp	r3, r1
 800a4e2:	d032      	beq.n	800a54a <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a4e4:	2a01      	cmp	r2, #1
 800a4e6:	d130      	bne.n	800a54a <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a4e8:	4a19      	ldr	r2, [pc, #100]	; (800a550 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a4ea:	6812      	ldr	r2, [r2, #0]
 800a4ec:	4282      	cmp	r2, r0
 800a4ee:	d108      	bne.n	800a502 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a4f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4f4:	f383 8811 	msr	BASEPRI, r3
 800a4f8:	f3bf 8f6f 	isb	sy
 800a4fc:	f3bf 8f4f 	dsb	sy
 800a500:	e7fe      	b.n	800a500 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a502:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a504:	4d13      	ldr	r5, [pc, #76]	; (800a554 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a506:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a508:	f04f 0214 	mov.w	r2, #20
					pxTCB->uxPriority = uxPriorityToUse;
 800a50c:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a50e:	fb02 5303 	mla	r3, r2, r3, r5
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a512:	bfa8      	it	ge
 800a514:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a518:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a51a:	bfa8      	it	ge
 800a51c:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a51e:	429a      	cmp	r2, r3
 800a520:	d113      	bne.n	800a54a <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a522:	1d01      	adds	r1, r0, #4
 800a524:	4608      	mov	r0, r1
 800a526:	9101      	str	r1, [sp, #4]
 800a528:	f7fe fbfd 	bl	8008d26 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a52c:	4a0a      	ldr	r2, [pc, #40]	; (800a558 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a52e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a530:	6810      	ldr	r0, [r2, #0]
 800a532:	9901      	ldr	r1, [sp, #4]
 800a534:	4283      	cmp	r3, r0
 800a536:	d900      	bls.n	800a53a <vTaskPriorityDisinheritAfterTimeout+0x82>
 800a538:	6013      	str	r3, [r2, #0]
 800a53a:	2014      	movs	r0, #20
 800a53c:	fb00 5003 	mla	r0, r0, r3, r5
	}
 800a540:	b003      	add	sp, #12
 800a542:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a546:	f7fe bbcb 	b.w	8008ce0 <vListInsertEnd>
	}
 800a54a:	b003      	add	sp, #12
 800a54c:	bd30      	pop	{r4, r5, pc}
 800a54e:	bf00      	nop
 800a550:	2400aa2c 	.word	0x2400aa2c
 800a554:	2400aa38 	.word	0x2400aa38
 800a558:	2400aea8 	.word	0x2400aea8

0800a55c <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a55c:	4b04      	ldr	r3, [pc, #16]	; (800a570 <pvTaskIncrementMutexHeldCount+0x14>)
 800a55e:	681a      	ldr	r2, [r3, #0]
 800a560:	b11a      	cbz	r2, 800a56a <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a562:	6819      	ldr	r1, [r3, #0]
 800a564:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a566:	3201      	adds	r2, #1
 800a568:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a56a:	6818      	ldr	r0, [r3, #0]
	}
 800a56c:	4770      	bx	lr
 800a56e:	bf00      	nop
 800a570:	2400aa2c 	.word	0x2400aa2c

0800a574 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a574:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a576:	4c11      	ldr	r4, [pc, #68]	; (800a5bc <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a578:	f7fe fc4c 	bl	8008e14 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a57c:	6825      	ldr	r5, [r4, #0]
 800a57e:	b9bd      	cbnz	r5, 800a5b0 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a580:	4f0f      	ldr	r7, [pc, #60]	; (800a5c0 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a582:	4e10      	ldr	r6, [pc, #64]	; (800a5c4 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a584:	4638      	mov	r0, r7
 800a586:	f7fe fb9d 	bl	8008cc4 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a58a:	4630      	mov	r0, r6
 800a58c:	f7fe fb9a 	bl	8008cc4 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a590:	4b0d      	ldr	r3, [pc, #52]	; (800a5c8 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a592:	4a0e      	ldr	r2, [pc, #56]	; (800a5cc <prvCheckForValidListAndQueue+0x58>)
 800a594:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
 800a596:	601f      	str	r7, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a598:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
 800a59a:	4b0d      	ldr	r3, [pc, #52]	; (800a5d0 <prvCheckForValidListAndQueue+0x5c>)
 800a59c:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a59e:	4b0d      	ldr	r3, [pc, #52]	; (800a5d4 <prvCheckForValidListAndQueue+0x60>)
 800a5a0:	9500      	str	r5, [sp, #0]
 800a5a2:	f7fe fe47 	bl	8009234 <xQueueGenericCreateStatic>
 800a5a6:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a5a8:	b110      	cbz	r0, 800a5b0 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a5aa:	490b      	ldr	r1, [pc, #44]	; (800a5d8 <prvCheckForValidListAndQueue+0x64>)
 800a5ac:	f7ff fa12 	bl	80099d4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a5b0:	b003      	add	sp, #12
 800a5b2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a5b6:	f7fe bc4d 	b.w	8008e54 <vPortExitCritical>
 800a5ba:	bf00      	nop
 800a5bc:	2400b04c 	.word	0x2400b04c
 800a5c0:	2400afd0 	.word	0x2400afd0
 800a5c4:	2400afe4 	.word	0x2400afe4
 800a5c8:	2400af28 	.word	0x2400af28
 800a5cc:	2400af30 	.word	0x2400af30
 800a5d0:	2400af2c 	.word	0x2400af2c
 800a5d4:	2400affc 	.word	0x2400affc
 800a5d8:	0801ecf4 	.word	0x0801ecf4

0800a5dc <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a5dc:	4291      	cmp	r1, r2
{
 800a5de:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a5e0:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a5e2:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a5e4:	d80a      	bhi.n	800a5fc <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a5e6:	1ad3      	subs	r3, r2, r3
 800a5e8:	6982      	ldr	r2, [r0, #24]
 800a5ea:	4293      	cmp	r3, r2
 800a5ec:	d20d      	bcs.n	800a60a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a5ee:	1d01      	adds	r1, r0, #4
 800a5f0:	4b07      	ldr	r3, [pc, #28]	; (800a610 <prvInsertTimerInActiveList+0x34>)
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a5f2:	6818      	ldr	r0, [r3, #0]
 800a5f4:	f7fe fb80 	bl	8008cf8 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a5f8:	2000      	movs	r0, #0
}
 800a5fa:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a5fc:	429a      	cmp	r2, r3
 800a5fe:	d201      	bcs.n	800a604 <prvInsertTimerInActiveList+0x28>
 800a600:	4299      	cmp	r1, r3
 800a602:	d202      	bcs.n	800a60a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a604:	1d01      	adds	r1, r0, #4
 800a606:	4b03      	ldr	r3, [pc, #12]	; (800a614 <prvInsertTimerInActiveList+0x38>)
 800a608:	e7f3      	b.n	800a5f2 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a60a:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a60c:	e7f5      	b.n	800a5fa <prvInsertTimerInActiveList+0x1e>
 800a60e:	bf00      	nop
 800a610:	2400af2c 	.word	0x2400af2c
 800a614:	2400af28 	.word	0x2400af28

0800a618 <xTimerCreateTimerTask>:
{
 800a618:	b510      	push	{r4, lr}
 800a61a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a61c:	f7ff ffaa 	bl	800a574 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a620:	4b12      	ldr	r3, [pc, #72]	; (800a66c <xTimerCreateTimerTask+0x54>)
 800a622:	681b      	ldr	r3, [r3, #0]
 800a624:	b1b3      	cbz	r3, 800a654 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a626:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a628:	aa07      	add	r2, sp, #28
 800a62a:	a906      	add	r1, sp, #24
 800a62c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a62e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a632:	f7fe fa3f 	bl	8008ab4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a636:	9b05      	ldr	r3, [sp, #20]
 800a638:	9a07      	ldr	r2, [sp, #28]
 800a63a:	9302      	str	r3, [sp, #8]
 800a63c:	9b06      	ldr	r3, [sp, #24]
 800a63e:	490c      	ldr	r1, [pc, #48]	; (800a670 <xTimerCreateTimerTask+0x58>)
 800a640:	9301      	str	r3, [sp, #4]
 800a642:	2302      	movs	r3, #2
 800a644:	480b      	ldr	r0, [pc, #44]	; (800a674 <xTimerCreateTimerTask+0x5c>)
 800a646:	9300      	str	r3, [sp, #0]
 800a648:	4623      	mov	r3, r4
 800a64a:	f7ff fb88 	bl	8009d5e <xTaskCreateStatic>
 800a64e:	4b0a      	ldr	r3, [pc, #40]	; (800a678 <xTimerCreateTimerTask+0x60>)
 800a650:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a652:	b940      	cbnz	r0, 800a666 <xTimerCreateTimerTask+0x4e>
 800a654:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a658:	f383 8811 	msr	BASEPRI, r3
 800a65c:	f3bf 8f6f 	isb	sy
 800a660:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a664:	e7fe      	b.n	800a664 <xTimerCreateTimerTask+0x4c>
}
 800a666:	2001      	movs	r0, #1
 800a668:	b008      	add	sp, #32
 800a66a:	bd10      	pop	{r4, pc}
 800a66c:	2400b04c 	.word	0x2400b04c
 800a670:	0801ecf9 	.word	0x0801ecf9
 800a674:	0800a77d 	.word	0x0800a77d
 800a678:	2400b050 	.word	0x2400b050

0800a67c <xTimerGenericCommand>:
{
 800a67c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a67e:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a680:	4604      	mov	r4, r0
{
 800a682:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a684:	b940      	cbnz	r0, 800a698 <xTimerGenericCommand+0x1c>
 800a686:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a68a:	f383 8811 	msr	BASEPRI, r3
 800a68e:	f3bf 8f6f 	isb	sy
 800a692:	f3bf 8f4f 	dsb	sy
 800a696:	e7fe      	b.n	800a696 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a698:	4d0c      	ldr	r5, [pc, #48]	; (800a6cc <xTimerGenericCommand+0x50>)
 800a69a:	6828      	ldr	r0, [r5, #0]
 800a69c:	b178      	cbz	r0, 800a6be <xTimerGenericCommand+0x42>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a69e:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a6a0:	9402      	str	r4, [sp, #8]
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a6a2:	e9cd 1600 	strd	r1, r6, [sp]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a6a6:	dc0c      	bgt.n	800a6c2 <xTimerGenericCommand+0x46>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a6a8:	f7ff fe72 	bl	800a390 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a6ac:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a6ae:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a6b0:	4669      	mov	r1, sp
 800a6b2:	6828      	ldr	r0, [r5, #0]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a6b4:	bf0c      	ite	eq
 800a6b6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a6b8:	461a      	movne	r2, r3
 800a6ba:	f7fe fe70 	bl	800939e <xQueueGenericSend>
}
 800a6be:	b004      	add	sp, #16
 800a6c0:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a6c2:	2300      	movs	r3, #0
 800a6c4:	4669      	mov	r1, sp
 800a6c6:	f7fe ff1d 	bl	8009504 <xQueueGenericSendFromISR>
 800a6ca:	e7f8      	b.n	800a6be <xTimerGenericCommand+0x42>
 800a6cc:	2400b04c 	.word	0x2400b04c

0800a6d0 <prvSampleTimeNow>:
{
 800a6d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a6d4:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a778 <prvSampleTimeNow+0xa8>
{
 800a6d8:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a6da:	f7ff fbad 	bl	8009e38 <xTaskGetTickCount>
 800a6de:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a6e0:	f8d8 3000 	ldr.w	r3, [r8]
 800a6e4:	4283      	cmp	r3, r0
 800a6e6:	d90b      	bls.n	800a700 <prvSampleTimeNow+0x30>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a6e8:	4f21      	ldr	r7, [pc, #132]	; (800a770 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a6ea:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a6ee:	683b      	ldr	r3, [r7, #0]
 800a6f0:	681a      	ldr	r2, [r3, #0]
 800a6f2:	b96a      	cbnz	r2, 800a710 <prvSampleTimeNow+0x40>
	pxCurrentTimerList = pxOverflowTimerList;
 800a6f4:	4a1f      	ldr	r2, [pc, #124]	; (800a774 <prvSampleTimeNow+0xa4>)
 800a6f6:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
 800a6f8:	6013      	str	r3, [r2, #0]
 800a6fa:	2301      	movs	r3, #1
	pxCurrentTimerList = pxOverflowTimerList;
 800a6fc:	6039      	str	r1, [r7, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a6fe:	e000      	b.n	800a702 <prvSampleTimeNow+0x32>
 800a700:	2300      	movs	r3, #0
}
 800a702:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdTRUE;
 800a704:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a706:	f8c8 5000 	str.w	r5, [r8]
}
 800a70a:	b004      	add	sp, #16
 800a70c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a710:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a712:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a714:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a718:	1d21      	adds	r1, r4, #4
 800a71a:	4608      	mov	r0, r1
 800a71c:	9103      	str	r1, [sp, #12]
 800a71e:	f7fe fb02 	bl	8008d26 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a722:	6a23      	ldr	r3, [r4, #32]
 800a724:	4620      	mov	r0, r4
 800a726:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a728:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a72c:	9903      	ldr	r1, [sp, #12]
 800a72e:	f013 0f04 	tst.w	r3, #4
 800a732:	d0dc      	beq.n	800a6ee <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a734:	69a3      	ldr	r3, [r4, #24]
 800a736:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a738:	459a      	cmp	sl, r3
 800a73a:	d205      	bcs.n	800a748 <prvSampleTimeNow+0x78>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a73c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a73e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a740:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a742:	f7fe fad9 	bl	8008cf8 <vListInsert>
 800a746:	e7d2      	b.n	800a6ee <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a748:	2300      	movs	r3, #0
 800a74a:	4652      	mov	r2, sl
 800a74c:	4620      	mov	r0, r4
 800a74e:	f8cd 9000 	str.w	r9, [sp]
 800a752:	4619      	mov	r1, r3
 800a754:	f7ff ff92 	bl	800a67c <xTimerGenericCommand>
				configASSERT( xResult );
 800a758:	2800      	cmp	r0, #0
 800a75a:	d1c8      	bne.n	800a6ee <prvSampleTimeNow+0x1e>
 800a75c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a760:	f383 8811 	msr	BASEPRI, r3
 800a764:	f3bf 8f6f 	isb	sy
 800a768:	f3bf 8f4f 	dsb	sy
 800a76c:	e7fe      	b.n	800a76c <prvSampleTimeNow+0x9c>
 800a76e:	bf00      	nop
 800a770:	2400af28 	.word	0x2400af28
 800a774:	2400af2c 	.word	0x2400af2c
 800a778:	2400aff8 	.word	0x2400aff8

0800a77c <prvTimerTask>:
{
 800a77c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a780:	4d6e      	ldr	r5, [pc, #440]	; (800a93c <prvTimerTask+0x1c0>)
{
 800a782:	b089      	sub	sp, #36	; 0x24
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a784:	4e6e      	ldr	r6, [pc, #440]	; (800a940 <prvTimerTask+0x1c4>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a786:	682b      	ldr	r3, [r5, #0]
 800a788:	f8d3 8000 	ldr.w	r8, [r3]
 800a78c:	f1b8 0f00 	cmp.w	r8, #0
 800a790:	d035      	beq.n	800a7fe <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a792:	68db      	ldr	r3, [r3, #12]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a794:	2400      	movs	r4, #0
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a796:	f8d3 8000 	ldr.w	r8, [r3]
	vTaskSuspendAll();
 800a79a:	f7ff fb45 	bl	8009e28 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a79e:	a804      	add	r0, sp, #16
 800a7a0:	f7ff ff96 	bl	800a6d0 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a7a4:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a7a6:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a7a8:	2b00      	cmp	r3, #0
 800a7aa:	d169      	bne.n	800a880 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a7ac:	2c00      	cmp	r4, #0
 800a7ae:	d14c      	bne.n	800a84a <prvTimerTask+0xce>
 800a7b0:	4540      	cmp	r0, r8
 800a7b2:	d350      	bcc.n	800a856 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a7b4:	f7ff fbdc 	bl	8009f70 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a7b8:	682b      	ldr	r3, [r5, #0]
 800a7ba:	68db      	ldr	r3, [r3, #12]
 800a7bc:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a7be:	1d38      	adds	r0, r7, #4
 800a7c0:	f7fe fab1 	bl	8008d26 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a7c4:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a7c8:	0758      	lsls	r0, r3, #29
 800a7ca:	d51a      	bpl.n	800a802 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a7cc:	69b9      	ldr	r1, [r7, #24]
 800a7ce:	4643      	mov	r3, r8
 800a7d0:	464a      	mov	r2, r9
 800a7d2:	4638      	mov	r0, r7
 800a7d4:	4441      	add	r1, r8
 800a7d6:	f7ff ff01 	bl	800a5dc <prvInsertTimerInActiveList>
 800a7da:	b1b0      	cbz	r0, 800a80a <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a7dc:	4623      	mov	r3, r4
 800a7de:	4642      	mov	r2, r8
 800a7e0:	4621      	mov	r1, r4
 800a7e2:	4638      	mov	r0, r7
 800a7e4:	9400      	str	r4, [sp, #0]
 800a7e6:	f7ff ff49 	bl	800a67c <xTimerGenericCommand>
			configASSERT( xResult );
 800a7ea:	b970      	cbnz	r0, 800a80a <prvTimerTask+0x8e>
 800a7ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a7f0:	f383 8811 	msr	BASEPRI, r3
 800a7f4:	f3bf 8f6f 	isb	sy
 800a7f8:	f3bf 8f4f 	dsb	sy
 800a7fc:	e7fe      	b.n	800a7fc <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a7fe:	2401      	movs	r4, #1
 800a800:	e7cb      	b.n	800a79a <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a802:	f023 0301 	bic.w	r3, r3, #1
 800a806:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a80a:	6a3b      	ldr	r3, [r7, #32]
 800a80c:	4638      	mov	r0, r7
 800a80e:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a810:	2200      	movs	r2, #0
 800a812:	a904      	add	r1, sp, #16
 800a814:	6830      	ldr	r0, [r6, #0]
 800a816:	f7fe ff2b 	bl	8009670 <xQueueReceive>
 800a81a:	2800      	cmp	r0, #0
 800a81c:	d0b3      	beq.n	800a786 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a81e:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a820:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a822:	2b00      	cmp	r3, #0
 800a824:	db2f      	blt.n	800a886 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a826:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a828:	6963      	ldr	r3, [r4, #20]
 800a82a:	2b00      	cmp	r3, #0
 800a82c:	d132      	bne.n	800a894 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a82e:	a803      	add	r0, sp, #12
 800a830:	f7ff ff4e 	bl	800a6d0 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a834:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a836:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a838:	2b09      	cmp	r3, #9
 800a83a:	d8e9      	bhi.n	800a810 <prvTimerTask+0x94>
 800a83c:	e8df f003 	tbb	[pc, r3]
 800a840:	572e2e2e 	.word	0x572e2e2e
 800a844:	2e2e765e 	.word	0x2e2e765e
 800a848:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a84a:	4b3e      	ldr	r3, [pc, #248]	; (800a944 <prvTimerTask+0x1c8>)
 800a84c:	681b      	ldr	r3, [r3, #0]
 800a84e:	681c      	ldr	r4, [r3, #0]
 800a850:	fab4 f484 	clz	r4, r4
 800a854:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a856:	4622      	mov	r2, r4
 800a858:	eba8 0109 	sub.w	r1, r8, r9
 800a85c:	6830      	ldr	r0, [r6, #0]
 800a85e:	f7ff f8f6 	bl	8009a4e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a862:	f7ff fb85 	bl	8009f70 <xTaskResumeAll>
 800a866:	2800      	cmp	r0, #0
 800a868:	d1d2      	bne.n	800a810 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a86a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a86e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a872:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a876:	f3bf 8f4f 	dsb	sy
 800a87a:	f3bf 8f6f 	isb	sy
 800a87e:	e7c7      	b.n	800a810 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a880:	f7ff fb76 	bl	8009f70 <xTaskResumeAll>
}
 800a884:	e7c4      	b.n	800a810 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a886:	9b05      	ldr	r3, [sp, #20]
 800a888:	9907      	ldr	r1, [sp, #28]
 800a88a:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a88c:	9b04      	ldr	r3, [sp, #16]
 800a88e:	2b00      	cmp	r3, #0
 800a890:	dbbe      	blt.n	800a810 <prvTimerTask+0x94>
 800a892:	e7c8      	b.n	800a826 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a894:	1d20      	adds	r0, r4, #4
 800a896:	f7fe fa46 	bl	8008d26 <uxListRemove>
 800a89a:	e7c8      	b.n	800a82e <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a89c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a8a0:	4620      	mov	r0, r4
 800a8a2:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a8a4:	f043 0301 	orr.w	r3, r3, #1
 800a8a8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a8ac:	9b05      	ldr	r3, [sp, #20]
 800a8ae:	4419      	add	r1, r3
 800a8b0:	f7ff fe94 	bl	800a5dc <prvInsertTimerInActiveList>
 800a8b4:	2800      	cmp	r0, #0
 800a8b6:	d0ab      	beq.n	800a810 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a8b8:	6a23      	ldr	r3, [r4, #32]
 800a8ba:	4620      	mov	r0, r4
 800a8bc:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a8be:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a8c2:	0759      	lsls	r1, r3, #29
 800a8c4:	d5a4      	bpl.n	800a810 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a8c6:	69a2      	ldr	r2, [r4, #24]
 800a8c8:	2300      	movs	r3, #0
 800a8ca:	9905      	ldr	r1, [sp, #20]
 800a8cc:	4620      	mov	r0, r4
 800a8ce:	9300      	str	r3, [sp, #0]
 800a8d0:	440a      	add	r2, r1
 800a8d2:	4619      	mov	r1, r3
 800a8d4:	f7ff fed2 	bl	800a67c <xTimerGenericCommand>
							configASSERT( xResult );
 800a8d8:	2800      	cmp	r0, #0
 800a8da:	d199      	bne.n	800a810 <prvTimerTask+0x94>
 800a8dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8e0:	f383 8811 	msr	BASEPRI, r3
 800a8e4:	f3bf 8f6f 	isb	sy
 800a8e8:	f3bf 8f4f 	dsb	sy
 800a8ec:	e7fe      	b.n	800a8ec <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a8ee:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a8f2:	f023 0301 	bic.w	r3, r3, #1
 800a8f6:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a8fa:	e789      	b.n	800a810 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a8fc:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a900:	f043 0301 	orr.w	r3, r3, #1
 800a904:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a908:	9905      	ldr	r1, [sp, #20]
 800a90a:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a90c:	b941      	cbnz	r1, 800a920 <prvTimerTask+0x1a4>
 800a90e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a912:	f383 8811 	msr	BASEPRI, r3
 800a916:	f3bf 8f6f 	isb	sy
 800a91a:	f3bf 8f4f 	dsb	sy
 800a91e:	e7fe      	b.n	800a91e <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a920:	4603      	mov	r3, r0
 800a922:	4401      	add	r1, r0
 800a924:	4620      	mov	r0, r4
 800a926:	f7ff fe59 	bl	800a5dc <prvInsertTimerInActiveList>
					break;
 800a92a:	e771      	b.n	800a810 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a92c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a930:	079a      	lsls	r2, r3, #30
 800a932:	d4de      	bmi.n	800a8f2 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a934:	4620      	mov	r0, r4
 800a936:	f7fe f987 	bl	8008c48 <vPortFree>
 800a93a:	e769      	b.n	800a810 <prvTimerTask+0x94>
 800a93c:	2400af28 	.word	0x2400af28
 800a940:	2400b04c 	.word	0x2400b04c
 800a944:	2400af2c 	.word	0x2400af2c

0800a948 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a948:	8880      	ldrh	r0, [r0, #4]
 800a94a:	4770      	bx	lr

0800a94c <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a94c:	b570      	push	{r4, r5, r6, lr}
 800a94e:	6803      	ldr	r3, [r0, #0]
 800a950:	460c      	mov	r4, r1
 800a952:	2100      	movs	r1, #0
 800a954:	4605      	mov	r5, r0
 800a956:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a958:	4798      	blx	r3
 800a95a:	4606      	mov	r6, r0
 800a95c:	682b      	ldr	r3, [r5, #0]
 800a95e:	4628      	mov	r0, r5
 800a960:	1ba4      	subs	r4, r4, r6
 800a962:	6a1b      	ldr	r3, [r3, #32]
 800a964:	b2a4      	uxth	r4, r4
 800a966:	4798      	blx	r3
 800a968:	fbb4 f0f0 	udiv	r0, r4, r0
 800a96c:	bd70      	pop	{r4, r5, r6, pc}

0800a96e <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a96e:	2300      	movs	r3, #0
 800a970:	8083      	strh	r3, [r0, #4]
 800a972:	4770      	bx	lr

0800a974 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a974:	b510      	push	{r4, lr}
 800a976:	6803      	ldr	r3, [r0, #0]
 800a978:	4604      	mov	r4, r0
 800a97a:	8881      	ldrh	r1, [r0, #4]
 800a97c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a97e:	4798      	blx	r3
 800a980:	88a3      	ldrh	r3, [r4, #4]
 800a982:	3301      	adds	r3, #1
 800a984:	80a3      	strh	r3, [r4, #4]
 800a986:	bd10      	pop	{r4, pc}

0800a988 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a988:	6803      	ldr	r3, [r0, #0]
 800a98a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a98c:	4718      	bx	r3

0800a98e <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a98e:	4770      	bx	lr

0800a990 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a990:	4a02      	ldr	r2, [pc, #8]	; (800a99c <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a992:	6002      	str	r2, [r0, #0]
 800a994:	2200      	movs	r2, #0
 800a996:	8082      	strh	r2, [r0, #4]
 800a998:	4770      	bx	lr
 800a99a:	bf00      	nop
 800a99c:	0801ed0c 	.word	0x0801ed0c

0800a9a0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a9a0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a9a2:	2000      	movs	r0, #0
 800a9a4:	b12b      	cbz	r3, 800a9b2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a9a6:	b920      	cbnz	r0, 800a9b2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a9a8:	1a5a      	subs	r2, r3, r1
 800a9aa:	699b      	ldr	r3, [r3, #24]
 800a9ac:	4250      	negs	r0, r2
 800a9ae:	4150      	adcs	r0, r2
 800a9b0:	e7f8      	b.n	800a9a4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a9b2:	4770      	bx	lr

0800a9b4 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a9b4:	2300      	movs	r3, #0
 800a9b6:	6148      	str	r0, [r1, #20]
 800a9b8:	618b      	str	r3, [r1, #24]
 800a9ba:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a9bc:	b913      	cbnz	r3, 800a9c4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800a9be:	6281      	str	r1, [r0, #40]	; 0x28
 800a9c0:	4770      	bx	lr
 800a9c2:	4613      	mov	r3, r2
 800a9c4:	699a      	ldr	r2, [r3, #24]
 800a9c6:	2a00      	cmp	r2, #0
 800a9c8:	d1fb      	bne.n	800a9c2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800a9ca:	6199      	str	r1, [r3, #24]
 800a9cc:	4770      	bx	lr

0800a9ce <_ZN8touchgfx9Container9removeAllEv>:
 800a9ce:	2200      	movs	r2, #0
 800a9d0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a9d2:	b123      	cbz	r3, 800a9de <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a9d4:	6999      	ldr	r1, [r3, #24]
 800a9d6:	6281      	str	r1, [r0, #40]	; 0x28
 800a9d8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a9dc:	e7f8      	b.n	800a9d0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a9de:	4770      	bx	lr

0800a9e0 <_ZN8touchgfx9Container6unlinkEv>:
 800a9e0:	2300      	movs	r3, #0
 800a9e2:	6283      	str	r3, [r0, #40]	; 0x28
 800a9e4:	4770      	bx	lr

0800a9e6 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a9e6:	2200      	movs	r2, #0
 800a9e8:	8002      	strh	r2, [r0, #0]
 800a9ea:	8042      	strh	r2, [r0, #2]
 800a9ec:	8082      	strh	r2, [r0, #4]
 800a9ee:	80c2      	strh	r2, [r0, #6]
 800a9f0:	4770      	bx	lr

0800a9f2 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a9f2:	b570      	push	{r4, r5, r6, lr}
 800a9f4:	460d      	mov	r5, r1
 800a9f6:	4616      	mov	r6, r2
 800a9f8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a9fa:	b13c      	cbz	r4, 800aa0c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a9fc:	6823      	ldr	r3, [r4, #0]
 800a9fe:	4620      	mov	r0, r4
 800aa00:	4632      	mov	r2, r6
 800aa02:	4629      	mov	r1, r5
 800aa04:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800aa06:	4798      	blx	r3
 800aa08:	69a4      	ldr	r4, [r4, #24]
 800aa0a:	e7f6      	b.n	800a9fa <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aa0c:	bd70      	pop	{r4, r5, r6, pc}

0800aa0e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aa0e:	b538      	push	{r3, r4, r5, lr}
 800aa10:	460d      	mov	r5, r1
 800aa12:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa14:	b134      	cbz	r4, 800aa24 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aa16:	682b      	ldr	r3, [r5, #0]
 800aa18:	4621      	mov	r1, r4
 800aa1a:	4628      	mov	r0, r5
 800aa1c:	689b      	ldr	r3, [r3, #8]
 800aa1e:	4798      	blx	r3
 800aa20:	69a4      	ldr	r4, [r4, #24]
 800aa22:	e7f7      	b.n	800aa14 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aa24:	bd38      	pop	{r3, r4, r5, pc}

0800aa26 <_ZNK8touchgfx9Container17invalidateContentEv>:
 800aa26:	b510      	push	{r4, lr}
 800aa28:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa2a:	b12c      	cbz	r4, 800aa38 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800aa2c:	6823      	ldr	r3, [r4, #0]
 800aa2e:	4620      	mov	r0, r4
 800aa30:	699b      	ldr	r3, [r3, #24]
 800aa32:	4798      	blx	r3
 800aa34:	69a4      	ldr	r4, [r4, #24]
 800aa36:	e7f8      	b.n	800aa2a <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800aa38:	bd10      	pop	{r4, pc}

0800aa3a <_ZN8touchgfx9ContainerD1Ev>:
 800aa3a:	4770      	bx	lr

0800aa3c <_ZN8touchgfx9ContainerD0Ev>:
 800aa3c:	b510      	push	{r4, lr}
 800aa3e:	4604      	mov	r4, r0
 800aa40:	212c      	movs	r1, #44	; 0x2c
 800aa42:	f012 f886 	bl	801cb52 <_ZdlPvj>
 800aa46:	4620      	mov	r0, r4
 800aa48:	bd10      	pop	{r4, pc}

0800aa4a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800aa4a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa4c:	b19b      	cbz	r3, 800aa76 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aa4e:	428b      	cmp	r3, r1
 800aa50:	d109      	bne.n	800aa66 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aa52:	699a      	ldr	r2, [r3, #24]
 800aa54:	2100      	movs	r1, #0
 800aa56:	6159      	str	r1, [r3, #20]
 800aa58:	6282      	str	r2, [r0, #40]	; 0x28
 800aa5a:	b902      	cbnz	r2, 800aa5e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aa5c:	4770      	bx	lr
 800aa5e:	6199      	str	r1, [r3, #24]
 800aa60:	4770      	bx	lr
 800aa62:	4613      	mov	r3, r2
 800aa64:	b13a      	cbz	r2, 800aa76 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aa66:	699a      	ldr	r2, [r3, #24]
 800aa68:	428a      	cmp	r2, r1
 800aa6a:	d1fa      	bne.n	800aa62 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aa6c:	698a      	ldr	r2, [r1, #24]
 800aa6e:	619a      	str	r2, [r3, #24]
 800aa70:	2300      	movs	r3, #0
 800aa72:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aa76:	4770      	bx	lr

0800aa78 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aa78:	b410      	push	{r4}
 800aa7a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa7c:	4604      	mov	r4, r0
 800aa7e:	b92b      	cbnz	r3, 800aa8c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aa80:	6803      	ldr	r3, [r0, #0]
 800aa82:	4611      	mov	r1, r2
 800aa84:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aa88:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aa8a:	4718      	bx	r3
 800aa8c:	b941      	cbnz	r1, 800aaa0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aa8e:	6193      	str	r3, [r2, #24]
 800aa90:	6282      	str	r2, [r0, #40]	; 0x28
 800aa92:	6154      	str	r4, [r2, #20]
 800aa94:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aa98:	4770      	bx	lr
 800aa9a:	4603      	mov	r3, r0
 800aa9c:	2800      	cmp	r0, #0
 800aa9e:	d0f9      	beq.n	800aa94 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800aaa0:	4299      	cmp	r1, r3
 800aaa2:	6998      	ldr	r0, [r3, #24]
 800aaa4:	d1f9      	bne.n	800aa9a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800aaa6:	6190      	str	r0, [r2, #24]
 800aaa8:	618a      	str	r2, [r1, #24]
 800aaaa:	e7f2      	b.n	800aa92 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800aaac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800aaac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aab0:	461f      	mov	r7, r3
 800aab2:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800aab6:	460d      	mov	r5, r1
 800aab8:	4616      	mov	r6, r2
 800aaba:	b103      	cbz	r3, 800aabe <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800aabc:	6038      	str	r0, [r7, #0]
 800aabe:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aac0:	b314      	cbz	r4, 800ab08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800aac2:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800aac6:	b1eb      	cbz	r3, 800ab04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aac8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800aacc:	428d      	cmp	r5, r1
 800aace:	db19      	blt.n	800ab04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aad0:	b289      	uxth	r1, r1
 800aad2:	8923      	ldrh	r3, [r4, #8]
 800aad4:	440b      	add	r3, r1
 800aad6:	b21b      	sxth	r3, r3
 800aad8:	429d      	cmp	r5, r3
 800aada:	da13      	bge.n	800ab04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aadc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800aae0:	4296      	cmp	r6, r2
 800aae2:	db0f      	blt.n	800ab04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aae4:	b292      	uxth	r2, r2
 800aae6:	8963      	ldrh	r3, [r4, #10]
 800aae8:	4413      	add	r3, r2
 800aaea:	b21b      	sxth	r3, r3
 800aaec:	429e      	cmp	r6, r3
 800aaee:	da09      	bge.n	800ab04 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800aaf0:	6823      	ldr	r3, [r4, #0]
 800aaf2:	1ab2      	subs	r2, r6, r2
 800aaf4:	1a69      	subs	r1, r5, r1
 800aaf6:	4620      	mov	r0, r4
 800aaf8:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800aafc:	b212      	sxth	r2, r2
 800aafe:	463b      	mov	r3, r7
 800ab00:	b209      	sxth	r1, r1
 800ab02:	47c0      	blx	r8
 800ab04:	69a4      	ldr	r4, [r4, #24]
 800ab06:	e7db      	b.n	800aac0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ab08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ab0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab10:	4c6d      	ldr	r4, [pc, #436]	; (800acc8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800ab12:	b0a1      	sub	sp, #132	; 0x84
 800ab14:	4606      	mov	r6, r0
 800ab16:	6824      	ldr	r4, [r4, #0]
 800ab18:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ab1a:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ab1e:	2400      	movs	r4, #0
 800ab20:	9303      	str	r3, [sp, #12]
 800ab22:	802c      	strh	r4, [r5, #0]
 800ab24:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800ab26:	802c      	strh	r4, [r5, #0]
 800ab28:	601c      	str	r4, [r3, #0]
 800ab2a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ab2e:	f7ff ffbd 	bl	800aaac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ab32:	f1b9 0f03 	cmp.w	r9, #3
 800ab36:	f340 80c1 	ble.w	800acbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800ab3a:	4631      	mov	r1, r6
 800ab3c:	a80c      	add	r0, sp, #48	; 0x30
 800ab3e:	f004 fadb 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab42:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800ab46:	9306      	str	r3, [sp, #24]
 800ab48:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800ab4c:	9307      	str	r3, [sp, #28]
 800ab4e:	9b03      	ldr	r3, [sp, #12]
 800ab50:	f8d3 a000 	ldr.w	sl, [r3]
 800ab54:	f1ba 0f00 	cmp.w	sl, #0
 800ab58:	f000 80b3 	beq.w	800acc2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800ab5c:	4651      	mov	r1, sl
 800ab5e:	a810      	add	r0, sp, #64	; 0x40
 800ab60:	f004 faca 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ab64:	2002      	movs	r0, #2
 800ab66:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ab6a:	9b01      	ldr	r3, [sp, #4]
 800ab6c:	9a06      	ldr	r2, [sp, #24]
 800ab6e:	fb91 f1f0 	sdiv	r1, r1, r0
 800ab72:	189d      	adds	r5, r3, r2
 800ab74:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800ab78:	9a07      	ldr	r2, [sp, #28]
 800ab7a:	4419      	add	r1, r3
 800ab7c:	9b02      	ldr	r3, [sp, #8]
 800ab7e:	4413      	add	r3, r2
 800ab80:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ab84:	1a6d      	subs	r5, r5, r1
 800ab86:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ab8a:	fb92 f2f0 	sdiv	r2, r2, r0
 800ab8e:	440a      	add	r2, r1
 800ab90:	1a9b      	subs	r3, r3, r2
 800ab92:	435b      	muls	r3, r3
 800ab94:	fb05 3505 	mla	r5, r5, r5, r3
 800ab98:	4f4c      	ldr	r7, [pc, #304]	; (800accc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ab9a:	ac10      	add	r4, sp, #64	; 0x40
 800ab9c:	f1b9 0f0c 	cmp.w	r9, #12
 800aba0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800aba2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800aba4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800aba6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800aba8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800abaa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800abac:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800abb0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800abb4:	f04f 0303 	mov.w	r3, #3
 800abb8:	bfd8      	it	le
 800abba:	f109 32ff 	addle.w	r2, r9, #4294967295
 800abbe:	f04f 0400 	mov.w	r4, #0
 800abc2:	f8cd 9000 	str.w	r9, [sp]
 800abc6:	bfcc      	ite	gt
 800abc8:	4698      	movgt	r8, r3
 800abca:	fb92 f8f3 	sdivle	r8, r2, r3
 800abce:	1c63      	adds	r3, r4, #1
 800abd0:	aa10      	add	r2, sp, #64	; 0x40
 800abd2:	f004 0401 	and.w	r4, r4, #1
 800abd6:	f04f 0b00 	mov.w	fp, #0
 800abda:	9308      	str	r3, [sp, #32]
 800abdc:	9b00      	ldr	r3, [sp, #0]
 800abde:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800abe2:	fb93 f3f8 	sdiv	r3, r3, r8
 800abe6:	3404      	adds	r4, #4
 800abe8:	b29b      	uxth	r3, r3
 800abea:	9304      	str	r3, [sp, #16]
 800abec:	9a04      	ldr	r2, [sp, #16]
 800abee:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800abf2:	fb13 f302 	smulbb	r3, r3, r2
 800abf6:	9a01      	ldr	r2, [sp, #4]
 800abf8:	b29b      	uxth	r3, r3
 800abfa:	1899      	adds	r1, r3, r2
 800abfc:	9305      	str	r3, [sp, #20]
 800abfe:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ac02:	b209      	sxth	r1, r1
 800ac04:	4299      	cmp	r1, r3
 800ac06:	db4d      	blt.n	800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac08:	8932      	ldrh	r2, [r6, #8]
 800ac0a:	4413      	add	r3, r2
 800ac0c:	b21b      	sxth	r3, r3
 800ac0e:	4299      	cmp	r1, r3
 800ac10:	da48      	bge.n	800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac12:	9b04      	ldr	r3, [sp, #16]
 800ac14:	6827      	ldr	r7, [r4, #0]
 800ac16:	fb17 f703 	smulbb	r7, r7, r3
 800ac1a:	9b02      	ldr	r3, [sp, #8]
 800ac1c:	b2bf      	uxth	r7, r7
 800ac1e:	18fa      	adds	r2, r7, r3
 800ac20:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ac24:	b212      	sxth	r2, r2
 800ac26:	429a      	cmp	r2, r3
 800ac28:	db3c      	blt.n	800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac2a:	8970      	ldrh	r0, [r6, #10]
 800ac2c:	4403      	add	r3, r0
 800ac2e:	b21b      	sxth	r3, r3
 800ac30:	429a      	cmp	r2, r3
 800ac32:	da37      	bge.n	800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac34:	2300      	movs	r3, #0
 800ac36:	4630      	mov	r0, r6
 800ac38:	930b      	str	r3, [sp, #44]	; 0x2c
 800ac3a:	ab0b      	add	r3, sp, #44	; 0x2c
 800ac3c:	f7ff ff36 	bl	800aaac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ac40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ac42:	b37a      	cbz	r2, 800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac44:	4552      	cmp	r2, sl
 800ac46:	d02d      	beq.n	800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac48:	4611      	mov	r1, r2
 800ac4a:	a80e      	add	r0, sp, #56	; 0x38
 800ac4c:	9209      	str	r2, [sp, #36]	; 0x24
 800ac4e:	f004 fa53 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ac52:	f04f 0e02 	mov.w	lr, #2
 800ac56:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800ac5a:	9a06      	ldr	r2, [sp, #24]
 800ac5c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800ac60:	9b01      	ldr	r3, [sp, #4]
 800ac62:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800ac66:	4413      	add	r3, r2
 800ac68:	9a07      	ldr	r2, [sp, #28]
 800ac6a:	fb91 f1fe 	sdiv	r1, r1, lr
 800ac6e:	fb9c fcfe 	sdiv	ip, ip, lr
 800ac72:	4401      	add	r1, r0
 800ac74:	1a58      	subs	r0, r3, r1
 800ac76:	9b02      	ldr	r3, [sp, #8]
 800ac78:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800ac7c:	4413      	add	r3, r2
 800ac7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ac80:	448c      	add	ip, r1
 800ac82:	eba3 030c 	sub.w	r3, r3, ip
 800ac86:	435b      	muls	r3, r3
 800ac88:	fb00 3300 	mla	r3, r0, r0, r3
 800ac8c:	42ab      	cmp	r3, r5
 800ac8e:	d208      	bcs.n	800aca2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ac90:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ac92:	461d      	mov	r5, r3
 800ac94:	9803      	ldr	r0, [sp, #12]
 800ac96:	6001      	str	r1, [r0, #0]
 800ac98:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ac9a:	9805      	ldr	r0, [sp, #20]
 800ac9c:	8008      	strh	r0, [r1, #0]
 800ac9e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800aca0:	800f      	strh	r7, [r1, #0]
 800aca2:	4692      	mov	sl, r2
 800aca4:	f10b 0b01 	add.w	fp, fp, #1
 800aca8:	3408      	adds	r4, #8
 800acaa:	f1bb 0f04 	cmp.w	fp, #4
 800acae:	d19d      	bne.n	800abec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800acb0:	9b00      	ldr	r3, [sp, #0]
 800acb2:	9c08      	ldr	r4, [sp, #32]
 800acb4:	444b      	add	r3, r9
 800acb6:	4544      	cmp	r4, r8
 800acb8:	9300      	str	r3, [sp, #0]
 800acba:	d188      	bne.n	800abce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800acbc:	b021      	add	sp, #132	; 0x84
 800acbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acc2:	f04f 35ff 	mov.w	r5, #4294967295
 800acc6:	e767      	b.n	800ab98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800acc8:	2400b060 	.word	0x2400b060
 800accc:	0801dc1c 	.word	0x0801dc1c

0800acd0 <_ZN8touchgfx4RectaNERKS0_>:
 800acd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800acd4:	f9b1 7000 	ldrsh.w	r7, [r1]
 800acd8:	888c      	ldrh	r4, [r1, #4]
 800acda:	f9b0 9000 	ldrsh.w	r9, [r0]
 800acde:	443c      	add	r4, r7
 800ace0:	b2a4      	uxth	r4, r4
 800ace2:	fa0f f884 	sxth.w	r8, r4
 800ace6:	45c1      	cmp	r9, r8
 800ace8:	da2f      	bge.n	800ad4a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800acea:	8882      	ldrh	r2, [r0, #4]
 800acec:	444a      	add	r2, r9
 800acee:	b292      	uxth	r2, r2
 800acf0:	fa0f fe82 	sxth.w	lr, r2
 800acf4:	4577      	cmp	r7, lr
 800acf6:	da28      	bge.n	800ad4a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800acf8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800acfc:	88cb      	ldrh	r3, [r1, #6]
 800acfe:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ad02:	442b      	add	r3, r5
 800ad04:	b21b      	sxth	r3, r3
 800ad06:	429e      	cmp	r6, r3
 800ad08:	da1f      	bge.n	800ad4a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad0a:	88c3      	ldrh	r3, [r0, #6]
 800ad0c:	4433      	add	r3, r6
 800ad0e:	b29b      	uxth	r3, r3
 800ad10:	fa0f fc83 	sxth.w	ip, r3
 800ad14:	4565      	cmp	r5, ip
 800ad16:	da18      	bge.n	800ad4a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad18:	454f      	cmp	r7, r9
 800ad1a:	bfb8      	it	lt
 800ad1c:	464f      	movlt	r7, r9
 800ad1e:	42b5      	cmp	r5, r6
 800ad20:	bfb8      	it	lt
 800ad22:	4635      	movlt	r5, r6
 800ad24:	45f0      	cmp	r8, lr
 800ad26:	bfd8      	it	le
 800ad28:	4622      	movle	r2, r4
 800ad2a:	1bd2      	subs	r2, r2, r7
 800ad2c:	8082      	strh	r2, [r0, #4]
 800ad2e:	884a      	ldrh	r2, [r1, #2]
 800ad30:	88c9      	ldrh	r1, [r1, #6]
 800ad32:	8007      	strh	r7, [r0, #0]
 800ad34:	440a      	add	r2, r1
 800ad36:	8045      	strh	r5, [r0, #2]
 800ad38:	b292      	uxth	r2, r2
 800ad3a:	b211      	sxth	r1, r2
 800ad3c:	458c      	cmp	ip, r1
 800ad3e:	bfa8      	it	ge
 800ad40:	4613      	movge	r3, r2
 800ad42:	1b5b      	subs	r3, r3, r5
 800ad44:	80c3      	strh	r3, [r0, #6]
 800ad46:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ad4a:	2300      	movs	r3, #0
 800ad4c:	8003      	strh	r3, [r0, #0]
 800ad4e:	8043      	strh	r3, [r0, #2]
 800ad50:	8083      	strh	r3, [r0, #4]
 800ad52:	80c3      	strh	r3, [r0, #6]
 800ad54:	e7f7      	b.n	800ad46 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800ad56:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800ad5a:	2b00      	cmp	r3, #0
 800ad5c:	dd06      	ble.n	800ad6c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800ad5e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800ad62:	2800      	cmp	r0, #0
 800ad64:	bfcc      	ite	gt
 800ad66:	2000      	movgt	r0, #0
 800ad68:	2001      	movle	r0, #1
 800ad6a:	4770      	bx	lr
 800ad6c:	2001      	movs	r0, #1
 800ad6e:	4770      	bx	lr

0800ad70 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800ad70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ad74:	2300      	movs	r3, #0
 800ad76:	4604      	mov	r4, r0
 800ad78:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ad7a:	8003      	strh	r3, [r0, #0]
 800ad7c:	8043      	strh	r3, [r0, #2]
 800ad7e:	8083      	strh	r3, [r0, #4]
 800ad80:	80c3      	strh	r3, [r0, #6]
 800ad82:	2d00      	cmp	r5, #0
 800ad84:	d040      	beq.n	800ae08 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800ad86:	1d28      	adds	r0, r5, #4
 800ad88:	f7ff ffe5 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad8c:	b988      	cbnz	r0, 800adb2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ad8e:	4620      	mov	r0, r4
 800ad90:	f7ff ffe1 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad94:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ad98:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ad9c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ada0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ada4:	b138      	cbz	r0, 800adb6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ada6:	8022      	strh	r2, [r4, #0]
 800ada8:	8063      	strh	r3, [r4, #2]
 800adaa:	f8a4 e004 	strh.w	lr, [r4, #4]
 800adae:	f8a4 c006 	strh.w	ip, [r4, #6]
 800adb2:	69ad      	ldr	r5, [r5, #24]
 800adb4:	e7e5      	b.n	800ad82 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800adb6:	f9b4 0000 	ldrsh.w	r0, [r4]
 800adba:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800adbe:	4290      	cmp	r0, r2
 800adc0:	4607      	mov	r7, r0
 800adc2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800adc6:	460e      	mov	r6, r1
 800adc8:	bfa8      	it	ge
 800adca:	4617      	movge	r7, r2
 800adcc:	4299      	cmp	r1, r3
 800adce:	4472      	add	r2, lr
 800add0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800add4:	bfa8      	it	ge
 800add6:	461e      	movge	r6, r3
 800add8:	4440      	add	r0, r8
 800adda:	4471      	add	r1, lr
 800addc:	4463      	add	r3, ip
 800adde:	b200      	sxth	r0, r0
 800ade0:	8027      	strh	r7, [r4, #0]
 800ade2:	b212      	sxth	r2, r2
 800ade4:	8066      	strh	r6, [r4, #2]
 800ade6:	b209      	sxth	r1, r1
 800ade8:	b21b      	sxth	r3, r3
 800adea:	4290      	cmp	r0, r2
 800adec:	bfac      	ite	ge
 800adee:	ebc7 0200 	rsbge	r2, r7, r0
 800adf2:	ebc7 0202 	rsblt	r2, r7, r2
 800adf6:	4299      	cmp	r1, r3
 800adf8:	bfac      	ite	ge
 800adfa:	ebc6 0301 	rsbge	r3, r6, r1
 800adfe:	ebc6 0303 	rsblt	r3, r6, r3
 800ae02:	80a2      	strh	r2, [r4, #4]
 800ae04:	80e3      	strh	r3, [r4, #6]
 800ae06:	e7d4      	b.n	800adb2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ae08:	4620      	mov	r0, r4
 800ae0a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae0e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ae0e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ae12:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ae16:	b383      	cbz	r3, 800ae7a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae18:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ae1a:	b374      	cbz	r4, 800ae7a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae1c:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ae20:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ae24:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ae28:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ae2c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ae30:	b303      	cbz	r3, 800ae74 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ae32:	4668      	mov	r0, sp
 800ae34:	1d21      	adds	r1, r4, #4
 800ae36:	f8ad 5000 	strh.w	r5, [sp]
 800ae3a:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ae3e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ae42:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ae46:	f7ff ff43 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800ae4a:	4668      	mov	r0, sp
 800ae4c:	f7ff ff83 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae50:	b980      	cbnz	r0, 800ae74 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ae52:	f8bd 3000 	ldrh.w	r3, [sp]
 800ae56:	4669      	mov	r1, sp
 800ae58:	88a2      	ldrh	r2, [r4, #4]
 800ae5a:	4620      	mov	r0, r4
 800ae5c:	1a9b      	subs	r3, r3, r2
 800ae5e:	88e2      	ldrh	r2, [r4, #6]
 800ae60:	f8ad 3000 	strh.w	r3, [sp]
 800ae64:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ae68:	1a9b      	subs	r3, r3, r2
 800ae6a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ae6e:	6823      	ldr	r3, [r4, #0]
 800ae70:	689b      	ldr	r3, [r3, #8]
 800ae72:	4798      	blx	r3
 800ae74:	69a4      	ldr	r4, [r4, #24]
 800ae76:	2c00      	cmp	r4, #0
 800ae78:	d1d8      	bne.n	800ae2c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ae7a:	b002      	add	sp, #8
 800ae7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae80 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800ae80:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ae82:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ae86:	460d      	mov	r5, r1
 800ae88:	4616      	mov	r6, r2
 800ae8a:	b323      	cbz	r3, 800aed6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ae8c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ae8e:	b314      	cbz	r4, 800aed6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800ae90:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ae94:	b1eb      	cbz	r3, 800aed2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800ae96:	6828      	ldr	r0, [r5, #0]
 800ae98:	466b      	mov	r3, sp
 800ae9a:	6869      	ldr	r1, [r5, #4]
 800ae9c:	c303      	stmia	r3!, {r0, r1}
 800ae9e:	4668      	mov	r0, sp
 800aea0:	1d21      	adds	r1, r4, #4
 800aea2:	f7ff ff15 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800aea6:	4668      	mov	r0, sp
 800aea8:	f7ff ff55 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aeac:	b988      	cbnz	r0, 800aed2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800aeae:	f8bd 3000 	ldrh.w	r3, [sp]
 800aeb2:	4669      	mov	r1, sp
 800aeb4:	88a2      	ldrh	r2, [r4, #4]
 800aeb6:	4620      	mov	r0, r4
 800aeb8:	1a9b      	subs	r3, r3, r2
 800aeba:	88e2      	ldrh	r2, [r4, #6]
 800aebc:	f8ad 3000 	strh.w	r3, [sp]
 800aec0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aec4:	1a9b      	subs	r3, r3, r2
 800aec6:	4632      	mov	r2, r6
 800aec8:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aecc:	6823      	ldr	r3, [r4, #0]
 800aece:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800aed0:	4798      	blx	r3
 800aed2:	69a4      	ldr	r4, [r4, #24]
 800aed4:	e7db      	b.n	800ae8e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800aed6:	b002      	add	sp, #8
 800aed8:	bd70      	pop	{r4, r5, r6, pc}

0800aeda <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800aeda:	6803      	ldr	r3, [r0, #0]
 800aedc:	b513      	push	{r0, r1, r4, lr}
 800aede:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800aee2:	2300      	movs	r3, #0
 800aee4:	e9cd 3300 	strd	r3, r3, [sp]
 800aee8:	466b      	mov	r3, sp
 800aeea:	47a0      	blx	r4
 800aeec:	b002      	add	sp, #8
 800aeee:	bd10      	pop	{r4, pc}

0800aef0 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800aef0:	2301      	movs	r3, #1
 800aef2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800aef6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800aefa:	4770      	bx	lr

0800aefc <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800aefc:	2301      	movs	r3, #1
 800aefe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800af02:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800af06:	4770      	bx	lr

0800af08 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800af08:	6843      	ldr	r3, [r0, #4]
 800af0a:	2201      	movs	r2, #1
 800af0c:	725a      	strb	r2, [r3, #9]
 800af0e:	6840      	ldr	r0, [r0, #4]
 800af10:	6803      	ldr	r3, [r0, #0]
 800af12:	691b      	ldr	r3, [r3, #16]
 800af14:	4718      	bx	r3

0800af16 <_ZN8touchgfx3HAL8flushDMAEv>:
 800af16:	6840      	ldr	r0, [r0, #4]
 800af18:	6803      	ldr	r3, [r0, #0]
 800af1a:	689b      	ldr	r3, [r3, #8]
 800af1c:	4718      	bx	r3

0800af1e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800af1e:	b530      	push	{r4, r5, lr}
 800af20:	b08b      	sub	sp, #44	; 0x2c
 800af22:	6804      	ldr	r4, [r0, #0]
 800af24:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800af28:	9509      	str	r5, [sp, #36]	; 0x24
 800af2a:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800af2e:	9508      	str	r5, [sp, #32]
 800af30:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800af34:	9507      	str	r5, [sp, #28]
 800af36:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800af3a:	9506      	str	r5, [sp, #24]
 800af3c:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800af40:	9505      	str	r5, [sp, #20]
 800af42:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800af46:	9504      	str	r5, [sp, #16]
 800af48:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800af4c:	9503      	str	r5, [sp, #12]
 800af4e:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800af52:	9502      	str	r5, [sp, #8]
 800af54:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800af58:	e9cd 3500 	strd	r3, r5, [sp]
 800af5c:	4613      	mov	r3, r2
 800af5e:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800af60:	2200      	movs	r2, #0
 800af62:	47a0      	blx	r4
 800af64:	b00b      	add	sp, #44	; 0x2c
 800af66:	bd30      	pop	{r4, r5, pc}

0800af68 <_ZN8touchgfx3HAL10beginFrameEv>:
 800af68:	4b04      	ldr	r3, [pc, #16]	; (800af7c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800af6a:	781b      	ldrb	r3, [r3, #0]
 800af6c:	b123      	cbz	r3, 800af78 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800af6e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800af72:	f080 0001 	eor.w	r0, r0, #1
 800af76:	4770      	bx	lr
 800af78:	2001      	movs	r0, #1
 800af7a:	4770      	bx	lr
 800af7c:	2400b05e 	.word	0x2400b05e

0800af80 <_ZN8touchgfx3HAL8endFrameEv>:
 800af80:	b510      	push	{r4, lr}
 800af82:	4604      	mov	r4, r0
 800af84:	6840      	ldr	r0, [r0, #4]
 800af86:	6803      	ldr	r3, [r0, #0]
 800af88:	689b      	ldr	r3, [r3, #8]
 800af8a:	4798      	blx	r3
 800af8c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800af90:	b113      	cbz	r3, 800af98 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800af92:	2301      	movs	r3, #1
 800af94:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800af98:	bd10      	pop	{r4, pc}

0800af9a <_ZN8touchgfx3HAL10initializeEv>:
 800af9a:	b510      	push	{r4, lr}
 800af9c:	4604      	mov	r4, r0
 800af9e:	f7f6 fb2d 	bl	80015fc <_ZN8touchgfx10OSWrappers10initializeEv>
 800afa2:	6860      	ldr	r0, [r4, #4]
 800afa4:	6803      	ldr	r3, [r0, #0]
 800afa6:	68db      	ldr	r3, [r3, #12]
 800afa8:	4798      	blx	r3
 800afaa:	68e0      	ldr	r0, [r4, #12]
 800afac:	6803      	ldr	r3, [r0, #0]
 800afae:	689b      	ldr	r3, [r3, #8]
 800afb0:	4798      	blx	r3
 800afb2:	6823      	ldr	r3, [r4, #0]
 800afb4:	4620      	mov	r0, r4
 800afb6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800afb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800afbc:	4718      	bx	r3
	...

0800afc0 <_ZN8touchgfx3HAL4tickEv>:
 800afc0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800afc2:	6803      	ldr	r3, [r0, #0]
 800afc4:	4604      	mov	r4, r0
 800afc6:	4d5b      	ldr	r5, [pc, #364]	; (800b134 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800afc8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800afcc:	4798      	blx	r3
 800afce:	2800      	cmp	r0, #0
 800afd0:	f000 8095 	beq.w	800b0fe <_ZN8touchgfx3HAL4tickEv+0x13e>
 800afd4:	2001      	movs	r0, #1
 800afd6:	2600      	movs	r6, #0
 800afd8:	f7f6 f934 	bl	8001244 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800afdc:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800afe0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800afe4:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800afe8:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800afec:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800aff0:	b133      	cbz	r3, 800b000 <_ZN8touchgfx3HAL4tickEv+0x40>
 800aff2:	6823      	ldr	r3, [r4, #0]
 800aff4:	4620      	mov	r0, r4
 800aff6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800affa:	4798      	blx	r3
 800affc:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b000:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b004:	2601      	movs	r6, #1
 800b006:	6862      	ldr	r2, [r4, #4]
 800b008:	f083 0301 	eor.w	r3, r3, #1
 800b00c:	702e      	strb	r6, [r5, #0]
 800b00e:	7253      	strb	r3, [r2, #9]
 800b010:	f003 f83e 	bl	800e090 <_ZN8touchgfx11Application11getInstanceEv>
 800b014:	6803      	ldr	r3, [r0, #0]
 800b016:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b018:	4798      	blx	r3
 800b01a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b01e:	b90b      	cbnz	r3, 800b024 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b020:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b024:	f003 f834 	bl	800e090 <_ZN8touchgfx11Application11getInstanceEv>
 800b028:	6803      	ldr	r3, [r0, #0]
 800b02a:	695b      	ldr	r3, [r3, #20]
 800b02c:	4798      	blx	r3
 800b02e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b030:	6803      	ldr	r3, [r0, #0]
 800b032:	691b      	ldr	r3, [r3, #16]
 800b034:	4798      	blx	r3
 800b036:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b03a:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b03e:	3b01      	subs	r3, #1
 800b040:	b2db      	uxtb	r3, r3
 800b042:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b046:	b10a      	cbz	r2, 800b04c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b048:	2b00      	cmp	r3, #0
 800b04a:	d1eb      	bne.n	800b024 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b04c:	4a3a      	ldr	r2, [pc, #232]	; (800b138 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b04e:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b052:	7813      	ldrb	r3, [r2, #0]
 800b054:	3301      	adds	r3, #1
 800b056:	b25b      	sxtb	r3, r3
 800b058:	4299      	cmp	r1, r3
 800b05a:	7013      	strb	r3, [r2, #0]
 800b05c:	dc10      	bgt.n	800b080 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b05e:	2300      	movs	r3, #0
 800b060:	68e0      	ldr	r0, [r4, #12]
 800b062:	a902      	add	r1, sp, #8
 800b064:	7013      	strb	r3, [r2, #0]
 800b066:	aa03      	add	r2, sp, #12
 800b068:	6803      	ldr	r3, [r0, #0]
 800b06a:	68db      	ldr	r3, [r3, #12]
 800b06c:	4798      	blx	r3
 800b06e:	6823      	ldr	r3, [r4, #0]
 800b070:	2800      	cmp	r0, #0
 800b072:	d050      	beq.n	800b116 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b074:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b078:	4620      	mov	r0, r4
 800b07a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b07e:	4798      	blx	r3
 800b080:	2300      	movs	r3, #0
 800b082:	6960      	ldr	r0, [r4, #20]
 800b084:	f88d 3007 	strb.w	r3, [sp, #7]
 800b088:	b158      	cbz	r0, 800b0a2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b08a:	6803      	ldr	r3, [r0, #0]
 800b08c:	f10d 0107 	add.w	r1, sp, #7
 800b090:	68db      	ldr	r3, [r3, #12]
 800b092:	4798      	blx	r3
 800b094:	b128      	cbz	r0, 800b0a2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b096:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b098:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b09c:	6803      	ldr	r3, [r0, #0]
 800b09e:	68db      	ldr	r3, [r3, #12]
 800b0a0:	4798      	blx	r3
 800b0a2:	f104 001c 	add.w	r0, r4, #28
 800b0a6:	f011 fc9f 	bl	801c9e8 <_ZN8touchgfx8Gestures4tickEv>
 800b0aa:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b0ae:	b30b      	cbz	r3, 800b0f4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b0b0:	6920      	ldr	r0, [r4, #16]
 800b0b2:	6803      	ldr	r3, [r0, #0]
 800b0b4:	691b      	ldr	r3, [r3, #16]
 800b0b6:	4798      	blx	r3
 800b0b8:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b0ba:	4606      	mov	r6, r0
 800b0bc:	b903      	cbnz	r3, 800b0c0 <_ZN8touchgfx3HAL4tickEv+0x100>
 800b0be:	6720      	str	r0, [r4, #112]	; 0x70
 800b0c0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b0c2:	4a1e      	ldr	r2, [pc, #120]	; (800b13c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b0c4:	1af3      	subs	r3, r6, r3
 800b0c6:	4293      	cmp	r3, r2
 800b0c8:	d914      	bls.n	800b0f4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b0ca:	6920      	ldr	r0, [r4, #16]
 800b0cc:	6803      	ldr	r3, [r0, #0]
 800b0ce:	699b      	ldr	r3, [r3, #24]
 800b0d0:	4798      	blx	r3
 800b0d2:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b0d4:	2264      	movs	r2, #100	; 0x64
 800b0d6:	1af3      	subs	r3, r6, r3
 800b0d8:	fbb3 f3f2 	udiv	r3, r3, r2
 800b0dc:	fbb0 f0f3 	udiv	r0, r0, r3
 800b0e0:	2800      	cmp	r0, #0
 800b0e2:	dc1d      	bgt.n	800b120 <_ZN8touchgfx3HAL4tickEv+0x160>
 800b0e4:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b0e8:	6920      	ldr	r0, [r4, #16]
 800b0ea:	2100      	movs	r1, #0
 800b0ec:	6803      	ldr	r3, [r0, #0]
 800b0ee:	69db      	ldr	r3, [r3, #28]
 800b0f0:	4798      	blx	r3
 800b0f2:	6726      	str	r6, [r4, #112]	; 0x70
 800b0f4:	f002 ffcc 	bl	800e090 <_ZN8touchgfx11Application11getInstanceEv>
 800b0f8:	6803      	ldr	r3, [r0, #0]
 800b0fa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b0fc:	4798      	blx	r3
 800b0fe:	6823      	ldr	r3, [r4, #0]
 800b100:	4620      	mov	r0, r4
 800b102:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b106:	4798      	blx	r3
 800b108:	2001      	movs	r0, #1
 800b10a:	f7f6 f8cd 	bl	80012a8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b10e:	2300      	movs	r3, #0
 800b110:	702b      	strb	r3, [r5, #0]
 800b112:	b004      	add	sp, #16
 800b114:	bd70      	pop	{r4, r5, r6, pc}
 800b116:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b11a:	4620      	mov	r0, r4
 800b11c:	4798      	blx	r3
 800b11e:	e7af      	b.n	800b080 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b120:	2863      	cmp	r0, #99	; 0x63
 800b122:	bfcb      	itete	gt
 800b124:	2300      	movgt	r3, #0
 800b126:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b12a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b12e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b132:	e7d9      	b.n	800b0e8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b134:	2400b064 	.word	0x2400b064
 800b138:	2400b065 	.word	0x2400b065
 800b13c:	05f5e100 	.word	0x05f5e100

0800b140 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b140:	f7f6 ba8c 	b.w	800165c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b144 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b144:	6581      	str	r1, [r0, #88]	; 0x58
 800b146:	301c      	adds	r0, #28
 800b148:	f011 bc4c 	b.w	801c9e4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b14c <_ZN8touchgfx3HAL5touchEll>:
 800b14c:	b530      	push	{r4, r5, lr}
 800b14e:	b087      	sub	sp, #28
 800b150:	4604      	mov	r4, r0
 800b152:	a804      	add	r0, sp, #16
 800b154:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b158:	f002 fd16 	bl	800db88 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b15c:	9b04      	ldr	r3, [sp, #16]
 800b15e:	a906      	add	r1, sp, #24
 800b160:	a803      	add	r0, sp, #12
 800b162:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b166:	9b05      	ldr	r3, [sp, #20]
 800b168:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b16c:	f002 fd5e 	bl	800dc2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b170:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b174:	f104 001c 	add.w	r0, r4, #28
 800b178:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b17c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b180:	b189      	cbz	r1, 800b1a6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b182:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b186:	9300      	str	r3, [sp, #0]
 800b188:	4613      	mov	r3, r2
 800b18a:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b18e:	462a      	mov	r2, r5
 800b190:	f011 fc38 	bl	801ca04 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b194:	b128      	cbz	r0, 800b1a2 <_ZN8touchgfx3HAL5touchEll+0x56>
 800b196:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b19a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b19c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b1a0:	6623      	str	r3, [r4, #96]	; 0x60
 800b1a2:	b007      	add	sp, #28
 800b1a4:	bd30      	pop	{r4, r5, pc}
 800b1a6:	f011 fc6d 	bl	801ca84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b1aa:	2301      	movs	r3, #1
 800b1ac:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b1b0:	e7f1      	b.n	800b196 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b1b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b1b2:	b510      	push	{r4, lr}
 800b1b4:	2b00      	cmp	r3, #0
 800b1b6:	d046      	beq.n	800b246 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b1b8:	ea81 0002 	eor.w	r0, r1, r2
 800b1bc:	07c4      	lsls	r4, r0, #31
 800b1be:	d508      	bpl.n	800b1d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b1c0:	440b      	add	r3, r1
 800b1c2:	3a01      	subs	r2, #1
 800b1c4:	428b      	cmp	r3, r1
 800b1c6:	d93e      	bls.n	800b246 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b1c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b1cc:	f801 0b01 	strb.w	r0, [r1], #1
 800b1d0:	e7f8      	b.n	800b1c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b1d2:	07d0      	lsls	r0, r2, #31
 800b1d4:	bf42      	ittt	mi
 800b1d6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b1da:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b1de:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b1e2:	2b01      	cmp	r3, #1
 800b1e4:	d911      	bls.n	800b20a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b1e6:	ea81 0402 	eor.w	r4, r1, r2
 800b1ea:	4610      	mov	r0, r2
 800b1ec:	07a4      	lsls	r4, r4, #30
 800b1ee:	d022      	beq.n	800b236 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b1f0:	f023 0401 	bic.w	r4, r3, #1
 800b1f4:	440c      	add	r4, r1
 800b1f6:	428c      	cmp	r4, r1
 800b1f8:	4602      	mov	r2, r0
 800b1fa:	d904      	bls.n	800b206 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b1fc:	8812      	ldrh	r2, [r2, #0]
 800b1fe:	3002      	adds	r0, #2
 800b200:	f821 2b02 	strh.w	r2, [r1], #2
 800b204:	e7f7      	b.n	800b1f6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b206:	f003 0301 	and.w	r3, r3, #1
 800b20a:	f023 0003 	bic.w	r0, r3, #3
 800b20e:	4408      	add	r0, r1
 800b210:	4288      	cmp	r0, r1
 800b212:	4614      	mov	r4, r2
 800b214:	d904      	bls.n	800b220 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b216:	6824      	ldr	r4, [r4, #0]
 800b218:	3204      	adds	r2, #4
 800b21a:	f841 4b04 	str.w	r4, [r1], #4
 800b21e:	e7f7      	b.n	800b210 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b220:	f003 0303 	and.w	r3, r3, #3
 800b224:	3a01      	subs	r2, #1
 800b226:	440b      	add	r3, r1
 800b228:	428b      	cmp	r3, r1
 800b22a:	d90c      	bls.n	800b246 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b22c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b230:	f801 0b01 	strb.w	r0, [r1], #1
 800b234:	e7f8      	b.n	800b228 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b236:	0790      	lsls	r0, r2, #30
 800b238:	d0e7      	beq.n	800b20a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b23a:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b23e:	3b02      	subs	r3, #2
 800b240:	f821 0b02 	strh.w	r0, [r1], #2
 800b244:	e7e1      	b.n	800b20a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b246:	2001      	movs	r0, #1
 800b248:	bd10      	pop	{r4, pc}

0800b24a <_ZN8touchgfx3HAL7noTouchEv>:
 800b24a:	b510      	push	{r4, lr}
 800b24c:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b250:	4604      	mov	r4, r0
 800b252:	b153      	cbz	r3, 800b26a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b254:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b258:	2101      	movs	r1, #1
 800b25a:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b25e:	301c      	adds	r0, #28
 800b260:	f011 fc10 	bl	801ca84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b264:	2300      	movs	r3, #0
 800b266:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b26a:	bd10      	pop	{r4, pc}

0800b26c <_ZN8touchgfx3HAL3lcdEv>:
 800b26c:	4b04      	ldr	r3, [pc, #16]	; (800b280 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800b26e:	681b      	ldr	r3, [r3, #0]
 800b270:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800b274:	b10a      	cbz	r2, 800b27a <_ZN8touchgfx3HAL3lcdEv+0xe>
 800b276:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800b278:	b900      	cbnz	r0, 800b27c <_ZN8touchgfx3HAL3lcdEv+0x10>
 800b27a:	6898      	ldr	r0, [r3, #8]
 800b27c:	4770      	bx	lr
 800b27e:	bf00      	nop
 800b280:	2400b060 	.word	0x2400b060

0800b284 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b284:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b288:	b085      	sub	sp, #20
 800b28a:	4604      	mov	r4, r0
 800b28c:	2000      	movs	r0, #0
 800b28e:	4699      	mov	r9, r3
 800b290:	ad04      	add	r5, sp, #16
 800b292:	460f      	mov	r7, r1
 800b294:	4690      	mov	r8, r2
 800b296:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b29a:	69a0      	ldr	r0, [r4, #24]
 800b29c:	6806      	ldr	r6, [r0, #0]
 800b29e:	9501      	str	r5, [sp, #4]
 800b2a0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b2a4:	9500      	str	r5, [sp, #0]
 800b2a6:	6835      	ldr	r5, [r6, #0]
 800b2a8:	47a8      	blx	r5
 800b2aa:	4d10      	ldr	r5, [pc, #64]	; (800b2ec <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b2ac:	4606      	mov	r6, r0
 800b2ae:	f8a5 9000 	strh.w	r9, [r5]
 800b2b2:	f7ff ffdb 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b2b6:	6803      	ldr	r3, [r0, #0]
 800b2b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b2ba:	4798      	blx	r3
 800b2bc:	b128      	cbz	r0, 800b2ca <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b2be:	2801      	cmp	r0, #1
 800b2c0:	d00b      	beq.n	800b2da <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b2c2:	4630      	mov	r0, r6
 800b2c4:	b005      	add	sp, #20
 800b2c6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b2ca:	882b      	ldrh	r3, [r5, #0]
 800b2cc:	fb08 7203 	mla	r2, r8, r3, r7
 800b2d0:	9b03      	ldr	r3, [sp, #12]
 800b2d2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b2d6:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b2d8:	e7f3      	b.n	800b2c2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b2da:	882a      	ldrh	r2, [r5, #0]
 800b2dc:	9b03      	ldr	r3, [sp, #12]
 800b2de:	fb08 7202 	mla	r2, r8, r2, r7
 800b2e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b2e6:	1a9a      	subs	r2, r3, r2
 800b2e8:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b2ea:	e7ea      	b.n	800b2c2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b2ec:	2400b05a 	.word	0x2400b05a

0800b2f0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b2f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b2f2:	b08b      	sub	sp, #44	; 0x2c
 800b2f4:	4617      	mov	r7, r2
 800b2f6:	4604      	mov	r4, r0
 800b2f8:	460e      	mov	r6, r1
 800b2fa:	461d      	mov	r5, r3
 800b2fc:	f7ff ffb6 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b300:	6803      	ldr	r3, [r0, #0]
 800b302:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b304:	4798      	blx	r3
 800b306:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b30a:	9007      	str	r0, [sp, #28]
 800b30c:	4631      	mov	r1, r6
 800b30e:	6822      	ldr	r2, [r4, #0]
 800b310:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b314:	4b0c      	ldr	r3, [pc, #48]	; (800b348 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b316:	4620      	mov	r0, r4
 800b318:	881b      	ldrh	r3, [r3, #0]
 800b31a:	9306      	str	r3, [sp, #24]
 800b31c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b320:	9305      	str	r3, [sp, #20]
 800b322:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b326:	9304      	str	r3, [sp, #16]
 800b328:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b32c:	9303      	str	r3, [sp, #12]
 800b32e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b332:	9302      	str	r3, [sp, #8]
 800b334:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b338:	e9cd 5300 	strd	r5, r3, [sp]
 800b33c:	463b      	mov	r3, r7
 800b33e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b340:	2200      	movs	r2, #0
 800b342:	47a8      	blx	r5
 800b344:	b00b      	add	sp, #44	; 0x2c
 800b346:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b348:	2400b05a 	.word	0x2400b05a

0800b34c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b34c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b350:	4698      	mov	r8, r3
 800b352:	6803      	ldr	r3, [r0, #0]
 800b354:	b08b      	sub	sp, #44	; 0x2c
 800b356:	4617      	mov	r7, r2
 800b358:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b35a:	460e      	mov	r6, r1
 800b35c:	4b13      	ldr	r3, [pc, #76]	; (800b3ac <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b35e:	4604      	mov	r4, r0
 800b360:	f8b3 9000 	ldrh.w	r9, [r3]
 800b364:	f7ff ff82 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b368:	6803      	ldr	r3, [r0, #0]
 800b36a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b36c:	4798      	blx	r3
 800b36e:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b372:	2200      	movs	r2, #0
 800b374:	4631      	mov	r1, r6
 800b376:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b37a:	2302      	movs	r3, #2
 800b37c:	4620      	mov	r0, r4
 800b37e:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b382:	2301      	movs	r3, #1
 800b384:	9305      	str	r3, [sp, #20]
 800b386:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b38a:	9304      	str	r3, [sp, #16]
 800b38c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b390:	9303      	str	r3, [sp, #12]
 800b392:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b396:	9302      	str	r3, [sp, #8]
 800b398:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b39c:	e9cd 8300 	strd	r8, r3, [sp]
 800b3a0:	463b      	mov	r3, r7
 800b3a2:	47a8      	blx	r5
 800b3a4:	b00b      	add	sp, #44	; 0x2c
 800b3a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b3aa:	bf00      	nop
 800b3ac:	2400b05a 	.word	0x2400b05a

0800b3b0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b3b0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3b4:	4698      	mov	r8, r3
 800b3b6:	6803      	ldr	r3, [r0, #0]
 800b3b8:	b087      	sub	sp, #28
 800b3ba:	460e      	mov	r6, r1
 800b3bc:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b3be:	4617      	mov	r7, r2
 800b3c0:	4b0f      	ldr	r3, [pc, #60]	; (800b400 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b3c2:	4604      	mov	r4, r0
 800b3c4:	f8b3 9000 	ldrh.w	r9, [r3]
 800b3c8:	f7ff ff50 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b3cc:	6803      	ldr	r3, [r0, #0]
 800b3ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3d0:	4798      	blx	r3
 800b3d2:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b3d6:	463a      	mov	r2, r7
 800b3d8:	4631      	mov	r1, r6
 800b3da:	f8cd 900c 	str.w	r9, [sp, #12]
 800b3de:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b3e2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b3e6:	4620      	mov	r0, r4
 800b3e8:	9302      	str	r3, [sp, #8]
 800b3ea:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b3ee:	9301      	str	r3, [sp, #4]
 800b3f0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b3f4:	9300      	str	r3, [sp, #0]
 800b3f6:	4643      	mov	r3, r8
 800b3f8:	47a8      	blx	r5
 800b3fa:	b007      	add	sp, #28
 800b3fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b400:	2400b05a 	.word	0x2400b05a

0800b404 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b408:	4604      	mov	r4, r0
 800b40a:	b08f      	sub	sp, #60	; 0x3c
 800b40c:	4610      	mov	r0, r2
 800b40e:	460d      	mov	r5, r1
 800b410:	4691      	mov	r9, r2
 800b412:	461e      	mov	r6, r3
 800b414:	f005 fd26 	bl	8010e64 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b418:	2800      	cmp	r0, #0
 800b41a:	f000 809d 	beq.w	800b558 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b41e:	6823      	ldr	r3, [r4, #0]
 800b420:	4620      	mov	r0, r4
 800b422:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b5bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b426:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b42a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b42c:	4798      	blx	r3
 800b42e:	6823      	ldr	r3, [r4, #0]
 800b430:	4620      	mov	r0, r4
 800b432:	f8df a18c 	ldr.w	sl, [pc, #396]	; 800b5c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b436:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b438:	4798      	blx	r3
 800b43a:	f8bb 3000 	ldrh.w	r3, [fp]
 800b43e:	4f5c      	ldr	r7, [pc, #368]	; (800b5b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b440:	9301      	str	r3, [sp, #4]
 800b442:	f8ba 3000 	ldrh.w	r3, [sl]
 800b446:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b44a:	4640      	mov	r0, r8
 800b44c:	9302      	str	r3, [sp, #8]
 800b44e:	883b      	ldrh	r3, [r7, #0]
 800b450:	9303      	str	r3, [sp, #12]
 800b452:	4b58      	ldr	r3, [pc, #352]	; (800b5b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b454:	881a      	ldrh	r2, [r3, #0]
 800b456:	9305      	str	r3, [sp, #20]
 800b458:	9204      	str	r2, [sp, #16]
 800b45a:	f005 fd97 	bl	8010f8c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b45e:	8038      	strh	r0, [r7, #0]
 800b460:	4640      	mov	r0, r8
 800b462:	f005 fdc7 	bl	8010ff4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b466:	9b05      	ldr	r3, [sp, #20]
 800b468:	b280      	uxth	r0, r0
 800b46a:	8018      	strh	r0, [r3, #0]
 800b46c:	4b52      	ldr	r3, [pc, #328]	; (800b5b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b46e:	781b      	ldrb	r3, [r3, #0]
 800b470:	2b00      	cmp	r3, #0
 800b472:	d174      	bne.n	800b55e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b474:	883b      	ldrh	r3, [r7, #0]
 800b476:	f8aa 0000 	strh.w	r0, [sl]
 800b47a:	f8ab 3000 	strh.w	r3, [fp]
 800b47e:	4648      	mov	r0, r9
 800b480:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b484:	f005 fcee 	bl	8010e64 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b488:	2200      	movs	r2, #0
 800b48a:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b48e:	4611      	mov	r1, r2
 800b490:	4628      	mov	r0, r5
 800b492:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b496:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b49a:	f7f7 f859 	bl	8002550 <_ZN8touchgfx8Drawable5setXYEss>
 800b49e:	2301      	movs	r3, #1
 800b4a0:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b4a4:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b4a8:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b4ac:	2b00      	cmp	r3, #0
 800b4ae:	dd5c      	ble.n	800b56a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b4b0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b4b4:	2b00      	cmp	r3, #0
 800b4b6:	dd58      	ble.n	800b56a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b4b8:	462a      	mov	r2, r5
 800b4ba:	ab0a      	add	r3, sp, #40	; 0x28
 800b4bc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b4c0:	6851      	ldr	r1, [r2, #4]
 800b4c2:	c303      	stmia	r3!, {r0, r1}
 800b4c4:	4631      	mov	r1, r6
 800b4c6:	a80a      	add	r0, sp, #40	; 0x28
 800b4c8:	f7ff fc02 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800b4cc:	4b38      	ldr	r3, [pc, #224]	; (800b5b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b4ce:	2100      	movs	r1, #0
 800b4d0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b4d4:	4b37      	ldr	r3, [pc, #220]	; (800b5b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b4d6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b4da:	aa0a      	add	r2, sp, #40	; 0x28
 800b4dc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b4e0:	910c      	str	r1, [sp, #48]	; 0x30
 800b4e2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b4e6:	ab08      	add	r3, sp, #32
 800b4e8:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b4ec:	e883 0003 	stmia.w	r3, {r0, r1}
 800b4f0:	4618      	mov	r0, r3
 800b4f2:	a90c      	add	r1, sp, #48	; 0x30
 800b4f4:	f7ff fbec 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800b4f8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b4fa:	2b00      	cmp	r3, #0
 800b4fc:	d13c      	bne.n	800b578 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b4fe:	2000      	movs	r0, #0
 800b500:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b504:	2600      	movs	r6, #0
 800b506:	696b      	ldr	r3, [r5, #20]
 800b508:	a908      	add	r1, sp, #32
 800b50a:	682a      	ldr	r2, [r5, #0]
 800b50c:	4628      	mov	r0, r5
 800b50e:	9305      	str	r3, [sp, #20]
 800b510:	616e      	str	r6, [r5, #20]
 800b512:	6892      	ldr	r2, [r2, #8]
 800b514:	4790      	blx	r2
 800b516:	9b05      	ldr	r3, [sp, #20]
 800b518:	4652      	mov	r2, sl
 800b51a:	4649      	mov	r1, r9
 800b51c:	616b      	str	r3, [r5, #20]
 800b51e:	4628      	mov	r0, r5
 800b520:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b524:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b528:	f7f7 f812 	bl	8002550 <_ZN8touchgfx8Drawable5setXYEss>
 800b52c:	9a01      	ldr	r2, [sp, #4]
 800b52e:	4b23      	ldr	r3, [pc, #140]	; (800b5bc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b530:	4620      	mov	r0, r4
 800b532:	801a      	strh	r2, [r3, #0]
 800b534:	9a02      	ldr	r2, [sp, #8]
 800b536:	4b22      	ldr	r3, [pc, #136]	; (800b5c0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b538:	801a      	strh	r2, [r3, #0]
 800b53a:	9a03      	ldr	r2, [sp, #12]
 800b53c:	4b1c      	ldr	r3, [pc, #112]	; (800b5b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b53e:	801a      	strh	r2, [r3, #0]
 800b540:	4b1c      	ldr	r3, [pc, #112]	; (800b5b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b542:	9a04      	ldr	r2, [sp, #16]
 800b544:	801a      	strh	r2, [r3, #0]
 800b546:	6823      	ldr	r3, [r4, #0]
 800b548:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b54c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b54e:	4798      	blx	r3
 800b550:	6823      	ldr	r3, [r4, #0]
 800b552:	4620      	mov	r0, r4
 800b554:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b556:	4798      	blx	r3
 800b558:	b00f      	add	sp, #60	; 0x3c
 800b55a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b55e:	883b      	ldrh	r3, [r7, #0]
 800b560:	f8ab 0000 	strh.w	r0, [fp]
 800b564:	f8aa 3000 	strh.w	r3, [sl]
 800b568:	e789      	b.n	800b47e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b56a:	462a      	mov	r2, r5
 800b56c:	ab0a      	add	r3, sp, #40	; 0x28
 800b56e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b572:	6851      	ldr	r1, [r2, #4]
 800b574:	c303      	stmia	r3!, {r0, r1}
 800b576:	e7a9      	b.n	800b4cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b578:	a807      	add	r0, sp, #28
 800b57a:	f005 fe77 	bl	801126c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b57e:	4606      	mov	r6, r0
 800b580:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b582:	6803      	ldr	r3, [r0, #0]
 800b584:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b586:	4798      	blx	r3
 800b588:	4286      	cmp	r6, r0
 800b58a:	d1b8      	bne.n	800b4fe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b58c:	f7ff fe6e 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b590:	6803      	ldr	r3, [r0, #0]
 800b592:	4606      	mov	r6, r0
 800b594:	a807      	add	r0, sp, #28
 800b596:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b598:	9305      	str	r3, [sp, #20]
 800b59a:	f005 fe67 	bl	801126c <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b59e:	9b05      	ldr	r3, [sp, #20]
 800b5a0:	4601      	mov	r1, r0
 800b5a2:	4630      	mov	r0, r6
 800b5a4:	4798      	blx	r3
 800b5a6:	f080 0001 	eor.w	r0, r0, #1
 800b5aa:	b2c0      	uxtb	r0, r0
 800b5ac:	e7a8      	b.n	800b500 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b5ae:	bf00      	nop
 800b5b0:	2400b054 	.word	0x2400b054
 800b5b4:	2400b056 	.word	0x2400b056
 800b5b8:	2400b058 	.word	0x2400b058
 800b5bc:	2400b05a 	.word	0x2400b05a
 800b5c0:	2400b05c 	.word	0x2400b05c

0800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b5c4:	4b07      	ldr	r3, [pc, #28]	; (800b5e4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b5c6:	b510      	push	{r4, lr}
 800b5c8:	781b      	ldrb	r3, [r3, #0]
 800b5ca:	4604      	mov	r4, r0
 800b5cc:	b13b      	cbz	r3, 800b5de <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b5ce:	6803      	ldr	r3, [r0, #0]
 800b5d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b5d2:	4798      	blx	r3
 800b5d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b5d6:	4283      	cmp	r3, r0
 800b5d8:	d101      	bne.n	800b5de <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b5da:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b5dc:	bd10      	pop	{r4, pc}
 800b5de:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b5e0:	e7fc      	b.n	800b5dc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b5e2:	bf00      	nop
 800b5e4:	2400b05e 	.word	0x2400b05e

0800b5e8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b5e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b5ec:	461d      	mov	r5, r3
 800b5ee:	b08a      	sub	sp, #40	; 0x28
 800b5f0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b5f4:	4690      	mov	r8, r2
 800b5f6:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b5fa:	2400      	movs	r4, #0
 800b5fc:	4607      	mov	r7, r0
 800b5fe:	fb06 8505 	mla	r5, r6, r5, r8
 800b602:	9404      	str	r4, [sp, #16]
 800b604:	f88d 4020 	strb.w	r4, [sp, #32]
 800b608:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b60c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b610:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b614:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b618:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b61c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b620:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b624:	f7ff ffce 	bl	800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b628:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b62c:	6878      	ldr	r0, [r7, #4]
 800b62e:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b632:	a901      	add	r1, sp, #4
 800b634:	9505      	str	r5, [sp, #20]
 800b636:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b63a:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b63e:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b642:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b646:	6803      	ldr	r3, [r0, #0]
 800b648:	685b      	ldr	r3, [r3, #4]
 800b64a:	4798      	blx	r3
 800b64c:	b00a      	add	sp, #40	; 0x28
 800b64e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b652 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b652:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b656:	b08b      	sub	sp, #44	; 0x2c
 800b658:	2400      	movs	r4, #0
 800b65a:	4691      	mov	r9, r2
 800b65c:	461d      	mov	r5, r3
 800b65e:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b662:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b666:	4688      	mov	r8, r1
 800b668:	4607      	mov	r7, r0
 800b66a:	9404      	str	r4, [sp, #16]
 800b66c:	fb06 9505 	mla	r5, r6, r5, r9
 800b670:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b674:	f7ff ffa6 	bl	800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b678:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b67c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b680:	6878      	ldr	r0, [r7, #4]
 800b682:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b686:	a901      	add	r1, sp, #4
 800b688:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b68c:	9505      	str	r5, [sp, #20]
 800b68e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b692:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b696:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b69a:	f8cd 8010 	str.w	r8, [sp, #16]
 800b69e:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b6a2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b6a6:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b6aa:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b6ae:	6803      	ldr	r3, [r0, #0]
 800b6b0:	685b      	ldr	r3, [r3, #4]
 800b6b2:	4798      	blx	r3
 800b6b4:	b00b      	add	sp, #44	; 0x2c
 800b6b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b6bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b6bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6c0:	b08a      	sub	sp, #40	; 0x28
 800b6c2:	4698      	mov	r8, r3
 800b6c4:	2300      	movs	r3, #0
 800b6c6:	4606      	mov	r6, r0
 800b6c8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b6cc:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b6d0:	2d0b      	cmp	r5, #11
 800b6d2:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b6d6:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b6da:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b6de:	9304      	str	r3, [sp, #16]
 800b6e0:	d137      	bne.n	800b752 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800b6e2:	2380      	movs	r3, #128	; 0x80
 800b6e4:	f88d 0020 	strb.w	r0, [sp, #32]
 800b6e8:	4630      	mov	r0, r6
 800b6ea:	9203      	str	r2, [sp, #12]
 800b6ec:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b6f0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b6f4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6f8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b6fc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b700:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b704:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b708:	f7ff ff5c 	bl	800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b70c:	2c0b      	cmp	r4, #11
 800b70e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b712:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b716:	bf94      	ite	ls
 800b718:	4b19      	ldrls	r3, [pc, #100]	; (800b780 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b71a:	2100      	movhi	r1, #0
 800b71c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b720:	bf98      	it	ls
 800b722:	5d19      	ldrbls	r1, [r3, r4]
 800b724:	fb02 8307 	mla	r3, r2, r7, r8
 800b728:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b72c:	10c9      	asrs	r1, r1, #3
 800b72e:	fb01 0003 	mla	r0, r1, r3, r0
 800b732:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b736:	a901      	add	r1, sp, #4
 800b738:	9005      	str	r0, [sp, #20]
 800b73a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b73e:	2300      	movs	r3, #0
 800b740:	6870      	ldr	r0, [r6, #4]
 800b742:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b746:	6803      	ldr	r3, [r0, #0]
 800b748:	685b      	ldr	r3, [r3, #4]
 800b74a:	4798      	blx	r3
 800b74c:	b00a      	add	sp, #40	; 0x28
 800b74e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b752:	2d02      	cmp	r5, #2
 800b754:	d109      	bne.n	800b76a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800b756:	28ff      	cmp	r0, #255	; 0xff
 800b758:	d105      	bne.n	800b766 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800b75a:	f1bc 0f00 	cmp.w	ip, #0
 800b75e:	bf14      	ite	ne
 800b760:	2340      	movne	r3, #64	; 0x40
 800b762:	2320      	moveq	r3, #32
 800b764:	e7be      	b.n	800b6e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b766:	2340      	movs	r3, #64	; 0x40
 800b768:	e7bc      	b.n	800b6e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b76a:	28ff      	cmp	r0, #255	; 0xff
 800b76c:	d105      	bne.n	800b77a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800b76e:	f1bc 0f00 	cmp.w	ip, #0
 800b772:	bf14      	ite	ne
 800b774:	2304      	movne	r3, #4
 800b776:	2301      	moveq	r3, #1
 800b778:	e7b4      	b.n	800b6e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b77a:	2304      	movs	r3, #4
 800b77c:	e7b2      	b.n	800b6e4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b77e:	bf00      	nop
 800b780:	0801edc8 	.word	0x0801edc8

0800b784 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b784:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b788:	b08b      	sub	sp, #44	; 0x2c
 800b78a:	461d      	mov	r5, r3
 800b78c:	2400      	movs	r4, #0
 800b78e:	4688      	mov	r8, r1
 800b790:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b794:	4693      	mov	fp, r2
 800b796:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b79a:	4607      	mov	r7, r0
 800b79c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b7a0:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b7a4:	9404      	str	r4, [sp, #16]
 800b7a6:	bf14      	ite	ne
 800b7a8:	2308      	movne	r3, #8
 800b7aa:	2302      	moveq	r3, #2
 800b7ac:	fb05 b50a 	mla	r5, r5, sl, fp
 800b7b0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b7b4:	f7ff ff06 	bl	800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7b8:	2e0b      	cmp	r6, #11
 800b7ba:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b7be:	a901      	add	r1, sp, #4
 800b7c0:	bf98      	it	ls
 800b7c2:	4b13      	ldrls	r3, [pc, #76]	; (800b810 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b7c4:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b7c8:	bf98      	it	ls
 800b7ca:	5d9c      	ldrbls	r4, [r3, r6]
 800b7cc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b7d0:	10e4      	asrs	r4, r4, #3
 800b7d2:	f8cd 8010 	str.w	r8, [sp, #16]
 800b7d6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b7da:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b7de:	fb04 0405 	mla	r4, r4, r5, r0
 800b7e2:	6878      	ldr	r0, [r7, #4]
 800b7e4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b7e8:	2300      	movs	r3, #0
 800b7ea:	9405      	str	r4, [sp, #20]
 800b7ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b7f0:	f88d 9020 	strb.w	r9, [sp, #32]
 800b7f4:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b7f8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b7fc:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b800:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b804:	6803      	ldr	r3, [r0, #0]
 800b806:	685b      	ldr	r3, [r3, #4]
 800b808:	4798      	blx	r3
 800b80a:	b00b      	add	sp, #44	; 0x2c
 800b80c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b810:	0801edc8 	.word	0x0801edc8

0800b814 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b814:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b818:	461e      	mov	r6, r3
 800b81a:	4b0a      	ldr	r3, [pc, #40]	; (800b844 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b81c:	460f      	mov	r7, r1
 800b81e:	4690      	mov	r8, r2
 800b820:	881d      	ldrh	r5, [r3, #0]
 800b822:	f7ff fd23 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b826:	6803      	ldr	r3, [r0, #0]
 800b828:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b82a:	4798      	blx	r3
 800b82c:	280b      	cmp	r0, #11
 800b82e:	bf96      	itet	ls
 800b830:	4b05      	ldrls	r3, [pc, #20]	; (800b848 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b832:	2400      	movhi	r4, #0
 800b834:	5c1c      	ldrbls	r4, [r3, r0]
 800b836:	fb08 7005 	mla	r0, r8, r5, r7
 800b83a:	10e4      	asrs	r4, r4, #3
 800b83c:	fb04 6000 	mla	r0, r4, r0, r6
 800b840:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b844:	2400b05a 	.word	0x2400b05a
 800b848:	0801edc8 	.word	0x0801edc8

0800b84c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b84c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b84e:	b08b      	sub	sp, #44	; 0x2c
 800b850:	461f      	mov	r7, r3
 800b852:	4604      	mov	r4, r0
 800b854:	4616      	mov	r6, r2
 800b856:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b85a:	2500      	movs	r5, #0
 800b85c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b860:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b864:	9504      	str	r5, [sp, #16]
 800b866:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b86a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b86e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b872:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b876:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b87a:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b87e:	f88d 3020 	strb.w	r3, [sp, #32]
 800b882:	f7ff fe9f 	bl	800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b886:	463a      	mov	r2, r7
 800b888:	4631      	mov	r1, r6
 800b88a:	4603      	mov	r3, r0
 800b88c:	4620      	mov	r0, r4
 800b88e:	f7ff ffc1 	bl	800b814 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b892:	4b0e      	ldr	r3, [pc, #56]	; (800b8cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b894:	9005      	str	r0, [sp, #20]
 800b896:	881b      	ldrh	r3, [r3, #0]
 800b898:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b89c:	f7ff fce6 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b8a0:	6803      	ldr	r3, [r0, #0]
 800b8a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b8a4:	4798      	blx	r3
 800b8a6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b8a8:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b8ac:	a901      	add	r1, sp, #4
 800b8ae:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b8b2:	9304      	str	r3, [sp, #16]
 800b8b4:	6860      	ldr	r0, [r4, #4]
 800b8b6:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b8ba:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b8be:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b8c2:	6803      	ldr	r3, [r0, #0]
 800b8c4:	685b      	ldr	r3, [r3, #4]
 800b8c6:	4798      	blx	r3
 800b8c8:	b00b      	add	sp, #44	; 0x2c
 800b8ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b8cc:	2400b05a 	.word	0x2400b05a

0800b8d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b8d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8d2:	b08d      	sub	sp, #52	; 0x34
 800b8d4:	2501      	movs	r5, #1
 800b8d6:	4604      	mov	r4, r0
 800b8d8:	466b      	mov	r3, sp
 800b8da:	9503      	str	r5, [sp, #12]
 800b8dc:	e883 0006 	stmia.w	r3, {r1, r2}
 800b8e0:	2300      	movs	r3, #0
 800b8e2:	f8bd 6000 	ldrh.w	r6, [sp]
 800b8e6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b8ea:	9306      	str	r3, [sp, #24]
 800b8ec:	6803      	ldr	r3, [r0, #0]
 800b8ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b8f0:	4798      	blx	r3
 800b8f2:	463a      	mov	r2, r7
 800b8f4:	4631      	mov	r1, r6
 800b8f6:	4603      	mov	r3, r0
 800b8f8:	4620      	mov	r0, r4
 800b8fa:	f7ff ff8b 	bl	800b814 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b8fe:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b900:	9004      	str	r0, [sp, #16]
 800b902:	9307      	str	r3, [sp, #28]
 800b904:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b908:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b90c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b910:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b914:	4b0e      	ldr	r3, [pc, #56]	; (800b950 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b916:	881b      	ldrh	r3, [r3, #0]
 800b918:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b91c:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b920:	f7ff fca4 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b924:	6803      	ldr	r3, [r0, #0]
 800b926:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b928:	4798      	blx	r3
 800b92a:	23ff      	movs	r3, #255	; 0xff
 800b92c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b930:	a903      	add	r1, sp, #12
 800b932:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b936:	6860      	ldr	r0, [r4, #4]
 800b938:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b93c:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b940:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b944:	6803      	ldr	r3, [r0, #0]
 800b946:	685b      	ldr	r3, [r3, #4]
 800b948:	4798      	blx	r3
 800b94a:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b94c:	b00d      	add	sp, #52	; 0x34
 800b94e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b950:	2400b05a 	.word	0x2400b05a

0800b954 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b954:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b958:	b08c      	sub	sp, #48	; 0x30
 800b95a:	461e      	mov	r6, r3
 800b95c:	2300      	movs	r3, #0
 800b95e:	4604      	mov	r4, r0
 800b960:	466d      	mov	r5, sp
 800b962:	9306      	str	r3, [sp, #24]
 800b964:	6803      	ldr	r3, [r0, #0]
 800b966:	e885 0006 	stmia.w	r5, {r1, r2}
 800b96a:	2501      	movs	r5, #1
 800b96c:	f8bd 7000 	ldrh.w	r7, [sp]
 800b970:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b974:	9503      	str	r5, [sp, #12]
 800b976:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b978:	4798      	blx	r3
 800b97a:	4642      	mov	r2, r8
 800b97c:	4639      	mov	r1, r7
 800b97e:	4603      	mov	r3, r0
 800b980:	4620      	mov	r0, r4
 800b982:	f7ff ff47 	bl	800b814 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b986:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b98a:	9004      	str	r0, [sp, #16]
 800b98c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b990:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b994:	9607      	str	r6, [sp, #28]
 800b996:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b99a:	4b10      	ldr	r3, [pc, #64]	; (800b9dc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b99c:	881b      	ldrh	r3, [r3, #0]
 800b99e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b9a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b9a4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b9a8:	f7ff fc60 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800b9ac:	6803      	ldr	r3, [r0, #0]
 800b9ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9b0:	4798      	blx	r3
 800b9b2:	23ff      	movs	r3, #255	; 0xff
 800b9b4:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b9b8:	a903      	add	r1, sp, #12
 800b9ba:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b9be:	6860      	ldr	r0, [r4, #4]
 800b9c0:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b9c4:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b9c8:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b9cc:	6803      	ldr	r3, [r0, #0]
 800b9ce:	685b      	ldr	r3, [r3, #4]
 800b9d0:	4798      	blx	r3
 800b9d2:	4630      	mov	r0, r6
 800b9d4:	b00c      	add	sp, #48	; 0x30
 800b9d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9da:	bf00      	nop
 800b9dc:	2400b05a 	.word	0x2400b05a

0800b9e0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800b9e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9e2:	b085      	sub	sp, #20
 800b9e4:	4605      	mov	r5, r0
 800b9e6:	ac02      	add	r4, sp, #8
 800b9e8:	e884 0006 	stmia.w	r4, {r1, r2}
 800b9ec:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800b9f0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800b9f4:	f7ff fde6 	bl	800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b9f8:	4631      	mov	r1, r6
 800b9fa:	4603      	mov	r3, r0
 800b9fc:	463a      	mov	r2, r7
 800b9fe:	4628      	mov	r0, r5
 800ba00:	f7ff ff08 	bl	800b814 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba04:	4a05      	ldr	r2, [pc, #20]	; (800ba1c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ba06:	682b      	ldr	r3, [r5, #0]
 800ba08:	8812      	ldrh	r2, [r2, #0]
 800ba0a:	9200      	str	r2, [sp, #0]
 800ba0c:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800ba0e:	4603      	mov	r3, r0
 800ba10:	4628      	mov	r0, r5
 800ba12:	e894 0006 	ldmia.w	r4, {r1, r2}
 800ba16:	47b0      	blx	r6
 800ba18:	b005      	add	sp, #20
 800ba1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba1c:	2400b05a 	.word	0x2400b05a

0800ba20 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800ba20:	b570      	push	{r4, r5, r6, lr}
 800ba22:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800ba26:	4604      	mov	r4, r0
 800ba28:	b19b      	cbz	r3, 800ba52 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ba2a:	2002      	movs	r0, #2
 800ba2c:	f7f5 fc6e 	bl	800130c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800ba30:	2300      	movs	r3, #0
 800ba32:	4620      	mov	r0, r4
 800ba34:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800ba38:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800ba3c:	6823      	ldr	r3, [r4, #0]
 800ba3e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800ba42:	f7ff fdbf 	bl	800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba46:	4601      	mov	r1, r0
 800ba48:	4620      	mov	r0, r4
 800ba4a:	462b      	mov	r3, r5
 800ba4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba50:	4718      	bx	r3
 800ba52:	bd70      	pop	{r4, r5, r6, pc}

0800ba54 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800ba54:	b570      	push	{r4, r5, r6, lr}
 800ba56:	4605      	mov	r5, r0
 800ba58:	460c      	mov	r4, r1
 800ba5a:	2003      	movs	r0, #3
 800ba5c:	b149      	cbz	r1, 800ba72 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800ba5e:	f7f5 fbf1 	bl	8001244 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800ba62:	6928      	ldr	r0, [r5, #16]
 800ba64:	b168      	cbz	r0, 800ba82 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800ba66:	6803      	ldr	r3, [r0, #0]
 800ba68:	2101      	movs	r1, #1
 800ba6a:	695b      	ldr	r3, [r3, #20]
 800ba6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ba70:	4718      	bx	r3
 800ba72:	f7f5 fc19 	bl	80012a8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800ba76:	6928      	ldr	r0, [r5, #16]
 800ba78:	b118      	cbz	r0, 800ba82 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800ba7a:	6803      	ldr	r3, [r0, #0]
 800ba7c:	4621      	mov	r1, r4
 800ba7e:	695b      	ldr	r3, [r3, #20]
 800ba80:	e7f4      	b.n	800ba6c <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800ba82:	bd70      	pop	{r4, r5, r6, pc}

0800ba84 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800ba84:	b538      	push	{r3, r4, r5, lr}
 800ba86:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800ba8a:	4604      	mov	r4, r0
 800ba8c:	460d      	mov	r5, r1
 800ba8e:	428b      	cmp	r3, r1
 800ba90:	d006      	beq.n	800baa0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800ba92:	6803      	ldr	r3, [r0, #0]
 800ba94:	b929      	cbnz	r1, 800baa2 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800ba96:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ba9a:	4798      	blx	r3
 800ba9c:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800baa0:	bd38      	pop	{r3, r4, r5, pc}
 800baa2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800baa6:	e7f8      	b.n	800ba9a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800baa8 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800baa8:	4b0d      	ldr	r3, [pc, #52]	; (800bae0 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800baaa:	b510      	push	{r4, lr}
 800baac:	781b      	ldrb	r3, [r3, #0]
 800baae:	4604      	mov	r4, r0
 800bab0:	b95b      	cbnz	r3, 800baca <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bab2:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bab6:	2b02      	cmp	r3, #2
 800bab8:	d007      	beq.n	800baca <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800baba:	6840      	ldr	r0, [r0, #4]
 800babc:	f000 f912 	bl	800bce4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bac0:	b118      	cbz	r0, 800baca <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bac2:	6862      	ldr	r2, [r4, #4]
 800bac4:	7a53      	ldrb	r3, [r2, #9]
 800bac6:	2b00      	cmp	r3, #0
 800bac8:	d0fc      	beq.n	800bac4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800baca:	f7f5 fdbf 	bl	800164c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bace:	4620      	mov	r0, r4
 800bad0:	2100      	movs	r1, #0
 800bad2:	f7ff ffd7 	bl	800ba84 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bad6:	4620      	mov	r0, r4
 800bad8:	f7ff fd74 	bl	800b5c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800badc:	bd10      	pop	{r4, pc}
 800bade:	bf00      	nop
 800bae0:	2400b05e 	.word	0x2400b05e

0800bae4 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bae4:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bae8:	1a13      	subs	r3, r2, r0
 800baea:	4258      	negs	r0, r3
 800baec:	4158      	adcs	r0, r3
 800baee:	4770      	bx	lr

0800baf0 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800baf0:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800baf4:	1a9b      	subs	r3, r3, r2
 800baf6:	2b00      	cmp	r3, #0
 800baf8:	bfdc      	itt	le
 800bafa:	6882      	ldrle	r2, [r0, #8]
 800bafc:	189b      	addle	r3, r3, r2
 800bafe:	2b01      	cmp	r3, #1
 800bb00:	bfcc      	ite	gt
 800bb02:	2000      	movgt	r0, #0
 800bb04:	2001      	movle	r0, #1
 800bb06:	4770      	bx	lr

0800bb08 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bb08:	6902      	ldr	r2, [r0, #16]
 800bb0a:	6843      	ldr	r3, [r0, #4]
 800bb0c:	2024      	movs	r0, #36	; 0x24
 800bb0e:	fb00 3002 	mla	r0, r0, r2, r3
 800bb12:	4770      	bx	lr

0800bb14 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bb14:	6803      	ldr	r3, [r0, #0]
 800bb16:	691b      	ldr	r3, [r3, #16]
 800bb18:	4718      	bx	r3

0800bb1a <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bb1a:	2301      	movs	r3, #1
 800bb1c:	b570      	push	{r4, r5, r6, lr}
 800bb1e:	7203      	strb	r3, [r0, #8]
 800bb20:	4604      	mov	r4, r0
 800bb22:	6840      	ldr	r0, [r0, #4]
 800bb24:	6803      	ldr	r3, [r0, #0]
 800bb26:	699b      	ldr	r3, [r3, #24]
 800bb28:	4798      	blx	r3
 800bb2a:	6803      	ldr	r3, [r0, #0]
 800bb2c:	4605      	mov	r5, r0
 800bb2e:	2b40      	cmp	r3, #64	; 0x40
 800bb30:	d00c      	beq.n	800bb4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb32:	d810      	bhi.n	800bb56 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bb34:	2b04      	cmp	r3, #4
 800bb36:	d01d      	beq.n	800bb74 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bb38:	d804      	bhi.n	800bb44 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bb3a:	2b01      	cmp	r3, #1
 800bb3c:	d006      	beq.n	800bb4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb3e:	2b02      	cmp	r3, #2
 800bb40:	d02c      	beq.n	800bb9c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bb42:	bd70      	pop	{r4, r5, r6, pc}
 800bb44:	2b08      	cmp	r3, #8
 800bb46:	d01d      	beq.n	800bb84 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bb48:	2b20      	cmp	r3, #32
 800bb4a:	d1fa      	bne.n	800bb42 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bb4c:	6823      	ldr	r3, [r4, #0]
 800bb4e:	4620      	mov	r0, r4
 800bb50:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bb52:	4798      	blx	r3
 800bb54:	e013      	b.n	800bb7e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bb56:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bb5a:	d0f7      	beq.n	800bb4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb5c:	d804      	bhi.n	800bb68 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bb5e:	2b80      	cmp	r3, #128	; 0x80
 800bb60:	d0f4      	beq.n	800bb4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb62:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bb66:	e7f0      	b.n	800bb4a <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bb68:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bb6c:	d0ee      	beq.n	800bb4c <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb6e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bb72:	e7e5      	b.n	800bb40 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bb74:	6823      	ldr	r3, [r4, #0]
 800bb76:	7f01      	ldrb	r1, [r0, #28]
 800bb78:	4620      	mov	r0, r4
 800bb7a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bb7c:	4798      	blx	r3
 800bb7e:	6823      	ldr	r3, [r4, #0]
 800bb80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bb82:	e006      	b.n	800bb92 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bb84:	6823      	ldr	r3, [r4, #0]
 800bb86:	7f01      	ldrb	r1, [r0, #28]
 800bb88:	4620      	mov	r0, r4
 800bb8a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bb8c:	4798      	blx	r3
 800bb8e:	6823      	ldr	r3, [r4, #0]
 800bb90:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bb92:	4629      	mov	r1, r5
 800bb94:	4620      	mov	r0, r4
 800bb96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb9a:	4718      	bx	r3
 800bb9c:	6823      	ldr	r3, [r4, #0]
 800bb9e:	4620      	mov	r0, r4
 800bba0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bba2:	4798      	blx	r3
 800bba4:	e7f3      	b.n	800bb8e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bba6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bba6:	4770      	bx	lr

0800bba8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bba8:	4770      	bx	lr

0800bbaa <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bbaa:	4770      	bx	lr

0800bbac <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bbac:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bbb0:	b510      	push	{r4, lr}
 800bbb2:	1ad2      	subs	r2, r2, r3
 800bbb4:	2a00      	cmp	r2, #0
 800bbb6:	bfdc      	itt	le
 800bbb8:	6884      	ldrle	r4, [r0, #8]
 800bbba:	1912      	addle	r2, r2, r4
 800bbbc:	2a01      	cmp	r2, #1
 800bbbe:	dd16      	ble.n	800bbee <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bbc0:	6842      	ldr	r2, [r0, #4]
 800bbc2:	2424      	movs	r4, #36	; 0x24
 800bbc4:	fb04 2303 	mla	r3, r4, r3, r2
 800bbc8:	f101 0220 	add.w	r2, r1, #32
 800bbcc:	f851 4b04 	ldr.w	r4, [r1], #4
 800bbd0:	4291      	cmp	r1, r2
 800bbd2:	f843 4b04 	str.w	r4, [r3], #4
 800bbd6:	d1f9      	bne.n	800bbcc <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bbd8:	780a      	ldrb	r2, [r1, #0]
 800bbda:	701a      	strb	r2, [r3, #0]
 800bbdc:	68c3      	ldr	r3, [r0, #12]
 800bbde:	6882      	ldr	r2, [r0, #8]
 800bbe0:	f3bf 8f5b 	dmb	ish
 800bbe4:	3301      	adds	r3, #1
 800bbe6:	429a      	cmp	r2, r3
 800bbe8:	bfd8      	it	le
 800bbea:	1a9b      	suble	r3, r3, r2
 800bbec:	60c3      	str	r3, [r0, #12]
 800bbee:	bd10      	pop	{r4, pc}

0800bbf0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bbf0:	6903      	ldr	r3, [r0, #16]
 800bbf2:	6882      	ldr	r2, [r0, #8]
 800bbf4:	f3bf 8f5b 	dmb	ish
 800bbf8:	3301      	adds	r3, #1
 800bbfa:	429a      	cmp	r2, r3
 800bbfc:	bfd8      	it	le
 800bbfe:	1a9b      	suble	r3, r3, r2
 800bc00:	6103      	str	r3, [r0, #16]
 800bc02:	4770      	bx	lr

0800bc04 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bc04:	b570      	push	{r4, r5, r6, lr}
 800bc06:	4604      	mov	r4, r0
 800bc08:	460e      	mov	r6, r1
 800bc0a:	6860      	ldr	r0, [r4, #4]
 800bc0c:	6803      	ldr	r3, [r0, #0]
 800bc0e:	685b      	ldr	r3, [r3, #4]
 800bc10:	4798      	blx	r3
 800bc12:	2800      	cmp	r0, #0
 800bc14:	d1f9      	bne.n	800bc0a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bc16:	4d0d      	ldr	r5, [pc, #52]	; (800bc4c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bc18:	6828      	ldr	r0, [r5, #0]
 800bc1a:	6803      	ldr	r3, [r0, #0]
 800bc1c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bc1e:	4798      	blx	r3
 800bc20:	f7f5 fd22 	bl	8001668 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bc24:	6828      	ldr	r0, [r5, #0]
 800bc26:	2101      	movs	r1, #1
 800bc28:	f7ff ff2c 	bl	800ba84 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc2c:	6860      	ldr	r0, [r4, #4]
 800bc2e:	4631      	mov	r1, r6
 800bc30:	6803      	ldr	r3, [r0, #0]
 800bc32:	689b      	ldr	r3, [r3, #8]
 800bc34:	4798      	blx	r3
 800bc36:	6823      	ldr	r3, [r4, #0]
 800bc38:	4620      	mov	r0, r4
 800bc3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bc3c:	4798      	blx	r3
 800bc3e:	6828      	ldr	r0, [r5, #0]
 800bc40:	6803      	ldr	r3, [r0, #0]
 800bc42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc46:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bc48:	4718      	bx	r3
 800bc4a:	bf00      	nop
 800bc4c:	2400b060 	.word	0x2400b060

0800bc50 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bc50:	b508      	push	{r3, lr}
 800bc52:	f7f5 fcfb 	bl	800164c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bc56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bc5a:	f7f5 bcff 	b.w	800165c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bc5e <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bc5e:	b510      	push	{r4, lr}
 800bc60:	4604      	mov	r4, r0
 800bc62:	2114      	movs	r1, #20
 800bc64:	f010 ff75 	bl	801cb52 <_ZdlPvj>
 800bc68:	4620      	mov	r0, r4
 800bc6a:	bd10      	pop	{r4, pc}

0800bc6c <_ZN8touchgfx13DMA_Interface5startEv>:
 800bc6c:	b510      	push	{r4, lr}
 800bc6e:	4604      	mov	r4, r0
 800bc70:	6840      	ldr	r0, [r0, #4]
 800bc72:	6803      	ldr	r3, [r0, #0]
 800bc74:	681b      	ldr	r3, [r3, #0]
 800bc76:	4798      	blx	r3
 800bc78:	b948      	cbnz	r0, 800bc8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bc7a:	7a63      	ldrb	r3, [r4, #9]
 800bc7c:	b13b      	cbz	r3, 800bc8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bc7e:	7a23      	ldrb	r3, [r4, #8]
 800bc80:	b92b      	cbnz	r3, 800bc8e <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bc82:	6823      	ldr	r3, [r4, #0]
 800bc84:	4620      	mov	r0, r4
 800bc86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bc88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bc8c:	4718      	bx	r3
 800bc8e:	bd10      	pop	{r4, pc}

0800bc90 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bc90:	b570      	push	{r4, r5, r6, lr}
 800bc92:	4604      	mov	r4, r0
 800bc94:	6840      	ldr	r0, [r0, #4]
 800bc96:	6803      	ldr	r3, [r0, #0]
 800bc98:	681b      	ldr	r3, [r3, #0]
 800bc9a:	4798      	blx	r3
 800bc9c:	4605      	mov	r5, r0
 800bc9e:	b930      	cbnz	r0, 800bcae <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bca0:	7a23      	ldrb	r3, [r4, #8]
 800bca2:	b123      	cbz	r3, 800bcae <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bca4:	6860      	ldr	r0, [r4, #4]
 800bca6:	6803      	ldr	r3, [r0, #0]
 800bca8:	695b      	ldr	r3, [r3, #20]
 800bcaa:	4798      	blx	r3
 800bcac:	7225      	strb	r5, [r4, #8]
 800bcae:	6860      	ldr	r0, [r4, #4]
 800bcb0:	6803      	ldr	r3, [r0, #0]
 800bcb2:	681b      	ldr	r3, [r3, #0]
 800bcb4:	4798      	blx	r3
 800bcb6:	b928      	cbnz	r0, 800bcc4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bcb8:	6823      	ldr	r3, [r4, #0]
 800bcba:	4620      	mov	r0, r4
 800bcbc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bcbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcc2:	4718      	bx	r3
 800bcc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bcc8:	f7f5 bcd6 	b.w	8001678 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bccc <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bccc:	b510      	push	{r4, lr}
 800bcce:	6082      	str	r2, [r0, #8]
 800bcd0:	2200      	movs	r2, #0
 800bcd2:	4c03      	ldr	r4, [pc, #12]	; (800bce0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bcd4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bcd8:	e9c0 4100 	strd	r4, r1, [r0]
 800bcdc:	bd10      	pop	{r4, pc}
 800bcde:	bf00      	nop
 800bce0:	0801eddc 	.word	0x0801eddc

0800bce4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bce4:	6840      	ldr	r0, [r0, #4]
 800bce6:	6803      	ldr	r3, [r0, #0]
 800bce8:	681b      	ldr	r3, [r3, #0]
 800bcea:	4718      	bx	r3

0800bcec <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800bcec:	4b07      	ldr	r3, [pc, #28]	; (800bd0c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800bcee:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800bcf0:	881b      	ldrh	r3, [r3, #0]
 800bcf2:	4293      	cmp	r3, r2
 800bcf4:	bf81      	itttt	hi
 800bcf6:	4b06      	ldrhi	r3, [pc, #24]	; (800bd10 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800bcf8:	681b      	ldrhi	r3, [r3, #0]
 800bcfa:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800bcfe:	7858      	ldrbhi	r0, [r3, #1]
 800bd00:	bf8c      	ite	hi
 800bd02:	f000 0003 	andhi.w	r0, r0, #3
 800bd06:	2000      	movls	r0, #0
 800bd08:	4770      	bx	lr
 800bd0a:	bf00      	nop
 800bd0c:	2400b0b4 	.word	0x2400b0b4
 800bd10:	2400b0b0 	.word	0x2400b0b0

0800bd14 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800bd14:	4b11      	ldr	r3, [pc, #68]	; (800bd5c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800bd16:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd1a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800bd1c:	4604      	mov	r4, r0
 800bd1e:	881b      	ldrh	r3, [r3, #0]
 800bd20:	428b      	cmp	r3, r1
 800bd22:	d918      	bls.n	800bd56 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800bd24:	6803      	ldr	r3, [r0, #0]
 800bd26:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800bd28:	4b0d      	ldr	r3, [pc, #52]	; (800bd60 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800bd2a:	6818      	ldr	r0, [r3, #0]
 800bd2c:	f7f6 ff58 	bl	8002be0 <_ZNK8touchgfx5Texts7getTextEt>
 800bd30:	6823      	ldr	r3, [r4, #0]
 800bd32:	4606      	mov	r6, r0
 800bd34:	4620      	mov	r0, r4
 800bd36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd38:	4798      	blx	r3
 800bd3a:	6823      	ldr	r3, [r4, #0]
 800bd3c:	4607      	mov	r7, r0
 800bd3e:	4620      	mov	r0, r4
 800bd40:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bd44:	4798      	blx	r3
 800bd46:	463a      	mov	r2, r7
 800bd48:	4603      	mov	r3, r0
 800bd4a:	4631      	mov	r1, r6
 800bd4c:	4620      	mov	r0, r4
 800bd4e:	46ac      	mov	ip, r5
 800bd50:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800bd54:	4760      	bx	ip
 800bd56:	2000      	movs	r0, #0
 800bd58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bd5c:	2400b0b4 	.word	0x2400b0b4
 800bd60:	2400b0bc 	.word	0x2400b0bc

0800bd64 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800bd64:	4b18      	ldr	r3, [pc, #96]	; (800bdc8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800bd66:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800bd6a:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800bd6c:	4604      	mov	r4, r0
 800bd6e:	881b      	ldrh	r3, [r3, #0]
 800bd70:	428b      	cmp	r3, r1
 800bd72:	d926      	bls.n	800bdc2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800bd74:	4b15      	ldr	r3, [pc, #84]	; (800bdcc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800bd76:	681b      	ldr	r3, [r3, #0]
 800bd78:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800bd7c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800bd80:	4b13      	ldr	r3, [pc, #76]	; (800bdd0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800bd82:	7855      	ldrb	r5, [r2, #1]
 800bd84:	681b      	ldr	r3, [r3, #0]
 800bd86:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800bd8a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800bd8e:	6833      	ldr	r3, [r6, #0]
 800bd90:	69df      	ldr	r7, [r3, #28]
 800bd92:	4b10      	ldr	r3, [pc, #64]	; (800bdd4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800bd94:	6818      	ldr	r0, [r3, #0]
 800bd96:	f7f6 ff23 	bl	8002be0 <_ZNK8touchgfx5Texts7getTextEt>
 800bd9a:	6823      	ldr	r3, [r4, #0]
 800bd9c:	4680      	mov	r8, r0
 800bd9e:	4620      	mov	r0, r4
 800bda0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bda2:	4798      	blx	r3
 800bda4:	6823      	ldr	r3, [r4, #0]
 800bda6:	4681      	mov	r9, r0
 800bda8:	4620      	mov	r0, r4
 800bdaa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bdae:	4798      	blx	r3
 800bdb0:	464b      	mov	r3, r9
 800bdb2:	9000      	str	r0, [sp, #0]
 800bdb4:	4642      	mov	r2, r8
 800bdb6:	4629      	mov	r1, r5
 800bdb8:	4630      	mov	r0, r6
 800bdba:	47b8      	blx	r7
 800bdbc:	b003      	add	sp, #12
 800bdbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bdc2:	2000      	movs	r0, #0
 800bdc4:	e7fa      	b.n	800bdbc <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800bdc6:	bf00      	nop
 800bdc8:	2400b0b4 	.word	0x2400b0b4
 800bdcc:	2400b0b0 	.word	0x2400b0b0
 800bdd0:	2400b0b8 	.word	0x2400b0b8
 800bdd4:	2400b0bc 	.word	0x2400b0bc

0800bdd8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800bdd8:	b40e      	push	{r1, r2, r3}
 800bdda:	4b30      	ldr	r3, [pc, #192]	; (800be9c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800bddc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bde0:	881a      	ldrh	r2, [r3, #0]
 800bde2:	b09d      	sub	sp, #116	; 0x74
 800bde4:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800bde6:	4604      	mov	r4, r0
 800bde8:	429a      	cmp	r2, r3
 800bdea:	d954      	bls.n	800be96 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800bdec:	aa26      	add	r2, sp, #152	; 0x98
 800bdee:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800bea0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800bdf2:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800bea4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800bdf6:	9202      	str	r2, [sp, #8]
 800bdf8:	f8d9 2000 	ldr.w	r2, [r9]
 800bdfc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800be00:	f8d8 3000 	ldr.w	r3, [r8]
 800be04:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800be08:	682b      	ldr	r3, [r5, #0]
 800be0a:	4628      	mov	r0, r5
 800be0c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800be0e:	4798      	blx	r3
 800be10:	4606      	mov	r6, r0
 800be12:	b207      	sxth	r7, r0
 800be14:	a803      	add	r0, sp, #12
 800be16:	f003 fd27 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800be1a:	682b      	ldr	r3, [r5, #0]
 800be1c:	4628      	mov	r0, r5
 800be1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800be20:	4798      	blx	r3
 800be22:	682b      	ldr	r3, [r5, #0]
 800be24:	4682      	mov	sl, r0
 800be26:	4628      	mov	r0, r5
 800be28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800be2a:	4798      	blx	r3
 800be2c:	4653      	mov	r3, sl
 800be2e:	9000      	str	r0, [sp, #0]
 800be30:	a803      	add	r0, sp, #12
 800be32:	9a02      	ldr	r2, [sp, #8]
 800be34:	9925      	ldr	r1, [sp, #148]	; 0x94
 800be36:	f003 fd72 	bl	800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800be3a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800be3c:	f8d9 3000 	ldr.w	r3, [r9]
 800be40:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800be44:	8925      	ldrh	r5, [r4, #8]
 800be46:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800be4a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800be4e:	eba5 050c 	sub.w	r5, r5, ip
 800be52:	784a      	ldrb	r2, [r1, #1]
 800be54:	f8d8 3000 	ldr.w	r3, [r8]
 800be58:	b22d      	sxth	r5, r5
 800be5a:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800be5e:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800be62:	9500      	str	r5, [sp, #0]
 800be64:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800be68:	a803      	add	r0, sp, #12
 800be6a:	f001 fc22 	bl	800d6b2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800be6e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800be72:	b203      	sxth	r3, r0
 800be74:	18b9      	adds	r1, r7, r2
 800be76:	2900      	cmp	r1, #0
 800be78:	dd0b      	ble.n	800be92 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800be7a:	3b01      	subs	r3, #1
 800be7c:	fb13 f302 	smulbb	r3, r3, r2
 800be80:	fb16 3300 	smlabb	r3, r6, r0, r3
 800be84:	b21f      	sxth	r7, r3
 800be86:	4638      	mov	r0, r7
 800be88:	b01d      	add	sp, #116	; 0x74
 800be8a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800be8e:	b003      	add	sp, #12
 800be90:	4770      	bx	lr
 800be92:	2b00      	cmp	r3, #0
 800be94:	dcf7      	bgt.n	800be86 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800be96:	2700      	movs	r7, #0
 800be98:	e7f5      	b.n	800be86 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800be9a:	bf00      	nop
 800be9c:	2400b0b4 	.word	0x2400b0b4
 800bea0:	2400b0b0 	.word	0x2400b0b0
 800bea4:	2400b0b8 	.word	0x2400b0b8

0800bea8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800bea8:	4bbc      	ldr	r3, [pc, #752]	; (800c19c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800beaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800beae:	460c      	mov	r4, r1
 800beb0:	881b      	ldrh	r3, [r3, #0]
 800beb2:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800beb4:	b0a9      	sub	sp, #164	; 0xa4
 800beb6:	4681      	mov	r9, r0
 800beb8:	428b      	cmp	r3, r1
 800beba:	d809      	bhi.n	800bed0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800bebc:	2300      	movs	r3, #0
 800bebe:	f04f 32ff 	mov.w	r2, #4294967295
 800bec2:	6083      	str	r3, [r0, #8]
 800bec4:	e9c0 3200 	strd	r3, r2, [r0]
 800bec8:	4648      	mov	r0, r9
 800beca:	b029      	add	sp, #164	; 0xa4
 800becc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bed0:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800c1a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800bed4:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800bed8:	f8df 82cc 	ldr.w	r8, [pc, #716]	; 800c1a8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800bedc:	f8db 3000 	ldr.w	r3, [fp]
 800bee0:	f8d8 0000 	ldr.w	r0, [r8]
 800bee4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800bee8:	4bad      	ldr	r3, [pc, #692]	; (800c1a0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800beea:	681b      	ldr	r3, [r3, #0]
 800beec:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800bef0:	f7f6 fe76 	bl	8002be0 <_ZNK8touchgfx5Texts7getTextEt>
 800bef4:	4607      	mov	r7, r0
 800bef6:	682b      	ldr	r3, [r5, #0]
 800bef8:	4628      	mov	r0, r5
 800befa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800befc:	4798      	blx	r3
 800befe:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800bf00:	f8cd 800c 	str.w	r8, [sp, #12]
 800bf04:	4430      	add	r0, r6
 800bf06:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800bf0a:	b283      	uxth	r3, r0
 800bf0c:	4650      	mov	r0, sl
 800bf0e:	9302      	str	r3, [sp, #8]
 800bf10:	2e00      	cmp	r6, #0
 800bf12:	f040 8090 	bne.w	800c036 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
 800bf16:	f003 fca7 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800bf1a:	682b      	ldr	r3, [r5, #0]
 800bf1c:	4628      	mov	r0, r5
 800bf1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bf20:	4798      	blx	r3
 800bf22:	682b      	ldr	r3, [r5, #0]
 800bf24:	9005      	str	r0, [sp, #20]
 800bf26:	4628      	mov	r0, r5
 800bf28:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bf2a:	4798      	blx	r3
 800bf2c:	6823      	ldr	r3, [r4, #0]
 800bf2e:	4680      	mov	r8, r0
 800bf30:	4620      	mov	r0, r4
 800bf32:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bf34:	4798      	blx	r3
 800bf36:	6822      	ldr	r2, [r4, #0]
 800bf38:	9004      	str	r0, [sp, #16]
 800bf3a:	4620      	mov	r0, r4
 800bf3c:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800bf40:	4790      	blx	r2
 800bf42:	9905      	ldr	r1, [sp, #20]
 800bf44:	9b04      	ldr	r3, [sp, #16]
 800bf46:	460a      	mov	r2, r1
 800bf48:	4639      	mov	r1, r7
 800bf4a:	4637      	mov	r7, r6
 800bf4c:	9001      	str	r0, [sp, #4]
 800bf4e:	9300      	str	r3, [sp, #0]
 800bf50:	4650      	mov	r0, sl
 800bf52:	4643      	mov	r3, r8
 800bf54:	f003 fcf8 	bl	800f948 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800bf58:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800bf5a:	4629      	mov	r1, r5
 800bf5c:	f8db 3000 	ldr.w	r3, [fp]
 800bf60:	4650      	mov	r0, sl
 800bf62:	3601      	adds	r6, #1
 800bf64:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800bf68:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800bf6c:	b2b6      	uxth	r6, r6
 800bf6e:	785b      	ldrb	r3, [r3, #1]
 800bf70:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800bf74:	f001 f8ee 	bl	800d154 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800bf78:	4287      	cmp	r7, r0
 800bf7a:	bfb8      	it	lt
 800bf7c:	b207      	sxthlt	r7, r0
 800bf7e:	4650      	mov	r0, sl
 800bf80:	f003 fc99 	bl	800f8b6 <_ZN8touchgfx12TextProvider11endOfStringEv>
 800bf84:	2800      	cmp	r0, #0
 800bf86:	d0e7      	beq.n	800bf58 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800bf88:	9b02      	ldr	r3, [sp, #8]
 800bf8a:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800bf8e:	fb13 f606 	smulbb	r6, r3, r6
 800bf92:	eba6 0608 	sub.w	r6, r6, r8
 800bf96:	b2b6      	uxth	r6, r6
 800bf98:	fa0f f886 	sxth.w	r8, r6
 800bf9c:	f1b8 0f00 	cmp.w	r8, #0
 800bfa0:	dd06      	ble.n	800bfb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800bfa2:	682b      	ldr	r3, [r5, #0]
 800bfa4:	4628      	mov	r0, r5
 800bfa6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bfa8:	4798      	blx	r3
 800bfaa:	4430      	add	r0, r6
 800bfac:	fa0f f880 	sxth.w	r8, r0
 800bfb0:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800bfb4:	4620      	mov	r0, r4
 800bfb6:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800bfba:	6823      	ldr	r3, [r4, #0]
 800bfbc:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bfbe:	bf0c      	ite	eq
 800bfc0:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800bfc4:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800bfc8:	4798      	blx	r3
 800bfca:	2801      	cmp	r0, #1
 800bfcc:	b2ba      	uxth	r2, r7
 800bfce:	f000 80d2 	beq.w	800c176 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800bfd2:	2802      	cmp	r0, #2
 800bfd4:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800bfd8:	f000 80d3 	beq.w	800c182 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800bfdc:	b21e      	sxth	r6, r3
 800bfde:	7a29      	ldrb	r1, [r5, #8]
 800bfe0:	7a6d      	ldrb	r5, [r5, #9]
 800bfe2:	1a76      	subs	r6, r6, r1
 800bfe4:	4429      	add	r1, r5
 800bfe6:	b2b3      	uxth	r3, r6
 800bfe8:	440a      	add	r2, r1
 800bfea:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800bfee:	b21f      	sxth	r7, r3
 800bff0:	b292      	uxth	r2, r2
 800bff2:	2902      	cmp	r1, #2
 800bff4:	b216      	sxth	r6, r2
 800bff6:	f000 80c7 	beq.w	800c188 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800bffa:	2903      	cmp	r1, #3
 800bffc:	f000 80d6 	beq.w	800c1ac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800c000:	2901      	cmp	r1, #1
 800c002:	f040 80dc 	bne.w	800c1be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800c006:	8923      	ldrh	r3, [r4, #8]
 800c008:	4632      	mov	r2, r6
 800c00a:	463d      	mov	r5, r7
 800c00c:	4646      	mov	r6, r8
 800c00e:	eba3 0308 	sub.w	r3, r3, r8
 800c012:	4690      	mov	r8, r2
 800c014:	b21f      	sxth	r7, r3
 800c016:	9b03      	ldr	r3, [sp, #12]
 800c018:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c01a:	6818      	ldr	r0, [r3, #0]
 800c01c:	f7f6 fde0 	bl	8002be0 <_ZNK8touchgfx5Texts7getTextEt>
 800c020:	f8a9 7000 	strh.w	r7, [r9]
 800c024:	f8a9 5002 	strh.w	r5, [r9, #2]
 800c028:	f8a9 6004 	strh.w	r6, [r9, #4]
 800c02c:	f8a9 8006 	strh.w	r8, [r9, #6]
 800c030:	f8c9 0008 	str.w	r0, [r9, #8]
 800c034:	e748      	b.n	800bec8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800c036:	f003 fc17 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800c03a:	682b      	ldr	r3, [r5, #0]
 800c03c:	4628      	mov	r0, r5
 800c03e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c040:	4798      	blx	r3
 800c042:	682b      	ldr	r3, [r5, #0]
 800c044:	4606      	mov	r6, r0
 800c046:	4628      	mov	r0, r5
 800c048:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c04a:	4798      	blx	r3
 800c04c:	6823      	ldr	r3, [r4, #0]
 800c04e:	4680      	mov	r8, r0
 800c050:	4620      	mov	r0, r4
 800c052:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c054:	4798      	blx	r3
 800c056:	6822      	ldr	r2, [r4, #0]
 800c058:	9004      	str	r0, [sp, #16]
 800c05a:	4620      	mov	r0, r4
 800c05c:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800c060:	4790      	blx	r2
 800c062:	9b04      	ldr	r3, [sp, #16]
 800c064:	4632      	mov	r2, r6
 800c066:	9001      	str	r0, [sp, #4]
 800c068:	9300      	str	r3, [sp, #0]
 800c06a:	4639      	mov	r1, r7
 800c06c:	4643      	mov	r3, r8
 800c06e:	4650      	mov	r0, sl
 800c070:	f003 fc6a 	bl	800f948 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800c074:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c078:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800c07c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c080:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c084:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c086:	bf0a      	itet	eq
 800c088:	4642      	moveq	r2, r8
 800c08a:	461a      	movne	r2, r3
 800c08c:	4698      	moveq	r8, r3
 800c08e:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800c092:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800c096:	1ad2      	subs	r2, r2, r3
 800c098:	f8db 3000 	ldr.w	r3, [fp]
 800c09c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800c0a0:	7859      	ldrb	r1, [r3, #1]
 800c0a2:	2300      	movs	r3, #0
 800c0a4:	f8cd a020 	str.w	sl, [sp, #32]
 800c0a8:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800c0ac:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c0b0:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800c0b4:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800c0b8:	950a      	str	r5, [sp, #40]	; 0x28
 800c0ba:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c0be:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c0c2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800c0c6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800c0ca:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800c0ce:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c0d2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800c0d6:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800c0da:	b350      	cbz	r0, 800c132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28a>
 800c0dc:	682b      	ldr	r3, [r5, #0]
 800c0de:	4628      	mov	r0, r5
 800c0e0:	695b      	ldr	r3, [r3, #20]
 800c0e2:	4798      	blx	r3
 800c0e4:	4607      	mov	r7, r0
 800c0e6:	b320      	cbz	r0, 800c132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28a>
 800c0e8:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c0ea:	4639      	mov	r1, r7
 800c0ec:	6803      	ldr	r3, [r0, #0]
 800c0ee:	68db      	ldr	r3, [r3, #12]
 800c0f0:	4798      	blx	r3
 800c0f2:	4606      	mov	r6, r0
 800c0f4:	b1e8      	cbz	r0, 800c132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28a>
 800c0f6:	7b43      	ldrb	r3, [r0, #13]
 800c0f8:	7a82      	ldrb	r2, [r0, #10]
 800c0fa:	005b      	lsls	r3, r3, #1
 800c0fc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c100:	4313      	orrs	r3, r2
 800c102:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800c106:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800c10a:	2b04      	cmp	r3, #4
 800c10c:	d111      	bne.n	800c132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28a>
 800c10e:	980a      	ldr	r0, [sp, #40]	; 0x28
 800c110:	4632      	mov	r2, r6
 800c112:	4639      	mov	r1, r7
 800c114:	6803      	ldr	r3, [r0, #0]
 800c116:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c118:	4798      	blx	r3
 800c11a:	7b73      	ldrb	r3, [r6, #13]
 800c11c:	005b      	lsls	r3, r3, #1
 800c11e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c122:	7ab3      	ldrb	r3, [r6, #10]
 800c124:	4313      	orrs	r3, r2
 800c126:	4418      	add	r0, r3
 800c128:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c12c:	4418      	add	r0, r3
 800c12e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800c132:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800c136:	2600      	movs	r6, #0
 800c138:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800c13c:	4637      	mov	r7, r6
 800c13e:	45c3      	cmp	fp, r8
 800c140:	a807      	add	r0, sp, #28
 800c142:	f106 0601 	add.w	r6, r6, #1
 800c146:	bfd4      	ite	le
 800c148:	2100      	movle	r1, #0
 800c14a:	2101      	movgt	r1, #1
 800c14c:	f001 f9e2 	bl	800d514 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800c150:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800c154:	b2b6      	uxth	r6, r6
 800c156:	429f      	cmp	r7, r3
 800c158:	bfb8      	it	lt
 800c15a:	b21f      	sxthlt	r7, r3
 800c15c:	9b02      	ldr	r3, [sp, #8]
 800c15e:	eba8 0803 	sub.w	r8, r8, r3
 800c162:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800c166:	fa0f f888 	sxth.w	r8, r8
 800c16a:	2b00      	cmp	r3, #0
 800c16c:	f43f af0c 	beq.w	800bf88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800c170:	45c2      	cmp	sl, r8
 800c172:	dbe4      	blt.n	800c13e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x296>
 800c174:	e708      	b.n	800bf88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800c176:	1bf6      	subs	r6, r6, r7
 800c178:	2702      	movs	r7, #2
 800c17a:	fb96 f6f7 	sdiv	r6, r6, r7
 800c17e:	b236      	sxth	r6, r6
 800c180:	e72d      	b.n	800bfde <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x136>
 800c182:	4413      	add	r3, r2
 800c184:	1af6      	subs	r6, r6, r3
 800c186:	e7fa      	b.n	800c17e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800c188:	8925      	ldrh	r5, [r4, #8]
 800c18a:	1aad      	subs	r5, r5, r2
 800c18c:	1aed      	subs	r5, r5, r3
 800c18e:	b22f      	sxth	r7, r5
 800c190:	8965      	ldrh	r5, [r4, #10]
 800c192:	eba5 0508 	sub.w	r5, r5, r8
 800c196:	b22d      	sxth	r5, r5
 800c198:	e73d      	b.n	800c016 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x16e>
 800c19a:	bf00      	nop
 800c19c:	2400b0b4 	.word	0x2400b0b4
 800c1a0:	2400b0b8 	.word	0x2400b0b8
 800c1a4:	2400b0b0 	.word	0x2400b0b0
 800c1a8:	2400b0bc 	.word	0x2400b0bc
 800c1ac:	8965      	ldrh	r5, [r4, #10]
 800c1ae:	2700      	movs	r7, #0
 800c1b0:	1aad      	subs	r5, r5, r2
 800c1b2:	1aed      	subs	r5, r5, r3
 800c1b4:	4633      	mov	r3, r6
 800c1b6:	4646      	mov	r6, r8
 800c1b8:	b22d      	sxth	r5, r5
 800c1ba:	4698      	mov	r8, r3
 800c1bc:	e72b      	b.n	800c016 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x16e>
 800c1be:	2500      	movs	r5, #0
 800c1c0:	e729      	b.n	800c016 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x16e>
 800c1c2:	bf00      	nop

0800c1c4 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800c1c4:	b570      	push	{r4, r5, r6, lr}
 800c1c6:	6803      	ldr	r3, [r0, #0]
 800c1c8:	4604      	mov	r4, r0
 800c1ca:	4615      	mov	r5, r2
 800c1cc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c1ce:	4798      	blx	r3
 800c1d0:	6823      	ldr	r3, [r4, #0]
 800c1d2:	4629      	mov	r1, r5
 800c1d4:	4620      	mov	r0, r4
 800c1d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c1d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c1dc:	4718      	bx	r3
	...

0800c1e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800c1e0:	b538      	push	{r3, r4, r5, lr}
 800c1e2:	4b0e      	ldr	r3, [pc, #56]	; (800c21c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800c1e4:	4604      	mov	r4, r0
 800c1e6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c1e8:	881b      	ldrh	r3, [r3, #0]
 800c1ea:	429a      	cmp	r2, r3
 800c1ec:	d214      	bcs.n	800c218 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800c1ee:	6803      	ldr	r3, [r0, #0]
 800c1f0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c1f2:	4798      	blx	r3
 800c1f4:	6823      	ldr	r3, [r4, #0]
 800c1f6:	4605      	mov	r5, r0
 800c1f8:	4620      	mov	r0, r4
 800c1fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c1fc:	4798      	blx	r3
 800c1fe:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c202:	b22d      	sxth	r5, r5
 800c204:	4601      	mov	r1, r0
 800c206:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800c20a:	bf06      	itte	eq
 800c20c:	4602      	moveq	r2, r0
 800c20e:	4629      	moveq	r1, r5
 800c210:	462a      	movne	r2, r5
 800c212:	4620      	mov	r0, r4
 800c214:	f7ff ffd6 	bl	800c1c4 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c218:	bd38      	pop	{r3, r4, r5, pc}
 800c21a:	bf00      	nop
 800c21c:	2400b0b4 	.word	0x2400b0b4

0800c220 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800c220:	b530      	push	{r4, r5, lr}
 800c222:	888b      	ldrh	r3, [r1, #4]
 800c224:	b085      	sub	sp, #20
 800c226:	4604      	mov	r4, r0
 800c228:	8583      	strh	r3, [r0, #44]	; 0x2c
 800c22a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c22e:	b923      	cbnz	r3, 800c23a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c230:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c234:	b90b      	cbnz	r3, 800c23a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800c236:	f7ff ffd3 	bl	800c1e0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800c23a:	6823      	ldr	r3, [r4, #0]
 800c23c:	466d      	mov	r5, sp
 800c23e:	4621      	mov	r1, r4
 800c240:	343c      	adds	r4, #60	; 0x3c
 800c242:	4628      	mov	r0, r5
 800c244:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c248:	4798      	blx	r3
 800c24a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800c24e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800c252:	b005      	add	sp, #20
 800c254:	bd30      	pop	{r4, r5, pc}

0800c256 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c256:	2300      	movs	r3, #0
 800c258:	8083      	strh	r3, [r0, #4]
 800c25a:	80c3      	strh	r3, [r0, #6]
 800c25c:	8003      	strh	r3, [r0, #0]
 800c25e:	8043      	strh	r3, [r0, #2]
 800c260:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800c264:	2bff      	cmp	r3, #255	; 0xff
 800c266:	bf01      	itttt	eq
 800c268:	890b      	ldrheq	r3, [r1, #8]
 800c26a:	8083      	strheq	r3, [r0, #4]
 800c26c:	894b      	ldrheq	r3, [r1, #10]
 800c26e:	80c3      	strheq	r3, [r0, #6]
 800c270:	4770      	bx	lr
	...

0800c274 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c274:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c276:	4604      	mov	r4, r0
 800c278:	466b      	mov	r3, sp
 800c27a:	6808      	ldr	r0, [r1, #0]
 800c27c:	6849      	ldr	r1, [r1, #4]
 800c27e:	c303      	stmia	r3!, {r0, r1}
 800c280:	6823      	ldr	r3, [r4, #0]
 800c282:	4669      	mov	r1, sp
 800c284:	4620      	mov	r0, r4
 800c286:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c288:	4798      	blx	r3
 800c28a:	4b08      	ldr	r3, [pc, #32]	; (800c2ac <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c28c:	681b      	ldr	r3, [r3, #0]
 800c28e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c292:	b10a      	cbz	r2, 800c298 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c294:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c296:	b900      	cbnz	r0, 800c29a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c298:	6898      	ldr	r0, [r3, #8]
 800c29a:	6803      	ldr	r3, [r0, #0]
 800c29c:	4669      	mov	r1, sp
 800c29e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c2a0:	6a1d      	ldr	r5, [r3, #32]
 800c2a2:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c2a6:	47a8      	blx	r5
 800c2a8:	b003      	add	sp, #12
 800c2aa:	bd30      	pop	{r4, r5, pc}
 800c2ac:	2400b060 	.word	0x2400b060

0800c2b0 <_ZN8touchgfx3BoxD1Ev>:
 800c2b0:	4770      	bx	lr

0800c2b2 <_ZN8touchgfx3BoxD0Ev>:
 800c2b2:	b510      	push	{r4, lr}
 800c2b4:	4604      	mov	r4, r0
 800c2b6:	212c      	movs	r1, #44	; 0x2c
 800c2b8:	f010 fc4b 	bl	801cb52 <_ZdlPvj>
 800c2bc:	4620      	mov	r0, r4
 800c2be:	bd10      	pop	{r4, pc}

0800c2c0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800c2c0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800c2c4:	b12a      	cbz	r2, 800c2d2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c2c6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c2ca:	b112      	cbz	r2, 800c2d2 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800c2cc:	6803      	ldr	r3, [r0, #0]
 800c2ce:	695b      	ldr	r3, [r3, #20]
 800c2d0:	4718      	bx	r3
 800c2d2:	4770      	bx	lr

0800c2d4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800c2d4:	4b30      	ldr	r3, [pc, #192]	; (800c398 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800c2d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c2da:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800c2dc:	b08d      	sub	sp, #52	; 0x34
 800c2de:	881b      	ldrh	r3, [r3, #0]
 800c2e0:	4604      	mov	r4, r0
 800c2e2:	460f      	mov	r7, r1
 800c2e4:	4293      	cmp	r3, r2
 800c2e6:	d954      	bls.n	800c392 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800c2e8:	4b2c      	ldr	r3, [pc, #176]	; (800c39c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800c2ea:	6819      	ldr	r1, [r3, #0]
 800c2ec:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800c2f0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800c2f4:	4a2a      	ldr	r2, [pc, #168]	; (800c3a0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800c2f6:	6812      	ldr	r2, [r2, #0]
 800c2f8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800c2fc:	2900      	cmp	r1, #0
 800c2fe:	d048      	beq.n	800c392 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800c300:	785a      	ldrb	r2, [r3, #1]
 800c302:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800c306:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800c30a:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800c30e:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800c312:	4b24      	ldr	r3, [pc, #144]	; (800c3a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800c314:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800c318:	681a      	ldr	r2, [r3, #0]
 800c31a:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800c31e:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800c322:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800c326:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800c328:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800c32c:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800c330:	9107      	str	r1, [sp, #28]
 800c332:	f88d 8020 	strb.w	r8, [sp, #32]
 800c336:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800c33a:	9609      	str	r6, [sp, #36]	; 0x24
 800c33c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800c340:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800c344:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800c348:	b10b      	cbz	r3, 800c34e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800c34a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800c34c:	b905      	cbnz	r5, 800c350 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800c34e:	6895      	ldr	r5, [r2, #8]
 800c350:	ae05      	add	r6, sp, #20
 800c352:	4621      	mov	r1, r4
 800c354:	4630      	mov	r0, r6
 800c356:	f002 fecf 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c35a:	4b13      	ldr	r3, [pc, #76]	; (800c3a8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800c35c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800c35e:	6818      	ldr	r0, [r3, #0]
 800c360:	f7f6 fc3e 	bl	8002be0 <_ZNK8touchgfx5Texts7getTextEt>
 800c364:	6823      	ldr	r3, [r4, #0]
 800c366:	4680      	mov	r8, r0
 800c368:	4620      	mov	r0, r4
 800c36a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c36c:	4798      	blx	r3
 800c36e:	6823      	ldr	r3, [r4, #0]
 800c370:	4681      	mov	r9, r0
 800c372:	4620      	mov	r0, r4
 800c374:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c378:	4798      	blx	r3
 800c37a:	ab07      	add	r3, sp, #28
 800c37c:	f8cd 8004 	str.w	r8, [sp, #4]
 800c380:	9300      	str	r3, [sp, #0]
 800c382:	463b      	mov	r3, r7
 800c384:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800c388:	4628      	mov	r0, r5
 800c38a:	e896 0006 	ldmia.w	r6, {r1, r2}
 800c38e:	f7f6 fbd9 	bl	8002b44 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800c392:	b00d      	add	sp, #52	; 0x34
 800c394:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c398:	2400b0b4 	.word	0x2400b0b4
 800c39c:	2400b0b0 	.word	0x2400b0b0
 800c3a0:	2400b0b8 	.word	0x2400b0b8
 800c3a4:	2400b060 	.word	0x2400b060
 800c3a8:	2400b0bc 	.word	0x2400b0bc

0800c3ac <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800c3ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c3b0:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800c3b4:	b0a0      	sub	sp, #128	; 0x80
 800c3b6:	4604      	mov	r4, r0
 800c3b8:	b193      	cbz	r3, 800c3e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800c3ba:	4b30      	ldr	r3, [pc, #192]	; (800c47c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800c3bc:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800c3be:	881b      	ldrh	r3, [r3, #0]
 800c3c0:	428b      	cmp	r3, r1
 800c3c2:	d90d      	bls.n	800c3e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800c3c4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800c3c8:	2b00      	cmp	r3, #0
 800c3ca:	dd09      	ble.n	800c3e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800c3cc:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800c3d0:	2b00      	cmp	r3, #0
 800c3d2:	dd05      	ble.n	800c3e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800c3d4:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800c3d8:	b12b      	cbz	r3, 800c3e6 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800c3da:	6803      	ldr	r3, [r0, #0]
 800c3dc:	695b      	ldr	r3, [r3, #20]
 800c3de:	4798      	blx	r3
 800c3e0:	b020      	add	sp, #128	; 0x80
 800c3e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c3e6:	4b26      	ldr	r3, [pc, #152]	; (800c480 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800c3e8:	681b      	ldr	r3, [r3, #0]
 800c3ea:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800c3ee:	4b25      	ldr	r3, [pc, #148]	; (800c484 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800c3f0:	681b      	ldr	r3, [r3, #0]
 800c3f2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800c3f6:	4b24      	ldr	r3, [pc, #144]	; (800c488 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800c3f8:	6818      	ldr	r0, [r3, #0]
 800c3fa:	f7f6 fbf1 	bl	8002be0 <_ZNK8touchgfx5Texts7getTextEt>
 800c3fe:	4606      	mov	r6, r0
 800c400:	a807      	add	r0, sp, #28
 800c402:	f003 fa31 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800c406:	682b      	ldr	r3, [r5, #0]
 800c408:	4628      	mov	r0, r5
 800c40a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c40c:	4798      	blx	r3
 800c40e:	682b      	ldr	r3, [r5, #0]
 800c410:	4607      	mov	r7, r0
 800c412:	4628      	mov	r0, r5
 800c414:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c416:	4798      	blx	r3
 800c418:	6823      	ldr	r3, [r4, #0]
 800c41a:	4605      	mov	r5, r0
 800c41c:	4620      	mov	r0, r4
 800c41e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800c420:	4798      	blx	r3
 800c422:	6823      	ldr	r3, [r4, #0]
 800c424:	4680      	mov	r8, r0
 800c426:	4620      	mov	r0, r4
 800c428:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c42c:	4798      	blx	r3
 800c42e:	462b      	mov	r3, r5
 800c430:	463a      	mov	r2, r7
 800c432:	4631      	mov	r1, r6
 800c434:	e9cd 8000 	strd	r8, r0, [sp]
 800c438:	a807      	add	r0, sp, #28
 800c43a:	f003 fa85 	bl	800f948 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800c43e:	a807      	add	r0, sp, #28
 800c440:	f003 fe3e 	bl	80100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c444:	280a      	cmp	r0, #10
 800c446:	d103      	bne.n	800c450 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800c448:	6823      	ldr	r3, [r4, #0]
 800c44a:	4620      	mov	r0, r4
 800c44c:	695b      	ldr	r3, [r3, #20]
 800c44e:	e7c6      	b.n	800c3de <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800c450:	a807      	add	r0, sp, #28
 800c452:	f003 fe35 	bl	80100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800c456:	2800      	cmp	r0, #0
 800c458:	d1f4      	bne.n	800c444 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800c45a:	ad04      	add	r5, sp, #16
 800c45c:	4621      	mov	r1, r4
 800c45e:	4628      	mov	r0, r5
 800c460:	f7ff fd22 	bl	800bea8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800c464:	ab02      	add	r3, sp, #8
 800c466:	6822      	ldr	r2, [r4, #0]
 800c468:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c46c:	6912      	ldr	r2, [r2, #16]
 800c46e:	e883 0003 	stmia.w	r3, {r0, r1}
 800c472:	4619      	mov	r1, r3
 800c474:	4620      	mov	r0, r4
 800c476:	4790      	blx	r2
 800c478:	e7b2      	b.n	800c3e0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800c47a:	bf00      	nop
 800c47c:	2400b0b4 	.word	0x2400b0b4
 800c480:	2400b0b0 	.word	0x2400b0b0
 800c484:	2400b0b8 	.word	0x2400b0b8
 800c488:	2400b0bc 	.word	0x2400b0bc

0800c48c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800c48c:	4770      	bx	lr

0800c48e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800c48e:	b510      	push	{r4, lr}
 800c490:	4604      	mov	r4, r0
 800c492:	2134      	movs	r1, #52	; 0x34
 800c494:	f010 fb5d 	bl	801cb52 <_ZdlPvj>
 800c498:	4620      	mov	r0, r4
 800c49a:	bd10      	pop	{r4, pc}

0800c49c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800c49c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c4a0:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800c4a2:	4604      	mov	r4, r0
 800c4a4:	460e      	mov	r6, r1
 800c4a6:	b08e      	sub	sp, #56	; 0x38
 800c4a8:	b218      	sxth	r0, r3
 800c4aa:	8921      	ldrh	r1, [r4, #8]
 800c4ac:	005b      	lsls	r3, r3, #1
 800c4ae:	8962      	ldrh	r2, [r4, #10]
 800c4b0:	f8ad 0000 	strh.w	r0, [sp]
 800c4b4:	b29b      	uxth	r3, r3
 800c4b6:	f8ad 0002 	strh.w	r0, [sp, #2]
 800c4ba:	1ac9      	subs	r1, r1, r3
 800c4bc:	1ad3      	subs	r3, r2, r3
 800c4be:	b209      	sxth	r1, r1
 800c4c0:	b21b      	sxth	r3, r3
 800c4c2:	2900      	cmp	r1, #0
 800c4c4:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c4c8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c4cc:	dd5e      	ble.n	800c58c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800c4ce:	2b00      	cmp	r3, #0
 800c4d0:	dd5c      	ble.n	800c58c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800c4d2:	6830      	ldr	r0, [r6, #0]
 800c4d4:	ab02      	add	r3, sp, #8
 800c4d6:	6871      	ldr	r1, [r6, #4]
 800c4d8:	c303      	stmia	r3!, {r0, r1}
 800c4da:	4669      	mov	r1, sp
 800c4dc:	a802      	add	r0, sp, #8
 800c4de:	f7fe fbf7 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800c4e2:	4620      	mov	r0, r4
 800c4e4:	a902      	add	r1, sp, #8
 800c4e6:	f7ff fec5 	bl	800c274 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800c4ea:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800c4ec:	2800      	cmp	r0, #0
 800c4ee:	d05f      	beq.n	800c5b0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800c4f0:	8963      	ldrh	r3, [r4, #10]
 800c4f2:	b202      	sxth	r2, r0
 800c4f4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800c4f8:	2500      	movs	r5, #0
 800c4fa:	1a1f      	subs	r7, r3, r0
 800c4fc:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800c500:	f8ad 101c 	strh.w	r1, [sp, #28]
 800c504:	b21b      	sxth	r3, r3
 800c506:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800c50a:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800c50e:	af04      	add	r7, sp, #16
 800c510:	1a09      	subs	r1, r1, r0
 800c512:	9506      	str	r5, [sp, #24]
 800c514:	f8ad 201e 	strh.w	r2, [sp, #30]
 800c518:	f8ad 5020 	strh.w	r5, [sp, #32]
 800c51c:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800c520:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800c524:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800c528:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c52c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c530:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800c534:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800c538:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c53c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c540:	ab06      	add	r3, sp, #24
 800c542:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800c546:	e893 0003 	ldmia.w	r3, {r0, r1}
 800c54a:	e887 0003 	stmia.w	r7, {r0, r1}
 800c54e:	4631      	mov	r1, r6
 800c550:	4638      	mov	r0, r7
 800c552:	f7fe fbbd 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800c556:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800c55a:	2b00      	cmp	r3, #0
 800c55c:	dd12      	ble.n	800c584 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800c55e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800c562:	2b00      	cmp	r3, #0
 800c564:	dd0e      	ble.n	800c584 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800c566:	6823      	ldr	r3, [r4, #0]
 800c568:	4639      	mov	r1, r7
 800c56a:	4620      	mov	r0, r4
 800c56c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c56e:	4798      	blx	r3
 800c570:	f7fe fe7c 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800c574:	6803      	ldr	r3, [r0, #0]
 800c576:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c578:	4639      	mov	r1, r7
 800c57a:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800c57e:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c582:	47c0      	blx	r8
 800c584:	3501      	adds	r5, #1
 800c586:	2d04      	cmp	r5, #4
 800c588:	d1da      	bne.n	800c540 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800c58a:	e011      	b.n	800c5b0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800c58c:	6830      	ldr	r0, [r6, #0]
 800c58e:	ab06      	add	r3, sp, #24
 800c590:	6871      	ldr	r1, [r6, #4]
 800c592:	c303      	stmia	r3!, {r0, r1}
 800c594:	6823      	ldr	r3, [r4, #0]
 800c596:	a906      	add	r1, sp, #24
 800c598:	4620      	mov	r0, r4
 800c59a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c59c:	4798      	blx	r3
 800c59e:	f7fe fe65 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 800c5a2:	6803      	ldr	r3, [r0, #0]
 800c5a4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c5a6:	a906      	add	r1, sp, #24
 800c5a8:	6a1d      	ldr	r5, [r3, #32]
 800c5aa:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c5ae:	47a8      	blx	r5
 800c5b0:	b00e      	add	sp, #56	; 0x38
 800c5b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c5b6 <_ZN8touchgfx5ImageD1Ev>:
 800c5b6:	4770      	bx	lr

0800c5b8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c5b8:	b570      	push	{r4, r5, r6, lr}
 800c5ba:	880b      	ldrh	r3, [r1, #0]
 800c5bc:	460d      	mov	r5, r1
 800c5be:	4604      	mov	r4, r0
 800c5c0:	84c3      	strh	r3, [r0, #38]	; 0x26
 800c5c2:	4608      	mov	r0, r1
 800c5c4:	f004 fce2 	bl	8010f8c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c5c8:	4606      	mov	r6, r0
 800c5ca:	4628      	mov	r0, r5
 800c5cc:	f004 fd12 	bl	8010ff4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c5d0:	6823      	ldr	r3, [r4, #0]
 800c5d2:	4605      	mov	r5, r0
 800c5d4:	4631      	mov	r1, r6
 800c5d6:	4620      	mov	r0, r4
 800c5d8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c5da:	4798      	blx	r3
 800c5dc:	6823      	ldr	r3, [r4, #0]
 800c5de:	4629      	mov	r1, r5
 800c5e0:	4620      	mov	r0, r4
 800c5e2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c5e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5e8:	4718      	bx	r3

0800c5ea <_ZN8touchgfx5ImageD0Ev>:
 800c5ea:	b510      	push	{r4, lr}
 800c5ec:	4604      	mov	r4, r0
 800c5ee:	212c      	movs	r1, #44	; 0x2c
 800c5f0:	f010 faaf 	bl	801cb52 <_ZdlPvj>
 800c5f4:	4620      	mov	r0, r4
 800c5f6:	bd10      	pop	{r4, pc}

0800c5f8 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c5f8:	b510      	push	{r4, lr}
 800c5fa:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c5fe:	4604      	mov	r4, r0
 800c600:	2bff      	cmp	r3, #255	; 0xff
 800c602:	d006      	beq.n	800c612 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c604:	2300      	movs	r3, #0
 800c606:	8003      	strh	r3, [r0, #0]
 800c608:	8043      	strh	r3, [r0, #2]
 800c60a:	8083      	strh	r3, [r0, #4]
 800c60c:	80c3      	strh	r3, [r0, #6]
 800c60e:	4620      	mov	r0, r4
 800c610:	bd10      	pop	{r4, pc}
 800c612:	3126      	adds	r1, #38	; 0x26
 800c614:	f004 fd22 	bl	801105c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c618:	e7f9      	b.n	800c60e <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800c61a <_ZNK8touchgfx5Image17invalidateContentEv>:
 800c61a:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800c61e:	b12a      	cbz	r2, 800c62c <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c620:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800c624:	b112      	cbz	r2, 800c62c <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800c626:	6803      	ldr	r3, [r0, #0]
 800c628:	695b      	ldr	r3, [r3, #20]
 800c62a:	4718      	bx	r3
 800c62c:	4770      	bx	lr
	...

0800c630 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c634:	4604      	mov	r4, r0
 800c636:	b088      	sub	sp, #32
 800c638:	2500      	movs	r5, #0
 800c63a:	460f      	mov	r7, r1
 800c63c:	f854 3b26 	ldr.w	r3, [r4], #38
 800c640:	a904      	add	r1, sp, #16
 800c642:	4606      	mov	r6, r0
 800c644:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c646:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c64a:	4798      	blx	r3
 800c64c:	4620      	mov	r0, r4
 800c64e:	f004 fc9d 	bl	8010f8c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c652:	4680      	mov	r8, r0
 800c654:	4620      	mov	r0, r4
 800c656:	f004 fccd 	bl	8010ff4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c65a:	9506      	str	r5, [sp, #24]
 800c65c:	ad06      	add	r5, sp, #24
 800c65e:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c662:	4639      	mov	r1, r7
 800c664:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c668:	4628      	mov	r0, r5
 800c66a:	f7fe fb31 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800c66e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c672:	2b00      	cmp	r3, #0
 800c674:	dd19      	ble.n	800c6aa <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c676:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c67a:	2b00      	cmp	r3, #0
 800c67c:	dd15      	ble.n	800c6aa <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800c67e:	4b0c      	ldr	r3, [pc, #48]	; (800c6b0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800c680:	681b      	ldr	r3, [r3, #0]
 800c682:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c686:	b10a      	cbz	r2, 800c68c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800c688:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c68a:	b900      	cbnz	r0, 800c68e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800c68c:	6898      	ldr	r0, [r3, #8]
 800c68e:	2701      	movs	r7, #1
 800c690:	6801      	ldr	r1, [r0, #0]
 800c692:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c696:	9702      	str	r7, [sp, #8]
 800c698:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800c69c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c6a0:	e9cd 5600 	strd	r5, r6, [sp]
 800c6a4:	688d      	ldr	r5, [r1, #8]
 800c6a6:	4621      	mov	r1, r4
 800c6a8:	47a8      	blx	r5
 800c6aa:	b008      	add	sp, #32
 800c6ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c6b0:	2400b060 	.word	0x2400b060

0800c6b4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800c6b4:	b510      	push	{r4, lr}
 800c6b6:	6803      	ldr	r3, [r0, #0]
 800c6b8:	460c      	mov	r4, r1
 800c6ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c6bc:	4798      	blx	r3
 800c6be:	1b03      	subs	r3, r0, r4
 800c6c0:	4258      	negs	r0, r3
 800c6c2:	4158      	adcs	r0, r3
 800c6c4:	bd10      	pop	{r4, pc}
	...

0800c6c8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800c6c8:	4b01      	ldr	r3, [pc, #4]	; (800c6d0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800c6ca:	6019      	str	r1, [r3, #0]
 800c6cc:	4770      	bx	lr
 800c6ce:	bf00      	nop
 800c6d0:	2400b068 	.word	0x2400b068

0800c6d4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c6d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6d8:	4696      	mov	lr, r2
 800c6da:	b097      	sub	sp, #92	; 0x5c
 800c6dc:	4605      	mov	r5, r0
 800c6de:	4614      	mov	r4, r2
 800c6e0:	460e      	mov	r6, r1
 800c6e2:	461f      	mov	r7, r3
 800c6e4:	f10d 0c1c 	add.w	ip, sp, #28
 800c6e8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800c6ec:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800c6f0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800c6f4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c6f8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c6fc:	f8de 3000 	ldr.w	r3, [lr]
 800c700:	f104 0e14 	add.w	lr, r4, #20
 800c704:	f8cc 3000 	str.w	r3, [ip]
 800c708:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c70c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c710:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c714:	f8de 3000 	ldr.w	r3, [lr]
 800c718:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c71c:	f8cc 3000 	str.w	r3, [ip]
 800c720:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c724:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c728:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c72c:	f8de 3000 	ldr.w	r3, [lr]
 800c730:	4631      	mov	r1, r6
 800c732:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c734:	4628      	mov	r0, r5
 800c736:	f8cc 3000 	str.w	r3, [ip]
 800c73a:	682b      	ldr	r3, [r5, #0]
 800c73c:	9201      	str	r2, [sp, #4]
 800c73e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c740:	f8cd 8008 	str.w	r8, [sp, #8]
 800c744:	9200      	str	r2, [sp, #0]
 800c746:	aa07      	add	r2, sp, #28
 800c748:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c74c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800c750:	463b      	mov	r3, r7
 800c752:	47d8      	blx	fp
 800c754:	46a6      	mov	lr, r4
 800c756:	f10d 0c1c 	add.w	ip, sp, #28
 800c75a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c75e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c762:	f8de 3000 	ldr.w	r3, [lr]
 800c766:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800c76a:	343c      	adds	r4, #60	; 0x3c
 800c76c:	f8cc 3000 	str.w	r3, [ip]
 800c770:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800c774:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800c778:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c77c:	f8de 3000 	ldr.w	r3, [lr]
 800c780:	f8cc 3000 	str.w	r3, [ip]
 800c784:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800c788:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c78a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800c78e:	6823      	ldr	r3, [r4, #0]
 800c790:	4631      	mov	r1, r6
 800c792:	4628      	mov	r0, r5
 800c794:	f8cc 3000 	str.w	r3, [ip]
 800c798:	682b      	ldr	r3, [r5, #0]
 800c79a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800c79e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800c7a0:	f8cd 8008 	str.w	r8, [sp, #8]
 800c7a4:	9201      	str	r2, [sp, #4]
 800c7a6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800c7a8:	9200      	str	r2, [sp, #0]
 800c7aa:	aa07      	add	r2, sp, #28
 800c7ac:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800c7ae:	463b      	mov	r3, r7
 800c7b0:	47a0      	blx	r4
 800c7b2:	b017      	add	sp, #92	; 0x5c
 800c7b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c7b8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c7b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7bc:	b08d      	sub	sp, #52	; 0x34
 800c7be:	4688      	mov	r8, r1
 800c7c0:	f8d3 c000 	ldr.w	ip, [r3]
 800c7c4:	9916      	ldr	r1, [sp, #88]	; 0x58
 800c7c6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800c7ca:	680f      	ldr	r7, [r1, #0]
 800c7cc:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800c7d0:	eba7 070c 	sub.w	r7, r7, ip
 800c7d4:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800c7d8:	edd3 6a07 	vldr	s13, [r3, #28]
 800c7dc:	42bc      	cmp	r4, r7
 800c7de:	9918      	ldr	r1, [sp, #96]	; 0x60
 800c7e0:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800c7e4:	bfa8      	it	ge
 800c7e6:	463c      	movge	r4, r7
 800c7e8:	f9b1 9000 	ldrsh.w	r9, [r1]
 800c7ec:	f9ba 1000 	ldrsh.w	r1, [sl]
 800c7f0:	ee07 4a90 	vmov	s15, r4
 800c7f4:	eb09 0e0c 	add.w	lr, r9, ip
 800c7f8:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800c7fc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c800:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800c804:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800c808:	4571      	cmp	r1, lr
 800c80a:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c80e:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c812:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c816:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800c81a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c81e:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c822:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c826:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c82a:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c82e:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c832:	f340 808c 	ble.w	800c94e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800c836:	eba1 060e 	sub.w	r6, r1, lr
 800c83a:	fb96 f5f4 	sdiv	r5, r6, r4
 800c83e:	ee07 5a10 	vmov	s14, r5
 800c842:	2d00      	cmp	r5, #0
 800c844:	fb04 6615 	mls	r6, r4, r5, r6
 800c848:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c84c:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c850:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c854:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c858:	dd12      	ble.n	800c880 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800c85a:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c85e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c862:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c866:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c86a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c86e:	bf14      	ite	ne
 800c870:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c874:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c878:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c87c:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c880:	fb05 f204 	mul.w	r2, r5, r4
 800c884:	1abf      	subs	r7, r7, r2
 800c886:	4494      	add	ip, r2
 800c888:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800c88c:	4411      	add	r1, r2
 800c88e:	eb09 020c 	add.w	r2, r9, ip
 800c892:	b209      	sxth	r1, r1
 800c894:	443a      	add	r2, r7
 800c896:	428a      	cmp	r2, r1
 800c898:	bfc4      	itt	gt
 800c89a:	eba1 0209 	subgt.w	r2, r1, r9
 800c89e:	eba2 070c 	subgt.w	r7, r2, ip
 800c8a2:	2f00      	cmp	r7, #0
 800c8a4:	dd50      	ble.n	800c948 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800c8a6:	fb97 f1f4 	sdiv	r1, r7, r4
 800c8aa:	fb04 7211 	mls	r2, r4, r1, r7
 800c8ae:	b90a      	cbnz	r2, 800c8b4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c8b0:	3901      	subs	r1, #1
 800c8b2:	4622      	mov	r2, r4
 800c8b4:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c8b8:	6840      	ldr	r0, [r0, #4]
 800c8ba:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800c8be:	44b6      	add	lr, r6
 800c8c0:	f8d0 a000 	ldr.w	sl, [r0]
 800c8c4:	2900      	cmp	r1, #0
 800c8c6:	bfcc      	ite	gt
 800c8c8:	46a1      	movgt	r9, r4
 800c8ca:	4691      	movle	r9, r2
 800c8cc:	900b      	str	r0, [sp, #44]	; 0x2c
 800c8ce:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800c8d0:	fb04 e505 	mla	r5, r4, r5, lr
 800c8d4:	eef0 6a42 	vmov.f32	s13, s4
 800c8d8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800c8dc:	9008      	str	r0, [sp, #32]
 800c8de:	eeb0 7a61 	vmov.f32	s14, s3
 800c8e2:	9818      	ldr	r0, [sp, #96]	; 0x60
 800c8e4:	695b      	ldr	r3, [r3, #20]
 800c8e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c8ea:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800c8ee:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c8f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800c8f4:	445b      	add	r3, fp
 800c8f6:	9307      	str	r3, [sp, #28]
 800c8f8:	ee16 3a90 	vmov	r3, s13
 800c8fc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800c900:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c904:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c908:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c90c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c910:	ee17 7a90 	vmov	r7, s15
 800c914:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c918:	fb97 f7f4 	sdiv	r7, r7, r4
 800c91c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c920:	ee17 ca90 	vmov	ip, s15
 800c924:	fb9c fcf4 	sdiv	ip, ip, r4
 800c928:	fb0c 3306 	mla	r3, ip, r6, r3
 800c92c:	9302      	str	r3, [sp, #8]
 800c92e:	ee17 3a10 	vmov	r3, s14
 800c932:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800c936:	fb07 3706 	mla	r7, r7, r6, r3
 800c93a:	eba9 0306 	sub.w	r3, r9, r6
 800c93e:	e9cd 4700 	strd	r4, r7, [sp]
 800c942:	f8da 4008 	ldr.w	r4, [sl, #8]
 800c946:	47a0      	blx	r4
 800c948:	b00d      	add	sp, #52	; 0x34
 800c94a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c94e:	2500      	movs	r5, #0
 800c950:	462e      	mov	r6, r5
 800c952:	e799      	b.n	800c888 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800c954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c958:	b0db      	sub	sp, #364	; 0x16c
 800c95a:	461d      	mov	r5, r3
 800c95c:	4614      	mov	r4, r2
 800c95e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800c962:	910f      	str	r1, [sp, #60]	; 0x3c
 800c964:	4629      	mov	r1, r5
 800c966:	930a      	str	r3, [sp, #40]	; 0x28
 800c968:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800c96c:	9009      	str	r0, [sp, #36]	; 0x24
 800c96e:	930b      	str	r3, [sp, #44]	; 0x2c
 800c970:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800c974:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800c978:	9310      	str	r3, [sp, #64]	; 0x40
 800c97a:	6803      	ldr	r3, [r0, #0]
 800c97c:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800c97e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800c982:	47b8      	blx	r7
 800c984:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c986:	6058      	str	r0, [r3, #4]
 800c988:	2800      	cmp	r0, #0
 800c98a:	f000 83a1 	beq.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c98e:	682b      	ldr	r3, [r5, #0]
 800c990:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800c994:	ed94 7a02 	vldr	s14, [r4, #8]
 800c998:	9314      	str	r3, [sp, #80]	; 0x50
 800c99a:	686b      	ldr	r3, [r5, #4]
 800c99c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9a0:	9315      	str	r3, [sp, #84]	; 0x54
 800c9a2:	4bc1      	ldr	r3, [pc, #772]	; (800cca8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800c9a4:	7819      	ldrb	r1, [r3, #0]
 800c9a6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800c9aa:	2900      	cmp	r1, #0
 800c9ac:	bf16      	itet	ne
 800c9ae:	4619      	movne	r1, r3
 800c9b0:	4611      	moveq	r1, r2
 800c9b2:	4613      	movne	r3, r2
 800c9b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9b8:	9116      	str	r1, [sp, #88]	; 0x58
 800c9ba:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800c9be:	f240 8387 	bls.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9c2:	ed94 7a07 	vldr	s14, [r4, #28]
 800c9c6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9ce:	f240 837f 	bls.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9d2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800c9d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c9da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c9de:	f240 8377 	bls.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9e2:	6822      	ldr	r2, [r4, #0]
 800c9e4:	4bb1      	ldr	r3, [pc, #708]	; (800ccac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800c9e6:	429a      	cmp	r2, r3
 800c9e8:	f2c0 8372 	blt.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9ec:	49b0      	ldr	r1, [pc, #704]	; (800ccb0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800c9ee:	6963      	ldr	r3, [r4, #20]
 800c9f0:	428a      	cmp	r2, r1
 800c9f2:	f300 836d 	bgt.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800c9f6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c9fa:	48ae      	ldr	r0, [pc, #696]	; (800ccb4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800c9fc:	33ff      	adds	r3, #255	; 0xff
 800c9fe:	4283      	cmp	r3, r0
 800ca00:	f200 8366 	bhi.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca04:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800ca06:	4dac      	ldr	r5, [pc, #688]	; (800ccb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800ca08:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800ca0c:	33ff      	adds	r3, #255	; 0xff
 800ca0e:	42ab      	cmp	r3, r5
 800ca10:	f200 835e 	bhi.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca14:	6862      	ldr	r2, [r4, #4]
 800ca16:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800ca1a:	33ff      	adds	r3, #255	; 0xff
 800ca1c:	4283      	cmp	r3, r0
 800ca1e:	f200 8357 	bhi.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca22:	69a1      	ldr	r1, [r4, #24]
 800ca24:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800ca28:	33ff      	adds	r3, #255	; 0xff
 800ca2a:	4283      	cmp	r3, r0
 800ca2c:	f200 8350 	bhi.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca30:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ca32:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800ca36:	30ff      	adds	r0, #255	; 0xff
 800ca38:	42a8      	cmp	r0, r5
 800ca3a:	f200 8349 	bhi.w	800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ca3e:	428a      	cmp	r2, r1
 800ca40:	f280 8110 	bge.w	800cc64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800ca44:	429a      	cmp	r2, r3
 800ca46:	f300 8119 	bgt.w	800cc7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800ca4a:	4299      	cmp	r1, r3
 800ca4c:	f280 811d 	bge.w	800cc8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800ca50:	2502      	movs	r5, #2
 800ca52:	2701      	movs	r7, #1
 800ca54:	46a9      	mov	r9, r5
 800ca56:	46b8      	mov	r8, r7
 800ca58:	f04f 0a00 	mov.w	sl, #0
 800ca5c:	4621      	mov	r1, r4
 800ca5e:	a849      	add	r0, sp, #292	; 0x124
 800ca60:	f003 fc4c 	bl	80102fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800ca64:	4622      	mov	r2, r4
 800ca66:	4653      	mov	r3, sl
 800ca68:	a949      	add	r1, sp, #292	; 0x124
 800ca6a:	f8cd 9000 	str.w	r9, [sp]
 800ca6e:	a819      	add	r0, sp, #100	; 0x64
 800ca70:	f003 fd74 	bl	801055c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca74:	4622      	mov	r2, r4
 800ca76:	4653      	mov	r3, sl
 800ca78:	a949      	add	r1, sp, #292	; 0x124
 800ca7a:	f8cd 8000 	str.w	r8, [sp]
 800ca7e:	a829      	add	r0, sp, #164	; 0xa4
 800ca80:	f003 fd6c 	bl	801055c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca84:	4643      	mov	r3, r8
 800ca86:	4622      	mov	r2, r4
 800ca88:	a949      	add	r1, sp, #292	; 0x124
 800ca8a:	f8cd 9000 	str.w	r9, [sp]
 800ca8e:	a839      	add	r0, sp, #228	; 0xe4
 800ca90:	f003 fd64 	bl	801055c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800ca94:	42af      	cmp	r7, r5
 800ca96:	af12      	add	r7, sp, #72	; 0x48
 800ca98:	bfb7      	itett	lt
 800ca9a:	2300      	movlt	r3, #0
 800ca9c:	2301      	movge	r3, #1
 800ca9e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800caa0:	ac19      	addlt	r4, sp, #100	; 0x64
 800caa2:	bfb1      	iteee	lt
 800caa4:	930e      	strlt	r3, [sp, #56]	; 0x38
 800caa6:	ad19      	addge	r5, sp, #100	; 0x64
 800caa8:	930e      	strge	r3, [sp, #56]	; 0x38
 800caaa:	ac29      	addge	r4, sp, #164	; 0xa4
 800caac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800caae:	e893 0003 	ldmia.w	r3, {r0, r1}
 800cab2:	e887 0003 	stmia.w	r7, {r0, r1}
 800cab6:	b928      	cbnz	r0, 800cac4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800cab8:	4b80      	ldr	r3, [pc, #512]	; (800ccbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800caba:	6818      	ldr	r0, [r3, #0]
 800cabc:	6803      	ldr	r3, [r0, #0]
 800cabe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cac0:	4798      	blx	r3
 800cac2:	6038      	str	r0, [r7, #0]
 800cac4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cac6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800caca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cace:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800cad0:	930c      	str	r3, [sp, #48]	; 0x30
 800cad2:	990c      	ldr	r1, [sp, #48]	; 0x30
 800cad4:	6963      	ldr	r3, [r4, #20]
 800cad6:	440b      	add	r3, r1
 800cad8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800cadc:	4408      	add	r0, r1
 800cade:	b200      	sxth	r0, r0
 800cae0:	4283      	cmp	r3, r0
 800cae2:	900d      	str	r0, [sp, #52]	; 0x34
 800cae4:	f280 80dd 	bge.w	800cca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800cae8:	428b      	cmp	r3, r1
 800caea:	da08      	bge.n	800cafe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800caec:	2a00      	cmp	r2, #0
 800caee:	dd06      	ble.n	800cafe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800caf0:	1acb      	subs	r3, r1, r3
 800caf2:	429a      	cmp	r2, r3
 800caf4:	f2c0 80e4 	blt.w	800ccc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800caf8:	2b00      	cmp	r3, #0
 800cafa:	f300 80e2 	bgt.w	800ccc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800cafe:	6967      	ldr	r7, [r4, #20]
 800cb00:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800cb04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cb06:	443b      	add	r3, r7
 800cb08:	461f      	mov	r7, r3
 800cb0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cb0c:	1bdf      	subs	r7, r3, r7
 800cb0e:	4297      	cmp	r7, r2
 800cb10:	bfa8      	it	ge
 800cb12:	4617      	movge	r7, r2
 800cb14:	2f00      	cmp	r7, #0
 800cb16:	f340 8166 	ble.w	800cde6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800cb1a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cb1c:	6829      	ldr	r1, [r5, #0]
 800cb1e:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb22:	f9bb 3000 	ldrsh.w	r3, [fp]
 800cb26:	4411      	add	r1, r2
 800cb28:	6820      	ldr	r0, [r4, #0]
 800cb2a:	4299      	cmp	r1, r3
 800cb2c:	dd1a      	ble.n	800cb64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cb2e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800cb32:	4402      	add	r2, r0
 800cb34:	440b      	add	r3, r1
 800cb36:	b21b      	sxth	r3, r3
 800cb38:	429a      	cmp	r2, r3
 800cb3a:	dc13      	bgt.n	800cb64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800cb3c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800cb3e:	a912      	add	r1, sp, #72	; 0x48
 800cb40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb42:	9809      	ldr	r0, [sp, #36]	; 0x24
 800cb44:	681b      	ldr	r3, [r3, #0]
 800cb46:	9206      	str	r2, [sp, #24]
 800cb48:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cb4a:	9500      	str	r5, [sp, #0]
 800cb4c:	9205      	str	r2, [sp, #20]
 800cb4e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cb50:	e9cd b203 	strd	fp, r2, [sp, #12]
 800cb54:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800cb56:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800cb5a:	aa49      	add	r2, sp, #292	; 0x124
 800cb5c:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800cb60:	4623      	mov	r3, r4
 800cb62:	47c8      	blx	r9
 800cb64:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800cb68:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800cb6c:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800cb70:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cb74:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800cb78:	68a1      	ldr	r1, [r4, #8]
 800cb7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb7e:	ed94 6a08 	vldr	s12, [r4, #32]
 800cb82:	edd4 6a07 	vldr	s13, [r4, #28]
 800cb86:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cb8a:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cb8e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cb92:	e9d4 2300 	ldrd	r2, r3, [r4]
 800cb96:	edc4 6a07 	vstr	s13, [r4, #28]
 800cb9a:	441a      	add	r2, r3
 800cb9c:	6963      	ldr	r3, [r4, #20]
 800cb9e:	3301      	adds	r3, #1
 800cba0:	6022      	str	r2, [r4, #0]
 800cba2:	6163      	str	r3, [r4, #20]
 800cba4:	69a3      	ldr	r3, [r4, #24]
 800cba6:	3b01      	subs	r3, #1
 800cba8:	61a3      	str	r3, [r4, #24]
 800cbaa:	6923      	ldr	r3, [r4, #16]
 800cbac:	440b      	add	r3, r1
 800cbae:	68e1      	ldr	r1, [r4, #12]
 800cbb0:	428b      	cmp	r3, r1
 800cbb2:	6123      	str	r3, [r4, #16]
 800cbb4:	db15      	blt.n	800cbe2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800cbb6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800cbba:	3201      	adds	r2, #1
 800cbbc:	1a5b      	subs	r3, r3, r1
 800cbbe:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cbc2:	6022      	str	r2, [r4, #0]
 800cbc4:	6123      	str	r3, [r4, #16]
 800cbc6:	edc4 6a07 	vstr	s13, [r4, #28]
 800cbca:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800cbce:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cbd2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cbd6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800cbda:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cbde:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cbe2:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800cbe6:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cbea:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800cbee:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cbf2:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800cbf6:	68a9      	ldr	r1, [r5, #8]
 800cbf8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cbfc:	ed95 6a08 	vldr	s12, [r5, #32]
 800cc00:	edd5 6a07 	vldr	s13, [r5, #28]
 800cc04:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cc08:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cc0c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cc10:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cc14:	edc5 6a07 	vstr	s13, [r5, #28]
 800cc18:	441a      	add	r2, r3
 800cc1a:	696b      	ldr	r3, [r5, #20]
 800cc1c:	3301      	adds	r3, #1
 800cc1e:	602a      	str	r2, [r5, #0]
 800cc20:	616b      	str	r3, [r5, #20]
 800cc22:	69ab      	ldr	r3, [r5, #24]
 800cc24:	3b01      	subs	r3, #1
 800cc26:	61ab      	str	r3, [r5, #24]
 800cc28:	692b      	ldr	r3, [r5, #16]
 800cc2a:	440b      	add	r3, r1
 800cc2c:	68e9      	ldr	r1, [r5, #12]
 800cc2e:	428b      	cmp	r3, r1
 800cc30:	612b      	str	r3, [r5, #16]
 800cc32:	db15      	blt.n	800cc60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800cc34:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cc38:	3201      	adds	r2, #1
 800cc3a:	1a5b      	subs	r3, r3, r1
 800cc3c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cc40:	602a      	str	r2, [r5, #0]
 800cc42:	612b      	str	r3, [r5, #16]
 800cc44:	edc5 6a07 	vstr	s13, [r5, #28]
 800cc48:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cc4c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cc50:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cc54:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cc58:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cc5c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cc60:	3f01      	subs	r7, #1
 800cc62:	e757      	b.n	800cb14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800cc64:	4299      	cmp	r1, r3
 800cc66:	dc13      	bgt.n	800cc90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800cc68:	429a      	cmp	r2, r3
 800cc6a:	da14      	bge.n	800cc96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800cc6c:	2502      	movs	r5, #2
 800cc6e:	2703      	movs	r7, #3
 800cc70:	f04f 0800 	mov.w	r8, #0
 800cc74:	46a9      	mov	r9, r5
 800cc76:	f04f 0a01 	mov.w	sl, #1
 800cc7a:	e6ef      	b.n	800ca5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc7c:	2501      	movs	r5, #1
 800cc7e:	2700      	movs	r7, #0
 800cc80:	46a9      	mov	r9, r5
 800cc82:	46b8      	mov	r8, r7
 800cc84:	f04f 0a02 	mov.w	sl, #2
 800cc88:	e6e8      	b.n	800ca5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800cc8a:	2501      	movs	r5, #1
 800cc8c:	2702      	movs	r7, #2
 800cc8e:	e6e1      	b.n	800ca54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800cc90:	2500      	movs	r5, #0
 800cc92:	2701      	movs	r7, #1
 800cc94:	e7f4      	b.n	800cc80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800cc96:	2702      	movs	r7, #2
 800cc98:	2503      	movs	r5, #3
 800cc9a:	f04f 0900 	mov.w	r9, #0
 800cc9e:	46b8      	mov	r8, r7
 800cca0:	e7e9      	b.n	800cc76 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800cca2:	4613      	mov	r3, r2
 800cca4:	e728      	b.n	800caf8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800cca6:	bf00      	nop
 800cca8:	2400b058 	.word	0x2400b058
 800ccac:	fffd8f01 	.word	0xfffd8f01
 800ccb0:	00027100 	.word	0x00027100
 800ccb4:	0004e1ff 	.word	0x0004e1ff
 800ccb8:	0004e1fe 	.word	0x0004e1fe
 800ccbc:	2400b060 	.word	0x2400b060
 800ccc0:	4613      	mov	r3, r2
 800ccc2:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ccc4:	469e      	mov	lr, r3
 800ccc6:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800ccc8:	469c      	mov	ip, r3
 800ccca:	9111      	str	r1, [sp, #68]	; 0x44
 800cccc:	f04f 0900 	mov.w	r9, #0
 800ccd0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800ccd4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800ccd8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800ccdc:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800cce0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800cce4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800cce8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800ccec:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800ccf0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800ccf4:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800ccf8:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800ccfc:	f1bc 0f00 	cmp.w	ip, #0
 800cd00:	d147      	bne.n	800cd92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800cd02:	eb03 0c07 	add.w	ip, r3, r7
 800cd06:	1ad7      	subs	r7, r2, r3
 800cd08:	f1b9 0f00 	cmp.w	r9, #0
 800cd0c:	d009      	beq.n	800cd22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800cd0e:	9029      	str	r0, [sp, #164]	; 0xa4
 800cd10:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800cd14:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800cd18:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800cd1c:	912d      	str	r1, [sp, #180]	; 0xb4
 800cd1e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800cd22:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800cd24:	f04f 0800 	mov.w	r8, #0
 800cd28:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800cd2c:	9111      	str	r1, [sp, #68]	; 0x44
 800cd2e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800cd32:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800cd36:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800cd3a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800cd3e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800cd42:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800cd46:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800cd4a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800cd4e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800cd52:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800cd56:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800cd5a:	f1be 0f00 	cmp.w	lr, #0
 800cd5e:	d031      	beq.n	800cdc4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800cd60:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cd62:	4450      	add	r0, sl
 800cd64:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800cd68:	4431      	add	r1, r6
 800cd6a:	ee37 7a04 	vadd.f32	s14, s14, s8
 800cd6e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800cd72:	4549      	cmp	r1, r9
 800cd74:	db08      	blt.n	800cd88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800cd76:	ee77 7a85 	vadd.f32	s15, s15, s10
 800cd7a:	3001      	adds	r0, #1
 800cd7c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800cd80:	eba1 0109 	sub.w	r1, r1, r9
 800cd84:	ee37 7a06 	vadd.f32	s14, s14, s12
 800cd88:	f10e 3eff 	add.w	lr, lr, #4294967295
 800cd8c:	f04f 0801 	mov.w	r8, #1
 800cd90:	e7e3      	b.n	800cd5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800cd92:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800cd94:	4450      	add	r0, sl
 800cd96:	ee37 7a24 	vadd.f32	s14, s14, s9
 800cd9a:	4431      	add	r1, r6
 800cd9c:	ee77 7a84 	vadd.f32	s15, s15, s8
 800cda0:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800cda4:	4541      	cmp	r1, r8
 800cda6:	db08      	blt.n	800cdba <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800cda8:	ee76 6a85 	vadd.f32	s13, s13, s10
 800cdac:	3001      	adds	r0, #1
 800cdae:	ee37 7a25 	vadd.f32	s14, s14, s11
 800cdb2:	eba1 0108 	sub.w	r1, r1, r8
 800cdb6:	ee77 7a86 	vadd.f32	s15, s15, s12
 800cdba:	f10c 3cff 	add.w	ip, ip, #4294967295
 800cdbe:	f04f 0901 	mov.w	r9, #1
 800cdc2:	e79b      	b.n	800ccfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800cdc4:	449c      	add	ip, r3
 800cdc6:	1aff      	subs	r7, r7, r3
 800cdc8:	f1b8 0f00 	cmp.w	r8, #0
 800cdcc:	d009      	beq.n	800cde2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800cdce:	9019      	str	r0, [sp, #100]	; 0x64
 800cdd0:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800cdd4:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800cdd8:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800cddc:	911d      	str	r1, [sp, #116]	; 0x74
 800cdde:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800cde2:	1ad2      	subs	r2, r2, r3
 800cde4:	e68b      	b.n	800cafe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800cde6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800cde8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800cdea:	2b00      	cmp	r3, #0
 800cdec:	f000 80d1 	beq.w	800cf92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800cdf0:	ad19      	add	r5, sp, #100	; 0x64
 800cdf2:	ac39      	add	r4, sp, #228	; 0xe4
 800cdf4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800cdf6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800cdfa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800cdfe:	930c      	str	r3, [sp, #48]	; 0x30
 800ce00:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ce02:	6963      	ldr	r3, [r4, #20]
 800ce04:	440b      	add	r3, r1
 800ce06:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ce0a:	4408      	add	r0, r1
 800ce0c:	b200      	sxth	r0, r0
 800ce0e:	4283      	cmp	r3, r0
 800ce10:	900d      	str	r0, [sp, #52]	; 0x34
 800ce12:	f280 80c1 	bge.w	800cf98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ce16:	428b      	cmp	r3, r1
 800ce18:	da08      	bge.n	800ce2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ce1a:	2a00      	cmp	r2, #0
 800ce1c:	dd06      	ble.n	800ce2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ce1e:	1acb      	subs	r3, r1, r3
 800ce20:	429a      	cmp	r2, r3
 800ce22:	f2c0 80bb 	blt.w	800cf9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ce26:	2b00      	cmp	r3, #0
 800ce28:	f300 80b9 	bgt.w	800cf9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ce2c:	6967      	ldr	r7, [r4, #20]
 800ce2e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ce32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ce34:	443b      	add	r3, r7
 800ce36:	461f      	mov	r7, r3
 800ce38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ce3a:	1bdf      	subs	r7, r3, r7
 800ce3c:	4297      	cmp	r7, r2
 800ce3e:	bfa8      	it	ge
 800ce40:	4617      	movge	r7, r2
 800ce42:	2f00      	cmp	r7, #0
 800ce44:	f340 813c 	ble.w	800d0c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ce48:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ce4a:	6829      	ldr	r1, [r5, #0]
 800ce4c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ce50:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ce54:	4411      	add	r1, r2
 800ce56:	6820      	ldr	r0, [r4, #0]
 800ce58:	4299      	cmp	r1, r3
 800ce5a:	dd1a      	ble.n	800ce92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ce5c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ce60:	4402      	add	r2, r0
 800ce62:	440b      	add	r3, r1
 800ce64:	b21b      	sxth	r3, r3
 800ce66:	429a      	cmp	r2, r3
 800ce68:	dc13      	bgt.n	800ce92 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ce6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ce6c:	a912      	add	r1, sp, #72	; 0x48
 800ce6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ce70:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ce72:	681b      	ldr	r3, [r3, #0]
 800ce74:	9206      	str	r2, [sp, #24]
 800ce76:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800ce78:	9500      	str	r5, [sp, #0]
 800ce7a:	9205      	str	r2, [sp, #20]
 800ce7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ce7e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800ce82:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800ce84:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800ce88:	aa49      	add	r2, sp, #292	; 0x124
 800ce8a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800ce8e:	4623      	mov	r3, r4
 800ce90:	47c8      	blx	r9
 800ce92:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800ce96:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800ce9a:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ce9e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cea2:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800cea6:	68a1      	ldr	r1, [r4, #8]
 800cea8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ceac:	ed94 6a08 	vldr	s12, [r4, #32]
 800ceb0:	edd4 6a07 	vldr	s13, [r4, #28]
 800ceb4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ceb8:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cebc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cec0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800cec4:	edc4 6a07 	vstr	s13, [r4, #28]
 800cec8:	441a      	add	r2, r3
 800ceca:	6963      	ldr	r3, [r4, #20]
 800cecc:	3301      	adds	r3, #1
 800cece:	6022      	str	r2, [r4, #0]
 800ced0:	6163      	str	r3, [r4, #20]
 800ced2:	69a3      	ldr	r3, [r4, #24]
 800ced4:	3b01      	subs	r3, #1
 800ced6:	61a3      	str	r3, [r4, #24]
 800ced8:	6923      	ldr	r3, [r4, #16]
 800ceda:	440b      	add	r3, r1
 800cedc:	68e1      	ldr	r1, [r4, #12]
 800cede:	428b      	cmp	r3, r1
 800cee0:	6123      	str	r3, [r4, #16]
 800cee2:	db15      	blt.n	800cf10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800cee4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800cee8:	3201      	adds	r2, #1
 800ceea:	1a5b      	subs	r3, r3, r1
 800ceec:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cef0:	6022      	str	r2, [r4, #0]
 800cef2:	6123      	str	r3, [r4, #16]
 800cef4:	edc4 6a07 	vstr	s13, [r4, #28]
 800cef8:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800cefc:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cf00:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800cf04:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800cf08:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cf0c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800cf10:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800cf14:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800cf18:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800cf1c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800cf20:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800cf24:	68a9      	ldr	r1, [r5, #8]
 800cf26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cf2a:	ed95 6a08 	vldr	s12, [r5, #32]
 800cf2e:	edd5 6a07 	vldr	s13, [r5, #28]
 800cf32:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cf36:	ee76 6a86 	vadd.f32	s13, s13, s12
 800cf3a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cf3e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800cf42:	edc5 6a07 	vstr	s13, [r5, #28]
 800cf46:	441a      	add	r2, r3
 800cf48:	696b      	ldr	r3, [r5, #20]
 800cf4a:	3301      	adds	r3, #1
 800cf4c:	602a      	str	r2, [r5, #0]
 800cf4e:	616b      	str	r3, [r5, #20]
 800cf50:	69ab      	ldr	r3, [r5, #24]
 800cf52:	3b01      	subs	r3, #1
 800cf54:	61ab      	str	r3, [r5, #24]
 800cf56:	692b      	ldr	r3, [r5, #16]
 800cf58:	440b      	add	r3, r1
 800cf5a:	68e9      	ldr	r1, [r5, #12]
 800cf5c:	428b      	cmp	r3, r1
 800cf5e:	612b      	str	r3, [r5, #16]
 800cf60:	db15      	blt.n	800cf8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800cf62:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800cf66:	3201      	adds	r2, #1
 800cf68:	1a5b      	subs	r3, r3, r1
 800cf6a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800cf6e:	602a      	str	r2, [r5, #0]
 800cf70:	612b      	str	r3, [r5, #16]
 800cf72:	edc5 6a07 	vstr	s13, [r5, #28]
 800cf76:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800cf7a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800cf7e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800cf82:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800cf86:	ee77 7a27 	vadd.f32	s15, s14, s15
 800cf8a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800cf8e:	3f01      	subs	r7, #1
 800cf90:	e757      	b.n	800ce42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800cf92:	ad39      	add	r5, sp, #228	; 0xe4
 800cf94:	ac19      	add	r4, sp, #100	; 0x64
 800cf96:	e72d      	b.n	800cdf4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800cf98:	4613      	mov	r3, r2
 800cf9a:	e744      	b.n	800ce26 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800cf9c:	4613      	mov	r3, r2
 800cf9e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800cfa0:	469e      	mov	lr, r3
 800cfa2:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800cfa6:	461f      	mov	r7, r3
 800cfa8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800cfac:	f04f 0900 	mov.w	r9, #0
 800cfb0:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800cfb4:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800cfb8:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800cfbc:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800cfc0:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800cfc4:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800cfc6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800cfca:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800cfce:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800cfd2:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800cfd6:	960e      	str	r6, [sp, #56]	; 0x38
 800cfd8:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800cfdc:	2f00      	cmp	r7, #0
 800cfde:	d146      	bne.n	800d06e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800cfe0:	449c      	add	ip, r3
 800cfe2:	1ad7      	subs	r7, r2, r3
 800cfe4:	f1b9 0f00 	cmp.w	r9, #0
 800cfe8:	d009      	beq.n	800cffe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800cfea:	9039      	str	r0, [sp, #228]	; 0xe4
 800cfec:	913d      	str	r1, [sp, #244]	; 0xf4
 800cfee:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800cff2:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800cff6:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800cffa:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800cffe:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800d000:	f04f 0800 	mov.w	r8, #0
 800d004:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800d008:	910e      	str	r1, [sp, #56]	; 0x38
 800d00a:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800d00e:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800d012:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800d016:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800d01a:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800d01e:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800d022:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800d026:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800d02a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800d02e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800d032:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800d036:	f1be 0f00 	cmp.w	lr, #0
 800d03a:	d030      	beq.n	800d09e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800d03c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d03e:	4450      	add	r0, sl
 800d040:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800d044:	4431      	add	r1, r6
 800d046:	ee37 7a04 	vadd.f32	s14, s14, s8
 800d04a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800d04e:	4549      	cmp	r1, r9
 800d050:	db08      	blt.n	800d064 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800d052:	ee77 7a85 	vadd.f32	s15, s15, s10
 800d056:	3001      	adds	r0, #1
 800d058:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800d05c:	eba1 0109 	sub.w	r1, r1, r9
 800d060:	ee37 7a06 	vadd.f32	s14, s14, s12
 800d064:	f10e 3eff 	add.w	lr, lr, #4294967295
 800d068:	f04f 0801 	mov.w	r8, #1
 800d06c:	e7e3      	b.n	800d036 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800d06e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800d070:	4450      	add	r0, sl
 800d072:	ee37 7a24 	vadd.f32	s14, s14, s9
 800d076:	4431      	add	r1, r6
 800d078:	ee77 7a84 	vadd.f32	s15, s15, s8
 800d07c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800d080:	4541      	cmp	r1, r8
 800d082:	db08      	blt.n	800d096 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800d084:	ee76 6a85 	vadd.f32	s13, s13, s10
 800d088:	3001      	adds	r0, #1
 800d08a:	ee37 7a25 	vadd.f32	s14, s14, s11
 800d08e:	eba1 0108 	sub.w	r1, r1, r8
 800d092:	ee77 7a86 	vadd.f32	s15, s15, s12
 800d096:	3f01      	subs	r7, #1
 800d098:	f04f 0901 	mov.w	r9, #1
 800d09c:	e79e      	b.n	800cfdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800d09e:	449c      	add	ip, r3
 800d0a0:	1aff      	subs	r7, r7, r3
 800d0a2:	f1b8 0f00 	cmp.w	r8, #0
 800d0a6:	d009      	beq.n	800d0bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800d0a8:	9019      	str	r0, [sp, #100]	; 0x64
 800d0aa:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800d0ae:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800d0b2:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800d0b6:	911d      	str	r1, [sp, #116]	; 0x74
 800d0b8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800d0bc:	1ad2      	subs	r2, r2, r3
 800d0be:	e6b5      	b.n	800ce2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800d0c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d0c2:	681b      	ldr	r3, [r3, #0]
 800d0c4:	b923      	cbnz	r3, 800d0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800d0c6:	4b04      	ldr	r3, [pc, #16]	; (800d0d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800d0c8:	6818      	ldr	r0, [r3, #0]
 800d0ca:	6803      	ldr	r3, [r0, #0]
 800d0cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d0ce:	4798      	blx	r3
 800d0d0:	b05b      	add	sp, #364	; 0x16c
 800d0d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0d6:	bf00      	nop
 800d0d8:	2400b060 	.word	0x2400b060

0800d0dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 800d0dc:	b570      	push	{r4, r5, r6, lr}
 800d0de:	4604      	mov	r4, r0
 800d0e0:	2500      	movs	r5, #0
 800d0e2:	9804      	ldr	r0, [sp, #16]
 800d0e4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 800d0e8:	8025      	strh	r5, [r4, #0]
 800d0ea:	6061      	str	r1, [r4, #4]
 800d0ec:	7223      	strb	r3, [r4, #8]
 800d0ee:	7266      	strb	r6, [r4, #9]
 800d0f0:	60e0      	str	r0, [r4, #12]
 800d0f2:	8222      	strh	r2, [r4, #16]
 800d0f4:	8265      	strh	r5, [r4, #18]
 800d0f6:	82a5      	strh	r5, [r4, #20]
 800d0f8:	82e5      	strh	r5, [r4, #22]
 800d0fa:	8325      	strh	r5, [r4, #24]
 800d0fc:	8365      	strh	r5, [r4, #26]
 800d0fe:	83a5      	strh	r5, [r4, #28]
 800d100:	77a5      	strb	r5, [r4, #30]
 800d102:	b32e      	cbz	r6, 800d150 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800d104:	6803      	ldr	r3, [r0, #0]
 800d106:	695b      	ldr	r3, [r3, #20]
 800d108:	4798      	blx	r3
 800d10a:	4606      	mov	r6, r0
 800d10c:	b300      	cbz	r0, 800d150 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800d10e:	68e0      	ldr	r0, [r4, #12]
 800d110:	4631      	mov	r1, r6
 800d112:	6803      	ldr	r3, [r0, #0]
 800d114:	68db      	ldr	r3, [r3, #12]
 800d116:	4798      	blx	r3
 800d118:	4605      	mov	r5, r0
 800d11a:	b1c8      	cbz	r0, 800d150 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800d11c:	7b43      	ldrb	r3, [r0, #13]
 800d11e:	7a82      	ldrb	r2, [r0, #10]
 800d120:	005b      	lsls	r3, r3, #1
 800d122:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d126:	4313      	orrs	r3, r2
 800d128:	83a3      	strh	r3, [r4, #28]
 800d12a:	7a63      	ldrb	r3, [r4, #9]
 800d12c:	2b04      	cmp	r3, #4
 800d12e:	d10f      	bne.n	800d150 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 800d130:	68e0      	ldr	r0, [r4, #12]
 800d132:	462a      	mov	r2, r5
 800d134:	4631      	mov	r1, r6
 800d136:	6803      	ldr	r3, [r0, #0]
 800d138:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d13a:	4798      	blx	r3
 800d13c:	7b6b      	ldrb	r3, [r5, #13]
 800d13e:	005b      	lsls	r3, r3, #1
 800d140:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d144:	7aab      	ldrb	r3, [r5, #10]
 800d146:	4313      	orrs	r3, r2
 800d148:	4418      	add	r0, r3
 800d14a:	8ba3      	ldrh	r3, [r4, #28]
 800d14c:	4418      	add	r0, r3
 800d14e:	83a0      	strh	r0, [r4, #28]
 800d150:	4620      	mov	r0, r4
 800d152:	bd70      	pop	{r4, r5, r6, pc}

0800d154 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 800d154:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d158:	2400      	movs	r4, #0
 800d15a:	b085      	sub	sp, #20
 800d15c:	4681      	mov	r9, r0
 800d15e:	4688      	mov	r8, r1
 800d160:	4692      	mov	sl, r2
 800d162:	469b      	mov	fp, r3
 800d164:	4627      	mov	r7, r4
 800d166:	4625      	mov	r5, r4
 800d168:	4626      	mov	r6, r4
 800d16a:	4554      	cmp	r4, sl
 800d16c:	da2a      	bge.n	800d1c4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d16e:	2300      	movs	r3, #0
 800d170:	9303      	str	r3, [sp, #12]
 800d172:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d176:	429d      	cmp	r5, r3
 800d178:	d004      	beq.n	800d184 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 800d17a:	f242 030b 	movw	r3, #8203	; 0x200b
 800d17e:	429d      	cmp	r5, r3
 800d180:	bf18      	it	ne
 800d182:	462f      	movne	r7, r5
 800d184:	ab03      	add	r3, sp, #12
 800d186:	4642      	mov	r2, r8
 800d188:	4659      	mov	r1, fp
 800d18a:	4648      	mov	r0, r9
 800d18c:	f002 fecc 	bl	800ff28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d190:	4605      	mov	r5, r0
 800d192:	b1b8      	cbz	r0, 800d1c4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d194:	280a      	cmp	r0, #10
 800d196:	d015      	beq.n	800d1c4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 800d198:	9a03      	ldr	r2, [sp, #12]
 800d19a:	b18a      	cbz	r2, 800d1c0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 800d19c:	7b50      	ldrb	r0, [r2, #13]
 800d19e:	4639      	mov	r1, r7
 800d1a0:	7a93      	ldrb	r3, [r2, #10]
 800d1a2:	0040      	lsls	r0, r0, #1
 800d1a4:	8895      	ldrh	r5, [r2, #4]
 800d1a6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800d1aa:	4303      	orrs	r3, r0
 800d1ac:	4640      	mov	r0, r8
 800d1ae:	9301      	str	r3, [sp, #4]
 800d1b0:	f8d8 3000 	ldr.w	r3, [r8]
 800d1b4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d1b6:	4798      	blx	r3
 800d1b8:	9b01      	ldr	r3, [sp, #4]
 800d1ba:	4418      	add	r0, r3
 800d1bc:	4406      	add	r6, r0
 800d1be:	b2b6      	uxth	r6, r6
 800d1c0:	3401      	adds	r4, #1
 800d1c2:	e7d2      	b.n	800d16a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 800d1c4:	4630      	mov	r0, r6
 800d1c6:	b005      	add	sp, #20
 800d1c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d1cc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 800d1cc:	2a02      	cmp	r2, #2
 800d1ce:	b530      	push	{r4, r5, lr}
 800d1d0:	d011      	beq.n	800d1f6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 800d1d2:	2a03      	cmp	r2, #3
 800d1d4:	d01c      	beq.n	800d210 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 800d1d6:	2a01      	cmp	r2, #1
 800d1d8:	d10c      	bne.n	800d1f4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d1da:	888b      	ldrh	r3, [r1, #4]
 800d1dc:	8801      	ldrh	r1, [r0, #0]
 800d1de:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 800d1e2:	1a5b      	subs	r3, r3, r1
 800d1e4:	8844      	ldrh	r4, [r0, #2]
 800d1e6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800d1ea:	1a9b      	subs	r3, r3, r2
 800d1ec:	8004      	strh	r4, [r0, #0]
 800d1ee:	8081      	strh	r1, [r0, #4]
 800d1f0:	8043      	strh	r3, [r0, #2]
 800d1f2:	80c2      	strh	r2, [r0, #6]
 800d1f4:	bd30      	pop	{r4, r5, pc}
 800d1f6:	88cb      	ldrh	r3, [r1, #6]
 800d1f8:	8842      	ldrh	r2, [r0, #2]
 800d1fa:	1a9b      	subs	r3, r3, r2
 800d1fc:	88c2      	ldrh	r2, [r0, #6]
 800d1fe:	1a9b      	subs	r3, r3, r2
 800d200:	888a      	ldrh	r2, [r1, #4]
 800d202:	8801      	ldrh	r1, [r0, #0]
 800d204:	8043      	strh	r3, [r0, #2]
 800d206:	1a52      	subs	r2, r2, r1
 800d208:	8881      	ldrh	r1, [r0, #4]
 800d20a:	1a52      	subs	r2, r2, r1
 800d20c:	8002      	strh	r2, [r0, #0]
 800d20e:	e7f1      	b.n	800d1f4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 800d210:	88cb      	ldrh	r3, [r1, #6]
 800d212:	8841      	ldrh	r1, [r0, #2]
 800d214:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 800d218:	1a5b      	subs	r3, r3, r1
 800d21a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800d21e:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 800d222:	1a9b      	subs	r3, r3, r2
 800d224:	8045      	strh	r5, [r0, #2]
 800d226:	8082      	strh	r2, [r0, #4]
 800d228:	8003      	strh	r3, [r0, #0]
 800d22a:	80c4      	strh	r4, [r0, #6]
 800d22c:	e7e2      	b.n	800d1f4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0800d22e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 800d22e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d232:	b09f      	sub	sp, #124	; 0x7c
 800d234:	9116      	str	r1, [sp, #88]	; 0x58
 800d236:	9317      	str	r3, [sp, #92]	; 0x5c
 800d238:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d23a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d23c:	8809      	ldrh	r1, [r1, #0]
 800d23e:	889b      	ldrh	r3, [r3, #4]
 800d240:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 800d244:	440b      	add	r3, r1
 800d246:	9212      	str	r2, [sp, #72]	; 0x48
 800d248:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 800d24c:	b21b      	sxth	r3, r3
 800d24e:	9011      	str	r0, [sp, #68]	; 0x44
 800d250:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 800d254:	9310      	str	r3, [sp, #64]	; 0x40
 800d256:	f8d8 3000 	ldr.w	r3, [r8]
 800d25a:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 800d25e:	7a59      	ldrb	r1, [r3, #9]
 800d260:	7a1b      	ldrb	r3, [r3, #8]
 800d262:	9114      	str	r1, [sp, #80]	; 0x50
 800d264:	9315      	str	r3, [sp, #84]	; 0x54
 800d266:	2a00      	cmp	r2, #0
 800d268:	d06a      	beq.n	800d340 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 800d26a:	f898 3010 	ldrb.w	r3, [r8, #16]
 800d26e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800d270:	2b04      	cmp	r3, #4
 800d272:	bf14      	ite	ne
 800d274:	2301      	movne	r3, #1
 800d276:	2302      	moveq	r3, #2
 800d278:	4413      	add	r3, r2
 800d27a:	f04f 0900 	mov.w	r9, #0
 800d27e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d280:	464c      	mov	r4, r9
 800d282:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800d286:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 800d28a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 800d28e:	4293      	cmp	r3, r2
 800d290:	f280 808f 	bge.w	800d3b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800d294:	2300      	movs	r3, #0
 800d296:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 800d29a:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 800d29e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d2a2:	429c      	cmp	r4, r3
 800d2a4:	d006      	beq.n	800d2b4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 800d2a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d2a8:	f242 020b 	movw	r2, #8203	; 0x200b
 800d2ac:	4294      	cmp	r4, r2
 800d2ae:	bf18      	it	ne
 800d2b0:	4623      	movne	r3, r4
 800d2b2:	930d      	str	r3, [sp, #52]	; 0x34
 800d2b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d2b6:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800d2b8:	f8d8 2000 	ldr.w	r2, [r8]
 800d2bc:	428b      	cmp	r3, r1
 800d2be:	db41      	blt.n	800d344 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 800d2c0:	6813      	ldr	r3, [r2, #0]
 800d2c2:	4610      	mov	r0, r2
 800d2c4:	695b      	ldr	r3, [r3, #20]
 800d2c6:	4798      	blx	r3
 800d2c8:	4604      	mov	r4, r0
 800d2ca:	f8d8 0000 	ldr.w	r0, [r8]
 800d2ce:	aa1d      	add	r2, sp, #116	; 0x74
 800d2d0:	4621      	mov	r1, r4
 800d2d2:	6803      	ldr	r3, [r0, #0]
 800d2d4:	689e      	ldr	r6, [r3, #8]
 800d2d6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d2da:	47b0      	blx	r6
 800d2dc:	901c      	str	r0, [sp, #112]	; 0x70
 800d2de:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d2e2:	429c      	cmp	r4, r3
 800d2e4:	f000 80ea 	beq.w	800d4bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d2e8:	f242 030b 	movw	r3, #8203	; 0x200b
 800d2ec:	429c      	cmp	r4, r3
 800d2ee:	f000 80e5 	beq.w	800d4bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d2f2:	2c00      	cmp	r4, #0
 800d2f4:	f000 80f7 	beq.w	800d4e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b8>
 800d2f8:	2c0a      	cmp	r4, #10
 800d2fa:	d060      	beq.n	800d3be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800d2fc:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d2fe:	b36a      	cbz	r2, 800d35c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 800d300:	8894      	ldrh	r4, [r2, #4]
 800d302:	f1bb 0f00 	cmp.w	fp, #0
 800d306:	d03b      	beq.n	800d380 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 800d308:	f892 900d 	ldrb.w	r9, [r2, #13]
 800d30c:	f1bb 0f01 	cmp.w	fp, #1
 800d310:	ea4f 0949 	mov.w	r9, r9, lsl #1
 800d314:	f409 7380 	and.w	r3, r9, #256	; 0x100
 800d318:	f892 900a 	ldrb.w	r9, [r2, #10]
 800d31c:	ea49 0903 	orr.w	r9, r9, r3
 800d320:	d134      	bne.n	800d38c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 800d322:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d324:	eba5 0509 	sub.w	r5, r5, r9
 800d328:	2b00      	cmp	r3, #0
 800d32a:	d14f      	bne.n	800d3cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800d32c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800d32e:	eb09 0305 	add.w	r3, r9, r5
 800d332:	4413      	add	r3, r2
 800d334:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 800d336:	f9b2 2000 	ldrsh.w	r2, [r2]
 800d33a:	4293      	cmp	r3, r2
 800d33c:	da51      	bge.n	800d3e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800d33e:	e038      	b.n	800d3b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 800d340:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d342:	e79a      	b.n	800d27a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 800d344:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 800d348:	4659      	mov	r1, fp
 800d34a:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d34c:	9301      	str	r3, [sp, #4]
 800d34e:	ab1d      	add	r3, sp, #116	; 0x74
 800d350:	9300      	str	r3, [sp, #0]
 800d352:	ab1c      	add	r3, sp, #112	; 0x70
 800d354:	f002 fe31 	bl	800ffba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 800d358:	4604      	mov	r4, r0
 800d35a:	e7c0      	b.n	800d2de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 800d35c:	f8d8 0000 	ldr.w	r0, [r8]
 800d360:	6803      	ldr	r3, [r0, #0]
 800d362:	691b      	ldr	r3, [r3, #16]
 800d364:	4798      	blx	r3
 800d366:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d36a:	4298      	cmp	r0, r3
 800d36c:	f000 80a6 	beq.w	800d4bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d370:	f242 030b 	movw	r3, #8203	; 0x200b
 800d374:	4298      	cmp	r0, r3
 800d376:	f000 80a1 	beq.w	800d4bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d37a:	f1bb 0f00 	cmp.w	fp, #0
 800d37e:	d100      	bne.n	800d382 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 800d380:	444d      	add	r5, r9
 800d382:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 800d384:	2a00      	cmp	r2, #0
 800d386:	d1bf      	bne.n	800d308 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 800d388:	4691      	mov	r9, r2
 800d38a:	e097      	b.n	800d4bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d38c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d38e:	2b00      	cmp	r3, #0
 800d390:	f000 80ab 	beq.w	800d4ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2bc>
 800d394:	f1bb 0f00 	cmp.w	fp, #0
 800d398:	d118      	bne.n	800d3cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 800d39a:	f8d8 0000 	ldr.w	r0, [r8]
 800d39e:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d3a0:	6803      	ldr	r3, [r0, #0]
 800d3a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3a4:	4798      	blx	r3
 800d3a6:	4405      	add	r5, r0
 800d3a8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d3aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800d3ac:	1aeb      	subs	r3, r5, r3
 800d3ae:	4293      	cmp	r3, r2
 800d3b0:	dd17      	ble.n	800d3e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 800d3b2:	2c00      	cmp	r4, #0
 800d3b4:	f000 8097 	beq.w	800d4e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b8>
 800d3b8:	2c0a      	cmp	r4, #10
 800d3ba:	f040 8085 	bne.w	800d4c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 800d3be:	240a      	movs	r4, #10
 800d3c0:	fab4 f084 	clz	r0, r4
 800d3c4:	0940      	lsrs	r0, r0, #5
 800d3c6:	b01f      	add	sp, #124	; 0x7c
 800d3c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d3cc:	f8d8 0000 	ldr.w	r0, [r8]
 800d3d0:	990d      	ldr	r1, [sp, #52]	; 0x34
 800d3d2:	6803      	ldr	r3, [r0, #0]
 800d3d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d3d6:	4798      	blx	r3
 800d3d8:	f1bb 0f01 	cmp.w	fp, #1
 800d3dc:	eba5 0500 	sub.w	r5, r5, r0
 800d3e0:	d0a4      	beq.n	800d32c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 800d3e2:	981c      	ldr	r0, [sp, #112]	; 0x70
 800d3e4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d3e6:	f990 1009 	ldrsb.w	r1, [r0, #9]
 800d3ea:	f9b3 6000 	ldrsh.w	r6, [r3]
 800d3ee:	7b43      	ldrb	r3, [r0, #13]
 800d3f0:	4429      	add	r1, r5
 800d3f2:	015b      	lsls	r3, r3, #5
 800d3f4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800d3f8:	7983      	ldrb	r3, [r0, #6]
 800d3fa:	4313      	orrs	r3, r2
 800d3fc:	440b      	add	r3, r1
 800d3fe:	42b3      	cmp	r3, r6
 800d400:	db5c      	blt.n	800d4bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d402:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800d404:	4299      	cmp	r1, r3
 800d406:	da59      	bge.n	800d4bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d408:	f8d8 0000 	ldr.w	r0, [r8]
 800d40c:	42ae      	cmp	r6, r5
 800d40e:	6803      	ldr	r3, [r0, #0]
 800d410:	bfcc      	ite	gt
 800d412:	1b76      	subgt	r6, r6, r5
 800d414:	2600      	movle	r6, #0
 800d416:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d418:	bfc8      	it	gt
 800d41a:	b2b6      	uxthgt	r6, r6
 800d41c:	4798      	blx	r3
 800d41e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800d420:	7b5a      	ldrb	r2, [r3, #13]
 800d422:	00d1      	lsls	r1, r2, #3
 800d424:	f401 7780 	and.w	r7, r1, #256	; 0x100
 800d428:	7a19      	ldrb	r1, [r3, #8]
 800d42a:	4339      	orrs	r1, r7
 800d42c:	0657      	lsls	r7, r2, #25
 800d42e:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 800d430:	bf48      	it	mi
 800d432:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 800d436:	4407      	add	r7, r0
 800d438:	bf48      	it	mi
 800d43a:	b209      	sxthmi	r1, r1
 800d43c:	1a7f      	subs	r7, r7, r1
 800d43e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 800d440:	b2bf      	uxth	r7, r7
 800d442:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 800d446:	fa0f fa87 	sxth.w	sl, r7
 800d44a:	4551      	cmp	r1, sl
 800d44c:	dd3a      	ble.n	800d4c4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 800d44e:	0112      	lsls	r2, r2, #4
 800d450:	79d8      	ldrb	r0, [r3, #7]
 800d452:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800d456:	4302      	orrs	r2, r0
 800d458:	4492      	add	sl, r2
 800d45a:	4551      	cmp	r1, sl
 800d45c:	dc2e      	bgt.n	800d4bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 800d45e:	1bcf      	subs	r7, r1, r7
 800d460:	468a      	mov	sl, r1
 800d462:	b2bf      	uxth	r7, r7
 800d464:	9319      	str	r3, [sp, #100]	; 0x64
 800d466:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800d468:	f8d8 0000 	ldr.w	r0, [r8]
 800d46c:	681a      	ldr	r2, [r3, #0]
 800d46e:	6801      	ldr	r1, [r0, #0]
 800d470:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 800d472:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 800d474:	9313      	str	r3, [sp, #76]	; 0x4c
 800d476:	9218      	str	r2, [sp, #96]	; 0x60
 800d478:	6b89      	ldr	r1, [r1, #56]	; 0x38
 800d47a:	4788      	blx	r1
 800d47c:	f898 1006 	ldrb.w	r1, [r8, #6]
 800d480:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d482:	910b      	str	r1, [sp, #44]	; 0x2c
 800d484:	f898 100e 	ldrb.w	r1, [r8, #14]
 800d488:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800d48a:	910a      	str	r1, [sp, #40]	; 0x28
 800d48c:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 800d490:	9109      	str	r1, [sp, #36]	; 0x24
 800d492:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800d496:	9305      	str	r3, [sp, #20]
 800d498:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800d49a:	9206      	str	r2, [sp, #24]
 800d49c:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d4a0:	442e      	add	r6, r5
 800d4a2:	e9cd 7303 	strd	r7, r3, [sp, #12]
 800d4a6:	b236      	sxth	r6, r6
 800d4a8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800d4aa:	e9cd 0107 	strd	r0, r1, [sp, #28]
 800d4ae:	9600      	str	r6, [sp, #0]
 800d4b0:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d4b2:	681a      	ldr	r2, [r3, #0]
 800d4b4:	9811      	ldr	r0, [sp, #68]	; 0x44
 800d4b6:	685b      	ldr	r3, [r3, #4]
 800d4b8:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800d4ba:	47b0      	blx	r6
 800d4bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d4be:	3301      	adds	r3, #1
 800d4c0:	930e      	str	r3, [sp, #56]	; 0x38
 800d4c2:	e6e2      	b.n	800d28a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 800d4c4:	2700      	movs	r7, #0
 800d4c6:	e7cd      	b.n	800d464 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x236>
 800d4c8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800d4ca:	3501      	adds	r5, #1
 800d4cc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 800d4ce:	429d      	cmp	r5, r3
 800d4d0:	f6bf af76 	bge.w	800d3c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800d4d4:	4659      	mov	r1, fp
 800d4d6:	982c      	ldr	r0, [sp, #176]	; 0xb0
 800d4d8:	f7f5 faf0 	bl	8002abc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d4dc:	4604      	mov	r4, r0
 800d4de:	b110      	cbz	r0, 800d4e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b8>
 800d4e0:	280a      	cmp	r0, #10
 800d4e2:	d1f2      	bne.n	800d4ca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 800d4e4:	e76b      	b.n	800d3be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 800d4e6:	2400      	movs	r4, #0
 800d4e8:	e76a      	b.n	800d3c0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 800d4ea:	f1bb 0f00 	cmp.w	fp, #0
 800d4ee:	f43f af5b 	beq.w	800d3a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 800d4f2:	e776      	b.n	800d3e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0800d4f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 800d4f4:	b530      	push	{r4, r5, lr}
 800d4f6:	8a44      	ldrh	r4, [r0, #18]
 800d4f8:	8ac5      	ldrh	r5, [r0, #22]
 800d4fa:	82c3      	strh	r3, [r0, #22]
 800d4fc:	442c      	add	r4, r5
 800d4fe:	1ae4      	subs	r4, r4, r3
 800d500:	8b03      	ldrh	r3, [r0, #24]
 800d502:	8244      	strh	r4, [r0, #18]
 800d504:	8a84      	ldrh	r4, [r0, #20]
 800d506:	4422      	add	r2, r4
 800d508:	440c      	add	r4, r1
 800d50a:	1a59      	subs	r1, r3, r1
 800d50c:	8342      	strh	r2, [r0, #26]
 800d50e:	8284      	strh	r4, [r0, #20]
 800d510:	8301      	strh	r1, [r0, #24]
 800d512:	bd30      	pop	{r4, r5, pc}

0800d514 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 800d514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d518:	7a43      	ldrb	r3, [r0, #9]
 800d51a:	b087      	sub	sp, #28
 800d51c:	4604      	mov	r4, r0
 800d51e:	460f      	mov	r7, r1
 800d520:	1eda      	subs	r2, r3, #3
 800d522:	b2d2      	uxtb	r2, r2
 800d524:	2900      	cmp	r1, #0
 800d526:	d036      	beq.n	800d596 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 800d528:	2a01      	cmp	r2, #1
 800d52a:	d932      	bls.n	800d592 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 800d52c:	1e58      	subs	r0, r3, #1
 800d52e:	f1d0 0b00 	rsbs	fp, r0, #0
 800d532:	eb4b 0b00 	adc.w	fp, fp, r0
 800d536:	1e99      	subs	r1, r3, #2
 800d538:	424b      	negs	r3, r1
 800d53a:	414b      	adcs	r3, r1
 800d53c:	9303      	str	r3, [sp, #12]
 800d53e:	2300      	movs	r3, #0
 800d540:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800d544:	2500      	movs	r5, #0
 800d546:	f242 0a0b 	movw	sl, #8203	; 0x200b
 800d54a:	46a9      	mov	r9, r5
 800d54c:	8265      	strh	r5, [r4, #18]
 800d54e:	82a5      	strh	r5, [r4, #20]
 800d550:	2300      	movs	r3, #0
 800d552:	9305      	str	r3, [sp, #20]
 800d554:	8823      	ldrh	r3, [r4, #0]
 800d556:	2b20      	cmp	r3, #32
 800d558:	d02b      	beq.n	800d5b2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 800d55a:	eba3 020a 	sub.w	r2, r3, sl
 800d55e:	4256      	negs	r6, r2
 800d560:	4156      	adcs	r6, r2
 800d562:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800d566:	4293      	cmp	r3, r2
 800d568:	d004      	beq.n	800d574 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d56a:	4553      	cmp	r3, sl
 800d56c:	bf16      	itet	ne
 800d56e:	4699      	movne	r9, r3
 800d570:	2601      	moveq	r6, #1
 800d572:	2600      	movne	r6, #0
 800d574:	ab05      	add	r3, sp, #20
 800d576:	68e2      	ldr	r2, [r4, #12]
 800d578:	7a21      	ldrb	r1, [r4, #8]
 800d57a:	6860      	ldr	r0, [r4, #4]
 800d57c:	f002 fcd4 	bl	800ff28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d580:	8020      	strh	r0, [r4, #0]
 800d582:	b9c8      	cbnz	r0, 800d5b8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 800d584:	8b22      	ldrh	r2, [r4, #24]
 800d586:	2300      	movs	r3, #0
 800d588:	4611      	mov	r1, r2
 800d58a:	4620      	mov	r0, r4
 800d58c:	f7ff ffb2 	bl	800d4f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d590:	e066      	b.n	800d660 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d592:	468b      	mov	fp, r1
 800d594:	e7cf      	b.n	800d536 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 800d596:	3b01      	subs	r3, #1
 800d598:	2a01      	cmp	r2, #1
 800d59a:	9103      	str	r1, [sp, #12]
 800d59c:	468b      	mov	fp, r1
 800d59e:	bf8c      	ite	hi
 800d5a0:	2200      	movhi	r2, #0
 800d5a2:	2201      	movls	r2, #1
 800d5a4:	2b01      	cmp	r3, #1
 800d5a6:	9202      	str	r2, [sp, #8]
 800d5a8:	bf8c      	ite	hi
 800d5aa:	2300      	movhi	r3, #0
 800d5ac:	2301      	movls	r3, #1
 800d5ae:	9301      	str	r3, [sp, #4]
 800d5b0:	e7c8      	b.n	800d544 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 800d5b2:	4699      	mov	r9, r3
 800d5b4:	2601      	movs	r6, #1
 800d5b6:	e7dd      	b.n	800d574 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 800d5b8:	8ae3      	ldrh	r3, [r4, #22]
 800d5ba:	280a      	cmp	r0, #10
 800d5bc:	f103 0301 	add.w	r3, r3, #1
 800d5c0:	82e3      	strh	r3, [r4, #22]
 800d5c2:	d0df      	beq.n	800d584 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 800d5c4:	9a05      	ldr	r2, [sp, #20]
 800d5c6:	bb42      	cbnz	r2, 800d61a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 800d5c8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800d5cc:	4298      	cmp	r0, r3
 800d5ce:	d001      	beq.n	800d5d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d5d0:	4550      	cmp	r0, sl
 800d5d2:	d1bd      	bne.n	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d5d4:	8823      	ldrh	r3, [r4, #0]
 800d5d6:	8b21      	ldrh	r1, [r4, #24]
 800d5d8:	2b20      	cmp	r3, #32
 800d5da:	d001      	beq.n	800d5e0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 800d5dc:	4553      	cmp	r3, sl
 800d5de:	d131      	bne.n	800d644 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 800d5e0:	2e00      	cmp	r6, #0
 800d5e2:	bf0a      	itet	eq
 800d5e4:	460d      	moveq	r5, r1
 800d5e6:	4630      	movne	r0, r6
 800d5e8:	2001      	moveq	r0, #1
 800d5ea:	440a      	add	r2, r1
 800d5ec:	8aa3      	ldrh	r3, [r4, #20]
 800d5ee:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 800d5f2:	b292      	uxth	r2, r2
 800d5f4:	8322      	strh	r2, [r4, #24]
 800d5f6:	4413      	add	r3, r2
 800d5f8:	2f00      	cmp	r7, #0
 800d5fa:	d03a      	beq.n	800d672 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 800d5fc:	f1bb 0f00 	cmp.w	fp, #0
 800d600:	d102      	bne.n	800d608 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 800d602:	9903      	ldr	r1, [sp, #12]
 800d604:	b301      	cbz	r1, 800d648 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d606:	b1f8      	cbz	r0, 800d648 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 800d608:	8ba1      	ldrh	r1, [r4, #28]
 800d60a:	4419      	add	r1, r3
 800d60c:	458c      	cmp	ip, r1
 800d60e:	da2a      	bge.n	800d666 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d610:	8a61      	ldrh	r1, [r4, #18]
 800d612:	b341      	cbz	r1, 800d666 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 800d614:	4563      	cmp	r3, ip
 800d616:	dd9b      	ble.n	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d618:	e01c      	b.n	800d654 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 800d61a:	8893      	ldrh	r3, [r2, #4]
 800d61c:	4649      	mov	r1, r9
 800d61e:	8023      	strh	r3, [r4, #0]
 800d620:	f892 800d 	ldrb.w	r8, [r2, #13]
 800d624:	ea4f 0848 	mov.w	r8, r8, lsl #1
 800d628:	f408 7080 	and.w	r0, r8, #256	; 0x100
 800d62c:	f892 800a 	ldrb.w	r8, [r2, #10]
 800d630:	ea48 0800 	orr.w	r8, r8, r0
 800d634:	68e0      	ldr	r0, [r4, #12]
 800d636:	6803      	ldr	r3, [r0, #0]
 800d638:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d63a:	4798      	blx	r3
 800d63c:	eb08 0200 	add.w	r2, r8, r0
 800d640:	b292      	uxth	r2, r2
 800d642:	e7c7      	b.n	800d5d4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 800d644:	2000      	movs	r0, #0
 800d646:	e7d0      	b.n	800d5ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 800d648:	4563      	cmp	r3, ip
 800d64a:	dd81      	ble.n	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d64c:	8a63      	ldrh	r3, [r4, #18]
 800d64e:	2b00      	cmp	r3, #0
 800d650:	f43f af7e 	beq.w	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d654:	2301      	movs	r3, #1
 800d656:	8ba2      	ldrh	r2, [r4, #28]
 800d658:	77a3      	strb	r3, [r4, #30]
 800d65a:	8b63      	ldrh	r3, [r4, #26]
 800d65c:	4413      	add	r3, r2
 800d65e:	8363      	strh	r3, [r4, #26]
 800d660:	b007      	add	sp, #28
 800d662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d666:	2300      	movs	r3, #0
 800d668:	4611      	mov	r1, r2
 800d66a:	4620      	mov	r0, r4
 800d66c:	f7ff ff42 	bl	800d4f4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 800d670:	e76e      	b.n	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d672:	4563      	cmp	r3, ip
 800d674:	dd14      	ble.n	800d6a0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 800d676:	9b02      	ldr	r3, [sp, #8]
 800d678:	b113      	cbz	r3, 800d680 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 800d67a:	2301      	movs	r3, #1
 800d67c:	460a      	mov	r2, r1
 800d67e:	e783      	b.n	800d588 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 800d680:	9b01      	ldr	r3, [sp, #4]
 800d682:	2b00      	cmp	r3, #0
 800d684:	f43f af64 	beq.w	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d688:	2800      	cmp	r0, #0
 800d68a:	f47f af61 	bne.w	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d68e:	b116      	cbz	r6, 800d696 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 800d690:	2301      	movs	r3, #1
 800d692:	462a      	mov	r2, r5
 800d694:	e779      	b.n	800d58a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 800d696:	8a63      	ldrh	r3, [r4, #18]
 800d698:	2b00      	cmp	r3, #0
 800d69a:	f43f af59 	beq.w	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d69e:	e7df      	b.n	800d660 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 800d6a0:	2800      	cmp	r0, #0
 800d6a2:	f47f af55 	bne.w	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d6a6:	2e00      	cmp	r6, #0
 800d6a8:	f43f af52 	beq.w	800d550 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 800d6ac:	2301      	movs	r3, #1
 800d6ae:	462a      	mov	r2, r5
 800d6b0:	e7db      	b.n	800d66a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0800d6b2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 800d6b2:	b530      	push	{r4, r5, lr}
 800d6b4:	4605      	mov	r5, r0
 800d6b6:	b08b      	sub	sp, #44	; 0x2c
 800d6b8:	b191      	cbz	r1, 800d6e0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 800d6ba:	2401      	movs	r4, #1
 800d6bc:	e9cd 3100 	strd	r3, r1, [sp]
 800d6c0:	4613      	mov	r3, r2
 800d6c2:	4601      	mov	r1, r0
 800d6c4:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 800d6c8:	a802      	add	r0, sp, #8
 800d6ca:	f7ff fd07 	bl	800d0dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d6ce:	2100      	movs	r1, #0
 800d6d0:	a802      	add	r0, sp, #8
 800d6d2:	f7ff ff1f 	bl	800d514 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d6d6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800d6da:	b163      	cbz	r3, 800d6f6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 800d6dc:	3401      	adds	r4, #1
 800d6de:	e7f6      	b.n	800d6ce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 800d6e0:	2401      	movs	r4, #1
 800d6e2:	f002 fced 	bl	80100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d6e6:	280a      	cmp	r0, #10
 800d6e8:	4628      	mov	r0, r5
 800d6ea:	bf08      	it	eq
 800d6ec:	3401      	addeq	r4, #1
 800d6ee:	f002 fce7 	bl	80100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d6f2:	2800      	cmp	r0, #0
 800d6f4:	d1f7      	bne.n	800d6e6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 800d6f6:	b2a0      	uxth	r0, r4
 800d6f8:	b00b      	add	sp, #44	; 0x2c
 800d6fa:	bd30      	pop	{r4, r5, pc}

0800d6fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 800d6fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d700:	b0e5      	sub	sp, #404	; 0x194
 800d702:	4689      	mov	r9, r1
 800d704:	461c      	mov	r4, r3
 800d706:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 800d70a:	900a      	str	r0, [sp, #40]	; 0x28
 800d70c:	f1ba 0f00 	cmp.w	sl, #0
 800d710:	f000 80b4 	beq.w	800d87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d714:	681b      	ldr	r3, [r3, #0]
 800d716:	2b00      	cmp	r3, #0
 800d718:	f000 80b0 	beq.w	800d87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d71c:	7ba3      	ldrb	r3, [r4, #14]
 800d71e:	2b00      	cmp	r3, #0
 800d720:	f000 80ac 	beq.w	800d87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d724:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 800d728:	6810      	ldr	r0, [r2, #0]
 800d72a:	6851      	ldr	r1, [r2, #4]
 800d72c:	2500      	movs	r5, #0
 800d72e:	4643      	mov	r3, r8
 800d730:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 800d734:	950f      	str	r5, [sp, #60]	; 0x3c
 800d736:	af19      	add	r7, sp, #100	; 0x64
 800d738:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 800d73c:	79a2      	ldrb	r2, [r4, #6]
 800d73e:	c303      	stmia	r3!, {r0, r1}
 800d740:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 800d744:	a90f      	add	r1, sp, #60	; 0x3c
 800d746:	4640      	mov	r0, r8
 800d748:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d74c:	f7ff fd3e 	bl	800d1cc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d750:	a90f      	add	r1, sp, #60	; 0x3c
 800d752:	79a2      	ldrb	r2, [r4, #6]
 800d754:	4608      	mov	r0, r1
 800d756:	f7ff fd39 	bl	800d1cc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 800d75a:	4638      	mov	r0, r7
 800d75c:	f002 f884 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800d760:	6820      	ldr	r0, [r4, #0]
 800d762:	6803      	ldr	r3, [r0, #0]
 800d764:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d766:	4798      	blx	r3
 800d768:	4606      	mov	r6, r0
 800d76a:	6820      	ldr	r0, [r4, #0]
 800d76c:	6803      	ldr	r3, [r0, #0]
 800d76e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d770:	4798      	blx	r3
 800d772:	4633      	mov	r3, r6
 800d774:	9000      	str	r0, [sp, #0]
 800d776:	4651      	mov	r1, sl
 800d778:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800d77a:	4638      	mov	r0, r7
 800d77c:	f002 f8cf 	bl	800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d780:	7923      	ldrb	r3, [r4, #4]
 800d782:	6820      	ldr	r0, [r4, #0]
 800d784:	9308      	str	r3, [sp, #32]
 800d786:	6803      	ldr	r3, [r0, #0]
 800d788:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d78a:	4798      	blx	r3
 800d78c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d790:	181e      	adds	r6, r3, r0
 800d792:	42ae      	cmp	r6, r5
 800d794:	dd06      	ble.n	800d7a4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 800d796:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 800d79a:	4282      	cmp	r2, r0
 800d79c:	bfa4      	itt	ge
 800d79e:	189d      	addge	r5, r3, r2
 800d7a0:	fb95 f5f6 	sdivge	r5, r5, r6
 800d7a4:	a832      	add	r0, sp, #200	; 0xc8
 800d7a6:	f002 f85f 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800d7aa:	7c23      	ldrb	r3, [r4, #16]
 800d7ac:	b17b      	cbz	r3, 800d7ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 800d7ae:	6820      	ldr	r0, [r4, #0]
 800d7b0:	6803      	ldr	r3, [r0, #0]
 800d7b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d7b4:	4798      	blx	r3
 800d7b6:	4683      	mov	fp, r0
 800d7b8:	6820      	ldr	r0, [r4, #0]
 800d7ba:	6803      	ldr	r3, [r0, #0]
 800d7bc:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d7be:	4798      	blx	r3
 800d7c0:	465b      	mov	r3, fp
 800d7c2:	9000      	str	r0, [sp, #0]
 800d7c4:	4651      	mov	r1, sl
 800d7c6:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 800d7c8:	a832      	add	r0, sp, #200	; 0xc8
 800d7ca:	f002 f8a8 	bl	800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800d7ce:	7be1      	ldrb	r1, [r4, #15]
 800d7d0:	a811      	add	r0, sp, #68	; 0x44
 800d7d2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800d7d6:	7963      	ldrb	r3, [r4, #5]
 800d7d8:	1a52      	subs	r2, r2, r1
 800d7da:	7c21      	ldrb	r1, [r4, #16]
 800d7dc:	9101      	str	r1, [sp, #4]
 800d7de:	b292      	uxth	r2, r2
 800d7e0:	6821      	ldr	r1, [r4, #0]
 800d7e2:	9100      	str	r1, [sp, #0]
 800d7e4:	a932      	add	r1, sp, #200	; 0xc8
 800d7e6:	f7ff fc79 	bl	800d0dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 800d7ea:	7c23      	ldrb	r3, [r4, #16]
 800d7ec:	b9bb      	cbnz	r3, 800d81e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 800d7ee:	fa1f fa86 	uxth.w	sl, r6
 800d7f2:	2d00      	cmp	r5, #0
 800d7f4:	dd45      	ble.n	800d882 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800d7f6:	4638      	mov	r0, r7
 800d7f8:	f002 fc62 	bl	80100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d7fc:	2800      	cmp	r0, #0
 800d7fe:	d03d      	beq.n	800d87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d800:	280a      	cmp	r0, #10
 800d802:	d1f6      	bne.n	800d7f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800d804:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d808:	3d01      	subs	r5, #1
 800d80a:	4453      	add	r3, sl
 800d80c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d810:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800d814:	eba3 030a 	sub.w	r3, r3, sl
 800d818:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d81c:	e7e9      	b.n	800d7f2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 800d81e:	0073      	lsls	r3, r6, #1
 800d820:	f64f 7bff 	movw	fp, #65535	; 0xffff
 800d824:	fa1f fa86 	uxth.w	sl, r6
 800d828:	9309      	str	r3, [sp, #36]	; 0x24
 800d82a:	2d00      	cmp	r5, #0
 800d82c:	dd29      	ble.n	800d882 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 800d82e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800d832:	a811      	add	r0, sp, #68	; 0x44
 800d834:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d836:	428b      	cmp	r3, r1
 800d838:	bfd4      	ite	le
 800d83a:	2100      	movle	r1, #0
 800d83c:	2101      	movgt	r1, #1
 800d83e:	f7ff fe69 	bl	800d514 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d842:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 800d846:	3b01      	subs	r3, #1
 800d848:	b29b      	uxth	r3, r3
 800d84a:	455b      	cmp	r3, fp
 800d84c:	930b      	str	r3, [sp, #44]	; 0x2c
 800d84e:	d005      	beq.n	800d85c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 800d850:	7961      	ldrb	r1, [r4, #5]
 800d852:	4638      	mov	r0, r7
 800d854:	f7f5 f932 	bl	8002abc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800d858:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d85a:	e7f4      	b.n	800d846 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 800d85c:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d860:	3d01      	subs	r5, #1
 800d862:	4453      	add	r3, sl
 800d864:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d868:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 800d86c:	eba3 030a 	sub.w	r3, r3, sl
 800d870:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 800d874:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800d878:	2b00      	cmp	r3, #0
 800d87a:	d1d6      	bne.n	800d82a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 800d87c:	b065      	add	sp, #404	; 0x194
 800d87e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d882:	0075      	lsls	r5, r6, #1
 800d884:	f04f 0a00 	mov.w	sl, #0
 800d888:	7c23      	ldrb	r3, [r4, #16]
 800d88a:	2b00      	cmp	r3, #0
 800d88c:	d066      	beq.n	800d95c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 800d88e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800d892:	a811      	add	r0, sp, #68	; 0x44
 800d894:	428d      	cmp	r5, r1
 800d896:	bfd4      	ite	le
 800d898:	2100      	movle	r1, #0
 800d89a:	2101      	movgt	r1, #1
 800d89c:	f7ff fe3a 	bl	800d514 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800d8a0:	9b08      	ldr	r3, [sp, #32]
 800d8a2:	2b00      	cmp	r3, #0
 800d8a4:	d055      	beq.n	800d952 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d8a6:	f894 b010 	ldrb.w	fp, [r4, #16]
 800d8aa:	2264      	movs	r2, #100	; 0x64
 800d8ac:	4639      	mov	r1, r7
 800d8ae:	a84b      	add	r0, sp, #300	; 0x12c
 800d8b0:	f00f fc53 	bl	801d15a <memcpy>
 800d8b4:	f1bb 0f00 	cmp.w	fp, #0
 800d8b8:	d058      	beq.n	800d96c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 800d8ba:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 800d8be:	7922      	ldrb	r2, [r4, #4]
 800d8c0:	2a01      	cmp	r2, #1
 800d8c2:	d13c      	bne.n	800d93e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 800d8c4:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 800d8c8:	1ac0      	subs	r0, r0, r3
 800d8ca:	2302      	movs	r3, #2
 800d8cc:	fb90 f0f3 	sdiv	r0, r0, r3
 800d8d0:	b200      	sxth	r0, r0
 800d8d2:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800d8d6:	4418      	add	r0, r3
 800d8d8:	7c23      	ldrb	r3, [r4, #16]
 800d8da:	b200      	sxth	r0, r0
 800d8dc:	2b00      	cmp	r3, #0
 800d8de:	d03a      	beq.n	800d956 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 800d8e0:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 800d8e4:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 800d8e8:	9000      	str	r0, [sp, #0]
 800d8ea:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 800d8ee:	980a      	ldr	r0, [sp, #40]	; 0x28
 800d8f0:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800d8f4:	e9cd a703 	strd	sl, r7, [sp, #12]
 800d8f8:	e9cd 8401 	strd	r8, r4, [sp, #4]
 800d8fc:	464a      	mov	r2, r9
 800d8fe:	2100      	movs	r1, #0
 800d900:	f7ff fc95 	bl	800d22e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 800d904:	2800      	cmp	r0, #0
 800d906:	d1b9      	bne.n	800d87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d908:	b2b2      	uxth	r2, r6
 800d90a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 800d90e:	4611      	mov	r1, r2
 800d910:	4413      	add	r3, r2
 800d912:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 800d916:	b21b      	sxth	r3, r3
 800d918:	1a52      	subs	r2, r2, r1
 800d91a:	7c21      	ldrb	r1, [r4, #16]
 800d91c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800d920:	b212      	sxth	r2, r2
 800d922:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 800d926:	b109      	cbz	r1, 800d92c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 800d928:	42b2      	cmp	r2, r6
 800d92a:	dba7      	blt.n	800d87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d92c:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 800d930:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 800d934:	440a      	add	r2, r1
 800d936:	b212      	sxth	r2, r2
 800d938:	4293      	cmp	r3, r2
 800d93a:	dda5      	ble.n	800d888 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 800d93c:	e79e      	b.n	800d87c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 800d93e:	2a02      	cmp	r2, #2
 800d940:	d105      	bne.n	800d94e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 800d942:	7be2      	ldrb	r2, [r4, #15]
 800d944:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 800d948:	1a80      	subs	r0, r0, r2
 800d94a:	1ac0      	subs	r0, r0, r3
 800d94c:	e7c0      	b.n	800d8d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 800d94e:	2000      	movs	r0, #0
 800d950:	e7bf      	b.n	800d8d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800d952:	7be0      	ldrb	r0, [r4, #15]
 800d954:	e7bd      	b.n	800d8d2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 800d956:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d95a:	e7c3      	b.n	800d8e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 800d95c:	9b08      	ldr	r3, [sp, #32]
 800d95e:	2b00      	cmp	r3, #0
 800d960:	d0f7      	beq.n	800d952 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 800d962:	2264      	movs	r2, #100	; 0x64
 800d964:	4639      	mov	r1, r7
 800d966:	a84b      	add	r0, sp, #300	; 0x12c
 800d968:	f00f fbf7 	bl	801d15a <memcpy>
 800d96c:	2300      	movs	r3, #0
 800d96e:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800d972:	6821      	ldr	r1, [r4, #0]
 800d974:	a84b      	add	r0, sp, #300	; 0x12c
 800d976:	f7ff fbed 	bl	800d154 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800d97a:	b203      	sxth	r3, r0
 800d97c:	e79f      	b.n	800d8be <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0800d97e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800d97e:	2b03      	cmp	r3, #3
 800d980:	d818      	bhi.n	800d9b4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800d982:	e8df f003 	tbb	[pc, r3]
 800d986:	0602      	.short	0x0602
 800d988:	130d      	.short	0x130d
 800d98a:	f9b0 2000 	ldrsh.w	r2, [r0]
 800d98e:	1850      	adds	r0, r2, r1
 800d990:	4770      	bx	lr
 800d992:	8803      	ldrh	r3, [r0, #0]
 800d994:	8880      	ldrh	r0, [r0, #4]
 800d996:	4418      	add	r0, r3
 800d998:	b200      	sxth	r0, r0
 800d99a:	1a80      	subs	r0, r0, r2
 800d99c:	3801      	subs	r0, #1
 800d99e:	4770      	bx	lr
 800d9a0:	8803      	ldrh	r3, [r0, #0]
 800d9a2:	8880      	ldrh	r0, [r0, #4]
 800d9a4:	4418      	add	r0, r3
 800d9a6:	b200      	sxth	r0, r0
 800d9a8:	1a40      	subs	r0, r0, r1
 800d9aa:	e7f7      	b.n	800d99c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800d9ac:	f9b0 0000 	ldrsh.w	r0, [r0]
 800d9b0:	4410      	add	r0, r2
 800d9b2:	4770      	bx	lr
 800d9b4:	2000      	movs	r0, #0
 800d9b6:	4770      	bx	lr

0800d9b8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800d9b8:	2b03      	cmp	r3, #3
 800d9ba:	d817      	bhi.n	800d9ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800d9bc:	e8df f003 	tbb	[pc, r3]
 800d9c0:	10090602 	.word	0x10090602
 800d9c4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800d9c8:	1850      	adds	r0, r2, r1
 800d9ca:	4770      	bx	lr
 800d9cc:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800d9d0:	e7fa      	b.n	800d9c8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800d9d2:	8843      	ldrh	r3, [r0, #2]
 800d9d4:	88c0      	ldrh	r0, [r0, #6]
 800d9d6:	4418      	add	r0, r3
 800d9d8:	b200      	sxth	r0, r0
 800d9da:	1a80      	subs	r0, r0, r2
 800d9dc:	3801      	subs	r0, #1
 800d9de:	4770      	bx	lr
 800d9e0:	8843      	ldrh	r3, [r0, #2]
 800d9e2:	88c0      	ldrh	r0, [r0, #6]
 800d9e4:	4418      	add	r0, r3
 800d9e6:	b200      	sxth	r0, r0
 800d9e8:	1a40      	subs	r0, r0, r1
 800d9ea:	e7f7      	b.n	800d9dc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800d9ec:	2000      	movs	r0, #0
 800d9ee:	4770      	bx	lr

0800d9f0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800d9f0:	4b01      	ldr	r3, [pc, #4]	; (800d9f8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800d9f2:	2200      	movs	r2, #0
 800d9f4:	601a      	str	r2, [r3, #0]
 800d9f6:	4770      	bx	lr
 800d9f8:	2400b068 	.word	0x2400b068

0800d9fc <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800d9fc:	4603      	mov	r3, r0
 800d9fe:	b1c8      	cbz	r0, 800da34 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800da00:	0c02      	lsrs	r2, r0, #16
 800da02:	0412      	lsls	r2, r2, #16
 800da04:	b9a2      	cbnz	r2, 800da30 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800da06:	0403      	lsls	r3, r0, #16
 800da08:	2010      	movs	r0, #16
 800da0a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800da0e:	bf04      	itt	eq
 800da10:	021b      	lsleq	r3, r3, #8
 800da12:	3008      	addeq	r0, #8
 800da14:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800da18:	bf04      	itt	eq
 800da1a:	011b      	lsleq	r3, r3, #4
 800da1c:	3004      	addeq	r0, #4
 800da1e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800da22:	bf04      	itt	eq
 800da24:	009b      	lsleq	r3, r3, #2
 800da26:	3002      	addeq	r0, #2
 800da28:	2b00      	cmp	r3, #0
 800da2a:	db04      	blt.n	800da36 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800da2c:	3001      	adds	r0, #1
 800da2e:	4770      	bx	lr
 800da30:	2000      	movs	r0, #0
 800da32:	e7ea      	b.n	800da0a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800da34:	2020      	movs	r0, #32
 800da36:	4770      	bx	lr

0800da38 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800da38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da3c:	b087      	sub	sp, #28
 800da3e:	4681      	mov	r9, r0
 800da40:	4698      	mov	r8, r3
 800da42:	4610      	mov	r0, r2
 800da44:	460d      	mov	r5, r1
 800da46:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800da4a:	b981      	cbnz	r1, 800da6e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800da4c:	b14b      	cbz	r3, 800da62 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800da4e:	460b      	mov	r3, r1
 800da50:	464a      	mov	r2, r9
 800da52:	4641      	mov	r1, r8
 800da54:	e9cd 4700 	strd	r4, r7, [sp]
 800da58:	f7ff ffee 	bl	800da38 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800da5c:	b007      	add	sp, #28
 800da5e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800da62:	f04f 33ff 	mov.w	r3, #4294967295
 800da66:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800da6a:	603b      	str	r3, [r7, #0]
 800da6c:	e7f6      	b.n	800da5c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800da6e:	fa32 fa01 	lsrs.w	sl, r2, r1
 800da72:	d107      	bne.n	800da84 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800da74:	fb09 f602 	mul.w	r6, r9, r2
 800da78:	fbb6 f0f4 	udiv	r0, r6, r4
 800da7c:	fb04 6610 	mls	r6, r4, r0, r6
 800da80:	603e      	str	r6, [r7, #0]
 800da82:	e7eb      	b.n	800da5c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800da84:	2601      	movs	r6, #1
 800da86:	fa09 fb01 	lsl.w	fp, r9, r1
 800da8a:	408e      	lsls	r6, r1
 800da8c:	fbbb f3f4 	udiv	r3, fp, r4
 800da90:	3e01      	subs	r6, #1
 800da92:	9302      	str	r3, [sp, #8]
 800da94:	fb0a f303 	mul.w	r3, sl, r3
 800da98:	4016      	ands	r6, r2
 800da9a:	9303      	str	r3, [sp, #12]
 800da9c:	4630      	mov	r0, r6
 800da9e:	f7ff ffad 	bl	800d9fc <_ZN8touchgfx16TouchCalibration4clzuEm>
 800daa2:	464a      	mov	r2, r9
 800daa4:	460b      	mov	r3, r1
 800daa6:	4601      	mov	r1, r0
 800daa8:	4630      	mov	r0, r6
 800daaa:	e9cd 4700 	strd	r4, r7, [sp]
 800daae:	f7ff ffc3 	bl	800da38 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800dab2:	9b02      	ldr	r3, [sp, #8]
 800dab4:	4606      	mov	r6, r0
 800dab6:	eb05 0108 	add.w	r1, r5, r8
 800daba:	fb04 bb13 	mls	fp, r4, r3, fp
 800dabe:	4658      	mov	r0, fp
 800dac0:	f7ff ff9c 	bl	800d9fc <_ZN8touchgfx16TouchCalibration4clzuEm>
 800dac4:	ab05      	add	r3, sp, #20
 800dac6:	465a      	mov	r2, fp
 800dac8:	e9cd 4300 	strd	r4, r3, [sp]
 800dacc:	4603      	mov	r3, r0
 800dace:	4650      	mov	r0, sl
 800dad0:	f7ff ffb2 	bl	800da38 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800dad4:	6839      	ldr	r1, [r7, #0]
 800dad6:	9a05      	ldr	r2, [sp, #20]
 800dad8:	9b03      	ldr	r3, [sp, #12]
 800dada:	4411      	add	r1, r2
 800dadc:	fbb1 f2f4 	udiv	r2, r1, r4
 800dae0:	18d3      	adds	r3, r2, r3
 800dae2:	fb04 1412 	mls	r4, r4, r2, r1
 800dae6:	441e      	add	r6, r3
 800dae8:	603c      	str	r4, [r7, #0]
 800daea:	4430      	add	r0, r6
 800daec:	e7b6      	b.n	800da5c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800daee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800daee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800daf2:	b085      	sub	sp, #20
 800daf4:	f1b0 0900 	subs.w	r9, r0, #0
 800daf8:	461d      	mov	r5, r3
 800dafa:	4617      	mov	r7, r2
 800dafc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800dafe:	bfbb      	ittet	lt
 800db00:	f1c9 0900 	rsblt	r9, r9, #0
 800db04:	f04f 36ff 	movlt.w	r6, #4294967295
 800db08:	2601      	movge	r6, #1
 800db0a:	6823      	ldrlt	r3, [r4, #0]
 800db0c:	bfbc      	itt	lt
 800db0e:	425b      	neglt	r3, r3
 800db10:	6023      	strlt	r3, [r4, #0]
 800db12:	2a00      	cmp	r2, #0
 800db14:	da04      	bge.n	800db20 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800db16:	6823      	ldr	r3, [r4, #0]
 800db18:	4257      	negs	r7, r2
 800db1a:	4276      	negs	r6, r6
 800db1c:	425b      	negs	r3, r3
 800db1e:	6023      	str	r3, [r4, #0]
 800db20:	2d00      	cmp	r5, #0
 800db22:	4638      	mov	r0, r7
 800db24:	bfba      	itte	lt
 800db26:	426d      	neglt	r5, r5
 800db28:	f04f 38ff 	movlt.w	r8, #4294967295
 800db2c:	f04f 0801 	movge.w	r8, #1
 800db30:	f7ff ff64 	bl	800d9fc <_ZN8touchgfx16TouchCalibration4clzuEm>
 800db34:	ab03      	add	r3, sp, #12
 800db36:	463a      	mov	r2, r7
 800db38:	e9cd 5300 	strd	r5, r3, [sp]
 800db3c:	4603      	mov	r3, r0
 800db3e:	4648      	mov	r0, r9
 800db40:	f7ff ff7a 	bl	800da38 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800db44:	6823      	ldr	r3, [r4, #0]
 800db46:	9a03      	ldr	r2, [sp, #12]
 800db48:	4546      	cmp	r6, r8
 800db4a:	441a      	add	r2, r3
 800db4c:	fb92 f3f5 	sdiv	r3, r2, r5
 800db50:	4418      	add	r0, r3
 800db52:	fb05 2313 	mls	r3, r5, r3, r2
 800db56:	bf18      	it	ne
 800db58:	4240      	negne	r0, r0
 800db5a:	1c72      	adds	r2, r6, #1
 800db5c:	6023      	str	r3, [r4, #0]
 800db5e:	d105      	bne.n	800db6c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800db60:	2b00      	cmp	r3, #0
 800db62:	f1c3 0200 	rsb	r2, r3, #0
 800db66:	db0b      	blt.n	800db80 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800db68:	6022      	str	r2, [r4, #0]
 800db6a:	e006      	b.n	800db7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800db6c:	2e01      	cmp	r6, #1
 800db6e:	d104      	bne.n	800db7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800db70:	2b00      	cmp	r3, #0
 800db72:	da02      	bge.n	800db7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800db74:	442b      	add	r3, r5
 800db76:	3801      	subs	r0, #1
 800db78:	6023      	str	r3, [r4, #0]
 800db7a:	b005      	add	sp, #20
 800db7c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800db80:	3801      	subs	r0, #1
 800db82:	1b52      	subs	r2, r2, r5
 800db84:	e7f0      	b.n	800db68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800db88 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800db88:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800db8c:	4c1c      	ldr	r4, [pc, #112]	; (800dc00 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800db8e:	4605      	mov	r5, r0
 800db90:	6807      	ldr	r7, [r0, #0]
 800db92:	69a3      	ldr	r3, [r4, #24]
 800db94:	b92b      	cbnz	r3, 800dba2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800db96:	6840      	ldr	r0, [r0, #4]
 800db98:	e9c5 7000 	strd	r7, r0, [r5]
 800db9c:	b004      	add	sp, #16
 800db9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dba2:	f04f 0802 	mov.w	r8, #2
 800dba6:	68a2      	ldr	r2, [r4, #8]
 800dba8:	ae04      	add	r6, sp, #16
 800dbaa:	6820      	ldr	r0, [r4, #0]
 800dbac:	fb93 f1f8 	sdiv	r1, r3, r8
 800dbb0:	440a      	add	r2, r1
 800dbb2:	69e1      	ldr	r1, [r4, #28]
 800dbb4:	f846 2d04 	str.w	r2, [r6, #-4]!
 800dbb8:	463a      	mov	r2, r7
 800dbba:	9600      	str	r6, [sp, #0]
 800dbbc:	f7ff ff97 	bl	800daee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dbc0:	69a3      	ldr	r3, [r4, #24]
 800dbc2:	4607      	mov	r7, r0
 800dbc4:	686a      	ldr	r2, [r5, #4]
 800dbc6:	6a21      	ldr	r1, [r4, #32]
 800dbc8:	9600      	str	r6, [sp, #0]
 800dbca:	6860      	ldr	r0, [r4, #4]
 800dbcc:	f7ff ff8f 	bl	800daee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dbd0:	69a3      	ldr	r3, [r4, #24]
 800dbd2:	6962      	ldr	r2, [r4, #20]
 800dbd4:	4407      	add	r7, r0
 800dbd6:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800dbd8:	9600      	str	r6, [sp, #0]
 800dbda:	68e0      	ldr	r0, [r4, #12]
 800dbdc:	fb93 f8f8 	sdiv	r8, r3, r8
 800dbe0:	4442      	add	r2, r8
 800dbe2:	9203      	str	r2, [sp, #12]
 800dbe4:	682a      	ldr	r2, [r5, #0]
 800dbe6:	f7ff ff82 	bl	800daee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dbea:	4680      	mov	r8, r0
 800dbec:	9600      	str	r6, [sp, #0]
 800dbee:	69a3      	ldr	r3, [r4, #24]
 800dbf0:	686a      	ldr	r2, [r5, #4]
 800dbf2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800dbf4:	6920      	ldr	r0, [r4, #16]
 800dbf6:	f7ff ff7a 	bl	800daee <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800dbfa:	4440      	add	r0, r8
 800dbfc:	e7cc      	b.n	800db98 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800dbfe:	bf00      	nop
 800dc00:	2400b06c 	.word	0x2400b06c

0800dc04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800dc04:	4b07      	ldr	r3, [pc, #28]	; (800dc24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800dc06:	781b      	ldrb	r3, [r3, #0]
 800dc08:	2b01      	cmp	r3, #1
 800dc0a:	d109      	bne.n	800dc20 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800dc0c:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dc10:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dc14:	8003      	strh	r3, [r0, #0]
 800dc16:	4b04      	ldr	r3, [pc, #16]	; (800dc28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800dc18:	881b      	ldrh	r3, [r3, #0]
 800dc1a:	3b01      	subs	r3, #1
 800dc1c:	1a9b      	subs	r3, r3, r2
 800dc1e:	800b      	strh	r3, [r1, #0]
 800dc20:	4770      	bx	lr
 800dc22:	bf00      	nop
 800dc24:	2400b058 	.word	0x2400b058
 800dc28:	2400b054 	.word	0x2400b054

0800dc2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800dc2c:	4b07      	ldr	r3, [pc, #28]	; (800dc4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800dc2e:	b510      	push	{r4, lr}
 800dc30:	781b      	ldrb	r3, [r3, #0]
 800dc32:	2b01      	cmp	r3, #1
 800dc34:	d108      	bne.n	800dc48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800dc36:	4b06      	ldr	r3, [pc, #24]	; (800dc50 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800dc38:	880c      	ldrh	r4, [r1, #0]
 800dc3a:	881b      	ldrh	r3, [r3, #0]
 800dc3c:	f9b0 2000 	ldrsh.w	r2, [r0]
 800dc40:	3b01      	subs	r3, #1
 800dc42:	1b1b      	subs	r3, r3, r4
 800dc44:	8003      	strh	r3, [r0, #0]
 800dc46:	800a      	strh	r2, [r1, #0]
 800dc48:	bd10      	pop	{r4, pc}
 800dc4a:	bf00      	nop
 800dc4c:	2400b058 	.word	0x2400b058
 800dc50:	2400b054 	.word	0x2400b054

0800dc54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800dc54:	4b0a      	ldr	r3, [pc, #40]	; (800dc80 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800dc56:	b510      	push	{r4, lr}
 800dc58:	781b      	ldrb	r3, [r3, #0]
 800dc5a:	2b01      	cmp	r3, #1
 800dc5c:	d10e      	bne.n	800dc7c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800dc5e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800dc62:	8843      	ldrh	r3, [r0, #2]
 800dc64:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dc68:	18ca      	adds	r2, r1, r3
 800dc6a:	4b06      	ldr	r3, [pc, #24]	; (800dc84 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800dc6c:	8044      	strh	r4, [r0, #2]
 800dc6e:	881b      	ldrh	r3, [r3, #0]
 800dc70:	1a9b      	subs	r3, r3, r2
 800dc72:	8003      	strh	r3, [r0, #0]
 800dc74:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dc78:	8081      	strh	r1, [r0, #4]
 800dc7a:	80c3      	strh	r3, [r0, #6]
 800dc7c:	bd10      	pop	{r4, pc}
 800dc7e:	bf00      	nop
 800dc80:	2400b058 	.word	0x2400b058
 800dc84:	2400b054 	.word	0x2400b054

0800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800dc88:	4b08      	ldr	r3, [pc, #32]	; (800dcac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800dc8a:	781b      	ldrb	r3, [r3, #0]
 800dc8c:	2b01      	cmp	r3, #1
 800dc8e:	d10c      	bne.n	800dcaa <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800dc90:	8803      	ldrh	r3, [r0, #0]
 800dc92:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800dc96:	8842      	ldrh	r2, [r0, #2]
 800dc98:	8002      	strh	r2, [r0, #0]
 800dc9a:	185a      	adds	r2, r3, r1
 800dc9c:	4b04      	ldr	r3, [pc, #16]	; (800dcb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800dc9e:	881b      	ldrh	r3, [r3, #0]
 800dca0:	1a9b      	subs	r3, r3, r2
 800dca2:	8043      	strh	r3, [r0, #2]
 800dca4:	88c3      	ldrh	r3, [r0, #6]
 800dca6:	80c1      	strh	r1, [r0, #6]
 800dca8:	8083      	strh	r3, [r0, #4]
 800dcaa:	4770      	bx	lr
 800dcac:	2400b058 	.word	0x2400b058
 800dcb0:	2400b054 	.word	0x2400b054

0800dcb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800dcb4:	4b07      	ldr	r3, [pc, #28]	; (800dcd4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800dcb6:	b510      	push	{r4, lr}
 800dcb8:	781b      	ldrb	r3, [r3, #0]
 800dcba:	2b01      	cmp	r3, #1
 800dcbc:	d108      	bne.n	800dcd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800dcbe:	f9b1 3000 	ldrsh.w	r3, [r1]
 800dcc2:	f9b0 4000 	ldrsh.w	r4, [r0]
 800dcc6:	8003      	strh	r3, [r0, #0]
 800dcc8:	8893      	ldrh	r3, [r2, #4]
 800dcca:	3b01      	subs	r3, #1
 800dccc:	1b1b      	subs	r3, r3, r4
 800dcce:	800b      	strh	r3, [r1, #0]
 800dcd0:	bd10      	pop	{r4, pc}
 800dcd2:	bf00      	nop
 800dcd4:	2400b058 	.word	0x2400b058

0800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800dcd8:	4b0a      	ldr	r3, [pc, #40]	; (800dd04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800dcda:	460a      	mov	r2, r1
 800dcdc:	b510      	push	{r4, lr}
 800dcde:	781b      	ldrb	r3, [r3, #0]
 800dce0:	2b01      	cmp	r3, #1
 800dce2:	d10d      	bne.n	800dd00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800dce4:	8881      	ldrh	r1, [r0, #4]
 800dce6:	8803      	ldrh	r3, [r0, #0]
 800dce8:	440b      	add	r3, r1
 800dcea:	4601      	mov	r1, r0
 800dcec:	3b01      	subs	r3, #1
 800dcee:	f821 3b02 	strh.w	r3, [r1], #2
 800dcf2:	f7ff ffdf 	bl	800dcb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800dcf6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dcfa:	88c2      	ldrh	r2, [r0, #6]
 800dcfc:	80c3      	strh	r3, [r0, #6]
 800dcfe:	8082      	strh	r2, [r0, #4]
 800dd00:	bd10      	pop	{r4, pc}
 800dd02:	bf00      	nop
 800dd04:	2400b058 	.word	0x2400b058

0800dd08 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800dd08:	b570      	push	{r4, r5, r6, lr}
 800dd0a:	2300      	movs	r3, #0
 800dd0c:	4c0a      	ldr	r4, [pc, #40]	; (800dd38 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800dd0e:	4605      	mov	r5, r0
 800dd10:	460e      	mov	r6, r1
 800dd12:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800dd16:	6820      	ldr	r0, [r4, #0]
 800dd18:	b110      	cbz	r0, 800dd20 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 800dd1a:	6803      	ldr	r3, [r0, #0]
 800dd1c:	695b      	ldr	r3, [r3, #20]
 800dd1e:	4798      	blx	r3
 800dd20:	6026      	str	r6, [r4, #0]
 800dd22:	4630      	mov	r0, r6
 800dd24:	6833      	ldr	r3, [r6, #0]
 800dd26:	68db      	ldr	r3, [r3, #12]
 800dd28:	4798      	blx	r3
 800dd2a:	682b      	ldr	r3, [r5, #0]
 800dd2c:	4628      	mov	r0, r5
 800dd2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dd30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dd34:	4718      	bx	r3
 800dd36:	bf00      	nop
 800dd38:	2400b09c 	.word	0x2400b09c

0800dd3c <_ZN8touchgfx11Application13requestRedrawEv>:
 800dd3c:	4b06      	ldr	r3, [pc, #24]	; (800dd58 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800dd3e:	2100      	movs	r1, #0
 800dd40:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd44:	4b05      	ldr	r3, [pc, #20]	; (800dd5c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800dd46:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800dd4a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dd4e:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800dd52:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800dd56:	4770      	bx	lr
 800dd58:	2400b054 	.word	0x2400b054
 800dd5c:	2400b056 	.word	0x2400b056

0800dd60 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800dd60:	4b03      	ldr	r3, [pc, #12]	; (800dd70 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800dd62:	6818      	ldr	r0, [r3, #0]
 800dd64:	b110      	cbz	r0, 800dd6c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800dd66:	6803      	ldr	r3, [r0, #0]
 800dd68:	699b      	ldr	r3, [r3, #24]
 800dd6a:	4718      	bx	r3
 800dd6c:	4770      	bx	lr
 800dd6e:	bf00      	nop
 800dd70:	2400b09c 	.word	0x2400b09c

0800dd74 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800dd74:	4770      	bx	lr
	...

0800dd78 <_ZN8touchgfx11Application4drawEv>:
 800dd78:	4b09      	ldr	r3, [pc, #36]	; (800dda0 <_ZN8touchgfx11Application4drawEv+0x28>)
 800dd7a:	b507      	push	{r0, r1, r2, lr}
 800dd7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dd80:	2100      	movs	r1, #0
 800dd82:	4b08      	ldr	r3, [pc, #32]	; (800dda4 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800dd84:	9100      	str	r1, [sp, #0]
 800dd86:	4669      	mov	r1, sp
 800dd88:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dd8c:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dd90:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dd94:	6803      	ldr	r3, [r0, #0]
 800dd96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800dd98:	4798      	blx	r3
 800dd9a:	b003      	add	sp, #12
 800dd9c:	f85d fb04 	ldr.w	pc, [sp], #4
 800dda0:	2400b054 	.word	0x2400b054
 800dda4:	2400b056 	.word	0x2400b056

0800dda8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800dda8:	4b03      	ldr	r3, [pc, #12]	; (800ddb8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ddaa:	6818      	ldr	r0, [r3, #0]
 800ddac:	b110      	cbz	r0, 800ddb4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ddae:	6803      	ldr	r3, [r0, #0]
 800ddb0:	69db      	ldr	r3, [r3, #28]
 800ddb2:	4718      	bx	r3
 800ddb4:	4770      	bx	lr
 800ddb6:	bf00      	nop
 800ddb8:	2400b09c 	.word	0x2400b09c

0800ddbc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ddbc:	4b03      	ldr	r3, [pc, #12]	; (800ddcc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ddbe:	6818      	ldr	r0, [r3, #0]
 800ddc0:	b110      	cbz	r0, 800ddc8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ddc2:	6803      	ldr	r3, [r0, #0]
 800ddc4:	6a1b      	ldr	r3, [r3, #32]
 800ddc6:	4718      	bx	r3
 800ddc8:	4770      	bx	lr
 800ddca:	bf00      	nop
 800ddcc:	2400b09c 	.word	0x2400b09c

0800ddd0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800ddd0:	2300      	movs	r3, #0
 800ddd2:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800ddd6:	4770      	bx	lr

0800ddd8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ddd8:	4b03      	ldr	r3, [pc, #12]	; (800dde8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ddda:	6818      	ldr	r0, [r3, #0]
 800dddc:	b110      	cbz	r0, 800dde4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ddde:	6803      	ldr	r3, [r0, #0]
 800dde0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dde2:	4718      	bx	r3
 800dde4:	4770      	bx	lr
 800dde6:	bf00      	nop
 800dde8:	2400b09c 	.word	0x2400b09c

0800ddec <_ZN8touchgfx11Application15handleTickEventEv>:
 800ddec:	b570      	push	{r4, r5, r6, lr}
 800ddee:	4d32      	ldr	r5, [pc, #200]	; (800deb8 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 800ddf0:	4604      	mov	r4, r0
 800ddf2:	6828      	ldr	r0, [r5, #0]
 800ddf4:	b140      	cbz	r0, 800de08 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ddf6:	7a03      	ldrb	r3, [r0, #8]
 800ddf8:	b933      	cbnz	r3, 800de08 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800ddfa:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800ddfe:	6803      	ldr	r3, [r0, #0]
 800de00:	689b      	ldr	r3, [r3, #8]
 800de02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800de06:	4718      	bx	r3
 800de08:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 800de0c:	b97b      	cbnz	r3, 800de2e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800de0e:	b170      	cbz	r0, 800de2e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800de10:	7a03      	ldrb	r3, [r0, #8]
 800de12:	b163      	cbz	r3, 800de2e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800de14:	4b29      	ldr	r3, [pc, #164]	; (800debc <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 800de16:	6818      	ldr	r0, [r3, #0]
 800de18:	b110      	cbz	r0, 800de20 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800de1a:	6803      	ldr	r3, [r0, #0]
 800de1c:	691b      	ldr	r3, [r3, #16]
 800de1e:	4798      	blx	r3
 800de20:	6828      	ldr	r0, [r5, #0]
 800de22:	6803      	ldr	r3, [r0, #0]
 800de24:	68db      	ldr	r3, [r3, #12]
 800de26:	4798      	blx	r3
 800de28:	2301      	movs	r3, #1
 800de2a:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 800de2e:	2500      	movs	r5, #0
 800de30:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800de34:	42a8      	cmp	r0, r5
 800de36:	dd0c      	ble.n	800de52 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800de38:	1963      	adds	r3, r4, r5
 800de3a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800de3e:	b132      	cbz	r2, 800de4e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800de40:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800de44:	4413      	add	r3, r2
 800de46:	6858      	ldr	r0, [r3, #4]
 800de48:	6803      	ldr	r3, [r0, #0]
 800de4a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800de4c:	4798      	blx	r3
 800de4e:	3501      	adds	r5, #1
 800de50:	e7ee      	b.n	800de30 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800de52:	2300      	movs	r3, #0
 800de54:	461a      	mov	r2, r3
 800de56:	4298      	cmp	r0, r3
 800de58:	d015      	beq.n	800de86 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800de5a:	18e1      	adds	r1, r4, r3
 800de5c:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800de60:	b16d      	cbz	r5, 800de7e <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 800de62:	429a      	cmp	r2, r3
 800de64:	d00a      	beq.n	800de7c <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 800de66:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800de6a:	4431      	add	r1, r6
 800de6c:	684e      	ldr	r6, [r1, #4]
 800de6e:	b291      	uxth	r1, r2
 800de70:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800de74:	604e      	str	r6, [r1, #4]
 800de76:	18a1      	adds	r1, r4, r2
 800de78:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800de7c:	3201      	adds	r2, #1
 800de7e:	3301      	adds	r3, #1
 800de80:	e7e9      	b.n	800de56 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800de82:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800de86:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 800de8a:	4295      	cmp	r5, r2
 800de8c:	dd0d      	ble.n	800deaa <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 800de8e:	1e6b      	subs	r3, r5, #1
 800de90:	b29b      	uxth	r3, r3
 800de92:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 800de96:	4618      	mov	r0, r3
 800de98:	3104      	adds	r1, #4
 800de9a:	4285      	cmp	r5, r0
 800de9c:	ddf1      	ble.n	800de82 <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 800de9e:	f851 6f04 	ldr.w	r6, [r1, #4]!
 800dea2:	3001      	adds	r0, #1
 800dea4:	f841 6c04 	str.w	r6, [r1, #-4]
 800dea8:	e7f7      	b.n	800de9a <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 800deaa:	4b04      	ldr	r3, [pc, #16]	; (800debc <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 800deac:	6818      	ldr	r0, [r3, #0]
 800deae:	b110      	cbz	r0, 800deb6 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800deb0:	6803      	ldr	r3, [r0, #0]
 800deb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800deb4:	e7a5      	b.n	800de02 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800deb6:	bd70      	pop	{r4, r5, r6, pc}
 800deb8:	2400b0a0 	.word	0x2400b0a0
 800debc:	2400b09c 	.word	0x2400b09c

0800dec0 <_ZN8touchgfx11ApplicationD1Ev>:
 800dec0:	4770      	bx	lr

0800dec2 <_ZN8touchgfx11ApplicationD0Ev>:
 800dec2:	b510      	push	{r4, lr}
 800dec4:	4604      	mov	r4, r0
 800dec6:	f44f 719c 	mov.w	r1, #312	; 0x138
 800deca:	f00e fe42 	bl	801cb52 <_ZdlPvj>
 800dece:	4620      	mov	r0, r4
 800ded0:	bd10      	pop	{r4, pc}

0800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ded2:	b510      	push	{r4, lr}
 800ded4:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ded8:	888a      	ldrh	r2, [r1, #4]
 800deda:	f9b0 3000 	ldrsh.w	r3, [r0]
 800dede:	4422      	add	r2, r4
 800dee0:	b212      	sxth	r2, r2
 800dee2:	4293      	cmp	r3, r2
 800dee4:	da15      	bge.n	800df12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800dee6:	8882      	ldrh	r2, [r0, #4]
 800dee8:	4413      	add	r3, r2
 800deea:	b21b      	sxth	r3, r3
 800deec:	429c      	cmp	r4, r3
 800deee:	da10      	bge.n	800df12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800def0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800def4:	88c9      	ldrh	r1, [r1, #6]
 800def6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800defa:	4419      	add	r1, r3
 800defc:	b209      	sxth	r1, r1
 800defe:	428a      	cmp	r2, r1
 800df00:	da07      	bge.n	800df12 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800df02:	88c0      	ldrh	r0, [r0, #6]
 800df04:	4410      	add	r0, r2
 800df06:	b200      	sxth	r0, r0
 800df08:	4283      	cmp	r3, r0
 800df0a:	bfac      	ite	ge
 800df0c:	2000      	movge	r0, #0
 800df0e:	2001      	movlt	r0, #1
 800df10:	bd10      	pop	{r4, pc}
 800df12:	2000      	movs	r0, #0
 800df14:	e7fc      	b.n	800df10 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800df16 <_ZN8touchgfx4Rect10restrictToEss>:
 800df16:	f9b0 3000 	ldrsh.w	r3, [r0]
 800df1a:	2b00      	cmp	r3, #0
 800df1c:	b510      	push	{r4, lr}
 800df1e:	da04      	bge.n	800df2a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800df20:	8884      	ldrh	r4, [r0, #4]
 800df22:	4423      	add	r3, r4
 800df24:	8083      	strh	r3, [r0, #4]
 800df26:	2300      	movs	r3, #0
 800df28:	8003      	strh	r3, [r0, #0]
 800df2a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800df2e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800df32:	1b09      	subs	r1, r1, r4
 800df34:	428b      	cmp	r3, r1
 800df36:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800df3a:	bfc8      	it	gt
 800df3c:	8081      	strhgt	r1, [r0, #4]
 800df3e:	2b00      	cmp	r3, #0
 800df40:	da04      	bge.n	800df4c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800df42:	88c1      	ldrh	r1, [r0, #6]
 800df44:	440b      	add	r3, r1
 800df46:	80c3      	strh	r3, [r0, #6]
 800df48:	2300      	movs	r3, #0
 800df4a:	8043      	strh	r3, [r0, #2]
 800df4c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800df50:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800df54:	1a52      	subs	r2, r2, r1
 800df56:	4293      	cmp	r3, r2
 800df58:	bfc8      	it	gt
 800df5a:	80c2      	strhgt	r2, [r0, #6]
 800df5c:	bd10      	pop	{r4, pc}
	...

0800df60 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800df60:	4b10      	ldr	r3, [pc, #64]	; (800dfa4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800df62:	b510      	push	{r4, lr}
 800df64:	460c      	mov	r4, r1
 800df66:	f9b3 2000 	ldrsh.w	r2, [r3]
 800df6a:	4b0f      	ldr	r3, [pc, #60]	; (800dfa8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800df6c:	4620      	mov	r0, r4
 800df6e:	f9b3 1000 	ldrsh.w	r1, [r3]
 800df72:	f7ff ffd0 	bl	800df16 <_ZN8touchgfx4Rect10restrictToEss>
 800df76:	4b0d      	ldr	r3, [pc, #52]	; (800dfac <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800df78:	6818      	ldr	r0, [r3, #0]
 800df7a:	b190      	cbz	r0, 800dfa2 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800df7c:	6803      	ldr	r3, [r0, #0]
 800df7e:	4621      	mov	r1, r4
 800df80:	689b      	ldr	r3, [r3, #8]
 800df82:	4798      	blx	r3
 800df84:	4b0a      	ldr	r3, [pc, #40]	; (800dfb0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800df86:	6818      	ldr	r0, [r3, #0]
 800df88:	b118      	cbz	r0, 800df92 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800df8a:	6803      	ldr	r3, [r0, #0]
 800df8c:	4621      	mov	r1, r4
 800df8e:	689b      	ldr	r3, [r3, #8]
 800df90:	4798      	blx	r3
 800df92:	4b08      	ldr	r3, [pc, #32]	; (800dfb4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800df94:	4621      	mov	r1, r4
 800df96:	6818      	ldr	r0, [r3, #0]
 800df98:	6803      	ldr	r3, [r0, #0]
 800df9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df9e:	69db      	ldr	r3, [r3, #28]
 800dfa0:	4718      	bx	r3
 800dfa2:	bd10      	pop	{r4, pc}
 800dfa4:	2400b056 	.word	0x2400b056
 800dfa8:	2400b054 	.word	0x2400b054
 800dfac:	2400b09c 	.word	0x2400b09c
 800dfb0:	2400b098 	.word	0x2400b098
 800dfb4:	2400b060 	.word	0x2400b060

0800dfb8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800dfb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dfba:	4606      	mov	r6, r0
 800dfbc:	4608      	mov	r0, r1
 800dfbe:	460f      	mov	r7, r1
 800dfc0:	f7fc fec9 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dfc4:	b9e8      	cbnz	r0, 800e002 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfc6:	f9b7 5000 	ldrsh.w	r5, [r7]
 800dfca:	f9b6 4000 	ldrsh.w	r4, [r6]
 800dfce:	42a5      	cmp	r5, r4
 800dfd0:	db17      	blt.n	800e002 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfd2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800dfd6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800dfda:	429a      	cmp	r2, r3
 800dfdc:	db11      	blt.n	800e002 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfde:	88b9      	ldrh	r1, [r7, #4]
 800dfe0:	440d      	add	r5, r1
 800dfe2:	88b1      	ldrh	r1, [r6, #4]
 800dfe4:	440c      	add	r4, r1
 800dfe6:	b22d      	sxth	r5, r5
 800dfe8:	b224      	sxth	r4, r4
 800dfea:	42a5      	cmp	r5, r4
 800dfec:	dc09      	bgt.n	800e002 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800dfee:	88f8      	ldrh	r0, [r7, #6]
 800dff0:	4410      	add	r0, r2
 800dff2:	88f2      	ldrh	r2, [r6, #6]
 800dff4:	4413      	add	r3, r2
 800dff6:	b200      	sxth	r0, r0
 800dff8:	b21b      	sxth	r3, r3
 800dffa:	4298      	cmp	r0, r3
 800dffc:	bfcc      	ite	gt
 800dffe:	2000      	movgt	r0, #0
 800e000:	2001      	movle	r0, #1
 800e002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e004 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800e004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e006:	4604      	mov	r4, r0
 800e008:	4608      	mov	r0, r1
 800e00a:	460d      	mov	r5, r1
 800e00c:	f7fc fea3 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e010:	b978      	cbnz	r0, 800e032 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800e012:	4620      	mov	r0, r4
 800e014:	f7fc fe9f 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e018:	f9b5 6000 	ldrsh.w	r6, [r5]
 800e01c:	b150      	cbz	r0, 800e034 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800e01e:	8026      	strh	r6, [r4, #0]
 800e020:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800e024:	8063      	strh	r3, [r4, #2]
 800e026:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800e02a:	80a3      	strh	r3, [r4, #4]
 800e02c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800e030:	80e3      	strh	r3, [r4, #6]
 800e032:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e034:	f9b4 1000 	ldrsh.w	r1, [r4]
 800e038:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800e03c:	42b1      	cmp	r1, r6
 800e03e:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800e042:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800e046:	460f      	mov	r7, r1
 800e048:	88ed      	ldrh	r5, [r5, #6]
 800e04a:	bfa8      	it	ge
 800e04c:	4637      	movge	r7, r6
 800e04e:	4293      	cmp	r3, r2
 800e050:	4618      	mov	r0, r3
 800e052:	4466      	add	r6, ip
 800e054:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800e058:	bfa8      	it	ge
 800e05a:	4610      	movge	r0, r2
 800e05c:	442a      	add	r2, r5
 800e05e:	88e5      	ldrh	r5, [r4, #6]
 800e060:	4461      	add	r1, ip
 800e062:	b236      	sxth	r6, r6
 800e064:	8027      	strh	r7, [r4, #0]
 800e066:	442b      	add	r3, r5
 800e068:	b209      	sxth	r1, r1
 800e06a:	b212      	sxth	r2, r2
 800e06c:	8060      	strh	r0, [r4, #2]
 800e06e:	b21b      	sxth	r3, r3
 800e070:	428e      	cmp	r6, r1
 800e072:	bfac      	ite	ge
 800e074:	ebc7 0106 	rsbge	r1, r7, r6
 800e078:	ebc7 0101 	rsblt	r1, r7, r1
 800e07c:	429a      	cmp	r2, r3
 800e07e:	bfac      	ite	ge
 800e080:	ebc0 0202 	rsbge	r2, r0, r2
 800e084:	ebc0 0203 	rsblt	r2, r0, r3
 800e088:	80a1      	strh	r1, [r4, #4]
 800e08a:	80e2      	strh	r2, [r4, #6]
 800e08c:	e7d1      	b.n	800e032 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800e090 <_ZN8touchgfx11Application11getInstanceEv>:
 800e090:	4b01      	ldr	r3, [pc, #4]	; (800e098 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800e092:	6818      	ldr	r0, [r3, #0]
 800e094:	4770      	bx	lr
 800e096:	bf00      	nop
 800e098:	2400b0ac 	.word	0x2400b0ac

0800e09c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800e09c:	2300      	movs	r3, #0
 800e09e:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800e0a2:	30a8      	adds	r0, #168	; 0xa8
 800e0a4:	f820 3c24 	strh.w	r3, [r0, #-36]
 800e0a8:	f802 3b01 	strb.w	r3, [r2], #1
 800e0ac:	4282      	cmp	r2, r0
 800e0ae:	d1fb      	bne.n	800e0a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800e0b0:	4770      	bx	lr

0800e0b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800e0b2:	4603      	mov	r3, r0
 800e0b4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800e0b8:	2200      	movs	r2, #0
 800e0ba:	801a      	strh	r2, [r3, #0]
 800e0bc:	3308      	adds	r3, #8
 800e0be:	f823 2c06 	strh.w	r2, [r3, #-6]
 800e0c2:	f823 2c04 	strh.w	r2, [r3, #-4]
 800e0c6:	f823 2c02 	strh.w	r2, [r3, #-2]
 800e0ca:	428b      	cmp	r3, r1
 800e0cc:	d1f5      	bne.n	800e0ba <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800e0ce:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800e0d2:	4770      	bx	lr

0800e0d4 <_ZN8touchgfx11ApplicationC1Ev>:
 800e0d4:	b570      	push	{r4, r5, r6, lr}
 800e0d6:	4b19      	ldr	r3, [pc, #100]	; (800e13c <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800e0d8:	2500      	movs	r5, #0
 800e0da:	4604      	mov	r4, r0
 800e0dc:	30a8      	adds	r0, #168	; 0xa8
 800e0de:	f840 3ca8 	str.w	r3, [r0, #-168]
 800e0e2:	f820 5c24 	strh.w	r5, [r0, #-36]
 800e0e6:	f7ff ffe4 	bl	800e0b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e0ea:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800e0ee:	f7ff ffe0 	bl	800e0b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e0f2:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800e0f6:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800e0fa:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800e0fe:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800e102:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800e106:	490e      	ldr	r1, [pc, #56]	; (800e140 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800e108:	480e      	ldr	r0, [pc, #56]	; (800e144 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800e10a:	f00e fc19 	bl	801c940 <CRC_Lock>
 800e10e:	4e0e      	ldr	r6, [pc, #56]	; (800e148 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800e110:	4b0e      	ldr	r3, [pc, #56]	; (800e14c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800e112:	b158      	cbz	r0, 800e12c <_ZN8touchgfx11ApplicationC1Ev+0x58>
 800e114:	801d      	strh	r5, [r3, #0]
 800e116:	2300      	movs	r3, #0
 800e118:	4a0d      	ldr	r2, [pc, #52]	; (800e150 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800e11a:	4620      	mov	r0, r4
 800e11c:	6013      	str	r3, [r2, #0]
 800e11e:	4a0d      	ldr	r2, [pc, #52]	; (800e154 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800e120:	6033      	str	r3, [r6, #0]
 800e122:	6013      	str	r3, [r2, #0]
 800e124:	f7ff ffba 	bl	800e09c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800e128:	4620      	mov	r0, r4
 800e12a:	bd70      	pop	{r4, r5, r6, pc}
 800e12c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e130:	2002      	movs	r0, #2
 800e132:	801a      	strh	r2, [r3, #0]
 800e134:	6030      	str	r0, [r6, #0]
 800e136:	f001 fa1d 	bl	800f574 <_ZN8touchgfx6Screen4drawEv>
 800e13a:	e7ec      	b.n	800e116 <_ZN8touchgfx11ApplicationC1Ev+0x42>
 800e13c:	0801ef3c 	.word	0x0801ef3c
 800e140:	b5e8b5cd 	.word	0xb5e8b5cd
 800e144:	f407a5c2 	.word	0xf407a5c2
 800e148:	2400b09c 	.word	0x2400b09c
 800e14c:	24000050 	.word	0x24000050
 800e150:	2400b0ac 	.word	0x2400b0ac
 800e154:	2400b0a0 	.word	0x2400b0a0

0800e158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800e158:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800e15c:	3b01      	subs	r3, #1
 800e15e:	b29b      	uxth	r3, r3
 800e160:	428b      	cmp	r3, r1
 800e162:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800e166:	b510      	push	{r4, lr}
 800e168:	d908      	bls.n	800e17c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800e16a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800e16e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800e172:	681a      	ldr	r2, [r3, #0]
 800e174:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800e178:	685a      	ldr	r2, [r3, #4]
 800e17a:	6062      	str	r2, [r4, #4]
 800e17c:	bd10      	pop	{r4, pc}
	...

0800e180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800e180:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e184:	b08f      	sub	sp, #60	; 0x3c
 800e186:	4b94      	ldr	r3, [pc, #592]	; (800e3d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 800e188:	4683      	mov	fp, r0
 800e18a:	ac0a      	add	r4, sp, #40	; 0x28
 800e18c:	e884 0006 	stmia.w	r4, {r1, r2}
 800e190:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e194:	4620      	mov	r0, r4
 800e196:	4b91      	ldr	r3, [pc, #580]	; (800e3dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 800e198:	f9b3 1000 	ldrsh.w	r1, [r3]
 800e19c:	f7ff febb 	bl	800df16 <_ZN8touchgfx4Rect10restrictToEss>
 800e1a0:	4620      	mov	r0, r4
 800e1a2:	f7fc fdd8 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e1a6:	2800      	cmp	r0, #0
 800e1a8:	d16a      	bne.n	800e280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e1aa:	9403      	str	r4, [sp, #12]
 800e1ac:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800e1b0:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e1b4:	2400      	movs	r4, #0
 800e1b6:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800e1ba:	9301      	str	r3, [sp, #4]
 800e1bc:	36a0      	adds	r6, #160	; 0xa0
 800e1be:	42a5      	cmp	r5, r4
 800e1c0:	d00d      	beq.n	800e1de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 800e1c2:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800e1c6:	9803      	ldr	r0, [sp, #12]
 800e1c8:	f7ff fef6 	bl	800dfb8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e1cc:	b128      	cbz	r0, 800e1da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800e1ce:	1e69      	subs	r1, r5, #1
 800e1d0:	9801      	ldr	r0, [sp, #4]
 800e1d2:	1b09      	subs	r1, r1, r4
 800e1d4:	b289      	uxth	r1, r1
 800e1d6:	f7ff ffbf 	bl	800e158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e1da:	3401      	adds	r4, #1
 800e1dc:	e7ef      	b.n	800e1be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 800e1de:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800e1e2:	1e7b      	subs	r3, r7, #1
 800e1e4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800e1e8:	9704      	str	r7, [sp, #16]
 800e1ea:	9302      	str	r3, [sp, #8]
 800e1ec:	2400      	movs	r4, #0
 800e1ee:	4655      	mov	r5, sl
 800e1f0:	9705      	str	r7, [sp, #20]
 800e1f2:	4626      	mov	r6, r4
 800e1f4:	9b05      	ldr	r3, [sp, #20]
 800e1f6:	2b00      	cmp	r3, #0
 800e1f8:	d078      	beq.n	800e2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 800e1fa:	9903      	ldr	r1, [sp, #12]
 800e1fc:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e200:	f7ff fe67 	bl	800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e204:	b360      	cbz	r0, 800e260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e206:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 800e20a:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800e20e:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 800e212:	45e6      	cmp	lr, ip
 800e214:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800e218:	db35      	blt.n	800e286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e21a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800e21e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e222:	4472      	add	r2, lr
 800e224:	4463      	add	r3, ip
 800e226:	b212      	sxth	r2, r2
 800e228:	b21b      	sxth	r3, r3
 800e22a:	429a      	cmp	r2, r3
 800e22c:	dc2b      	bgt.n	800e286 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 800e22e:	fa1f f288 	uxth.w	r2, r8
 800e232:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e236:	45c1      	cmp	r9, r8
 800e238:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800e23c:	4413      	add	r3, r2
 800e23e:	fa1f fc89 	uxth.w	ip, r9
 800e242:	b29b      	uxth	r3, r3
 800e244:	fa0f fe83 	sxth.w	lr, r3
 800e248:	db0f      	blt.n	800e26a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800e24a:	eba3 030c 	sub.w	r3, r3, ip
 800e24e:	1ac9      	subs	r1, r1, r3
 800e250:	b209      	sxth	r1, r1
 800e252:	2900      	cmp	r1, #0
 800e254:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800e258:	dd12      	ble.n	800e280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e25a:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 800e25e:	4604      	mov	r4, r0
 800e260:	9b05      	ldr	r3, [sp, #20]
 800e262:	3d08      	subs	r5, #8
 800e264:	3b01      	subs	r3, #1
 800e266:	9305      	str	r3, [sp, #20]
 800e268:	e7c4      	b.n	800e1f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 800e26a:	4461      	add	r1, ip
 800e26c:	b209      	sxth	r1, r1
 800e26e:	4571      	cmp	r1, lr
 800e270:	dc3a      	bgt.n	800e2e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e272:	eba2 020c 	sub.w	r2, r2, ip
 800e276:	b212      	sxth	r2, r2
 800e278:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800e27c:	2a00      	cmp	r2, #0
 800e27e:	dcee      	bgt.n	800e25e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e280:	b00f      	add	sp, #60	; 0x3c
 800e282:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e286:	45c1      	cmp	r9, r8
 800e288:	db2e      	blt.n	800e2e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e28a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800e28e:	4499      	add	r9, r3
 800e290:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800e294:	4498      	add	r8, r3
 800e296:	fa0f f989 	sxth.w	r9, r9
 800e29a:	fa0f f888 	sxth.w	r8, r8
 800e29e:	45c1      	cmp	r9, r8
 800e2a0:	dc22      	bgt.n	800e2e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e2a2:	fa1f f28c 	uxth.w	r2, ip
 800e2a6:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800e2aa:	45e6      	cmp	lr, ip
 800e2ac:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800e2b0:	4413      	add	r3, r2
 800e2b2:	fa1f f88e 	uxth.w	r8, lr
 800e2b6:	b29b      	uxth	r3, r3
 800e2b8:	fa0f f983 	sxth.w	r9, r3
 800e2bc:	db0a      	blt.n	800e2d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 800e2be:	eba3 0308 	sub.w	r3, r3, r8
 800e2c2:	1ac9      	subs	r1, r1, r3
 800e2c4:	b209      	sxth	r1, r1
 800e2c6:	2900      	cmp	r1, #0
 800e2c8:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 800e2cc:	ddd8      	ble.n	800e280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e2ce:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 800e2d2:	e7c4      	b.n	800e25e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 800e2d4:	4441      	add	r1, r8
 800e2d6:	b209      	sxth	r1, r1
 800e2d8:	4549      	cmp	r1, r9
 800e2da:	dc05      	bgt.n	800e2e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800e2dc:	eba2 0208 	sub.w	r2, r2, r8
 800e2e0:	b212      	sxth	r2, r2
 800e2e2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e2e6:	e7c9      	b.n	800e27c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 800e2e8:	4606      	mov	r6, r0
 800e2ea:	e7b9      	b.n	800e260 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800e2ec:	2c00      	cmp	r4, #0
 800e2ee:	f47f af7d 	bne.w	800e1ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 800e2f2:	2e00      	cmp	r6, #0
 800e2f4:	f000 81e1 	beq.w	800e6ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e2f8:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 800e2fc:	4655      	mov	r5, sl
 800e2fe:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 800e302:	b2b9      	uxth	r1, r7
 800e304:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 800e308:	b2b3      	uxth	r3, r6
 800e30a:	9105      	str	r1, [sp, #20]
 800e30c:	9805      	ldr	r0, [sp, #20]
 800e30e:	441a      	add	r2, r3
 800e310:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 800e314:	b292      	uxth	r2, r2
 800e316:	4401      	add	r1, r0
 800e318:	fa0f f882 	sxth.w	r8, r2
 800e31c:	b289      	uxth	r1, r1
 800e31e:	9106      	str	r1, [sp, #24]
 800e320:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 800e324:	e9cd 2307 	strd	r2, r3, [sp, #28]
 800e328:	9b04      	ldr	r3, [sp, #16]
 800e32a:	2b00      	cmp	r3, #0
 800e32c:	d058      	beq.n	800e3e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 800e32e:	9903      	ldr	r1, [sp, #12]
 800e330:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800e334:	f7ff fdcd 	bl	800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e338:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 800e33c:	b1d8      	cbz	r0, 800e376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e33e:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800e342:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800e346:	4576      	cmp	r6, lr
 800e348:	dc26      	bgt.n	800e398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800e34a:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800e34e:	44f4      	add	ip, lr
 800e350:	fa0f fc8c 	sxth.w	ip, ip
 800e354:	45e0      	cmp	r8, ip
 800e356:	db1f      	blt.n	800e398 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 800e358:	428f      	cmp	r7, r1
 800e35a:	fa1f fc81 	uxth.w	ip, r1
 800e35e:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800e362:	dc0f      	bgt.n	800e384 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 800e364:	9806      	ldr	r0, [sp, #24]
 800e366:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800e36a:	eba0 0c0c 	sub.w	ip, r0, ip
 800e36e:	eba1 010c 	sub.w	r1, r1, ip
 800e372:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800e376:	4620      	mov	r0, r4
 800e378:	9904      	ldr	r1, [sp, #16]
 800e37a:	3d08      	subs	r5, #8
 800e37c:	4604      	mov	r4, r0
 800e37e:	3901      	subs	r1, #1
 800e380:	9104      	str	r1, [sp, #16]
 800e382:	e7cf      	b.n	800e324 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 800e384:	4461      	add	r1, ip
 800e386:	b209      	sxth	r1, r1
 800e388:	4549      	cmp	r1, r9
 800e38a:	dcf5      	bgt.n	800e378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e38c:	9905      	ldr	r1, [sp, #20]
 800e38e:	eba1 0c0c 	sub.w	ip, r1, ip
 800e392:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800e396:	e7ee      	b.n	800e376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e398:	428f      	cmp	r7, r1
 800e39a:	dced      	bgt.n	800e378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e39c:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800e3a0:	4461      	add	r1, ip
 800e3a2:	b209      	sxth	r1, r1
 800e3a4:	4589      	cmp	r9, r1
 800e3a6:	dbe7      	blt.n	800e378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e3a8:	4576      	cmp	r6, lr
 800e3aa:	fa1f fc8e 	uxth.w	ip, lr
 800e3ae:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800e3b2:	dc08      	bgt.n	800e3c6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800e3b4:	eba2 0c0c 	sub.w	ip, r2, ip
 800e3b8:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800e3bc:	eba1 010c 	sub.w	r1, r1, ip
 800e3c0:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800e3c4:	e7d7      	b.n	800e376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e3c6:	4461      	add	r1, ip
 800e3c8:	b209      	sxth	r1, r1
 800e3ca:	4588      	cmp	r8, r1
 800e3cc:	dbd4      	blt.n	800e378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 800e3ce:	eba3 0c0c 	sub.w	ip, r3, ip
 800e3d2:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800e3d6:	e7ce      	b.n	800e376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 800e3d8:	2400b056 	.word	0x2400b056
 800e3dc:	2400b054 	.word	0x2400b054
 800e3e0:	2c00      	cmp	r4, #0
 800e3e2:	f000 816a 	beq.w	800e6ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e3e6:	9b02      	ldr	r3, [sp, #8]
 800e3e8:	3301      	adds	r3, #1
 800e3ea:	f000 8166 	beq.w	800e6ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 800e3ee:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800e3f2:	9803      	ldr	r0, [sp, #12]
 800e3f4:	4621      	mov	r1, r4
 800e3f6:	f7ff fddf 	bl	800dfb8 <_ZNK8touchgfx4Rect8includesERKS0_>
 800e3fa:	b120      	cbz	r0, 800e406 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 800e3fc:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 800e400:	9801      	ldr	r0, [sp, #4]
 800e402:	f7ff fea9 	bl	800e158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e406:	9903      	ldr	r1, [sp, #12]
 800e408:	4620      	mov	r0, r4
 800e40a:	f7ff fd62 	bl	800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e40e:	2800      	cmp	r0, #0
 800e410:	f000 809b 	beq.w	800e54a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800e414:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 800e418:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 800e41c:	b281      	uxth	r1, r0
 800e41e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 800e422:	9309      	str	r3, [sp, #36]	; 0x24
 800e424:	eb01 0c03 	add.w	ip, r1, r3
 800e428:	b2ab      	uxth	r3, r5
 800e42a:	4285      	cmp	r5, r0
 800e42c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 800e430:	fa1f f98c 	uxth.w	r9, ip
 800e434:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 800e438:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 800e43c:	eb03 040c 	add.w	r4, r3, ip
 800e440:	b2a4      	uxth	r4, r4
 800e442:	9405      	str	r4, [sp, #20]
 800e444:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 800e448:	9404      	str	r4, [sp, #16]
 800e44a:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 800e44e:	f340 809a 	ble.w	800e586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 800e452:	1a5b      	subs	r3, r3, r1
 800e454:	4596      	cmp	lr, r2
 800e456:	fa0f f589 	sxth.w	r5, r9
 800e45a:	b29b      	uxth	r3, r3
 800e45c:	b21e      	sxth	r6, r3
 800e45e:	dd2e      	ble.n	800e4be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 800e460:	9f02      	ldr	r7, [sp, #8]
 800e462:	fa1f fe8e 	uxth.w	lr, lr
 800e466:	b292      	uxth	r2, r2
 800e468:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800e46c:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 800e470:	9f04      	ldr	r7, [sp, #16]
 800e472:	ebae 0102 	sub.w	r1, lr, r2
 800e476:	4486      	add	lr, r0
 800e478:	1b7f      	subs	r7, r7, r5
 800e47a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 800e47e:	b289      	uxth	r1, r1
 800e480:	442a      	add	r2, r5
 800e482:	fa0f fe8e 	sxth.w	lr, lr
 800e486:	b20c      	sxth	r4, r1
 800e488:	b212      	sxth	r2, r2
 800e48a:	4367      	muls	r7, r4
 800e48c:	ebae 0202 	sub.w	r2, lr, r2
 800e490:	4372      	muls	r2, r6
 800e492:	4297      	cmp	r7, r2
 800e494:	db09      	blt.n	800e4aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 800e496:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 800e49a:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800e49e:	449c      	add	ip, r3
 800e4a0:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800e4a4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800e4a8:	e680      	b.n	800e1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e4aa:	4401      	add	r1, r0
 800e4ac:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800e4b0:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 800e4b4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800e4b8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800e4bc:	e676      	b.n	800e1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e4be:	9f04      	ldr	r7, [sp, #16]
 800e4c0:	42bd      	cmp	r5, r7
 800e4c2:	da27      	bge.n	800e514 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 800e4c4:	9902      	ldr	r1, [sp, #8]
 800e4c6:	1b7f      	subs	r7, r7, r5
 800e4c8:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 800e4cc:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 800e4d0:	eb04 010e 	add.w	r1, r4, lr
 800e4d4:	fa1f f881 	uxth.w	r8, r1
 800e4d8:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 800e4dc:	4411      	add	r1, r2
 800e4de:	fa0f f988 	sxth.w	r9, r8
 800e4e2:	eba2 020e 	sub.w	r2, r2, lr
 800e4e6:	eba1 0108 	sub.w	r1, r1, r8
 800e4ea:	4372      	muls	r2, r6
 800e4ec:	b289      	uxth	r1, r1
 800e4ee:	fa0f f881 	sxth.w	r8, r1
 800e4f2:	fb08 f707 	mul.w	r7, r8, r7
 800e4f6:	42ba      	cmp	r2, r7
 800e4f8:	dc06      	bgt.n	800e508 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 800e4fa:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 800e4fe:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 800e502:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 800e506:	e7ca      	b.n	800e49e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 800e508:	4421      	add	r1, r4
 800e50a:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 800e50e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800e512:	e64b      	b.n	800e1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e514:	9d05      	ldr	r5, [sp, #20]
 800e516:	2c06      	cmp	r4, #6
 800e518:	eba9 0505 	sub.w	r5, r9, r5
 800e51c:	b2ad      	uxth	r5, r5
 800e51e:	fa0f fe85 	sxth.w	lr, r5
 800e522:	d818      	bhi.n	800e556 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 800e524:	9b04      	ldr	r3, [sp, #16]
 800e526:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 800e52a:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800e52e:	1c63      	adds	r3, r4, #1
 800e530:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 800e534:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 800e538:	9b01      	ldr	r3, [sp, #4]
 800e53a:	9d01      	ldr	r5, [sp, #4]
 800e53c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e540:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 800e544:	805a      	strh	r2, [r3, #2]
 800e546:	809e      	strh	r6, [r3, #4]
 800e548:	80d9      	strh	r1, [r3, #6]
 800e54a:	9b02      	ldr	r3, [sp, #8]
 800e54c:	f1aa 0a08 	sub.w	sl, sl, #8
 800e550:	3b01      	subs	r3, #1
 800e552:	9302      	str	r3, [sp, #8]
 800e554:	e747      	b.n	800e3e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 800e556:	9a02      	ldr	r2, [sp, #8]
 800e558:	45b6      	cmp	lr, r6
 800e55a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e55e:	db0d      	blt.n	800e57c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 800e560:	449c      	add	ip, r3
 800e562:	445a      	add	r2, fp
 800e564:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 800e568:	fa1f fc8c 	uxth.w	ip, ip
 800e56c:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 800e570:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 800e574:	448c      	add	ip, r1
 800e576:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 800e57a:	e617      	b.n	800e1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e57c:	445a      	add	r2, fp
 800e57e:	44ac      	add	ip, r5
 800e580:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 800e584:	e78e      	b.n	800e4a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 800e586:	fa1f f18e 	uxth.w	r1, lr
 800e58a:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 800e58e:	b293      	uxth	r3, r2
 800e590:	4596      	cmp	lr, r2
 800e592:	eb01 0806 	add.w	r8, r1, r6
 800e596:	9306      	str	r3, [sp, #24]
 800e598:	fa1f f888 	uxth.w	r8, r8
 800e59c:	9f06      	ldr	r7, [sp, #24]
 800e59e:	fa0f f388 	sxth.w	r3, r8
 800e5a2:	9307      	str	r3, [sp, #28]
 800e5a4:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 800e5a8:	443b      	add	r3, r7
 800e5aa:	b29b      	uxth	r3, r3
 800e5ac:	9308      	str	r3, [sp, #32]
 800e5ae:	da25      	bge.n	800e5fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 800e5b0:	9905      	ldr	r1, [sp, #20]
 800e5b2:	eba3 0308 	sub.w	r3, r3, r8
 800e5b6:	eba2 020e 	sub.w	r2, r2, lr
 800e5ba:	1b40      	subs	r0, r0, r5
 800e5bc:	eba9 0401 	sub.w	r4, r9, r1
 800e5c0:	b29b      	uxth	r3, r3
 800e5c2:	b2a4      	uxth	r4, r4
 800e5c4:	b219      	sxth	r1, r3
 800e5c6:	fa0f f984 	sxth.w	r9, r4
 800e5ca:	4348      	muls	r0, r1
 800e5cc:	fb09 f202 	mul.w	r2, r9, r2
 800e5d0:	4282      	cmp	r2, r0
 800e5d2:	9a02      	ldr	r2, [sp, #8]
 800e5d4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800e5d8:	445a      	add	r2, fp
 800e5da:	dc06      	bgt.n	800e5ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 800e5dc:	9b07      	ldr	r3, [sp, #28]
 800e5de:	44a4      	add	ip, r4
 800e5e0:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 800e5e4:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 800e5e8:	e75c      	b.n	800e4a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 800e5ea:	9904      	ldr	r1, [sp, #16]
 800e5ec:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 800e5f0:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 800e5f4:	4433      	add	r3, r6
 800e5f6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e5fa:	e5d7      	b.n	800e1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e5fc:	9f06      	ldr	r7, [sp, #24]
 800e5fe:	9b04      	ldr	r3, [sp, #16]
 800e600:	1bc9      	subs	r1, r1, r7
 800e602:	fa0f f789 	sxth.w	r7, r9
 800e606:	b289      	uxth	r1, r1
 800e608:	429f      	cmp	r7, r3
 800e60a:	fa0f fe81 	sxth.w	lr, r1
 800e60e:	dd22      	ble.n	800e656 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 800e610:	9a05      	ldr	r2, [sp, #20]
 800e612:	1b40      	subs	r0, r0, r5
 800e614:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800e618:	eba9 0202 	sub.w	r2, r9, r2
 800e61c:	9d07      	ldr	r5, [sp, #28]
 800e61e:	fb0e f000 	mul.w	r0, lr, r0
 800e622:	b292      	uxth	r2, r2
 800e624:	eba5 0a03 	sub.w	sl, r5, r3
 800e628:	9b02      	ldr	r3, [sp, #8]
 800e62a:	b214      	sxth	r4, r2
 800e62c:	00db      	lsls	r3, r3, #3
 800e62e:	fb04 fa0a 	mul.w	sl, r4, sl
 800e632:	445b      	add	r3, fp
 800e634:	4550      	cmp	r0, sl
 800e636:	db03      	blt.n	800e640 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 800e638:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 800e63c:	4494      	add	ip, r2
 800e63e:	e731      	b.n	800e4a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 800e640:	9a04      	ldr	r2, [sp, #16]
 800e642:	4431      	add	r1, r6
 800e644:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 800e648:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800e64c:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800e650:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 800e654:	e75b      	b.n	800e50e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 800e656:	9b08      	ldr	r3, [sp, #32]
 800e658:	2c06      	cmp	r4, #6
 800e65a:	eba3 0308 	sub.w	r3, r3, r8
 800e65e:	b29b      	uxth	r3, r3
 800e660:	b21d      	sxth	r5, r3
 800e662:	d813      	bhi.n	800e68c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 800e664:	9b07      	ldr	r3, [sp, #28]
 800e666:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 800e66a:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800e66e:	1c63      	adds	r3, r4, #1
 800e670:	9901      	ldr	r1, [sp, #4]
 800e672:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 800e676:	9b01      	ldr	r3, [sp, #4]
 800e678:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 800e67c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e680:	805a      	strh	r2, [r3, #2]
 800e682:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e684:	f8a3 e006 	strh.w	lr, [r3, #6]
 800e688:	809a      	strh	r2, [r3, #4]
 800e68a:	e75e      	b.n	800e54a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 800e68c:	9802      	ldr	r0, [sp, #8]
 800e68e:	4575      	cmp	r5, lr
 800e690:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800e694:	db0d      	blt.n	800e6b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 800e696:	4431      	add	r1, r6
 800e698:	9b06      	ldr	r3, [sp, #24]
 800e69a:	4458      	add	r0, fp
 800e69c:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e6a0:	b289      	uxth	r1, r1
 800e6a2:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 800e6a6:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 800e6aa:	4419      	add	r1, r3
 800e6ac:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 800e6b0:	e57c      	b.n	800e1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e6b2:	4458      	add	r0, fp
 800e6b4:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 800e6b8:	e79c      	b.n	800e5f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 800e6ba:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 800e6be:	2e07      	cmp	r6, #7
 800e6c0:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 800e6c4:	d812      	bhi.n	800e6ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 800e6c6:	1c75      	adds	r5, r6, #1
 800e6c8:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 800e6cc:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 800e6d0:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 800e6d4:	9d01      	ldr	r5, [sp, #4]
 800e6d6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 800e6da:	442c      	add	r4, r5
 800e6dc:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 800e6e0:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 800e6e4:	8061      	strh	r1, [r4, #2]
 800e6e6:	80a2      	strh	r2, [r4, #4]
 800e6e8:	80e3      	strh	r3, [r4, #6]
 800e6ea:	e5c9      	b.n	800e280 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800e6ec:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800e6f0:	3e01      	subs	r6, #1
 800e6f2:	445c      	add	r4, fp
 800e6f4:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800e6f8:	f04f 37ff 	mov.w	r7, #4294967295
 800e6fc:	2500      	movs	r5, #0
 800e6fe:	9305      	str	r3, [sp, #20]
 800e700:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 800e704:	1e72      	subs	r2, r6, #1
 800e706:	9302      	str	r3, [sp, #8]
 800e708:	4691      	mov	r9, r2
 800e70a:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 800e70e:	9304      	str	r3, [sp, #16]
 800e710:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 800e714:	f1b9 3fff 	cmp.w	r9, #4294967295
 800e718:	6818      	ldr	r0, [r3, #0]
 800e71a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800e71e:	9207      	str	r2, [sp, #28]
 800e720:	bf16      	itet	ne
 800e722:	9905      	ldrne	r1, [sp, #20]
 800e724:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 800e728:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 800e72c:	9306      	str	r3, [sp, #24]
 800e72e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800e732:	f8be 8004 	ldrh.w	r8, [lr, #4]
 800e736:	fb18 f801 	smulbb	r8, r8, r1
 800e73a:	6859      	ldr	r1, [r3, #4]
 800e73c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800e740:	4671      	mov	r1, lr
 800e742:	a80c      	add	r0, sp, #48	; 0x30
 800e744:	f7ff fc5e 	bl	800e004 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e748:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 800e74c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 800e750:	f04f 0c08 	mov.w	ip, #8
 800e754:	9b04      	ldr	r3, [sp, #16]
 800e756:	9a02      	ldr	r2, [sp, #8]
 800e758:	fb10 f001 	smulbb	r0, r0, r1
 800e75c:	fb02 8803 	mla	r8, r2, r3, r8
 800e760:	eba0 0108 	sub.w	r1, r0, r8
 800e764:	fb90 f0fc 	sdiv	r0, r0, ip
 800e768:	4288      	cmp	r0, r1
 800e76a:	dc20      	bgt.n	800e7ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62e>
 800e76c:	4551      	cmp	r1, sl
 800e76e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 800e772:	da03      	bge.n	800e77c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 800e774:	b1d9      	cbz	r1, 800e7ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62e>
 800e776:	468a      	mov	sl, r1
 800e778:	464f      	mov	r7, r9
 800e77a:	4635      	mov	r5, r6
 800e77c:	f109 39ff 	add.w	r9, r9, #4294967295
 800e780:	f119 0f02 	cmn.w	r9, #2
 800e784:	d1c6      	bne.n	800e714 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 800e786:	4616      	mov	r6, r2
 800e788:	3201      	adds	r2, #1
 800e78a:	f1a4 0408 	sub.w	r4, r4, #8
 800e78e:	d1b7      	bne.n	800e700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 800e790:	9b01      	ldr	r3, [sp, #4]
 800e792:	b2ac      	uxth	r4, r5
 800e794:	00ed      	lsls	r5, r5, #3
 800e796:	1958      	adds	r0, r3, r5
 800e798:	1c7b      	adds	r3, r7, #1
 800e79a:	d10b      	bne.n	800e7b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
 800e79c:	4601      	mov	r1, r0
 800e79e:	9803      	ldr	r0, [sp, #12]
 800e7a0:	f7ff fc30 	bl	800e004 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e7a4:	4621      	mov	r1, r4
 800e7a6:	9801      	ldr	r0, [sp, #4]
 800e7a8:	f7ff fcd6 	bl	800e158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800e7ac:	e4fe      	b.n	800e1ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800e7ae:	464f      	mov	r7, r9
 800e7b0:	4635      	mov	r5, r6
 800e7b2:	e7ed      	b.n	800e790 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 800e7b4:	9b01      	ldr	r3, [sp, #4]
 800e7b6:	00ff      	lsls	r7, r7, #3
 800e7b8:	445d      	add	r5, fp
 800e7ba:	19d9      	adds	r1, r3, r7
 800e7bc:	445f      	add	r7, fp
 800e7be:	f7ff fc21 	bl	800e004 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800e7c2:	9b03      	ldr	r3, [sp, #12]
 800e7c4:	cb03      	ldmia	r3!, {r0, r1}
 800e7c6:	9b03      	ldr	r3, [sp, #12]
 800e7c8:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 800e7cc:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 800e7d0:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 800e7d4:	6869      	ldr	r1, [r5, #4]
 800e7d6:	c303      	stmia	r3!, {r0, r1}
 800e7d8:	e7e4      	b.n	800e7a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 800e7da:	bf00      	nop

0800e7dc <_ZN8touchgfx11Application10invalidateEv>:
 800e7dc:	4b09      	ldr	r3, [pc, #36]	; (800e804 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800e7de:	b082      	sub	sp, #8
 800e7e0:	2100      	movs	r1, #0
 800e7e2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e7e6:	4b08      	ldr	r3, [pc, #32]	; (800e808 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800e7e8:	9100      	str	r1, [sp, #0]
 800e7ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e7ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 800e7f2:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e7f6:	ab02      	add	r3, sp, #8
 800e7f8:	e913 0006 	ldmdb	r3, {r1, r2}
 800e7fc:	b002      	add	sp, #8
 800e7fe:	f7ff bcbf 	b.w	800e180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e802:	bf00      	nop
 800e804:	2400b054 	.word	0x2400b054
 800e808:	2400b056 	.word	0x2400b056

0800e80c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 800e80c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e810:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800e814:	b09b      	sub	sp, #108	; 0x6c
 800e816:	4604      	mov	r4, r0
 800e818:	4630      	mov	r0, r6
 800e81a:	f7fc fa9c 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e81e:	4605      	mov	r5, r0
 800e820:	b940      	cbnz	r0, 800e834 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 800e822:	4620      	mov	r0, r4
 800e824:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e828:	f7ff fcaa 	bl	800e180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e82c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800e830:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800e834:	4bc8      	ldr	r3, [pc, #800]	; (800eb58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 800e836:	681b      	ldr	r3, [r3, #0]
 800e838:	2b00      	cmp	r3, #0
 800e83a:	d03e      	beq.n	800e8ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800e83c:	4dc7      	ldr	r5, [pc, #796]	; (800eb5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 800e83e:	4628      	mov	r0, r5
 800e840:	f7fc fa89 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e844:	4606      	mov	r6, r0
 800e846:	2800      	cmp	r0, #0
 800e848:	d137      	bne.n	800e8ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 800e84a:	4628      	mov	r0, r5
 800e84c:	f7ff fa02 	bl	800dc54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800e850:	6829      	ldr	r1, [r5, #0]
 800e852:	686a      	ldr	r2, [r5, #4]
 800e854:	4620      	mov	r0, r4
 800e856:	f7ff fc93 	bl	800e180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e85a:	802e      	strh	r6, [r5, #0]
 800e85c:	806e      	strh	r6, [r5, #2]
 800e85e:	80ae      	strh	r6, [r5, #4]
 800e860:	80ee      	strh	r6, [r5, #6]
 800e862:	ae09      	add	r6, sp, #36	; 0x24
 800e864:	4630      	mov	r0, r6
 800e866:	f7ff fc24 	bl	800e0b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800e86a:	4abd      	ldr	r2, [pc, #756]	; (800eb60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 800e86c:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 800e870:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 800e874:	8815      	ldrh	r5, [r2, #0]
 800e876:	9202      	str	r2, [sp, #8]
 800e878:	462b      	mov	r3, r5
 800e87a:	429f      	cmp	r7, r3
 800e87c:	d924      	bls.n	800e8c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 800e87e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 800e882:	2907      	cmp	r1, #7
 800e884:	d816      	bhi.n	800e8b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 800e886:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 800e88a:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 800e88e:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 800e892:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 800e896:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 800e89a:	1c4a      	adds	r2, r1, #1
 800e89c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 800e8a0:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 800e8a4:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 800e8a8:	f8a2 9002 	strh.w	r9, [r2, #2]
 800e8ac:	f8a2 e004 	strh.w	lr, [r2, #4]
 800e8b0:	f8a2 c006 	strh.w	ip, [r2, #6]
 800e8b4:	3301      	adds	r3, #1
 800e8b6:	b29b      	uxth	r3, r3
 800e8b8:	e7df      	b.n	800e87a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 800e8ba:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e8be:	2b00      	cmp	r3, #0
 800e8c0:	d1cf      	bne.n	800e862 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 800e8c2:	b01b      	add	sp, #108	; 0x6c
 800e8c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e8c8:	462f      	mov	r7, r5
 800e8ca:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800e8ce:	42bb      	cmp	r3, r7
 800e8d0:	d90b      	bls.n	800e8ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 800e8d2:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 800e8d6:	3701      	adds	r7, #1
 800e8d8:	4620      	mov	r0, r4
 800e8da:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800e8de:	b2bf      	uxth	r7, r7
 800e8e0:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800e8e4:	f7ff fc4c 	bl	800e180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800e8e8:	e7ef      	b.n	800e8ca <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 800e8ea:	4a9e      	ldr	r2, [pc, #632]	; (800eb64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 800e8ec:	6813      	ldr	r3, [r2, #0]
 800e8ee:	4690      	mov	r8, r2
 800e8f0:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800e8f4:	2b01      	cmp	r3, #1
 800e8f6:	f040 80e4 	bne.w	800eac2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 800e8fa:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800e8fe:	4629      	mov	r1, r5
 800e900:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 800e904:	2500      	movs	r5, #0
 800e906:	33aa      	adds	r3, #170	; 0xaa
 800e908:	428f      	cmp	r7, r1
 800e90a:	f103 0308 	add.w	r3, r3, #8
 800e90e:	dd0a      	ble.n	800e926 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 800e910:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800e914:	3101      	adds	r1, #1
 800e916:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 800e91a:	4402      	add	r2, r0
 800e91c:	b212      	sxth	r2, r2
 800e91e:	4295      	cmp	r5, r2
 800e920:	bfb8      	it	lt
 800e922:	4615      	movlt	r5, r2
 800e924:	e7f0      	b.n	800e908 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 800e926:	4b90      	ldr	r3, [pc, #576]	; (800eb68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 800e928:	f8df b238 	ldr.w	fp, [pc, #568]	; 800eb64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>
 800e92c:	881b      	ldrh	r3, [r3, #0]
 800e92e:	46d8      	mov	r8, fp
 800e930:	2b0f      	cmp	r3, #15
 800e932:	bf8c      	ite	hi
 800e934:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 800e938:	f04f 0a01 	movls.w	sl, #1
 800e93c:	2300      	movs	r3, #0
 800e93e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800e942:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 800e946:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 800e94a:	4438      	add	r0, r7
 800e94c:	b207      	sxth	r7, r0
 800e94e:	f8db 0000 	ldr.w	r0, [fp]
 800e952:	42bd      	cmp	r5, r7
 800e954:	6803      	ldr	r3, [r0, #0]
 800e956:	f340 8084 	ble.w	800ea62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 800e95a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800e95e:	4798      	blx	r3
 800e960:	eb07 030a 	add.w	r3, r7, sl
 800e964:	4298      	cmp	r0, r3
 800e966:	da07      	bge.n	800e978 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 800e968:	4285      	cmp	r5, r0
 800e96a:	dd05      	ble.n	800e978 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 800e96c:	4287      	cmp	r7, r0
 800e96e:	dd6d      	ble.n	800ea4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800e970:	2f00      	cmp	r7, #0
 800e972:	dd6b      	ble.n	800ea4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 800e974:	4628      	mov	r0, r5
 800e976:	e004      	b.n	800e982 <_ZN8touchgfx11Application15drawCachedAreasEv+0x176>
 800e978:	4287      	cmp	r7, r0
 800e97a:	dcfb      	bgt.n	800e974 <_ZN8touchgfx11Application15drawCachedAreasEv+0x168>
 800e97c:	42a8      	cmp	r0, r5
 800e97e:	bfa8      	it	ge
 800e980:	4628      	movge	r0, r5
 800e982:	4b7a      	ldr	r3, [pc, #488]	; (800eb6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 800e984:	1bc0      	subs	r0, r0, r7
 800e986:	2200      	movs	r2, #0
 800e988:	f8ad 7016 	strh.w	r7, [sp, #22]
 800e98c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e990:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e994:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e998:	9b02      	ldr	r3, [sp, #8]
 800e99a:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e99e:	881f      	ldrh	r7, [r3, #0]
 800e9a0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800e9a4:	42bb      	cmp	r3, r7
 800e9a6:	d9cc      	bls.n	800e942 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800e9a8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 800e9ac:	ab07      	add	r3, sp, #28
 800e9ae:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800e9b2:	6851      	ldr	r1, [r2, #4]
 800e9b4:	c303      	stmia	r3!, {r0, r1}
 800e9b6:	a905      	add	r1, sp, #20
 800e9b8:	a807      	add	r0, sp, #28
 800e9ba:	f7ff fa8a 	bl	800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800e9be:	2800      	cmp	r0, #0
 800e9c0:	d04c      	beq.n	800ea5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 800e9c2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 800e9c6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 800e9ca:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 800e9ce:	4686      	mov	lr, r0
 800e9d0:	4290      	cmp	r0, r2
 800e9d2:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 800e9d6:	4448      	add	r0, r9
 800e9d8:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 800e9dc:	bfb8      	it	lt
 800e9de:	4696      	movlt	lr, r2
 800e9e0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e9e4:	444a      	add	r2, r9
 800e9e6:	b280      	uxth	r0, r0
 800e9e8:	4299      	cmp	r1, r3
 800e9ea:	468c      	mov	ip, r1
 800e9ec:	b292      	uxth	r2, r2
 800e9ee:	9303      	str	r3, [sp, #12]
 800e9f0:	bfb8      	it	lt
 800e9f2:	469c      	movlt	ip, r3
 800e9f4:	b203      	sxth	r3, r0
 800e9f6:	fa0f f982 	sxth.w	r9, r2
 800e9fa:	f8ad e01c 	strh.w	lr, [sp, #28]
 800e9fe:	f8ad c01e 	strh.w	ip, [sp, #30]
 800ea02:	454b      	cmp	r3, r9
 800ea04:	bfb8      	it	lt
 800ea06:	4602      	movlt	r2, r0
 800ea08:	9b03      	ldr	r3, [sp, #12]
 800ea0a:	eba2 020e 	sub.w	r2, r2, lr
 800ea0e:	f8ad 2020 	strh.w	r2, [sp, #32]
 800ea12:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 800ea16:	4411      	add	r1, r2
 800ea18:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800ea1c:	4413      	add	r3, r2
 800ea1e:	b289      	uxth	r1, r1
 800ea20:	b29b      	uxth	r3, r3
 800ea22:	b208      	sxth	r0, r1
 800ea24:	b21a      	sxth	r2, r3
 800ea26:	4290      	cmp	r0, r2
 800ea28:	bfb8      	it	lt
 800ea2a:	460b      	movlt	r3, r1
 800ea2c:	eba3 030c 	sub.w	r3, r3, ip
 800ea30:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ea34:	a807      	add	r0, sp, #28
 800ea36:	f7fc f98e 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ea3a:	b920      	cbnz	r0, 800ea46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 800ea3c:	6823      	ldr	r3, [r4, #0]
 800ea3e:	a907      	add	r1, sp, #28
 800ea40:	4620      	mov	r0, r4
 800ea42:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ea44:	4798      	blx	r3
 800ea46:	3701      	adds	r7, #1
 800ea48:	b2bf      	uxth	r7, r7
 800ea4a:	e7a9      	b.n	800e9a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 800ea4c:	f8d8 0000 	ldr.w	r0, [r8]
 800ea50:	2101      	movs	r1, #1
 800ea52:	6803      	ldr	r3, [r0, #0]
 800ea54:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800ea58:	4798      	blx	r3
 800ea5a:	e772      	b.n	800e942 <_ZN8touchgfx11Application15drawCachedAreasEv+0x136>
 800ea5c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800ea60:	e7e8      	b.n	800ea34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 800ea62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ea64:	4798      	blx	r3
 800ea66:	4b42      	ldr	r3, [pc, #264]	; (800eb70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 800ea68:	781b      	ldrb	r3, [r3, #0]
 800ea6a:	2b00      	cmp	r3, #0
 800ea6c:	f43f af29 	beq.w	800e8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 800ea70:	2300      	movs	r3, #0
 800ea72:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 800ea76:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800ea7a:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800ea7e:	9b02      	ldr	r3, [sp, #8]
 800ea80:	881b      	ldrh	r3, [r3, #0]
 800ea82:	429d      	cmp	r5, r3
 800ea84:	f67f af1d 	bls.w	800e8c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 800ea88:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 800ea8c:	2907      	cmp	r1, #7
 800ea8e:	d815      	bhi.n	800eabc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 800ea90:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 800ea94:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 800ea98:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 800ea9c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 800eaa0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 800eaa4:	1c4a      	adds	r2, r1, #1
 800eaa6:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 800eaaa:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 800eaae:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 800eab2:	f8a2 e002 	strh.w	lr, [r2, #2]
 800eab6:	f8a2 c004 	strh.w	ip, [r2, #4]
 800eaba:	80d7      	strh	r7, [r2, #6]
 800eabc:	3301      	adds	r3, #1
 800eabe:	b29b      	uxth	r3, r3
 800eac0:	e7df      	b.n	800ea82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x276>
 800eac2:	2b02      	cmp	r3, #2
 800eac4:	f040 8135 	bne.w	800ed32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x526>
 800eac8:	4b2a      	ldr	r3, [pc, #168]	; (800eb74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 800eaca:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800eace:	781b      	ldrb	r3, [r3, #0]
 800ead0:	2b01      	cmp	r3, #1
 800ead2:	f000 809c 	beq.w	800ec0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800ead6:	9b02      	ldr	r3, [sp, #8]
 800ead8:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 800eadc:	f8b3 b000 	ldrh.w	fp, [r3]
 800eae0:	f10b 0b01 	add.w	fp, fp, #1
 800eae4:	fa1f fb8b 	uxth.w	fp, fp
 800eae8:	2a00      	cmp	r2, #0
 800eaea:	d0bc      	beq.n	800ea66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800eaec:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800eaf0:	4659      	mov	r1, fp
 800eaf2:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800eaf6:	f04f 0800 	mov.w	r8, #0
 800eafa:	441d      	add	r5, r3
 800eafc:	b22d      	sxth	r5, r5
 800eafe:	b28b      	uxth	r3, r1
 800eb00:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 800eb04:	429a      	cmp	r2, r3
 800eb06:	f240 80c0 	bls.w	800ec8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x47e>
 800eb0a:	4427      	add	r7, r4
 800eb0c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 800eb10:	4608      	mov	r0, r1
 800eb12:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 800eb16:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 800eb1a:	4563      	cmp	r3, ip
 800eb1c:	f340 80a2 	ble.w	800ec64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 800eb20:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 800eb24:	4465      	add	r5, ip
 800eb26:	b22d      	sxth	r5, r5
 800eb28:	429d      	cmp	r5, r3
 800eb2a:	bfa8      	it	ge
 800eb2c:	461d      	movge	r5, r3
 800eb2e:	3101      	adds	r1, #1
 800eb30:	4680      	mov	r8, r0
 800eb32:	e7e4      	b.n	800eafe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f2>
 800eb34:	d10b      	bne.n	800eb4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x342>
 800eb36:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800eb3a:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800eb3e:	458c      	cmp	ip, r1
 800eb40:	bfb4      	ite	lt
 800eb42:	469c      	movlt	ip, r3
 800eb44:	46bc      	movge	ip, r7
 800eb46:	4572      	cmp	r2, lr
 800eb48:	bfb8      	it	lt
 800eb4a:	4672      	movlt	r2, lr
 800eb4c:	e087      	b.n	800ec5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x452>
 800eb4e:	428a      	cmp	r2, r1
 800eb50:	46bc      	mov	ip, r7
 800eb52:	bfb8      	it	lt
 800eb54:	460a      	movlt	r2, r1
 800eb56:	e082      	b.n	800ec5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x452>
 800eb58:	2400b098 	.word	0x2400b098
 800eb5c:	2400b0a4 	.word	0x2400b0a4
 800eb60:	24000050 	.word	0x24000050
 800eb64:	2400b060 	.word	0x2400b060
 800eb68:	2400b056 	.word	0x2400b056
 800eb6c:	2400b054 	.word	0x2400b054
 800eb70:	2400b05e 	.word	0x2400b05e
 800eb74:	2400b058 	.word	0x2400b058
 800eb78:	1961      	adds	r1, r4, r5
 800eb7a:	ab07      	add	r3, sp, #28
 800eb7c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800eb80:	6849      	ldr	r1, [r1, #4]
 800eb82:	c303      	stmia	r3!, {r0, r1}
 800eb84:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800eb88:	a807      	add	r0, sp, #28
 800eb8a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800eb8e:	2b13      	cmp	r3, #19
 800eb90:	440b      	add	r3, r1
 800eb92:	bfd8      	it	le
 800eb94:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800eb98:	1a9b      	subs	r3, r3, r2
 800eb9a:	f8ad 201c 	strh.w	r2, [sp, #28]
 800eb9e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800eba2:	f7ff f871 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800eba6:	a807      	add	r0, sp, #28
 800eba8:	f7fc f8d5 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ebac:	bb78      	cbnz	r0, 800ec0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800ebae:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800ebb2:	4425      	add	r5, r4
 800ebb4:	f8d8 0000 	ldr.w	r0, [r8]
 800ebb8:	f1bc 0f14 	cmp.w	ip, #20
 800ebbc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800ebc0:	f8d0 e000 	ldr.w	lr, [r0]
 800ebc4:	bfa8      	it	ge
 800ebc6:	f04f 0c14 	movge.w	ip, #20
 800ebca:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800ebce:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ebd2:	fa1f fc8c 	uxth.w	ip, ip
 800ebd6:	f8cd c000 	str.w	ip, [sp]
 800ebda:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 800ebde:	47d0      	blx	sl
 800ebe0:	4682      	mov	sl, r0
 800ebe2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ebe6:	a807      	add	r0, sp, #28
 800ebe8:	f7ff f834 	bl	800dc54 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800ebec:	6823      	ldr	r3, [r4, #0]
 800ebee:	4620      	mov	r0, r4
 800ebf0:	a907      	add	r1, sp, #28
 800ebf2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ebf4:	4798      	blx	r3
 800ebf6:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800ebfa:	eba0 000a 	sub.w	r0, r0, sl
 800ebfe:	b200      	sxth	r0, r0
 800ec00:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800ec04:	b918      	cbnz	r0, 800ec0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x402>
 800ec06:	b2b9      	uxth	r1, r7
 800ec08:	4648      	mov	r0, r9
 800ec0a:	f7ff faa5 	bl	800e158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ec0e:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800ec12:	f1bb 0f00 	cmp.w	fp, #0
 800ec16:	f43f af26 	beq.w	800ea66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ec1a:	9b02      	ldr	r3, [sp, #8]
 800ec1c:	2700      	movs	r7, #0
 800ec1e:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800ec22:	881b      	ldrh	r3, [r3, #0]
 800ec24:	3301      	adds	r3, #1
 800ec26:	b29b      	uxth	r3, r3
 800ec28:	b299      	uxth	r1, r3
 800ec2a:	00fd      	lsls	r5, r7, #3
 800ec2c:	458b      	cmp	fp, r1
 800ec2e:	d9a3      	bls.n	800eb78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>
 800ec30:	4425      	add	r5, r4
 800ec32:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800ec36:	469c      	mov	ip, r3
 800ec38:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800ec3c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800ec40:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800ec44:	4408      	add	r0, r1
 800ec46:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800ec4a:	4471      	add	r1, lr
 800ec4c:	b200      	sxth	r0, r0
 800ec4e:	b209      	sxth	r1, r1
 800ec50:	4288      	cmp	r0, r1
 800ec52:	f6bf af6f 	bge.w	800eb34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x328>
 800ec56:	4586      	cmp	lr, r0
 800ec58:	4672      	mov	r2, lr
 800ec5a:	bfb8      	it	lt
 800ec5c:	4602      	movlt	r2, r0
 800ec5e:	3301      	adds	r3, #1
 800ec60:	4667      	mov	r7, ip
 800ec62:	e7e1      	b.n	800ec28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x41c>
 800ec64:	d10c      	bne.n	800ec80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x474>
 800ec66:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 800ec6a:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 800ec6e:	4287      	cmp	r7, r0
 800ec70:	bfb4      	ite	lt
 800ec72:	4608      	movlt	r0, r1
 800ec74:	4640      	movge	r0, r8
 800ec76:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 800ec7a:	443b      	add	r3, r7
 800ec7c:	b21b      	sxth	r3, r3
 800ec7e:	e753      	b.n	800eb28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 800ec80:	4565      	cmp	r5, ip
 800ec82:	4640      	mov	r0, r8
 800ec84:	bfa8      	it	ge
 800ec86:	4665      	movge	r5, ip
 800ec88:	e751      	b.n	800eb2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 800ec8a:	eb09 0007 	add.w	r0, r9, r7
 800ec8e:	4427      	add	r7, r4
 800ec90:	9203      	str	r2, [sp, #12]
 800ec92:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 800ec96:	f1ba 0f13 	cmp.w	sl, #19
 800ec9a:	bfde      	ittt	le
 800ec9c:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 800eca0:	4455      	addle	r5, sl
 800eca2:	b22d      	sxthle	r5, r5
 800eca4:	f7fc f857 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800eca8:	9a03      	ldr	r2, [sp, #12]
 800ecaa:	2800      	cmp	r0, #0
 800ecac:	f47f af1c 	bne.w	800eae8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2dc>
 800ecb0:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 800ecb4:	fa1f fa8a 	uxth.w	sl, sl
 800ecb8:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ecbc:	1aad      	subs	r5, r5, r2
 800ecbe:	4829      	ldr	r0, [pc, #164]	; (800ed64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x558>)
 800ecc0:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 800ecc4:	2d14      	cmp	r5, #20
 800ecc6:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 800ecca:	6800      	ldr	r0, [r0, #0]
 800eccc:	bfa8      	it	ge
 800ecce:	2514      	movge	r5, #20
 800ecd0:	f8ad 101c 	strh.w	r1, [sp, #28]
 800ecd4:	f8ad 201e 	strh.w	r2, [sp, #30]
 800ecd8:	b289      	uxth	r1, r1
 800ecda:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ecde:	b2ad      	uxth	r5, r5
 800ece0:	f8d0 c000 	ldr.w	ip, [r0]
 800ece4:	b292      	uxth	r2, r2
 800ece6:	4555      	cmp	r5, sl
 800ece8:	bf94      	ite	ls
 800ecea:	9500      	strls	r5, [sp, #0]
 800ecec:	f8cd a000 	strhi.w	sl, [sp]
 800ecf0:	b29b      	uxth	r3, r3
 800ecf2:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 800ecf6:	47a8      	blx	r5
 800ecf8:	6823      	ldr	r3, [r4, #0]
 800ecfa:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ecfe:	a907      	add	r1, sp, #28
 800ed00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ed02:	4620      	mov	r0, r4
 800ed04:	4798      	blx	r3
 800ed06:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800ed0a:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 800ed0e:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 800ed12:	1a5b      	subs	r3, r3, r1
 800ed14:	440a      	add	r2, r1
 800ed16:	b21b      	sxth	r3, r3
 800ed18:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 800ed1c:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 800ed20:	2b00      	cmp	r3, #0
 800ed22:	f47f aed8 	bne.w	800ead6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800ed26:	fa1f f188 	uxth.w	r1, r8
 800ed2a:	4648      	mov	r0, r9
 800ed2c:	f7ff fa14 	bl	800e158 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ed30:	e6d1      	b.n	800ead6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 800ed32:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ed36:	42ab      	cmp	r3, r5
 800ed38:	f67f ae95 	bls.w	800ea66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 800ed3c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800ed40:	ab07      	add	r3, sp, #28
 800ed42:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ed46:	6851      	ldr	r1, [r2, #4]
 800ed48:	c303      	stmia	r3!, {r0, r1}
 800ed4a:	a807      	add	r0, sp, #28
 800ed4c:	f7fc f803 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ed50:	b920      	cbnz	r0, 800ed5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>
 800ed52:	6823      	ldr	r3, [r4, #0]
 800ed54:	a907      	add	r1, sp, #28
 800ed56:	4620      	mov	r0, r4
 800ed58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ed5a:	4798      	blx	r3
 800ed5c:	3501      	adds	r5, #1
 800ed5e:	b2ad      	uxth	r5, r5
 800ed60:	e7e7      	b.n	800ed32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x526>
 800ed62:	bf00      	nop
 800ed64:	2400b060 	.word	0x2400b060

0800ed68 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ed68:	4b03      	ldr	r3, [pc, #12]	; (800ed78 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ed6a:	2200      	movs	r2, #0
 800ed6c:	801a      	strh	r2, [r3, #0]
 800ed6e:	805a      	strh	r2, [r3, #2]
 800ed70:	809a      	strh	r2, [r3, #4]
 800ed72:	80da      	strh	r2, [r3, #6]
 800ed74:	4770      	bx	lr
 800ed76:	bf00      	nop
 800ed78:	2400b0a4 	.word	0x2400b0a4

0800ed7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800ed7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ed80:	b09d      	sub	sp, #116	; 0x74
 800ed82:	4606      	mov	r6, r0
 800ed84:	4614      	mov	r4, r2
 800ed86:	468a      	mov	sl, r1
 800ed88:	a803      	add	r0, sp, #12
 800ed8a:	461d      	mov	r5, r3
 800ed8c:	f000 fd6c 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800ed90:	6833      	ldr	r3, [r6, #0]
 800ed92:	4630      	mov	r0, r6
 800ed94:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800ed98:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ed9a:	4798      	blx	r3
 800ed9c:	6833      	ldr	r3, [r6, #0]
 800ed9e:	4607      	mov	r7, r0
 800eda0:	4630      	mov	r0, r6
 800eda2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eda4:	4798      	blx	r3
 800eda6:	462a      	mov	r2, r5
 800eda8:	2500      	movs	r5, #0
 800edaa:	4621      	mov	r1, r4
 800edac:	9000      	str	r0, [sp, #0]
 800edae:	463b      	mov	r3, r7
 800edb0:	462c      	mov	r4, r5
 800edb2:	46a9      	mov	r9, r5
 800edb4:	46a8      	mov	r8, r5
 800edb6:	a803      	add	r0, sp, #12
 800edb8:	f000 fdb1 	bl	800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800edbc:	2300      	movs	r3, #0
 800edbe:	9302      	str	r3, [sp, #8]
 800edc0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800edc4:	429c      	cmp	r4, r3
 800edc6:	d002      	beq.n	800edce <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800edc8:	455c      	cmp	r4, fp
 800edca:	bf18      	it	ne
 800edcc:	4625      	movne	r5, r4
 800edce:	ab02      	add	r3, sp, #8
 800edd0:	4632      	mov	r2, r6
 800edd2:	4651      	mov	r1, sl
 800edd4:	a803      	add	r0, sp, #12
 800edd6:	f001 f8a7 	bl	800ff28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800edda:	4604      	mov	r4, r0
 800eddc:	b108      	cbz	r0, 800ede2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800edde:	280a      	cmp	r0, #10
 800ede0:	d10a      	bne.n	800edf8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800ede2:	45c1      	cmp	r9, r8
 800ede4:	bf38      	it	cc
 800ede6:	46c1      	movcc	r9, r8
 800ede8:	f04f 0800 	mov.w	r8, #0
 800edec:	2c00      	cmp	r4, #0
 800edee:	d1e5      	bne.n	800edbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800edf0:	4648      	mov	r0, r9
 800edf2:	b01d      	add	sp, #116	; 0x74
 800edf4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800edf8:	9a02      	ldr	r2, [sp, #8]
 800edfa:	2a00      	cmp	r2, #0
 800edfc:	d0de      	beq.n	800edbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800edfe:	7b57      	ldrb	r7, [r2, #13]
 800ee00:	4629      	mov	r1, r5
 800ee02:	6833      	ldr	r3, [r6, #0]
 800ee04:	007f      	lsls	r7, r7, #1
 800ee06:	8894      	ldrh	r4, [r2, #4]
 800ee08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800ee0a:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800ee0e:	7a97      	ldrb	r7, [r2, #10]
 800ee10:	4307      	orrs	r7, r0
 800ee12:	4630      	mov	r0, r6
 800ee14:	4798      	blx	r3
 800ee16:	4438      	add	r0, r7
 800ee18:	4480      	add	r8, r0
 800ee1a:	fa1f f888 	uxth.w	r8, r8
 800ee1e:	e7e5      	b.n	800edec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800ee20 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800ee20:	b508      	push	{r3, lr}
 800ee22:	6803      	ldr	r3, [r0, #0]
 800ee24:	68db      	ldr	r3, [r3, #12]
 800ee26:	4798      	blx	r3
 800ee28:	b128      	cbz	r0, 800ee36 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800ee2a:	7b43      	ldrb	r3, [r0, #13]
 800ee2c:	7a80      	ldrb	r0, [r0, #10]
 800ee2e:	005b      	lsls	r3, r3, #1
 800ee30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ee34:	4318      	orrs	r0, r3
 800ee36:	bd08      	pop	{r3, pc}

0800ee38 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800ee38:	b40e      	push	{r1, r2, r3}
 800ee3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee3c:	b09e      	sub	sp, #120	; 0x78
 800ee3e:	4605      	mov	r5, r0
 800ee40:	ab23      	add	r3, sp, #140	; 0x8c
 800ee42:	a805      	add	r0, sp, #20
 800ee44:	f853 4b04 	ldr.w	r4, [r3], #4
 800ee48:	9303      	str	r3, [sp, #12]
 800ee4a:	f000 fd0d 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800ee4e:	682b      	ldr	r3, [r5, #0]
 800ee50:	4628      	mov	r0, r5
 800ee52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ee54:	4798      	blx	r3
 800ee56:	682b      	ldr	r3, [r5, #0]
 800ee58:	4606      	mov	r6, r0
 800ee5a:	4628      	mov	r0, r5
 800ee5c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ee5e:	4798      	blx	r3
 800ee60:	4633      	mov	r3, r6
 800ee62:	4621      	mov	r1, r4
 800ee64:	ae1e      	add	r6, sp, #120	; 0x78
 800ee66:	2400      	movs	r4, #0
 800ee68:	9000      	str	r0, [sp, #0]
 800ee6a:	9a03      	ldr	r2, [sp, #12]
 800ee6c:	a805      	add	r0, sp, #20
 800ee6e:	f000 fd56 	bl	800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ee72:	f846 4d68 	str.w	r4, [r6, #-104]!
 800ee76:	462a      	mov	r2, r5
 800ee78:	4633      	mov	r3, r6
 800ee7a:	4621      	mov	r1, r4
 800ee7c:	a805      	add	r0, sp, #20
 800ee7e:	f001 f853 	bl	800ff28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ee82:	b300      	cbz	r0, 800eec6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 800ee84:	280a      	cmp	r0, #10
 800ee86:	d01a      	beq.n	800eebe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800ee88:	9f04      	ldr	r7, [sp, #16]
 800ee8a:	b1c7      	cbz	r7, 800eebe <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 800ee8c:	7b78      	ldrb	r0, [r7, #13]
 800ee8e:	7a3b      	ldrb	r3, [r7, #8]
 800ee90:	00c1      	lsls	r1, r0, #3
 800ee92:	88aa      	ldrh	r2, [r5, #4]
 800ee94:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ee98:	4319      	orrs	r1, r3
 800ee9a:	0643      	lsls	r3, r0, #25
 800ee9c:	ea4f 1000 	mov.w	r0, r0, lsl #4
 800eea0:	bf48      	it	mi
 800eea2:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800eea6:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800eeaa:	bf48      	it	mi
 800eeac:	b219      	sxthmi	r1, r3
 800eeae:	79fb      	ldrb	r3, [r7, #7]
 800eeb0:	4303      	orrs	r3, r0
 800eeb2:	4413      	add	r3, r2
 800eeb4:	1a5b      	subs	r3, r3, r1
 800eeb6:	b29b      	uxth	r3, r3
 800eeb8:	42a3      	cmp	r3, r4
 800eeba:	bfc8      	it	gt
 800eebc:	b21c      	sxthgt	r4, r3
 800eebe:	4633      	mov	r3, r6
 800eec0:	462a      	mov	r2, r5
 800eec2:	2100      	movs	r1, #0
 800eec4:	e7da      	b.n	800ee7c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800eec6:	b2a0      	uxth	r0, r4
 800eec8:	b01e      	add	sp, #120	; 0x78
 800eeca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800eece:	b003      	add	sp, #12
 800eed0:	4770      	bx	lr

0800eed2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800eed2:	b40e      	push	{r1, r2, r3}
 800eed4:	b570      	push	{r4, r5, r6, lr}
 800eed6:	b09d      	sub	sp, #116	; 0x74
 800eed8:	4604      	mov	r4, r0
 800eeda:	ab21      	add	r3, sp, #132	; 0x84
 800eedc:	a803      	add	r0, sp, #12
 800eede:	f853 5b04 	ldr.w	r5, [r3], #4
 800eee2:	9302      	str	r3, [sp, #8]
 800eee4:	f000 fcc0 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800eee8:	6823      	ldr	r3, [r4, #0]
 800eeea:	4620      	mov	r0, r4
 800eeec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800eeee:	4798      	blx	r3
 800eef0:	6823      	ldr	r3, [r4, #0]
 800eef2:	4606      	mov	r6, r0
 800eef4:	4620      	mov	r0, r4
 800eef6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eef8:	2401      	movs	r4, #1
 800eefa:	4798      	blx	r3
 800eefc:	4633      	mov	r3, r6
 800eefe:	9000      	str	r0, [sp, #0]
 800ef00:	4629      	mov	r1, r5
 800ef02:	9a02      	ldr	r2, [sp, #8]
 800ef04:	a803      	add	r0, sp, #12
 800ef06:	f000 fd0a 	bl	800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ef0a:	a803      	add	r0, sp, #12
 800ef0c:	f001 f8d8 	bl	80100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ef10:	b2a3      	uxth	r3, r4
 800ef12:	b138      	cbz	r0, 800ef24 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 800ef14:	280a      	cmp	r0, #10
 800ef16:	a803      	add	r0, sp, #12
 800ef18:	bf04      	itt	eq
 800ef1a:	3301      	addeq	r3, #1
 800ef1c:	b21c      	sxtheq	r4, r3
 800ef1e:	f001 f8cf 	bl	80100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800ef22:	e7f5      	b.n	800ef10 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800ef24:	4618      	mov	r0, r3
 800ef26:	b01d      	add	sp, #116	; 0x74
 800ef28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ef2c:	b003      	add	sp, #12
 800ef2e:	4770      	bx	lr

0800ef30 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800ef30:	b40e      	push	{r1, r2, r3}
 800ef32:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ef34:	b09e      	sub	sp, #120	; 0x78
 800ef36:	4604      	mov	r4, r0
 800ef38:	ab23      	add	r3, sp, #140	; 0x8c
 800ef3a:	a805      	add	r0, sp, #20
 800ef3c:	f853 5b04 	ldr.w	r5, [r3], #4
 800ef40:	9303      	str	r3, [sp, #12]
 800ef42:	f000 fc91 	bl	800f868 <_ZN8touchgfx12TextProviderC1Ev>
 800ef46:	6823      	ldr	r3, [r4, #0]
 800ef48:	4620      	mov	r0, r4
 800ef4a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ef4c:	4798      	blx	r3
 800ef4e:	6823      	ldr	r3, [r4, #0]
 800ef50:	4606      	mov	r6, r0
 800ef52:	4620      	mov	r0, r4
 800ef54:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ef56:	4798      	blx	r3
 800ef58:	4633      	mov	r3, r6
 800ef5a:	4629      	mov	r1, r5
 800ef5c:	9000      	str	r0, [sp, #0]
 800ef5e:	9a03      	ldr	r2, [sp, #12]
 800ef60:	a805      	add	r0, sp, #20
 800ef62:	f000 fcdc 	bl	800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ef66:	ad1e      	add	r5, sp, #120	; 0x78
 800ef68:	2100      	movs	r1, #0
 800ef6a:	26ff      	movs	r6, #255	; 0xff
 800ef6c:	4622      	mov	r2, r4
 800ef6e:	a805      	add	r0, sp, #20
 800ef70:	f845 1d68 	str.w	r1, [r5, #-104]!
 800ef74:	462b      	mov	r3, r5
 800ef76:	f000 ffd7 	bl	800ff28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800ef7a:	b1d8      	cbz	r0, 800efb4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800ef7c:	280a      	cmp	r0, #10
 800ef7e:	d012      	beq.n	800efa6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800ef80:	9804      	ldr	r0, [sp, #16]
 800ef82:	b180      	cbz	r0, 800efa6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800ef84:	7b47      	ldrb	r7, [r0, #13]
 800ef86:	7922      	ldrb	r2, [r4, #4]
 800ef88:	00fb      	lsls	r3, r7, #3
 800ef8a:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800ef8e:	7a03      	ldrb	r3, [r0, #8]
 800ef90:	430b      	orrs	r3, r1
 800ef92:	0679      	lsls	r1, r7, #25
 800ef94:	bf44      	itt	mi
 800ef96:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ef9a:	b21b      	sxthmi	r3, r3
 800ef9c:	1ad3      	subs	r3, r2, r3
 800ef9e:	b2db      	uxtb	r3, r3
 800efa0:	429e      	cmp	r6, r3
 800efa2:	bf28      	it	cs
 800efa4:	461e      	movcs	r6, r3
 800efa6:	462b      	mov	r3, r5
 800efa8:	4622      	mov	r2, r4
 800efaa:	2100      	movs	r1, #0
 800efac:	a805      	add	r0, sp, #20
 800efae:	f000 ffbb 	bl	800ff28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800efb2:	e7e2      	b.n	800ef7a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800efb4:	4630      	mov	r0, r6
 800efb6:	b01e      	add	sp, #120	; 0x78
 800efb8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800efbc:	b003      	add	sp, #12
 800efbe:	4770      	bx	lr

0800efc0 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800efc0:	b513      	push	{r0, r1, r4, lr}
 800efc2:	6803      	ldr	r3, [r0, #0]
 800efc4:	2400      	movs	r4, #0
 800efc6:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800efca:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800efce:	f8ad 1004 	strh.w	r1, [sp, #4]
 800efd2:	4669      	mov	r1, sp
 800efd4:	691b      	ldr	r3, [r3, #16]
 800efd6:	9400      	str	r4, [sp, #0]
 800efd8:	f8ad 2006 	strh.w	r2, [sp, #6]
 800efdc:	4798      	blx	r3
 800efde:	b002      	add	sp, #8
 800efe0:	bd10      	pop	{r4, pc}

0800efe2 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800efe2:	b538      	push	{r3, r4, r5, lr}
 800efe4:	680b      	ldr	r3, [r1, #0]
 800efe6:	460c      	mov	r4, r1
 800efe8:	4605      	mov	r5, r0
 800efea:	68db      	ldr	r3, [r3, #12]
 800efec:	4798      	blx	r3
 800efee:	6823      	ldr	r3, [r4, #0]
 800eff0:	4620      	mov	r0, r4
 800eff2:	4629      	mov	r1, r5
 800eff4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eff6:	4798      	blx	r3
 800eff8:	4628      	mov	r0, r5
 800effa:	bd38      	pop	{r3, r4, r5, pc}

0800effc <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800effc:	b410      	push	{r4}
 800effe:	880a      	ldrh	r2, [r1, #0]
 800f000:	8884      	ldrh	r4, [r0, #4]
 800f002:	4422      	add	r2, r4
 800f004:	800a      	strh	r2, [r1, #0]
 800f006:	884a      	ldrh	r2, [r1, #2]
 800f008:	88c4      	ldrh	r4, [r0, #6]
 800f00a:	4422      	add	r2, r4
 800f00c:	804a      	strh	r2, [r1, #2]
 800f00e:	6940      	ldr	r0, [r0, #20]
 800f010:	b120      	cbz	r0, 800f01c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800f012:	6803      	ldr	r3, [r0, #0]
 800f014:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f018:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f01a:	4718      	bx	r3
 800f01c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f020:	4770      	bx	lr

0800f022 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800f022:	b570      	push	{r4, r5, r6, lr}
 800f024:	8882      	ldrh	r2, [r0, #4]
 800f026:	460c      	mov	r4, r1
 800f028:	880b      	ldrh	r3, [r1, #0]
 800f02a:	4605      	mov	r5, r0
 800f02c:	4413      	add	r3, r2
 800f02e:	800b      	strh	r3, [r1, #0]
 800f030:	884b      	ldrh	r3, [r1, #2]
 800f032:	88c2      	ldrh	r2, [r0, #6]
 800f034:	4413      	add	r3, r2
 800f036:	804b      	strh	r3, [r1, #2]
 800f038:	1d01      	adds	r1, r0, #4
 800f03a:	4620      	mov	r0, r4
 800f03c:	f7fb fe48 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800f040:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f044:	2b00      	cmp	r3, #0
 800f046:	dd0b      	ble.n	800f060 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f048:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f04c:	2b00      	cmp	r3, #0
 800f04e:	dd07      	ble.n	800f060 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f050:	6968      	ldr	r0, [r5, #20]
 800f052:	b128      	cbz	r0, 800f060 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800f054:	6803      	ldr	r3, [r0, #0]
 800f056:	4621      	mov	r1, r4
 800f058:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f05a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f05e:	4718      	bx	r3
 800f060:	bd70      	pop	{r4, r5, r6, pc}
	...

0800f064 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800f064:	b570      	push	{r4, r5, r6, lr}
 800f066:	8882      	ldrh	r2, [r0, #4]
 800f068:	460c      	mov	r4, r1
 800f06a:	880b      	ldrh	r3, [r1, #0]
 800f06c:	4605      	mov	r5, r0
 800f06e:	4413      	add	r3, r2
 800f070:	800b      	strh	r3, [r1, #0]
 800f072:	884b      	ldrh	r3, [r1, #2]
 800f074:	88c2      	ldrh	r2, [r0, #6]
 800f076:	4413      	add	r3, r2
 800f078:	804b      	strh	r3, [r1, #2]
 800f07a:	1d01      	adds	r1, r0, #4
 800f07c:	4620      	mov	r0, r4
 800f07e:	f7fb fe27 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800f082:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800f086:	2b00      	cmp	r3, #0
 800f088:	dd18      	ble.n	800f0bc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800f08a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800f08e:	2b00      	cmp	r3, #0
 800f090:	dd14      	ble.n	800f0bc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800f092:	6968      	ldr	r0, [r5, #20]
 800f094:	b128      	cbz	r0, 800f0a2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 800f096:	6803      	ldr	r3, [r0, #0]
 800f098:	4621      	mov	r1, r4
 800f09a:	691b      	ldr	r3, [r3, #16]
 800f09c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f0a0:	4718      	bx	r3
 800f0a2:	4b07      	ldr	r3, [pc, #28]	; (800f0c0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 800f0a4:	681b      	ldr	r3, [r3, #0]
 800f0a6:	3304      	adds	r3, #4
 800f0a8:	429d      	cmp	r5, r3
 800f0aa:	d107      	bne.n	800f0bc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 800f0ac:	f7fe fff0 	bl	800e090 <_ZN8touchgfx11Application11getInstanceEv>
 800f0b0:	6821      	ldr	r1, [r4, #0]
 800f0b2:	6862      	ldr	r2, [r4, #4]
 800f0b4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f0b8:	f7ff b862 	b.w	800e180 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800f0bc:	bd70      	pop	{r4, r5, r6, pc}
 800f0be:	bf00      	nop
 800f0c0:	2400b09c 	.word	0x2400b09c

0800f0c4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800f0c4:	b570      	push	{r4, r5, r6, lr}
 800f0c6:	4604      	mov	r4, r0
 800f0c8:	4616      	mov	r6, r2
 800f0ca:	460d      	mov	r5, r1
 800f0cc:	b901      	cbnz	r1, 800f0d0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800f0ce:	b192      	cbz	r2, 800f0f6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 800f0d0:	6823      	ldr	r3, [r4, #0]
 800f0d2:	4620      	mov	r0, r4
 800f0d4:	699b      	ldr	r3, [r3, #24]
 800f0d6:	4798      	blx	r3
 800f0d8:	88e2      	ldrh	r2, [r4, #6]
 800f0da:	88a1      	ldrh	r1, [r4, #4]
 800f0dc:	4620      	mov	r0, r4
 800f0de:	4432      	add	r2, r6
 800f0e0:	4429      	add	r1, r5
 800f0e2:	b212      	sxth	r2, r2
 800f0e4:	b209      	sxth	r1, r1
 800f0e6:	f7f3 fa33 	bl	8002550 <_ZN8touchgfx8Drawable5setXYEss>
 800f0ea:	6823      	ldr	r3, [r4, #0]
 800f0ec:	4620      	mov	r0, r4
 800f0ee:	699b      	ldr	r3, [r3, #24]
 800f0f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f0f4:	4718      	bx	r3
 800f0f6:	bd70      	pop	{r4, r5, r6, pc}

0800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800f0f8:	b510      	push	{r4, lr}
 800f0fa:	2300      	movs	r3, #0
 800f0fc:	4604      	mov	r4, r0
 800f0fe:	4608      	mov	r0, r1
 800f100:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800f104:	8023      	strh	r3, [r4, #0]
 800f106:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f10a:	8063      	strh	r3, [r4, #2]
 800f10c:	6803      	ldr	r3, [r0, #0]
 800f10e:	80a1      	strh	r1, [r4, #4]
 800f110:	4621      	mov	r1, r4
 800f112:	80e2      	strh	r2, [r4, #6]
 800f114:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f116:	4798      	blx	r3
 800f118:	4620      	mov	r0, r4
 800f11a:	bd10      	pop	{r4, pc}

0800f11c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800f11c:	b530      	push	{r4, r5, lr}
 800f11e:	8083      	strh	r3, [r0, #4]
 800f120:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800f124:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800f128:	7183      	strb	r3, [r0, #6]
 800f12a:	79c3      	ldrb	r3, [r0, #7]
 800f12c:	6101      	str	r1, [r0, #16]
 800f12e:	f365 0306 	bfi	r3, r5, #0, #7
 800f132:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800f136:	8282      	strh	r2, [r0, #20]
 800f138:	f365 13c7 	bfi	r3, r5, #7, #1
 800f13c:	71c3      	strb	r3, [r0, #7]
 800f13e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800f142:	7203      	strb	r3, [r0, #8]
 800f144:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800f148:	7243      	strb	r3, [r0, #9]
 800f14a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800f14e:	8143      	strh	r3, [r0, #10]
 800f150:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800f154:	8183      	strh	r3, [r0, #12]
 800f156:	4b01      	ldr	r3, [pc, #4]	; (800f15c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800f158:	6003      	str	r3, [r0, #0]
 800f15a:	bd30      	pop	{r4, r5, pc}
 800f15c:	0801ef88 	.word	0x0801ef88

0800f160 <_ZNK8touchgfx9ConstFont4findEt>:
 800f160:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f162:	6904      	ldr	r4, [r0, #16]
 800f164:	b3bc      	cbz	r4, 800f1d6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f166:	88a3      	ldrh	r3, [r4, #4]
 800f168:	8a82      	ldrh	r2, [r0, #20]
 800f16a:	1acb      	subs	r3, r1, r3
 800f16c:	f102 32ff 	add.w	r2, r2, #4294967295
 800f170:	d431      	bmi.n	800f1d6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f172:	4293      	cmp	r3, r2
 800f174:	dd0c      	ble.n	800f190 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800f176:	230e      	movs	r3, #14
 800f178:	fb03 4302 	mla	r3, r3, r2, r4
 800f17c:	889b      	ldrh	r3, [r3, #4]
 800f17e:	1a5b      	subs	r3, r3, r1
 800f180:	1ad3      	subs	r3, r2, r3
 800f182:	429a      	cmp	r2, r3
 800f184:	db27      	blt.n	800f1d6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f186:	2b00      	cmp	r3, #0
 800f188:	bfbc      	itt	lt
 800f18a:	2302      	movlt	r3, #2
 800f18c:	fb92 f3f3 	sdivlt	r3, r2, r3
 800f190:	2500      	movs	r5, #0
 800f192:	260e      	movs	r6, #14
 800f194:	4295      	cmp	r5, r2
 800f196:	dc1e      	bgt.n	800f1d6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f198:	fb06 4003 	mla	r0, r6, r3, r4
 800f19c:	8887      	ldrh	r7, [r0, #4]
 800f19e:	42b9      	cmp	r1, r7
 800f1a0:	d01a      	beq.n	800f1d8 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800f1a2:	d20d      	bcs.n	800f1c0 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800f1a4:	1e5a      	subs	r2, r3, #1
 800f1a6:	4295      	cmp	r5, r2
 800f1a8:	dc15      	bgt.n	800f1d6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f1aa:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800f1ae:	1a5b      	subs	r3, r3, r1
 800f1b0:	1ad3      	subs	r3, r2, r3
 800f1b2:	429a      	cmp	r2, r3
 800f1b4:	db0f      	blt.n	800f1d6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f1b6:	429d      	cmp	r5, r3
 800f1b8:	ddec      	ble.n	800f194 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f1ba:	1953      	adds	r3, r2, r5
 800f1bc:	105b      	asrs	r3, r3, #1
 800f1be:	e7e9      	b.n	800f194 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f1c0:	1c5d      	adds	r5, r3, #1
 800f1c2:	42aa      	cmp	r2, r5
 800f1c4:	db07      	blt.n	800f1d6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f1c6:	8a43      	ldrh	r3, [r0, #18]
 800f1c8:	1acb      	subs	r3, r1, r3
 800f1ca:	442b      	add	r3, r5
 800f1cc:	429d      	cmp	r5, r3
 800f1ce:	dc02      	bgt.n	800f1d6 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800f1d0:	429a      	cmp	r2, r3
 800f1d2:	dadf      	bge.n	800f194 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800f1d4:	e7f1      	b.n	800f1ba <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800f1d6:	2000      	movs	r0, #0
 800f1d8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f1da <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800f1da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f1dc:	4604      	mov	r4, r0
 800f1de:	4617      	mov	r7, r2
 800f1e0:	461e      	mov	r6, r3
 800f1e2:	b911      	cbnz	r1, 800f1ea <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800f1e4:	2500      	movs	r5, #0
 800f1e6:	4628      	mov	r0, r5
 800f1e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f1ea:	290a      	cmp	r1, #10
 800f1ec:	d0fa      	beq.n	800f1e4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f1ee:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800f1f2:	4291      	cmp	r1, r2
 800f1f4:	d0f6      	beq.n	800f1e4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f1f6:	f242 020b 	movw	r2, #8203	; 0x200b
 800f1fa:	4291      	cmp	r1, r2
 800f1fc:	d0f2      	beq.n	800f1e4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f1fe:	f7ff ffaf 	bl	800f160 <_ZNK8touchgfx9ConstFont4findEt>
 800f202:	4605      	mov	r5, r0
 800f204:	b950      	cbnz	r0, 800f21c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800f206:	6823      	ldr	r3, [r4, #0]
 800f208:	4620      	mov	r0, r4
 800f20a:	691b      	ldr	r3, [r3, #16]
 800f20c:	4798      	blx	r3
 800f20e:	4601      	mov	r1, r0
 800f210:	4620      	mov	r0, r4
 800f212:	f7ff ffa5 	bl	800f160 <_ZNK8touchgfx9ConstFont4findEt>
 800f216:	4605      	mov	r5, r0
 800f218:	2800      	cmp	r0, #0
 800f21a:	d0e3      	beq.n	800f1e4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800f21c:	6823      	ldr	r3, [r4, #0]
 800f21e:	4629      	mov	r1, r5
 800f220:	4620      	mov	r0, r4
 800f222:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f224:	4798      	blx	r3
 800f226:	6038      	str	r0, [r7, #0]
 800f228:	6823      	ldr	r3, [r4, #0]
 800f22a:	4620      	mov	r0, r4
 800f22c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f22e:	4798      	blx	r3
 800f230:	7030      	strb	r0, [r6, #0]
 800f232:	e7d8      	b.n	800f1e6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800f234 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 800f234:	2000      	movs	r0, #0
 800f236:	4770      	bx	lr

0800f238 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 800f238:	2001      	movs	r0, #1
 800f23a:	4770      	bx	lr

0800f23c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 800f23c:	2002      	movs	r0, #2
 800f23e:	4770      	bx	lr

0800f240 <_ZN8touchgfx6ScreenD1Ev>:
 800f240:	4770      	bx	lr

0800f242 <_ZN8touchgfx12GestureEventD1Ev>:
 800f242:	4770      	bx	lr

0800f244 <_ZN8touchgfx9DragEventD1Ev>:
 800f244:	4770      	bx	lr

0800f246 <_ZN8touchgfx10ClickEventD1Ev>:
 800f246:	4770      	bx	lr

0800f248 <_ZN8touchgfx10ClickEventD0Ev>:
 800f248:	b510      	push	{r4, lr}
 800f24a:	4604      	mov	r4, r0
 800f24c:	210c      	movs	r1, #12
 800f24e:	f00d fc80 	bl	801cb52 <_ZdlPvj>
 800f252:	4620      	mov	r0, r4
 800f254:	bd10      	pop	{r4, pc}

0800f256 <_ZN8touchgfx9DragEventD0Ev>:
 800f256:	b510      	push	{r4, lr}
 800f258:	4604      	mov	r4, r0
 800f25a:	2110      	movs	r1, #16
 800f25c:	f00d fc79 	bl	801cb52 <_ZdlPvj>
 800f260:	4620      	mov	r0, r4
 800f262:	bd10      	pop	{r4, pc}

0800f264 <_ZN8touchgfx12GestureEventD0Ev>:
 800f264:	b510      	push	{r4, lr}
 800f266:	4604      	mov	r4, r0
 800f268:	210c      	movs	r1, #12
 800f26a:	f00d fc72 	bl	801cb52 <_ZdlPvj>
 800f26e:	4620      	mov	r0, r4
 800f270:	bd10      	pop	{r4, pc}

0800f272 <_ZN8touchgfx6ScreenD0Ev>:
 800f272:	b510      	push	{r4, lr}
 800f274:	4604      	mov	r4, r0
 800f276:	213c      	movs	r1, #60	; 0x3c
 800f278:	f00d fc6b 	bl	801cb52 <_ZdlPvj>
 800f27c:	4620      	mov	r0, r4
 800f27e:	bd10      	pop	{r4, pc}

0800f280 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800f280:	b530      	push	{r4, r5, lr}
 800f282:	460d      	mov	r5, r1
 800f284:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f286:	b087      	sub	sp, #28
 800f288:	4604      	mov	r4, r0
 800f28a:	b301      	cbz	r1, 800f2ce <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800f28c:	a801      	add	r0, sp, #4
 800f28e:	f7ff ff33 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f292:	892a      	ldrh	r2, [r5, #8]
 800f294:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800f298:	7928      	ldrb	r0, [r5, #4]
 800f29a:	1ad2      	subs	r2, r2, r3
 800f29c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f29e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800f2a2:	441a      	add	r2, r3
 800f2a4:	896b      	ldrh	r3, [r5, #10]
 800f2a6:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800f2aa:	f88d 0010 	strb.w	r0, [sp, #16]
 800f2ae:	1b5b      	subs	r3, r3, r5
 800f2b0:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800f2b2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f2b4:	442b      	add	r3, r5
 800f2b6:	4d07      	ldr	r5, [pc, #28]	; (800f2d4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800f2b8:	f8ad 1012 	strh.w	r1, [sp, #18]
 800f2bc:	a903      	add	r1, sp, #12
 800f2be:	9503      	str	r5, [sp, #12]
 800f2c0:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f2c4:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f2c8:	6803      	ldr	r3, [r0, #0]
 800f2ca:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800f2cc:	4798      	blx	r3
 800f2ce:	b007      	add	sp, #28
 800f2d0:	bd30      	pop	{r4, r5, pc}
 800f2d2:	bf00      	nop
 800f2d4:	0801f008 	.word	0x0801f008

0800f2d8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800f2d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f2dc:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800f2de:	b08a      	sub	sp, #40	; 0x28
 800f2e0:	4604      	mov	r4, r0
 800f2e2:	460d      	mov	r5, r1
 800f2e4:	b113      	cbz	r3, 800f2ec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 800f2e6:	790b      	ldrb	r3, [r1, #4]
 800f2e8:	2b00      	cmp	r3, #0
 800f2ea:	d044      	beq.n	800f376 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f2ec:	f104 0804 	add.w	r8, r4, #4
 800f2f0:	a803      	add	r0, sp, #12
 800f2f2:	4641      	mov	r1, r8
 800f2f4:	f7ff ff00 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f2f8:	792b      	ldrb	r3, [r5, #4]
 800f2fa:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 800f2fe:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800f302:	b983      	cbnz	r3, 800f326 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 800f304:	f104 0336 	add.w	r3, r4, #54	; 0x36
 800f308:	892a      	ldrh	r2, [r5, #8]
 800f30a:	88e9      	ldrh	r1, [r5, #6]
 800f30c:	4640      	mov	r0, r8
 800f30e:	1b92      	subs	r2, r2, r6
 800f310:	9301      	str	r3, [sp, #4]
 800f312:	1bc9      	subs	r1, r1, r7
 800f314:	f104 0334 	add.w	r3, r4, #52	; 0x34
 800f318:	b212      	sxth	r2, r2
 800f31a:	9300      	str	r3, [sp, #0]
 800f31c:	b209      	sxth	r1, r1
 800f31e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800f322:	f7fb fbf3 	bl	800ab0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 800f326:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f328:	b329      	cbz	r1, 800f376 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f32a:	a805      	add	r0, sp, #20
 800f32c:	f7ff fee4 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f330:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f334:	792b      	ldrb	r3, [r5, #4]
 800f336:	a907      	add	r1, sp, #28
 800f338:	1abf      	subs	r7, r7, r2
 800f33a:	88ea      	ldrh	r2, [r5, #6]
 800f33c:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800f33e:	4417      	add	r7, r2
 800f340:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 800f342:	f88d 3020 	strb.w	r3, [sp, #32]
 800f346:	4417      	add	r7, r2
 800f348:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800f34c:	1ab6      	subs	r6, r6, r2
 800f34e:	892a      	ldrh	r2, [r5, #8]
 800f350:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800f354:	4416      	add	r6, r2
 800f356:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800f358:	4416      	add	r6, r2
 800f35a:	4a08      	ldr	r2, [pc, #32]	; (800f37c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 800f35c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 800f360:	2600      	movs	r6, #0
 800f362:	9207      	str	r2, [sp, #28]
 800f364:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 800f368:	6803      	ldr	r3, [r0, #0]
 800f36a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f36c:	4798      	blx	r3
 800f36e:	792b      	ldrb	r3, [r5, #4]
 800f370:	b10b      	cbz	r3, 800f376 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800f372:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800f376:	b00a      	add	sp, #40	; 0x28
 800f378:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f37c:	0801efe0 	.word	0x0801efe0

0800f380 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800f380:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f384:	460c      	mov	r4, r1
 800f386:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800f388:	b088      	sub	sp, #32
 800f38a:	4605      	mov	r5, r0
 800f38c:	2900      	cmp	r1, #0
 800f38e:	d06d      	beq.n	800f46c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 800f390:	4668      	mov	r0, sp
 800f392:	f7ff feb1 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f396:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 800f398:	88e3      	ldrh	r3, [r4, #6]
 800f39a:	f9bd 8000 	ldrsh.w	r8, [sp]
 800f39e:	440b      	add	r3, r1
 800f3a0:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 800f3a4:	b21b      	sxth	r3, r3
 800f3a6:	4543      	cmp	r3, r8
 800f3a8:	db31      	blt.n	800f40e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f3aa:	f8bd c004 	ldrh.w	ip, [sp, #4]
 800f3ae:	44c4      	add	ip, r8
 800f3b0:	fa0f fc8c 	sxth.w	ip, ip
 800f3b4:	4563      	cmp	r3, ip
 800f3b6:	da2a      	bge.n	800f40e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f3b8:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 800f3ba:	8926      	ldrh	r6, [r4, #8]
 800f3bc:	4416      	add	r6, r2
 800f3be:	b236      	sxth	r6, r6
 800f3c0:	42be      	cmp	r6, r7
 800f3c2:	db24      	blt.n	800f40e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f3c4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800f3c8:	4438      	add	r0, r7
 800f3ca:	b200      	sxth	r0, r0
 800f3cc:	4286      	cmp	r6, r0
 800f3ce:	da1e      	bge.n	800f40e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f3d0:	8963      	ldrh	r3, [r4, #10]
 800f3d2:	4419      	add	r1, r3
 800f3d4:	b209      	sxth	r1, r1
 800f3d6:	4541      	cmp	r1, r8
 800f3d8:	db08      	blt.n	800f3ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f3da:	4561      	cmp	r1, ip
 800f3dc:	da06      	bge.n	800f3ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f3de:	89a3      	ldrh	r3, [r4, #12]
 800f3e0:	441a      	add	r2, r3
 800f3e2:	b212      	sxth	r2, r2
 800f3e4:	42ba      	cmp	r2, r7
 800f3e6:	db01      	blt.n	800f3ec <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 800f3e8:	4282      	cmp	r2, r0
 800f3ea:	db10      	blt.n	800f40e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 800f3ec:	4b21      	ldr	r3, [pc, #132]	; (800f474 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 800f3ee:	a904      	add	r1, sp, #16
 800f3f0:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f3f2:	9304      	str	r3, [sp, #16]
 800f3f4:	2302      	movs	r3, #2
 800f3f6:	f88d 3014 	strb.w	r3, [sp, #20]
 800f3fa:	2300      	movs	r3, #0
 800f3fc:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f400:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f404:	f8ad 301a 	strh.w	r3, [sp, #26]
 800f408:	6803      	ldr	r3, [r0, #0]
 800f40a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f40c:	4798      	blx	r3
 800f40e:	1d29      	adds	r1, r5, #4
 800f410:	a802      	add	r0, sp, #8
 800f412:	f7ff fe71 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f416:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f41a:	88e0      	ldrh	r0, [r4, #6]
 800f41c:	eba3 0808 	sub.w	r8, r3, r8
 800f420:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f424:	7921      	ldrb	r1, [r4, #4]
 800f426:	fa1f f888 	uxth.w	r8, r8
 800f42a:	1bdf      	subs	r7, r3, r7
 800f42c:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800f430:	b2bb      	uxth	r3, r7
 800f432:	4440      	add	r0, r8
 800f434:	8922      	ldrh	r2, [r4, #8]
 800f436:	8967      	ldrh	r7, [r4, #10]
 800f438:	4460      	add	r0, ip
 800f43a:	89a4      	ldrh	r4, [r4, #12]
 800f43c:	441a      	add	r2, r3
 800f43e:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800f440:	44b8      	add	r8, r7
 800f442:	4423      	add	r3, r4
 800f444:	f8ad 0016 	strh.w	r0, [sp, #22]
 800f448:	4432      	add	r2, r6
 800f44a:	44e0      	add	r8, ip
 800f44c:	4433      	add	r3, r6
 800f44e:	4c0a      	ldr	r4, [pc, #40]	; (800f478 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 800f450:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800f452:	f88d 1014 	strb.w	r1, [sp, #20]
 800f456:	a904      	add	r1, sp, #16
 800f458:	9404      	str	r4, [sp, #16]
 800f45a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800f45e:	f8ad 801a 	strh.w	r8, [sp, #26]
 800f462:	f8ad 301c 	strh.w	r3, [sp, #28]
 800f466:	6803      	ldr	r3, [r0, #0]
 800f468:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f46a:	4798      	blx	r3
 800f46c:	b008      	add	sp, #32
 800f46e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f472:	bf00      	nop
 800f474:	0801efe0 	.word	0x0801efe0
 800f478:	0801eff4 	.word	0x0801eff4

0800f47c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800f47c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f47e:	4604      	mov	r4, r0
 800f480:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800f484:	3201      	adds	r2, #1
 800f486:	d112      	bne.n	800f4ae <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800f488:	2500      	movs	r5, #0
 800f48a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800f48e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800f492:	6803      	ldr	r3, [r0, #0]
 800f494:	9500      	str	r5, [sp, #0]
 800f496:	466d      	mov	r5, sp
 800f498:	f8ad 1004 	strh.w	r1, [sp, #4]
 800f49c:	f8ad 2006 	strh.w	r2, [sp, #6]
 800f4a0:	4629      	mov	r1, r5
 800f4a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800f4a4:	4798      	blx	r3
 800f4a6:	e895 0003 	ldmia.w	r5, {r0, r1}
 800f4aa:	e884 0003 	stmia.w	r4, {r0, r1}
 800f4ae:	4620      	mov	r0, r4
 800f4b0:	b003      	add	sp, #12
 800f4b2:	bd30      	pop	{r4, r5, pc}

0800f4b4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800f4b4:	b513      	push	{r0, r1, r4, lr}
 800f4b6:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800f4ba:	4604      	mov	r4, r0
 800f4bc:	3301      	adds	r3, #1
 800f4be:	d109      	bne.n	800f4d4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800f4c0:	4601      	mov	r1, r0
 800f4c2:	4668      	mov	r0, sp
 800f4c4:	f7ff fe18 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f4c8:	f8bd 3000 	ldrh.w	r3, [sp]
 800f4cc:	8423      	strh	r3, [r4, #32]
 800f4ce:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f4d2:	8463      	strh	r3, [r4, #34]	; 0x22
 800f4d4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800f4d8:	b002      	add	sp, #8
 800f4da:	bd10      	pop	{r4, pc}

0800f4dc <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800f4dc:	b513      	push	{r0, r1, r4, lr}
 800f4de:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800f4e2:	4604      	mov	r4, r0
 800f4e4:	3301      	adds	r3, #1
 800f4e6:	d109      	bne.n	800f4fc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800f4e8:	4601      	mov	r1, r0
 800f4ea:	4668      	mov	r0, sp
 800f4ec:	f7ff fe04 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f4f0:	f8bd 3000 	ldrh.w	r3, [sp]
 800f4f4:	8423      	strh	r3, [r4, #32]
 800f4f6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f4fa:	8463      	strh	r3, [r4, #34]	; 0x22
 800f4fc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800f500:	b002      	add	sp, #8
 800f502:	bd10      	pop	{r4, pc}

0800f504 <_ZN8touchgfx6ScreenC1Ev>:
 800f504:	b570      	push	{r4, r5, r6, lr}
 800f506:	4b17      	ldr	r3, [pc, #92]	; (800f564 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800f508:	4605      	mov	r5, r0
 800f50a:	4a17      	ldr	r2, [pc, #92]	; (800f568 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800f50c:	2101      	movs	r1, #1
 800f50e:	f845 3b04 	str.w	r3, [r5], #4
 800f512:	2300      	movs	r3, #0
 800f514:	6042      	str	r2, [r0, #4]
 800f516:	4604      	mov	r4, r0
 800f518:	8103      	strh	r3, [r0, #8]
 800f51a:	8143      	strh	r3, [r0, #10]
 800f51c:	8183      	strh	r3, [r0, #12]
 800f51e:	81c3      	strh	r3, [r0, #14]
 800f520:	8203      	strh	r3, [r0, #16]
 800f522:	8243      	strh	r3, [r0, #18]
 800f524:	8283      	strh	r3, [r0, #20]
 800f526:	82c3      	strh	r3, [r0, #22]
 800f528:	6203      	str	r3, [r0, #32]
 800f52a:	8483      	strh	r3, [r0, #36]	; 0x24
 800f52c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800f52e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800f532:	6343      	str	r3, [r0, #52]	; 0x34
 800f534:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800f538:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800f53c:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800f540:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800f544:	4b09      	ldr	r3, [pc, #36]	; (800f56c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800f546:	4628      	mov	r0, r5
 800f548:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f54c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 800f54e:	4a08      	ldr	r2, [pc, #32]	; (800f570 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800f550:	f9b2 1000 	ldrsh.w	r1, [r2]
 800f554:	4798      	blx	r3
 800f556:	6863      	ldr	r3, [r4, #4]
 800f558:	4628      	mov	r0, r5
 800f55a:	4631      	mov	r1, r6
 800f55c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f55e:	4798      	blx	r3
 800f560:	4620      	mov	r0, r4
 800f562:	bd70      	pop	{r4, r5, r6, pc}
 800f564:	0801f01c 	.word	0x0801f01c
 800f568:	0801ed40 	.word	0x0801ed40
 800f56c:	2400b056 	.word	0x2400b056
 800f570:	2400b054 	.word	0x2400b054

0800f574 <_ZN8touchgfx6Screen4drawEv>:
 800f574:	4b09      	ldr	r3, [pc, #36]	; (800f59c <_ZN8touchgfx6Screen4drawEv+0x28>)
 800f576:	b507      	push	{r0, r1, r2, lr}
 800f578:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f57c:	2100      	movs	r1, #0
 800f57e:	4b08      	ldr	r3, [pc, #32]	; (800f5a0 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800f580:	9100      	str	r1, [sp, #0]
 800f582:	4669      	mov	r1, sp
 800f584:	f9b3 3000 	ldrsh.w	r3, [r3]
 800f588:	f8ad 2004 	strh.w	r2, [sp, #4]
 800f58c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800f590:	6803      	ldr	r3, [r0, #0]
 800f592:	689b      	ldr	r3, [r3, #8]
 800f594:	4798      	blx	r3
 800f596:	b003      	add	sp, #12
 800f598:	f85d fb04 	ldr.w	pc, [sp], #4
 800f59c:	2400b054 	.word	0x2400b054
 800f5a0:	2400b056 	.word	0x2400b056

0800f5a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800f5a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f5a8:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800f5ac:	b089      	sub	sp, #36	; 0x24
 800f5ae:	4680      	mov	r8, r0
 800f5b0:	460c      	mov	r4, r1
 800f5b2:	2b00      	cmp	r3, #0
 800f5b4:	4615      	mov	r5, r2
 800f5b6:	dd0e      	ble.n	800f5d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f5b8:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800f5bc:	2b00      	cmp	r3, #0
 800f5be:	dd0a      	ble.n	800f5d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f5c0:	4628      	mov	r0, r5
 800f5c2:	f7ff ff5b 	bl	800f47c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f5c6:	4621      	mov	r1, r4
 800f5c8:	f7fe fc83 	bl	800ded2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800f5cc:	69eb      	ldr	r3, [r5, #28]
 800f5ce:	b928      	cbnz	r0, 800f5dc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800f5d0:	461d      	mov	r5, r3
 800f5d2:	2b00      	cmp	r3, #0
 800f5d4:	d1f4      	bne.n	800f5c0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800f5d6:	b009      	add	sp, #36	; 0x24
 800f5d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f5dc:	ae04      	add	r6, sp, #16
 800f5de:	2b00      	cmp	r3, #0
 800f5e0:	f000 80b5 	beq.w	800f74e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f5e4:	682b      	ldr	r3, [r5, #0]
 800f5e6:	4629      	mov	r1, r5
 800f5e8:	a802      	add	r0, sp, #8
 800f5ea:	68db      	ldr	r3, [r3, #12]
 800f5ec:	4798      	blx	r3
 800f5ee:	4628      	mov	r0, r5
 800f5f0:	f7ff ff60 	bl	800f4b4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f5f4:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800f5f8:	4407      	add	r7, r0
 800f5fa:	4628      	mov	r0, r5
 800f5fc:	f7ff ff6e 	bl	800f4dc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f600:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800f604:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f608:	b23f      	sxth	r7, r7
 800f60a:	4418      	add	r0, r3
 800f60c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800f610:	4621      	mov	r1, r4
 800f612:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f616:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f61a:	4630      	mov	r0, r6
 800f61c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f620:	f8ad 7010 	strh.w	r7, [sp, #16]
 800f624:	f7fb fb54 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800f628:	4628      	mov	r0, r5
 800f62a:	f7ff ff27 	bl	800f47c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f62e:	ab06      	add	r3, sp, #24
 800f630:	4602      	mov	r2, r0
 800f632:	e896 0003 	ldmia.w	r6, {r0, r1}
 800f636:	e883 0003 	stmia.w	r3, {r0, r1}
 800f63a:	4611      	mov	r1, r2
 800f63c:	4618      	mov	r0, r3
 800f63e:	f7fb fb47 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800f642:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f646:	f9b4 1000 	ldrsh.w	r1, [r4]
 800f64a:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800f64e:	4299      	cmp	r1, r3
 800f650:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800f654:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800f658:	d10b      	bne.n	800f672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f65a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f65e:	4552      	cmp	r2, sl
 800f660:	d107      	bne.n	800f672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f662:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800f666:	455a      	cmp	r2, fp
 800f668:	d103      	bne.n	800f672 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800f66a:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f66e:	454a      	cmp	r2, r9
 800f670:	d06d      	beq.n	800f74e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f672:	f1bb 0f00 	cmp.w	fp, #0
 800f676:	dd65      	ble.n	800f744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f678:	f1b9 0f00 	cmp.w	r9, #0
 800f67c:	dd62      	ble.n	800f744 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800f67e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800f682:	fa1f f08a 	uxth.w	r0, sl
 800f686:	4552      	cmp	r2, sl
 800f688:	9000      	str	r0, [sp, #0]
 800f68a:	da12      	bge.n	800f6b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800f68c:	9301      	str	r3, [sp, #4]
 800f68e:	9b00      	ldr	r3, [sp, #0]
 800f690:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f694:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f698:	1a9a      	subs	r2, r3, r2
 800f69a:	f8ad 1010 	strh.w	r1, [sp, #16]
 800f69e:	4631      	mov	r1, r6
 800f6a0:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f6a4:	4640      	mov	r0, r8
 800f6a6:	f8ad 2016 	strh.w	r2, [sp, #22]
 800f6aa:	69ea      	ldr	r2, [r5, #28]
 800f6ac:	f7ff ff7a 	bl	800f5a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f6b0:	9b01      	ldr	r3, [sp, #4]
 800f6b2:	f9b4 2000 	ldrsh.w	r2, [r4]
 800f6b6:	b29f      	uxth	r7, r3
 800f6b8:	429a      	cmp	r2, r3
 800f6ba:	da0d      	bge.n	800f6d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800f6bc:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f6c0:	1aba      	subs	r2, r7, r2
 800f6c2:	f8ad a012 	strh.w	sl, [sp, #18]
 800f6c6:	4631      	mov	r1, r6
 800f6c8:	f8ad 2014 	strh.w	r2, [sp, #20]
 800f6cc:	4640      	mov	r0, r8
 800f6ce:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f6d2:	69ea      	ldr	r2, [r5, #28]
 800f6d4:	f7ff ff66 	bl	800f5a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f6d8:	8822      	ldrh	r2, [r4, #0]
 800f6da:	445f      	add	r7, fp
 800f6dc:	88a3      	ldrh	r3, [r4, #4]
 800f6de:	b2bf      	uxth	r7, r7
 800f6e0:	4413      	add	r3, r2
 800f6e2:	b23a      	sxth	r2, r7
 800f6e4:	b29b      	uxth	r3, r3
 800f6e6:	b219      	sxth	r1, r3
 800f6e8:	4291      	cmp	r1, r2
 800f6ea:	dd0d      	ble.n	800f708 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800f6ec:	1bdb      	subs	r3, r3, r7
 800f6ee:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f6f2:	f8ad a012 	strh.w	sl, [sp, #18]
 800f6f6:	4631      	mov	r1, r6
 800f6f8:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f6fc:	4640      	mov	r0, r8
 800f6fe:	f8ad 9016 	strh.w	r9, [sp, #22]
 800f702:	69ea      	ldr	r2, [r5, #28]
 800f704:	f7ff ff4e 	bl	800f5a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f708:	88e2      	ldrh	r2, [r4, #6]
 800f70a:	8863      	ldrh	r3, [r4, #2]
 800f70c:	4413      	add	r3, r2
 800f70e:	9a00      	ldr	r2, [sp, #0]
 800f710:	444a      	add	r2, r9
 800f712:	b29b      	uxth	r3, r3
 800f714:	fa1f f982 	uxth.w	r9, r2
 800f718:	b219      	sxth	r1, r3
 800f71a:	fa0f f289 	sxth.w	r2, r9
 800f71e:	428a      	cmp	r2, r1
 800f720:	da15      	bge.n	800f74e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800f722:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f726:	eba3 0309 	sub.w	r3, r3, r9
 800f72a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f72e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800f732:	4631      	mov	r1, r6
 800f734:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f738:	f8ad 2012 	strh.w	r2, [sp, #18]
 800f73c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800f740:	69ea      	ldr	r2, [r5, #28]
 800f742:	e001      	b.n	800f748 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800f744:	69ea      	ldr	r2, [r5, #28]
 800f746:	4621      	mov	r1, r4
 800f748:	4640      	mov	r0, r8
 800f74a:	f7ff ff2b 	bl	800f5a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f74e:	4628      	mov	r0, r5
 800f750:	f7ff fe94 	bl	800f47c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800f754:	6861      	ldr	r1, [r4, #4]
 800f756:	4602      	mov	r2, r0
 800f758:	4633      	mov	r3, r6
 800f75a:	6820      	ldr	r0, [r4, #0]
 800f75c:	c303      	stmia	r3!, {r0, r1}
 800f75e:	4611      	mov	r1, r2
 800f760:	4630      	mov	r0, r6
 800f762:	f7fb fab5 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800f766:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800f76a:	2b00      	cmp	r3, #0
 800f76c:	f77f af33 	ble.w	800f5d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f770:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800f774:	2b00      	cmp	r3, #0
 800f776:	f77f af2e 	ble.w	800f5d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800f77a:	4628      	mov	r0, r5
 800f77c:	f7ff fe9a 	bl	800f4b4 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800f780:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800f784:	1a18      	subs	r0, r3, r0
 800f786:	f8ad 0010 	strh.w	r0, [sp, #16]
 800f78a:	4628      	mov	r0, r5
 800f78c:	f7ff fea6 	bl	800f4dc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800f790:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f794:	4631      	mov	r1, r6
 800f796:	1a18      	subs	r0, r3, r0
 800f798:	f8ad 0012 	strh.w	r0, [sp, #18]
 800f79c:	4628      	mov	r0, r5
 800f79e:	682b      	ldr	r3, [r5, #0]
 800f7a0:	689b      	ldr	r3, [r3, #8]
 800f7a2:	4798      	blx	r3
 800f7a4:	e717      	b.n	800f5d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800f7a6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800f7a6:	b570      	push	{r4, r5, r6, lr}
 800f7a8:	1d06      	adds	r6, r0, #4
 800f7aa:	b086      	sub	sp, #24
 800f7ac:	460c      	mov	r4, r1
 800f7ae:	2300      	movs	r3, #0
 800f7b0:	4631      	mov	r1, r6
 800f7b2:	4605      	mov	r5, r0
 800f7b4:	a802      	add	r0, sp, #8
 800f7b6:	9301      	str	r3, [sp, #4]
 800f7b8:	f7ff fc9e 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f7bc:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 800f7c0:	8822      	ldrh	r2, [r4, #0]
 800f7c2:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 800f7c6:	1ad2      	subs	r2, r2, r3
 800f7c8:	8863      	ldrh	r3, [r4, #2]
 800f7ca:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800f7ce:	1a5b      	subs	r3, r3, r1
 800f7d0:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 800f7d4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800f7d8:	aa01      	add	r2, sp, #4
 800f7da:	f8ad 0014 	strh.w	r0, [sp, #20]
 800f7de:	4630      	mov	r0, r6
 800f7e0:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f7e4:	a904      	add	r1, sp, #16
 800f7e6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f7ea:	f7fb fb49 	bl	800ae80 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800f7ee:	9a01      	ldr	r2, [sp, #4]
 800f7f0:	b11a      	cbz	r2, 800f7fa <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 800f7f2:	4621      	mov	r1, r4
 800f7f4:	4628      	mov	r0, r5
 800f7f6:	f7ff fed5 	bl	800f5a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800f7fa:	b006      	add	sp, #24
 800f7fc:	bd70      	pop	{r4, r5, r6, pc}

0800f7fe <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800f7fe:	4602      	mov	r2, r0
 800f800:	b530      	push	{r4, r5, lr}
 800f802:	4604      	mov	r4, r0
 800f804:	b085      	sub	sp, #20
 800f806:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800f80a:	460d      	mov	r5, r1
 800f80c:	466b      	mov	r3, sp
 800f80e:	6851      	ldr	r1, [r2, #4]
 800f810:	c303      	stmia	r3!, {r0, r1}
 800f812:	4629      	mov	r1, r5
 800f814:	4668      	mov	r0, sp
 800f816:	f7fb fa5b 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 800f81a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f81e:	b12b      	cbz	r3, 800f82c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 800f820:	4669      	mov	r1, sp
 800f822:	4620      	mov	r0, r4
 800f824:	f7ff ffbf 	bl	800f7a6 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800f828:	b005      	add	sp, #20
 800f82a:	bd30      	pop	{r4, r5, pc}
 800f82c:	3404      	adds	r4, #4
 800f82e:	a802      	add	r0, sp, #8
 800f830:	4621      	mov	r1, r4
 800f832:	f7ff fc61 	bl	800f0f8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f836:	f8bd 3000 	ldrh.w	r3, [sp]
 800f83a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800f83e:	4669      	mov	r1, sp
 800f840:	4620      	mov	r0, r4
 800f842:	1a9b      	subs	r3, r3, r2
 800f844:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 800f848:	f8ad 3000 	strh.w	r3, [sp]
 800f84c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f850:	1a9b      	subs	r3, r3, r2
 800f852:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f856:	f7fb fada 	bl	800ae0e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800f85a:	e7e5      	b.n	800f828 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

0800f85c <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800f85c:	460b      	mov	r3, r1
 800f85e:	680a      	ldr	r2, [r1, #0]
 800f860:	1d01      	adds	r1, r0, #4
 800f862:	6992      	ldr	r2, [r2, #24]
 800f864:	4618      	mov	r0, r3
 800f866:	4710      	bx	r2

0800f868 <_ZN8touchgfx12TextProviderC1Ev>:
 800f868:	b538      	push	{r3, r4, r5, lr}
 800f86a:	2500      	movs	r5, #0
 800f86c:	2302      	movs	r3, #2
 800f86e:	4604      	mov	r4, r0
 800f870:	220e      	movs	r2, #14
 800f872:	7403      	strb	r3, [r0, #16]
 800f874:	4629      	mov	r1, r5
 800f876:	6145      	str	r5, [r0, #20]
 800f878:	7605      	strb	r5, [r0, #24]
 800f87a:	83c5      	strh	r5, [r0, #30]
 800f87c:	8405      	strh	r5, [r0, #32]
 800f87e:	86c5      	strh	r5, [r0, #54]	; 0x36
 800f880:	8705      	strh	r5, [r0, #56]	; 0x38
 800f882:	87c5      	strh	r5, [r0, #62]	; 0x3e
 800f884:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 800f888:	e9c0 5500 	strd	r5, r5, [r0]
 800f88c:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 800f890:	304c      	adds	r0, #76	; 0x4c
 800f892:	f00d fb92 	bl	801cfba <memset>
 800f896:	2301      	movs	r3, #1
 800f898:	4620      	mov	r0, r4
 800f89a:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 800f89e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800f8a2:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 800f8a6:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 800f8aa:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800f8ae:	f7f3 f947 	bl	8002b40 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800f8b2:	4620      	mov	r0, r4
 800f8b4:	bd38      	pop	{r3, r4, r5, pc}

0800f8b6 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 800f8b6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800f8b8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f8bc:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 800f8be:	fab0 f080 	clz	r0, r0
 800f8c2:	0940      	lsrs	r0, r0, #5
 800f8c4:	4770      	bx	lr

0800f8c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800f8c6:	b530      	push	{r4, r5, lr}
 800f8c8:	2500      	movs	r5, #0
 800f8ca:	2401      	movs	r4, #1
 800f8cc:	6843      	ldr	r3, [r0, #4]
 800f8ce:	b913      	cbnz	r3, 800f8d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800f8d0:	6803      	ldr	r3, [r0, #0]
 800f8d2:	b313      	cbz	r3, 800f91a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f8d4:	6043      	str	r3, [r0, #4]
 800f8d6:	7e03      	ldrb	r3, [r0, #24]
 800f8d8:	b143      	cbz	r3, 800f8ec <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800f8da:	6943      	ldr	r3, [r0, #20]
 800f8dc:	b12b      	cbz	r3, 800f8ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f8de:	881a      	ldrh	r2, [r3, #0]
 800f8e0:	b11a      	cbz	r2, 800f8ea <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800f8e2:	1c9a      	adds	r2, r3, #2
 800f8e4:	6142      	str	r2, [r0, #20]
 800f8e6:	8818      	ldrh	r0, [r3, #0]
 800f8e8:	bd30      	pop	{r4, r5, pc}
 800f8ea:	7605      	strb	r5, [r0, #24]
 800f8ec:	6843      	ldr	r3, [r0, #4]
 800f8ee:	8819      	ldrh	r1, [r3, #0]
 800f8f0:	b199      	cbz	r1, 800f91a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 800f8f2:	1c9a      	adds	r2, r3, #2
 800f8f4:	2902      	cmp	r1, #2
 800f8f6:	6042      	str	r2, [r0, #4]
 800f8f8:	d1f5      	bne.n	800f8e6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800f8fa:	7c03      	ldrb	r3, [r0, #16]
 800f8fc:	2b01      	cmp	r3, #1
 800f8fe:	d8e5      	bhi.n	800f8cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f900:	1c5a      	adds	r2, r3, #1
 800f902:	3302      	adds	r3, #2
 800f904:	7402      	strb	r2, [r0, #16]
 800f906:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 800f90a:	6143      	str	r3, [r0, #20]
 800f90c:	2b00      	cmp	r3, #0
 800f90e:	d0dd      	beq.n	800f8cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f910:	881b      	ldrh	r3, [r3, #0]
 800f912:	2b00      	cmp	r3, #0
 800f914:	d0da      	beq.n	800f8cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f916:	7604      	strb	r4, [r0, #24]
 800f918:	e7d8      	b.n	800f8cc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800f91a:	2000      	movs	r0, #0
 800f91c:	e7e4      	b.n	800f8e8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800f91e:	6001      	str	r1, [r0, #0]
 800f920:	2100      	movs	r1, #0
 800f922:	b430      	push	{r4, r5}
 800f924:	6041      	str	r1, [r0, #4]
 800f926:	6815      	ldr	r5, [r2, #0]
 800f928:	6085      	str	r5, [r0, #8]
 800f92a:	6852      	ldr	r2, [r2, #4]
 800f92c:	6443      	str	r3, [r0, #68]	; 0x44
 800f92e:	9b02      	ldr	r3, [sp, #8]
 800f930:	60c2      	str	r2, [r0, #12]
 800f932:	7401      	strb	r1, [r0, #16]
 800f934:	6141      	str	r1, [r0, #20]
 800f936:	7601      	strb	r1, [r0, #24]
 800f938:	8701      	strh	r1, [r0, #56]	; 0x38
 800f93a:	8401      	strh	r1, [r0, #32]
 800f93c:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800f940:	6483      	str	r3, [r0, #72]	; 0x48
 800f942:	bc30      	pop	{r4, r5}
 800f944:	f7f3 b8fc 	b.w	8002b40 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800f948 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 800f948:	b408      	push	{r3}
 800f94a:	b510      	push	{r4, lr}
 800f94c:	b085      	sub	sp, #20
 800f94e:	ac07      	add	r4, sp, #28
 800f950:	f854 3b04 	ldr.w	r3, [r4], #4
 800f954:	9300      	str	r3, [sp, #0]
 800f956:	4613      	mov	r3, r2
 800f958:	4622      	mov	r2, r4
 800f95a:	9403      	str	r4, [sp, #12]
 800f95c:	f7ff ffdf 	bl	800f91e <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f960:	b005      	add	sp, #20
 800f962:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f966:	b001      	add	sp, #4
 800f968:	4770      	bx	lr

0800f96a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800f96a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f96c:	4605      	mov	r5, r0
 800f96e:	4608      	mov	r0, r1
 800f970:	b1f1      	cbz	r1, 800f9b0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 800f972:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 800f976:	460b      	mov	r3, r1
 800f978:	f101 0708 	add.w	r7, r1, #8
 800f97c:	4622      	mov	r2, r4
 800f97e:	6818      	ldr	r0, [r3, #0]
 800f980:	3308      	adds	r3, #8
 800f982:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800f986:	4626      	mov	r6, r4
 800f988:	42bb      	cmp	r3, r7
 800f98a:	c603      	stmia	r6!, {r0, r1}
 800f98c:	4634      	mov	r4, r6
 800f98e:	d1f6      	bne.n	800f97e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800f990:	6818      	ldr	r0, [r3, #0]
 800f992:	6030      	str	r0, [r6, #0]
 800f994:	4610      	mov	r0, r2
 800f996:	889b      	ldrh	r3, [r3, #4]
 800f998:	80b3      	strh	r3, [r6, #4]
 800f99a:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 800f99e:	015b      	lsls	r3, r3, #5
 800f9a0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800f9a4:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 800f9a8:	430b      	orrs	r3, r1
 800f9aa:	425b      	negs	r3, r3
 800f9ac:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800f9b0:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f9b2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800f9b2:	b538      	push	{r3, r4, r5, lr}
 800f9b4:	460c      	mov	r4, r1
 800f9b6:	6811      	ldr	r1, [r2, #0]
 800f9b8:	4610      	mov	r0, r2
 800f9ba:	68cd      	ldr	r5, [r1, #12]
 800f9bc:	4619      	mov	r1, r3
 800f9be:	47a8      	blx	r5
 800f9c0:	2800      	cmp	r0, #0
 800f9c2:	bf08      	it	eq
 800f9c4:	4620      	moveq	r0, r4
 800f9c6:	bd38      	pop	{r3, r4, r5, pc}

0800f9c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800f9c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f9ca:	4604      	mov	r4, r0
 800f9cc:	4615      	mov	r5, r2
 800f9ce:	4608      	mov	r0, r1
 800f9d0:	b93a      	cbnz	r2, 800f9e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800f9d2:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800f9d6:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 800f9da:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f9de:	4628      	mov	r0, r5
 800f9e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f9e2:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800f9e6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 800f9ea:	8893      	ldrh	r3, [r2, #4]
 800f9ec:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800f9f0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800f9f4:	79ee      	ldrb	r6, [r5, #7]
 800f9f6:	4316      	orrs	r6, r2
 800f9f8:	19da      	adds	r2, r3, r7
 800f9fa:	b291      	uxth	r1, r2
 800f9fc:	b2b7      	uxth	r7, r6
 800f9fe:	291d      	cmp	r1, #29
 800fa00:	d87b      	bhi.n	800fafa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800fa02:	2201      	movs	r2, #1
 800fa04:	10f6      	asrs	r6, r6, #3
 800fa06:	408a      	lsls	r2, r1
 800fa08:	4974      	ldr	r1, [pc, #464]	; (800fbdc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 800fa0a:	420a      	tst	r2, r1
 800fa0c:	d12e      	bne.n	800fa6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800fa0e:	f412 7f60 	tst.w	r2, #896	; 0x380
 800fa12:	d072      	beq.n	800fafa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x132>
 800fa14:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 800fa18:	462b      	mov	r3, r5
 800fa1a:	f105 0e08 	add.w	lr, r5, #8
 800fa1e:	4615      	mov	r5, r2
 800fa20:	6818      	ldr	r0, [r3, #0]
 800fa22:	3308      	adds	r3, #8
 800fa24:	f853 1c04 	ldr.w	r1, [r3, #-4]
 800fa28:	4694      	mov	ip, r2
 800fa2a:	4573      	cmp	r3, lr
 800fa2c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800fa30:	4662      	mov	r2, ip
 800fa32:	d1f5      	bne.n	800fa20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 800fa34:	6818      	ldr	r0, [r3, #0]
 800fa36:	f8cc 0000 	str.w	r0, [ip]
 800fa3a:	889b      	ldrh	r3, [r3, #4]
 800fa3c:	f8ac 3004 	strh.w	r3, [ip, #4]
 800fa40:	b2b3      	uxth	r3, r6
 800fa42:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800fa46:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 800fa4a:	1aca      	subs	r2, r1, r3
 800fa4c:	1bcf      	subs	r7, r1, r7
 800fa4e:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800fa52:	b292      	uxth	r2, r2
 800fa54:	1afb      	subs	r3, r7, r3
 800fa56:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 800fa5a:	10d2      	asrs	r2, r2, #3
 800fa5c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800fa60:	4302      	orrs	r2, r0
 800fa62:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 800fa66:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800fa6a:	e7b8      	b.n	800f9de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fa6c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800fa6e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800fa72:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 800fa74:	f640 6333 	movw	r3, #3635	; 0xe33
 800fa78:	4299      	cmp	r1, r3
 800fa7a:	d110      	bne.n	800fa9e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 800fa7c:	6803      	ldr	r3, [r0, #0]
 800fa7e:	68db      	ldr	r3, [r3, #12]
 800fa80:	4798      	blx	r3
 800fa82:	7b41      	ldrb	r1, [r0, #13]
 800fa84:	00cb      	lsls	r3, r1, #3
 800fa86:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fa8a:	7a03      	ldrb	r3, [r0, #8]
 800fa8c:	0648      	lsls	r0, r1, #25
 800fa8e:	ea43 0302 	orr.w	r3, r3, r2
 800fa92:	bf44      	itt	mi
 800fa94:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fa98:	b21b      	sxthmi	r3, r3
 800fa9a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fa9e:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 800faa2:	462a      	mov	r2, r5
 800faa4:	f105 0c08 	add.w	ip, r5, #8
 800faa8:	443b      	add	r3, r7
 800faaa:	4433      	add	r3, r6
 800faac:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 800fab0:	b29b      	uxth	r3, r3
 800fab2:	4635      	mov	r5, r6
 800fab4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fab8:	6810      	ldr	r0, [r2, #0]
 800faba:	3208      	adds	r2, #8
 800fabc:	f852 1c04 	ldr.w	r1, [r2, #-4]
 800fac0:	4637      	mov	r7, r6
 800fac2:	4562      	cmp	r2, ip
 800fac4:	c703      	stmia	r7!, {r0, r1}
 800fac6:	463e      	mov	r6, r7
 800fac8:	d1f6      	bne.n	800fab8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 800faca:	6810      	ldr	r0, [r2, #0]
 800facc:	6038      	str	r0, [r7, #0]
 800face:	8892      	ldrh	r2, [r2, #4]
 800fad0:	80ba      	strh	r2, [r7, #4]
 800fad2:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800fad6:	10db      	asrs	r3, r3, #3
 800fad8:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800fadc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fae0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fae4:	4313      	orrs	r3, r2
 800fae6:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 800faea:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800faee:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 800faf2:	1a9b      	subs	r3, r3, r2
 800faf4:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800faf8:	e771      	b.n	800f9de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800fafa:	f023 0204 	bic.w	r2, r3, #4
 800fafe:	f640 611b 	movw	r1, #3611	; 0xe1b
 800fb02:	428a      	cmp	r2, r1
 800fb04:	d003      	beq.n	800fb0e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x146>
 800fb06:	f640 621d 	movw	r2, #3613	; 0xe1d
 800fb0a:	4293      	cmp	r3, r2
 800fb0c:	d120      	bne.n	800fb50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x188>
 800fb0e:	3b01      	subs	r3, #1
 800fb10:	4602      	mov	r2, r0
 800fb12:	4629      	mov	r1, r5
 800fb14:	4620      	mov	r0, r4
 800fb16:	b29b      	uxth	r3, r3
 800fb18:	f7ff ff4b 	bl	800f9b2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fb1c:	7b41      	ldrb	r1, [r0, #13]
 800fb1e:	00cb      	lsls	r3, r1, #3
 800fb20:	0649      	lsls	r1, r1, #25
 800fb22:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fb26:	7a03      	ldrb	r3, [r0, #8]
 800fb28:	ea43 0302 	orr.w	r3, r3, r2
 800fb2c:	bf44      	itt	mi
 800fb2e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fb32:	b21b      	sxthmi	r3, r3
 800fb34:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fb38:	7b6b      	ldrb	r3, [r5, #13]
 800fb3a:	7aaa      	ldrb	r2, [r5, #10]
 800fb3c:	005b      	lsls	r3, r3, #1
 800fb3e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fb42:	4313      	orrs	r3, r2
 800fb44:	115a      	asrs	r2, r3, #5
 800fb46:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800fb4a:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800fb4e:	e035      	b.n	800fbbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 800fb50:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800fb54:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800fb58:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800fb5c:	7a2a      	ldrb	r2, [r5, #8]
 800fb5e:	ea42 0201 	orr.w	r2, r2, r1
 800fb62:	f640 6109 	movw	r1, #3593	; 0xe09
 800fb66:	bf1c      	itt	ne
 800fb68:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800fb6c:	b212      	sxthne	r2, r2
 800fb6e:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 800fb72:	f023 0210 	bic.w	r2, r3, #16
 800fb76:	428a      	cmp	r2, r1
 800fb78:	d003      	beq.n	800fb82 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 800fb7a:	f640 6213 	movw	r2, #3603	; 0xe13
 800fb7e:	4293      	cmp	r3, r2
 800fb80:	d129      	bne.n	800fbd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 800fb82:	7b6e      	ldrb	r6, [r5, #13]
 800fb84:	4629      	mov	r1, r5
 800fb86:	0076      	lsls	r6, r6, #1
 800fb88:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800fb8c:	7aae      	ldrb	r6, [r5, #10]
 800fb8e:	4316      	orrs	r6, r2
 800fb90:	f640 6213 	movw	r2, #3603	; 0xe13
 800fb94:	4293      	cmp	r3, r2
 800fb96:	4602      	mov	r2, r0
 800fb98:	4620      	mov	r0, r4
 800fb9a:	bf16      	itet	ne
 800fb9c:	f103 33ff 	addne.w	r3, r3, #4294967295
 800fba0:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800fba4:	b29b      	uxthne	r3, r3
 800fba6:	f7ff ff04 	bl	800f9b2 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800fbaa:	7b43      	ldrb	r3, [r0, #13]
 800fbac:	7a82      	ldrb	r2, [r0, #10]
 800fbae:	005b      	lsls	r3, r3, #1
 800fbb0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800fbb4:	4313      	orrs	r3, r2
 800fbb6:	1af6      	subs	r6, r6, r3
 800fbb8:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 800fbbc:	7b69      	ldrb	r1, [r5, #13]
 800fbbe:	00cb      	lsls	r3, r1, #3
 800fbc0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fbc4:	7a2b      	ldrb	r3, [r5, #8]
 800fbc6:	4313      	orrs	r3, r2
 800fbc8:	064a      	lsls	r2, r1, #25
 800fbca:	bf44      	itt	mi
 800fbcc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fbd0:	b21b      	sxthmi	r3, r3
 800fbd2:	1bdb      	subs	r3, r3, r7
 800fbd4:	e747      	b.n	800fa66 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 800fbd6:	2300      	movs	r3, #0
 800fbd8:	e7b7      	b.n	800fb4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x182>
 800fbda:	bf00      	nop
 800fbdc:	3fc00079 	.word	0x3fc00079

0800fbe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800fbe0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fbe4:	4604      	mov	r4, r0
 800fbe6:	b942      	cbnz	r2, 800fbfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800fbe8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800fbec:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 800fbf0:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 800fbf4:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 800fbf8:	e047      	b.n	800fc8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800fbfa:	7b51      	ldrb	r1, [r2, #13]
 800fbfc:	8893      	ldrh	r3, [r2, #4]
 800fbfe:	010d      	lsls	r5, r1, #4
 800fc00:	f405 7080 	and.w	r0, r5, #256	; 0x100
 800fc04:	79d5      	ldrb	r5, [r2, #7]
 800fc06:	4305      	orrs	r5, r0
 800fc08:	2d04      	cmp	r5, #4
 800fc0a:	bfcc      	ite	gt
 800fc0c:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 800fc10:	f04f 0e01 	movle.w	lr, #1
 800fc14:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800fc18:	f200 80ab 	bhi.w	800fd72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 800fc1c:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800fc20:	4283      	cmp	r3, r0
 800fc22:	d216      	bcs.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fc24:	f240 605b 	movw	r0, #1627	; 0x65b
 800fc28:	4283      	cmp	r3, r0
 800fc2a:	d859      	bhi.n	800fce0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 800fc2c:	f240 6057 	movw	r0, #1623	; 0x657
 800fc30:	4283      	cmp	r3, r0
 800fc32:	d20e      	bcs.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fc34:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fc38:	d24a      	bcs.n	800fcd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 800fc3a:	f240 604e 	movw	r0, #1614	; 0x64e
 800fc3e:	4283      	cmp	r3, r0
 800fc40:	d207      	bcs.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fc42:	f240 601a 	movw	r0, #1562	; 0x61a
 800fc46:	4283      	cmp	r3, r0
 800fc48:	d02a      	beq.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fc4a:	d821      	bhi.n	800fc90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 800fc4c:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800fc50:	d35b      	bcc.n	800fd0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fc52:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 800fc56:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fc5a:	f040 80d0 	bne.w	800fdfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800fc5e:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 800fc62:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fc66:	f040 80ca 	bne.w	800fdfe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 800fc6a:	00cb      	lsls	r3, r1, #3
 800fc6c:	0649      	lsls	r1, r1, #25
 800fc6e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fc72:	7a13      	ldrb	r3, [r2, #8]
 800fc74:	ea43 0300 	orr.w	r3, r3, r0
 800fc78:	bf44      	itt	mi
 800fc7a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fc7e:	b21b      	sxthmi	r3, r3
 800fc80:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fc84:	1b5d      	subs	r5, r3, r5
 800fc86:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800fc8a:	4610      	mov	r0, r2
 800fc8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fc90:	f240 604b 	movw	r0, #1611	; 0x64b
 800fc94:	4283      	cmp	r3, r0
 800fc96:	d338      	bcc.n	800fd0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fc98:	f240 604c 	movw	r0, #1612	; 0x64c
 800fc9c:	4283      	cmp	r3, r0
 800fc9e:	d9d8      	bls.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fca0:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 800fca4:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 800fca8:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fcac:	f040 80f3 	bne.w	800fe96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 800fcb0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fcb4:	f040 80ef 	bne.w	800fe96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 800fcb8:	00cb      	lsls	r3, r1, #3
 800fcba:	064e      	lsls	r6, r1, #25
 800fcbc:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fcc0:	7a13      	ldrb	r3, [r2, #8]
 800fcc2:	ea43 0300 	orr.w	r3, r3, r0
 800fcc6:	bf44      	itt	mi
 800fcc8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fccc:	b21b      	sxthmi	r3, r3
 800fcce:	e7d9      	b.n	800fc84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 800fcd0:	f240 6054 	movw	r0, #1620	; 0x654
 800fcd4:	4283      	cmp	r3, r0
 800fcd6:	d8e3      	bhi.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fcd8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800fcdc:	d9e0      	bls.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fcde:	e7b8      	b.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fce0:	f240 6074 	movw	r0, #1652	; 0x674
 800fce4:	4283      	cmp	r3, r0
 800fce6:	d0b4      	beq.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fce8:	d82d      	bhi.n	800fd46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 800fcea:	f240 605e 	movw	r0, #1630	; 0x65e
 800fcee:	4283      	cmp	r3, r0
 800fcf0:	d804      	bhi.n	800fcfc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 800fcf2:	f240 605d 	movw	r0, #1629	; 0x65d
 800fcf6:	4283      	cmp	r3, r0
 800fcf8:	d3d2      	bcc.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fcfa:	e7aa      	b.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fcfc:	f240 605f 	movw	r0, #1631	; 0x65f
 800fd00:	4283      	cmp	r3, r0
 800fd02:	d0cd      	beq.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fd04:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800fd08:	d0a3      	beq.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fd0a:	00cb      	lsls	r3, r1, #3
 800fd0c:	0649      	lsls	r1, r1, #25
 800fd0e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800fd12:	7a13      	ldrb	r3, [r2, #8]
 800fd14:	ea43 0300 	orr.w	r3, r3, r0
 800fd18:	bf44      	itt	mi
 800fd1a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fd1e:	b21b      	sxthmi	r3, r3
 800fd20:	1b5d      	subs	r5, r3, r5
 800fd22:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fd26:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800fd2a:	7b53      	ldrb	r3, [r2, #13]
 800fd2c:	015b      	lsls	r3, r3, #5
 800fd2e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800fd32:	7993      	ldrb	r3, [r2, #6]
 800fd34:	430b      	orrs	r3, r1
 800fd36:	2105      	movs	r1, #5
 800fd38:	005b      	lsls	r3, r3, #1
 800fd3a:	fb93 f3f1 	sdiv	r3, r3, r1
 800fd3e:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800fd42:	440b      	add	r3, r1
 800fd44:	e756      	b.n	800fbf4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800fd46:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800fd4a:	4283      	cmp	r3, r0
 800fd4c:	d809      	bhi.n	800fd62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 800fd4e:	f240 60df 	movw	r0, #1759	; 0x6df
 800fd52:	4283      	cmp	r3, r0
 800fd54:	f4bf af7d 	bcs.w	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fd58:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800fd5c:	2b05      	cmp	r3, #5
 800fd5e:	d8d4      	bhi.n	800fd0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fd60:	e777      	b.n	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fd62:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800fd66:	4283      	cmp	r3, r0
 800fd68:	d09a      	beq.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fd6a:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800fd6e:	4283      	cmp	r3, r0
 800fd70:	e7ca      	b.n	800fd08 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800fd72:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800fd76:	d22b      	bcs.n	800fdd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 800fd78:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800fd7c:	4283      	cmp	r3, r0
 800fd7e:	d28f      	bcs.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fd80:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800fd84:	4283      	cmp	r3, r0
 800fd86:	d816      	bhi.n	800fdb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 800fd88:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800fd8c:	4283      	cmp	r3, r0
 800fd8e:	f4bf af60 	bcs.w	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fd92:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800fd96:	4283      	cmp	r3, r0
 800fd98:	d80a      	bhi.n	800fdb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 800fd9a:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800fd9e:	4283      	cmp	r3, r0
 800fda0:	f4bf af57 	bcs.w	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fda4:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800fda8:	4283      	cmp	r3, r0
 800fdaa:	f43f af79 	beq.w	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fdae:	e7ac      	b.n	800fd0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 800fdb0:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800fdb4:	e7f8      	b.n	800fda8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 800fdb6:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800fdba:	4283      	cmp	r3, r0
 800fdbc:	d802      	bhi.n	800fdc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 800fdbe:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800fdc2:	e798      	b.n	800fcf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 800fdc4:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800fdc8:	4283      	cmp	r3, r0
 800fdca:	f47f af42 	bne.w	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fdce:	e767      	b.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fdd0:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800fdd4:	4283      	cmp	r3, r0
 800fdd6:	f43f af63 	beq.w	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fdda:	d802      	bhi.n	800fde2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 800fddc:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800fde0:	e7f2      	b.n	800fdc8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 800fde2:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800fde6:	4283      	cmp	r3, r0
 800fde8:	d805      	bhi.n	800fdf6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 800fdea:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800fdee:	4283      	cmp	r3, r0
 800fdf0:	f4ff af2f 	bcc.w	800fc52 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 800fdf4:	e754      	b.n	800fca0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 800fdf6:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800fdfa:	4283      	cmp	r3, r0
 800fdfc:	e7af      	b.n	800fd5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 800fdfe:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800fe02:	4617      	mov	r7, r2
 800fe04:	f102 0808 	add.w	r8, r2, #8
 800fe08:	4666      	mov	r6, ip
 800fe0a:	6838      	ldr	r0, [r7, #0]
 800fe0c:	3708      	adds	r7, #8
 800fe0e:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800fe12:	46e6      	mov	lr, ip
 800fe14:	4547      	cmp	r7, r8
 800fe16:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800fe1a:	46f4      	mov	ip, lr
 800fe1c:	d1f5      	bne.n	800fe0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 800fe1e:	6838      	ldr	r0, [r7, #0]
 800fe20:	f8ce 0000 	str.w	r0, [lr]
 800fe24:	88b9      	ldrh	r1, [r7, #4]
 800fe26:	f8ae 1004 	strh.w	r1, [lr, #4]
 800fe2a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800fe2e:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800fe32:	d009      	beq.n	800fe48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 800fe34:	7b51      	ldrb	r1, [r2, #13]
 800fe36:	7992      	ldrb	r2, [r2, #6]
 800fe38:	0149      	lsls	r1, r1, #5
 800fe3a:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fe3e:	4311      	orrs	r1, r2
 800fe40:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fe44:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800fe48:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fe4c:	b2ad      	uxth	r5, r5
 800fe4e:	d00d      	beq.n	800fe6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 800fe50:	442b      	add	r3, r5
 800fe52:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800fe56:	b29b      	uxth	r3, r3
 800fe58:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fe5c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800fe60:	10db      	asrs	r3, r3, #3
 800fe62:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fe66:	4313      	orrs	r3, r2
 800fe68:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800fe6c:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800fe70:	00cb      	lsls	r3, r1, #3
 800fe72:	064f      	lsls	r7, r1, #25
 800fe74:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800fe78:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800fe7c:	ea43 0302 	orr.w	r3, r3, r2
 800fe80:	bf44      	itt	mi
 800fe82:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800fe86:	b21b      	sxthmi	r3, r3
 800fe88:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 800fe8c:	1b5b      	subs	r3, r3, r5
 800fe8e:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 800fe92:	4632      	mov	r2, r6
 800fe94:	e6f9      	b.n	800fc8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 800fe96:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 800fe9a:	4617      	mov	r7, r2
 800fe9c:	f102 0908 	add.w	r9, r2, #8
 800fea0:	4666      	mov	r6, ip
 800fea2:	6838      	ldr	r0, [r7, #0]
 800fea4:	3708      	adds	r7, #8
 800fea6:	f857 1c04 	ldr.w	r1, [r7, #-4]
 800feaa:	46e0      	mov	r8, ip
 800feac:	454f      	cmp	r7, r9
 800feae:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800feb2:	46c4      	mov	ip, r8
 800feb4:	d1f5      	bne.n	800fea2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 800feb6:	6838      	ldr	r0, [r7, #0]
 800feb8:	f8c8 0000 	str.w	r0, [r8]
 800febc:	88b9      	ldrh	r1, [r7, #4]
 800febe:	f8a8 1004 	strh.w	r1, [r8, #4]
 800fec2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 800fec6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800feca:	d009      	beq.n	800fee0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 800fecc:	7b51      	ldrb	r1, [r2, #13]
 800fece:	7992      	ldrb	r2, [r2, #6]
 800fed0:	0149      	lsls	r1, r1, #5
 800fed2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800fed6:	4311      	orrs	r1, r2
 800fed8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800fedc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 800fee0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800fee4:	d00e      	beq.n	800ff04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800fee6:	eba3 030e 	sub.w	r3, r3, lr
 800feea:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 800feee:	b29b      	uxth	r3, r3
 800fef0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800fef4:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800fef8:	10db      	asrs	r3, r3, #3
 800fefa:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800fefe:	4313      	orrs	r3, r2
 800ff00:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800ff04:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 800ff08:	00cb      	lsls	r3, r1, #3
 800ff0a:	0648      	lsls	r0, r1, #25
 800ff0c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ff10:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 800ff14:	ea43 0302 	orr.w	r3, r3, r2
 800ff18:	bf44      	itt	mi
 800ff1a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ff1e:	b21b      	sxthmi	r3, r3
 800ff20:	1b5d      	subs	r5, r3, r5
 800ff22:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 800ff26:	e7b4      	b.n	800fe92 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

0800ff28 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800ff28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff2c:	461e      	mov	r6, r3
 800ff2e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ff30:	4604      	mov	r4, r0
 800ff32:	4617      	mov	r7, r2
 800ff34:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ff38:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ff3c:	f7f2 fdbe 	bl	8002abc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ff40:	4605      	mov	r5, r0
 800ff42:	b918      	cbnz	r0, 800ff4c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 800ff44:	6030      	str	r0, [r6, #0]
 800ff46:	4628      	mov	r0, r5
 800ff48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ff4c:	683b      	ldr	r3, [r7, #0]
 800ff4e:	4601      	mov	r1, r0
 800ff50:	4638      	mov	r0, r7
 800ff52:	68db      	ldr	r3, [r3, #12]
 800ff54:	4798      	blx	r3
 800ff56:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800ff5a:	4602      	mov	r2, r0
 800ff5c:	6030      	str	r0, [r6, #0]
 800ff5e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800ff62:	d213      	bcs.n	800ff8c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 800ff64:	4643      	mov	r3, r8
 800ff66:	4639      	mov	r1, r7
 800ff68:	4620      	mov	r0, r4
 800ff6a:	f7ff fe39 	bl	800fbe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800ff6e:	6030      	str	r0, [r6, #0]
 800ff70:	6833      	ldr	r3, [r6, #0]
 800ff72:	b143      	cbz	r3, 800ff86 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 800ff74:	7b5a      	ldrb	r2, [r3, #13]
 800ff76:	7a9b      	ldrb	r3, [r3, #10]
 800ff78:	0052      	lsls	r2, r2, #1
 800ff7a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800ff7e:	4313      	orrs	r3, r2
 800ff80:	bf0c      	ite	eq
 800ff82:	2301      	moveq	r3, #1
 800ff84:	2300      	movne	r3, #0
 800ff86:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 800ff8a:	e7dc      	b.n	800ff46 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 800ff8c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800ff90:	b29b      	uxth	r3, r3
 800ff92:	2b7f      	cmp	r3, #127	; 0x7f
 800ff94:	d804      	bhi.n	800ffa0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 800ff96:	4639      	mov	r1, r7
 800ff98:	4620      	mov	r0, r4
 800ff9a:	f7ff fd15 	bl	800f9c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800ff9e:	e7e6      	b.n	800ff6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800ffa0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 800ffa4:	2b00      	cmp	r3, #0
 800ffa6:	d0e3      	beq.n	800ff70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800ffa8:	f640 1302 	movw	r3, #2306	; 0x902
 800ffac:	429d      	cmp	r5, r3
 800ffae:	d1df      	bne.n	800ff70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 800ffb0:	4601      	mov	r1, r0
 800ffb2:	4620      	mov	r0, r4
 800ffb4:	f7ff fcd9 	bl	800f96a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800ffb8:	e7d9      	b.n	800ff6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0800ffba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 800ffba:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ffbe:	461e      	mov	r6, r3
 800ffc0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800ffc2:	4604      	mov	r4, r0
 800ffc4:	4617      	mov	r7, r2
 800ffc6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800ffca:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 800ffce:	f7f2 fd75 	bl	8002abc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800ffd2:	4605      	mov	r5, r0
 800ffd4:	b918      	cbnz	r0, 800ffde <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 800ffd6:	6030      	str	r0, [r6, #0]
 800ffd8:	4628      	mov	r0, r5
 800ffda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ffde:	683b      	ldr	r3, [r7, #0]
 800ffe0:	4601      	mov	r1, r0
 800ffe2:	4638      	mov	r0, r7
 800ffe4:	f8d3 9008 	ldr.w	r9, [r3, #8]
 800ffe8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800ffec:	47c8      	blx	r9
 800ffee:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800fff2:	4602      	mov	r2, r0
 800fff4:	6030      	str	r0, [r6, #0]
 800fff6:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800fffa:	d213      	bcs.n	8010024 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 800fffc:	4643      	mov	r3, r8
 800fffe:	4639      	mov	r1, r7
 8010000:	4620      	mov	r0, r4
 8010002:	f7ff fded 	bl	800fbe0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8010006:	6030      	str	r0, [r6, #0]
 8010008:	6833      	ldr	r3, [r6, #0]
 801000a:	b143      	cbz	r3, 801001e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801000c:	7b5a      	ldrb	r2, [r3, #13]
 801000e:	7a9b      	ldrb	r3, [r3, #10]
 8010010:	0052      	lsls	r2, r2, #1
 8010012:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010016:	4313      	orrs	r3, r2
 8010018:	bf0c      	ite	eq
 801001a:	2301      	moveq	r3, #1
 801001c:	2300      	movne	r3, #0
 801001e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8010022:	e7d9      	b.n	800ffd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8010024:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8010028:	b29b      	uxth	r3, r3
 801002a:	2b7f      	cmp	r3, #127	; 0x7f
 801002c:	d804      	bhi.n	8010038 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801002e:	4639      	mov	r1, r7
 8010030:	4620      	mov	r0, r4
 8010032:	f7ff fcc9 	bl	800f9c8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8010036:	e7e6      	b.n	8010006 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8010038:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801003c:	2b00      	cmp	r3, #0
 801003e:	d0e3      	beq.n	8010008 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8010040:	f640 1302 	movw	r3, #2306	; 0x902
 8010044:	429d      	cmp	r5, r3
 8010046:	d1df      	bne.n	8010008 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8010048:	4601      	mov	r1, r0
 801004a:	4620      	mov	r0, r4
 801004c:	f7ff fc8d 	bl	800f96a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8010050:	e7d9      	b.n	8010006 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08010052 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8010052:	b510      	push	{r4, lr}
 8010054:	4604      	mov	r4, r0
 8010056:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801005a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801005c:	b1e1      	cbz	r1, 8010098 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 801005e:	2b0a      	cmp	r3, #10
 8010060:	d02d      	beq.n	80100be <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8010062:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8010064:	3901      	subs	r1, #1
 8010066:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801006a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801006c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8010070:	1c51      	adds	r1, r2, #1
 8010072:	b289      	uxth	r1, r1
 8010074:	2901      	cmp	r1, #1
 8010076:	bf8a      	itet	hi
 8010078:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801007c:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801007e:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8010080:	1c5a      	adds	r2, r3, #1
 8010082:	8722      	strh	r2, [r4, #56]	; 0x38
 8010084:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8010086:	4413      	add	r3, r2
 8010088:	b29b      	uxth	r3, r3
 801008a:	2b09      	cmp	r3, #9
 801008c:	bf88      	it	hi
 801008e:	3b0a      	subhi	r3, #10
 8010090:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8010094:	8458      	strh	r0, [r3, #34]	; 0x22
 8010096:	e7de      	b.n	8010056 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8010098:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801009a:	2b0a      	cmp	r3, #10
 801009c:	d00f      	beq.n	80100be <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 801009e:	4620      	mov	r0, r4
 80100a0:	f7ff fc11 	bl	800f8c6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80100a4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80100a6:	1c5a      	adds	r2, r3, #1
 80100a8:	8722      	strh	r2, [r4, #56]	; 0x38
 80100aa:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80100ac:	4413      	add	r3, r2
 80100ae:	b29b      	uxth	r3, r3
 80100b0:	2b09      	cmp	r3, #9
 80100b2:	bf88      	it	hi
 80100b4:	3b0a      	subhi	r3, #10
 80100b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80100ba:	8458      	strh	r0, [r3, #34]	; 0x22
 80100bc:	e7ec      	b.n	8010098 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80100be:	bd10      	pop	{r4, pc}

080100c0 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80100c0:	b538      	push	{r3, r4, r5, lr}
 80100c2:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80100c4:	4604      	mov	r4, r0
 80100c6:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80100ca:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80100cc:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80100ce:	3a01      	subs	r2, #1
 80100d0:	8702      	strh	r2, [r0, #56]	; 0x38
 80100d2:	1c5a      	adds	r2, r3, #1
 80100d4:	b292      	uxth	r2, r2
 80100d6:	2a09      	cmp	r2, #9
 80100d8:	bf8a      	itet	hi
 80100da:	3b09      	subhi	r3, #9
 80100dc:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80100de:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80100e0:	f7ff ffb7 	bl	8010052 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80100e4:	8c23      	ldrh	r3, [r4, #32]
 80100e6:	2b01      	cmp	r3, #1
 80100e8:	bf9c      	itt	ls
 80100ea:	3301      	addls	r3, #1
 80100ec:	8423      	strhls	r3, [r4, #32]
 80100ee:	8be3      	ldrh	r3, [r4, #30]
 80100f0:	b90b      	cbnz	r3, 80100f6 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80100f2:	2302      	movs	r3, #2
 80100f4:	83e3      	strh	r3, [r4, #30]
 80100f6:	8be3      	ldrh	r3, [r4, #30]
 80100f8:	4628      	mov	r0, r5
 80100fa:	3b01      	subs	r3, #1
 80100fc:	b29b      	uxth	r3, r3
 80100fe:	83e3      	strh	r3, [r4, #30]
 8010100:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010104:	8365      	strh	r5, [r4, #26]
 8010106:	bd38      	pop	{r3, r4, r5, pc}

08010108 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8010108:	428a      	cmp	r2, r1
 801010a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801010e:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8010110:	d932      	bls.n	8010178 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8010112:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8010114:	1a54      	subs	r4, r2, r1
 8010116:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801011a:	19ee      	adds	r6, r5, r7
 801011c:	fa1f fe84 	uxth.w	lr, r4
 8010120:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8010124:	3e01      	subs	r6, #1
 8010126:	b2b4      	uxth	r4, r6
 8010128:	eba4 090e 	sub.w	r9, r4, lr
 801012c:	fa1f f989 	uxth.w	r9, r9
 8010130:	2c09      	cmp	r4, #9
 8010132:	4626      	mov	r6, r4
 8010134:	bf88      	it	hi
 8010136:	f1a4 060a 	subhi.w	r6, r4, #10
 801013a:	f1bc 0f00 	cmp.w	ip, #0
 801013e:	f104 34ff 	add.w	r4, r4, #4294967295
 8010142:	bf08      	it	eq
 8010144:	f04f 0c02 	moveq.w	ip, #2
 8010148:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801014c:	b2a4      	uxth	r4, r4
 801014e:	f10c 3cff 	add.w	ip, ip, #4294967295
 8010152:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8010156:	454c      	cmp	r4, r9
 8010158:	fa1f fc8c 	uxth.w	ip, ip
 801015c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8010160:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8010164:	d1e4      	bne.n	8010130 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8010166:	eba5 050e 	sub.w	r5, r5, lr
 801016a:	eb0e 0408 	add.w	r4, lr, r8
 801016e:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8010172:	8705      	strh	r5, [r0, #56]	; 0x38
 8010174:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8010178:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801017a:	250a      	movs	r5, #10
 801017c:	1a64      	subs	r4, r4, r1
 801017e:	4439      	add	r1, r7
 8010180:	b289      	uxth	r1, r1
 8010182:	8704      	strh	r4, [r0, #56]	; 0x38
 8010184:	2909      	cmp	r1, #9
 8010186:	bf88      	it	hi
 8010188:	390a      	subhi	r1, #10
 801018a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801018c:	b18a      	cbz	r2, 80101b2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 801018e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8010190:	3a01      	subs	r2, #1
 8010192:	3101      	adds	r1, #1
 8010194:	b292      	uxth	r2, r2
 8010196:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801019a:	8701      	strh	r1, [r0, #56]	; 0x38
 801019c:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 801019e:	b901      	cbnz	r1, 80101a2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 80101a0:	86c5      	strh	r5, [r0, #54]	; 0x36
 80101a2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80101a4:	3901      	subs	r1, #1
 80101a6:	b289      	uxth	r1, r1
 80101a8:	86c1      	strh	r1, [r0, #54]	; 0x36
 80101aa:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80101ae:	844c      	strh	r4, [r1, #34]	; 0x22
 80101b0:	e7ec      	b.n	801018c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80101b2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80101b6:	f7ff bf4c 	b.w	8010052 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080101ba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80101ba:	b570      	push	{r4, r5, r6, lr}
 80101bc:	2500      	movs	r5, #0
 80101be:	4295      	cmp	r5, r2
 80101c0:	d011      	beq.n	80101e6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80101c2:	8bc4      	ldrh	r4, [r0, #30]
 80101c4:	f831 6b02 	ldrh.w	r6, [r1], #2
 80101c8:	4414      	add	r4, r2
 80101ca:	3c01      	subs	r4, #1
 80101cc:	1b64      	subs	r4, r4, r5
 80101ce:	b2a4      	uxth	r4, r4
 80101d0:	2c01      	cmp	r4, #1
 80101d2:	bf88      	it	hi
 80101d4:	3c02      	subhi	r4, #2
 80101d6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80101da:	8b64      	ldrh	r4, [r4, #26]
 80101dc:	42b4      	cmp	r4, r6
 80101de:	d117      	bne.n	8010210 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80101e0:	3501      	adds	r5, #1
 80101e2:	b2ad      	uxth	r5, r5
 80101e4:	e7eb      	b.n	80101be <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80101e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80101ea:	2400      	movs	r4, #0
 80101ec:	4413      	add	r3, r2
 80101ee:	b2a2      	uxth	r2, r4
 80101f0:	429a      	cmp	r2, r3
 80101f2:	da0f      	bge.n	8010214 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80101f4:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80101f6:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80101fa:	3401      	adds	r4, #1
 80101fc:	4432      	add	r2, r6
 80101fe:	b292      	uxth	r2, r2
 8010200:	2a09      	cmp	r2, #9
 8010202:	bf88      	it	hi
 8010204:	3a0a      	subhi	r2, #10
 8010206:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801020a:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801020c:	42aa      	cmp	r2, r5
 801020e:	d0ee      	beq.n	80101ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8010210:	2000      	movs	r0, #0
 8010212:	bd70      	pop	{r4, r5, r6, pc}
 8010214:	2001      	movs	r0, #1
 8010216:	e7fc      	b.n	8010212 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08010218 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8010218:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801021c:	4605      	mov	r5, r0
 801021e:	4616      	mov	r6, r2
 8010220:	1c8c      	adds	r4, r1, #2
 8010222:	8809      	ldrh	r1, [r1, #0]
 8010224:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8010228:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801022c:	42b3      	cmp	r3, r6
 801022e:	d124      	bne.n	801027a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8010230:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8010234:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8010238:	f001 070f 	and.w	r7, r1, #15
 801023c:	4652      	mov	r2, sl
 801023e:	f8cd 8000 	str.w	r8, [sp]
 8010242:	464b      	mov	r3, r9
 8010244:	4621      	mov	r1, r4
 8010246:	4628      	mov	r0, r5
 8010248:	f7ff ffb7 	bl	80101ba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801024c:	4683      	mov	fp, r0
 801024e:	b168      	cbz	r0, 801026c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8010250:	eb0a 0109 	add.w	r1, sl, r9
 8010254:	463a      	mov	r2, r7
 8010256:	4628      	mov	r0, r5
 8010258:	4441      	add	r1, r8
 801025a:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801025e:	4649      	mov	r1, r9
 8010260:	f7ff ff52 	bl	8010108 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8010264:	4658      	mov	r0, fp
 8010266:	b003      	add	sp, #12
 8010268:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801026c:	eb07 010a 	add.w	r1, r7, sl
 8010270:	4449      	add	r1, r9
 8010272:	4441      	add	r1, r8
 8010274:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8010278:	e7d2      	b.n	8010220 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801027a:	f04f 0b00 	mov.w	fp, #0
 801027e:	e7f1      	b.n	8010264 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08010280 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8010280:	b570      	push	{r4, r5, r6, lr}
 8010282:	8810      	ldrh	r0, [r2, #0]
 8010284:	4298      	cmp	r0, r3
 8010286:	d817      	bhi.n	80102b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010288:	1e48      	subs	r0, r1, #1
 801028a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801028e:	4298      	cmp	r0, r3
 8010290:	d312      	bcc.n	80102b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010292:	2400      	movs	r4, #0
 8010294:	428c      	cmp	r4, r1
 8010296:	d20f      	bcs.n	80102b8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8010298:	1860      	adds	r0, r4, r1
 801029a:	1040      	asrs	r0, r0, #1
 801029c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80102a0:	0085      	lsls	r5, r0, #2
 80102a2:	42b3      	cmp	r3, r6
 80102a4:	d902      	bls.n	80102ac <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80102a6:	3001      	adds	r0, #1
 80102a8:	b284      	uxth	r4, r0
 80102aa:	e7f3      	b.n	8010294 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80102ac:	d201      	bcs.n	80102b2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80102ae:	b281      	uxth	r1, r0
 80102b0:	e7f0      	b.n	8010294 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80102b2:	442a      	add	r2, r5
 80102b4:	8850      	ldrh	r0, [r2, #2]
 80102b6:	bd70      	pop	{r4, r5, r6, pc}
 80102b8:	2000      	movs	r0, #0
 80102ba:	e7fc      	b.n	80102b6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080102bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80102bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80102c0:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80102c2:	4604      	mov	r4, r0
 80102c4:	260b      	movs	r6, #11
 80102c6:	886f      	ldrh	r7, [r5, #2]
 80102c8:	087f      	lsrs	r7, r7, #1
 80102ca:	3e01      	subs	r6, #1
 80102cc:	d013      	beq.n	80102f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80102ce:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80102d0:	462a      	mov	r2, r5
 80102d2:	4639      	mov	r1, r7
 80102d4:	4620      	mov	r0, r4
 80102d6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80102da:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80102de:	4643      	mov	r3, r8
 80102e0:	f7ff ffce 	bl	8010280 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80102e4:	b138      	cbz	r0, 80102f6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80102e6:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80102ea:	4642      	mov	r2, r8
 80102ec:	4620      	mov	r0, r4
 80102ee:	f7ff ff93 	bl	8010218 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80102f2:	2800      	cmp	r0, #0
 80102f4:	d1e9      	bne.n	80102ca <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80102f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080102fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80102fc:	b570      	push	{r4, r5, r6, lr}
 80102fe:	694a      	ldr	r2, [r1, #20]
 8010300:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8010302:	684b      	ldr	r3, [r1, #4]
 8010304:	1b54      	subs	r4, r2, r5
 8010306:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8010308:	f000 8106 	beq.w	8010518 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801030c:	1b9b      	subs	r3, r3, r6
 801030e:	d003      	beq.n	8010318 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8010310:	4363      	muls	r3, r4
 8010312:	2210      	movs	r2, #16
 8010314:	fb93 f3f2 	sdiv	r3, r3, r2
 8010318:	680c      	ldr	r4, [r1, #0]
 801031a:	698a      	ldr	r2, [r1, #24]
 801031c:	1b65      	subs	r5, r4, r5
 801031e:	f000 80fd 	beq.w	801051c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8010322:	1b92      	subs	r2, r2, r6
 8010324:	d003      	beq.n	801032e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010326:	436a      	muls	r2, r5
 8010328:	2410      	movs	r4, #16
 801032a:	fb92 f2f4 	sdiv	r2, r2, r4
 801032e:	1a9b      	subs	r3, r3, r2
 8010330:	ed9f 4a89 	vldr	s8, [pc, #548]	; 8010558 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8010334:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010338:	460a      	mov	r2, r1
 801033a:	ee07 3a90 	vmov	s15, r3
 801033e:	f100 040c 	add.w	r4, r0, #12
 8010342:	4603      	mov	r3, r0
 8010344:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010348:	ee67 7a84 	vmul.f32	s15, s15, s8
 801034c:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8010350:	eeb1 6a43 	vneg.f32	s12, s6
 8010354:	edd2 7a02 	vldr	s15, [r2, #8]
 8010358:	3214      	adds	r2, #20
 801035a:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801035e:	ece3 6a01 	vstmia	r3!, {s13}
 8010362:	429c      	cmp	r4, r3
 8010364:	ed52 7a02 	vldr	s15, [r2, #-8]
 8010368:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801036c:	edc3 7a02 	vstr	s15, [r3, #8]
 8010370:	ed52 7a01 	vldr	s15, [r2, #-4]
 8010374:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010378:	edc3 7a05 	vstr	s15, [r3, #20]
 801037c:	d1ea      	bne.n	8010354 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801037e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010380:	698b      	ldr	r3, [r1, #24]
 8010382:	edd0 4a02 	vldr	s9, [r0, #8]
 8010386:	1a9b      	subs	r3, r3, r2
 8010388:	edd0 3a00 	vldr	s7, [r0]
 801038c:	edd0 6a01 	vldr	s13, [r0, #4]
 8010390:	ee07 3a90 	vmov	s15, r3
 8010394:	684b      	ldr	r3, [r1, #4]
 8010396:	ee76 6ae4 	vsub.f32	s13, s13, s9
 801039a:	ed90 5a05 	vldr	s10, [r0, #20]
 801039e:	1a9b      	subs	r3, r3, r2
 80103a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80103a4:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80103a8:	ed90 2a03 	vldr	s4, [r0, #12]
 80103ac:	ee07 3a10 	vmov	s14, r3
 80103b0:	edd0 5a04 	vldr	s11, [r0, #16]
 80103b4:	ee67 7a84 	vmul.f32	s15, s15, s8
 80103b8:	ed90 1a07 	vldr	s2, [r0, #28]
 80103bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80103c0:	edd0 2a06 	vldr	s5, [r0, #24]
 80103c4:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80103c8:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80103cc:	ee27 7a04 	vmul.f32	s14, s14, s8
 80103d0:	ee32 5a45 	vsub.f32	s10, s4, s10
 80103d4:	eee6 7a87 	vfma.f32	s15, s13, s14
 80103d8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80103dc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80103e0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80103e2:	694a      	ldr	r2, [r1, #20]
 80103e4:	1b13      	subs	r3, r2, r4
 80103e6:	ee07 3a10 	vmov	s14, r3
 80103ea:	680b      	ldr	r3, [r1, #0]
 80103ec:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80103f0:	1b1b      	subs	r3, r3, r4
 80103f2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80103f6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80103fa:	ee07 3a10 	vmov	s14, r3
 80103fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010402:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010406:	eee6 4a87 	vfma.f32	s9, s13, s14
 801040a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801040e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8010412:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010414:	698b      	ldr	r3, [r1, #24]
 8010416:	1a9b      	subs	r3, r3, r2
 8010418:	ee06 3a90 	vmov	s13, r3
 801041c:	684b      	ldr	r3, [r1, #4]
 801041e:	1a9b      	subs	r3, r3, r2
 8010420:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010424:	ee07 3a10 	vmov	s14, r3
 8010428:	ee66 6a84 	vmul.f32	s13, s13, s8
 801042c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010430:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8010434:	ee27 7a04 	vmul.f32	s14, s14, s8
 8010438:	eee5 6a87 	vfma.f32	s13, s11, s14
 801043c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8010440:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8010444:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8010446:	694a      	ldr	r2, [r1, #20]
 8010448:	1b13      	subs	r3, r2, r4
 801044a:	ee07 3a10 	vmov	s14, r3
 801044e:	680b      	ldr	r3, [r1, #0]
 8010450:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010454:	1b1b      	subs	r3, r3, r4
 8010456:	ee27 7a04 	vmul.f32	s14, s14, s8
 801045a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801045e:	ee07 3a10 	vmov	s14, r3
 8010462:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010466:	ee27 7a04 	vmul.f32	s14, s14, s8
 801046a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801046e:	edd0 5a08 	vldr	s11, [r0, #32]
 8010472:	ee31 1a65 	vsub.f32	s2, s2, s11
 8010476:	ee72 5ae5 	vsub.f32	s11, s5, s11
 801047a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801047e:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8010482:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010484:	698b      	ldr	r3, [r1, #24]
 8010486:	1a9b      	subs	r3, r3, r2
 8010488:	ee07 3a10 	vmov	s14, r3
 801048c:	684b      	ldr	r3, [r1, #4]
 801048e:	1a9b      	subs	r3, r3, r2
 8010490:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010494:	ee01 3a90 	vmov	s3, r3
 8010498:	ee27 7a04 	vmul.f32	s14, s14, s8
 801049c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 80104a0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 80104a4:	ee61 1a84 	vmul.f32	s3, s3, s8
 80104a8:	eea1 7a21 	vfma.f32	s14, s2, s3
 80104ac:	ee27 7a03 	vmul.f32	s14, s14, s6
 80104b0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80104b4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80104b6:	694a      	ldr	r2, [r1, #20]
 80104b8:	1b13      	subs	r3, r2, r4
 80104ba:	ee03 3a10 	vmov	s6, r3
 80104be:	680b      	ldr	r3, [r1, #0]
 80104c0:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80104c4:	1b1b      	subs	r3, r3, r4
 80104c6:	ee23 3a04 	vmul.f32	s6, s6, s8
 80104ca:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80104ce:	ee03 3a10 	vmov	s6, r3
 80104d2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80104d6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80104da:	eee1 5a04 	vfma.f32	s11, s2, s8
 80104de:	ee25 6a86 	vmul.f32	s12, s11, s12
 80104e2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80104e6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80104ea:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80104ee:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80104f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80104f6:	dd13      	ble.n	8010520 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80104f8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80104fc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8010500:	63c3      	str	r3, [r0, #60]	; 0x3c
 8010502:	eee3 7a87 	vfma.f32	s15, s7, s14
 8010506:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801050a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801050e:	dd15      	ble.n	801053c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8010510:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8010514:	6403      	str	r3, [r0, #64]	; 0x40
 8010516:	bd70      	pop	{r4, r5, r6, pc}
 8010518:	4623      	mov	r3, r4
 801051a:	e6fd      	b.n	8010318 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801051c:	462a      	mov	r2, r5
 801051e:	e706      	b.n	801032e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8010520:	d502      	bpl.n	8010528 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8010522:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8010526:	e7e9      	b.n	80104fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8010528:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801052c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8010530:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8010534:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010538:	dade      	bge.n	80104f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801053a:	e7f2      	b.n	8010522 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801053c:	d502      	bpl.n	8010544 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801053e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8010542:	e7e7      	b.n	8010514 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8010544:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8010548:	eee3 4a86 	vfma.f32	s9, s7, s12
 801054c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8010550:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010554:	dadc      	bge.n	8010510 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8010556:	e7f2      	b.n	801053e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8010558:	3d800000 	.word	0x3d800000

0801055c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801055c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010560:	2714      	movs	r7, #20
 8010562:	435f      	muls	r7, r3
 8010564:	eb02 0c07 	add.w	ip, r2, r7
 8010568:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801056c:	f115 0e0f 	adds.w	lr, r5, #15
 8010570:	f100 80a2 	bmi.w	80106b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8010574:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8010578:	9c08      	ldr	r4, [sp, #32]
 801057a:	2614      	movs	r6, #20
 801057c:	f8c0 e014 	str.w	lr, [r0, #20]
 8010580:	4366      	muls	r6, r4
 8010582:	eb02 0806 	add.w	r8, r2, r6
 8010586:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801058a:	f115 040f 	adds.w	r4, r5, #15
 801058e:	f100 809f 	bmi.w	80106d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8010592:	1124      	asrs	r4, r4, #4
 8010594:	eba4 040e 	sub.w	r4, r4, lr
 8010598:	6184      	str	r4, [r0, #24]
 801059a:	2c00      	cmp	r4, #0
 801059c:	f000 808a 	beq.w	80106b4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80105a0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80105a4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80105a8:	5995      	ldr	r5, [r2, r6]
 80105aa:	eba4 0809 	sub.w	r8, r4, r9
 80105ae:	59d4      	ldr	r4, [r2, r7]
 80105b0:	eba5 0a04 	sub.w	sl, r5, r4
 80105b4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80105b8:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80105bc:	fb0e fe05 	mul.w	lr, lr, r5
 80105c0:	fb0a ee19 	mls	lr, sl, r9, lr
 80105c4:	fb08 e404 	mla	r4, r8, r4, lr
 80105c8:	3c01      	subs	r4, #1
 80105ca:	19a4      	adds	r4, r4, r6
 80105cc:	f100 808c 	bmi.w	80106e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80105d0:	fb94 fef6 	sdiv	lr, r4, r6
 80105d4:	fb06 441e 	mls	r4, r6, lr, r4
 80105d8:	f8c0 e000 	str.w	lr, [r0]
 80105dc:	6104      	str	r4, [r0, #16]
 80105de:	2d00      	cmp	r5, #0
 80105e0:	f2c0 8095 	blt.w	801070e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80105e4:	fb95 f4f6 	sdiv	r4, r5, r6
 80105e8:	fb06 5514 	mls	r5, r6, r4, r5
 80105ec:	6044      	str	r4, [r0, #4]
 80105ee:	6085      	str	r5, [r0, #8]
 80105f0:	60c6      	str	r6, [r0, #12]
 80105f2:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80105f6:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80105fa:	6945      	ldr	r5, [r0, #20]
 80105fc:	59d2      	ldr	r2, [r2, r7]
 80105fe:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8010602:	eddf 6a4b 	vldr	s13, [pc, #300]	; 8010730 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8010606:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801060a:	ee07 4a10 	vmov	s14, r4
 801060e:	6804      	ldr	r4, [r0, #0]
 8010610:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8010614:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010618:	ee07 2a90 	vmov	s15, r2
 801061c:	ee27 7a26 	vmul.f32	s14, s14, s13
 8010620:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8010624:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8010628:	edd3 6a00 	vldr	s13, [r3]
 801062c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8010630:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8010634:	eee6 6a27 	vfma.f32	s13, s12, s15
 8010638:	edc0 6a07 	vstr	s13, [r0, #28]
 801063c:	edd0 6a01 	vldr	s13, [r0, #4]
 8010640:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8010644:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8010648:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 801064c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8010650:	ed80 6a08 	vstr	s12, [r0, #32]
 8010654:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8010656:	6242      	str	r2, [r0, #36]	; 0x24
 8010658:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801065c:	ed93 6a03 	vldr	s12, [r3, #12]
 8010660:	eea5 6a87 	vfma.f32	s12, s11, s14
 8010664:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8010668:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801066c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8010670:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8010674:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8010678:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801067c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8010680:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8010682:	6302      	str	r2, [r0, #48]	; 0x30
 8010684:	ed93 6a06 	vldr	s12, [r3, #24]
 8010688:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801068c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8010690:	eeb0 7a46 	vmov.f32	s14, s12
 8010694:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8010698:	eea6 7a27 	vfma.f32	s14, s12, s15
 801069c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80106a0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80106a4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80106a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80106ac:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80106b0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80106b2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80106b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80106b8:	2410      	movs	r4, #16
 80106ba:	f1c5 0501 	rsb	r5, r5, #1
 80106be:	fb9e fef4 	sdiv	lr, lr, r4
 80106c2:	f015 050f 	ands.w	r5, r5, #15
 80106c6:	bf18      	it	ne
 80106c8:	2501      	movne	r5, #1
 80106ca:	ebae 0e05 	sub.w	lr, lr, r5
 80106ce:	e753      	b.n	8010578 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80106d0:	f04f 0910 	mov.w	r9, #16
 80106d4:	f1c5 0501 	rsb	r5, r5, #1
 80106d8:	fb94 f4f9 	sdiv	r4, r4, r9
 80106dc:	f015 050f 	ands.w	r5, r5, #15
 80106e0:	bf18      	it	ne
 80106e2:	2501      	movne	r5, #1
 80106e4:	1b64      	subs	r4, r4, r5
 80106e6:	e755      	b.n	8010594 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80106e8:	4264      	negs	r4, r4
 80106ea:	fb94 fef6 	sdiv	lr, r4, r6
 80106ee:	f1ce 0800 	rsb	r8, lr, #0
 80106f2:	fb06 441e 	mls	r4, r6, lr, r4
 80106f6:	f8c0 8000 	str.w	r8, [r0]
 80106fa:	6104      	str	r4, [r0, #16]
 80106fc:	2c00      	cmp	r4, #0
 80106fe:	f43f af6e 	beq.w	80105de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8010702:	ea6f 0e0e 	mvn.w	lr, lr
 8010706:	1b34      	subs	r4, r6, r4
 8010708:	f8c0 e000 	str.w	lr, [r0]
 801070c:	e766      	b.n	80105dc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801070e:	426d      	negs	r5, r5
 8010710:	fb95 f4f6 	sdiv	r4, r5, r6
 8010714:	f1c4 0e00 	rsb	lr, r4, #0
 8010718:	fb06 5514 	mls	r5, r6, r4, r5
 801071c:	f8c0 e004 	str.w	lr, [r0, #4]
 8010720:	6085      	str	r5, [r0, #8]
 8010722:	2d00      	cmp	r5, #0
 8010724:	f43f af64 	beq.w	80105f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8010728:	43e4      	mvns	r4, r4
 801072a:	1b75      	subs	r5, r6, r5
 801072c:	6044      	str	r4, [r0, #4]
 801072e:	e75e      	b.n	80105ee <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8010730:	3d800000 	.word	0x3d800000

08010734 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8010734:	4602      	mov	r2, r0
 8010736:	b148      	cbz	r0, 801074c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8010738:	2300      	movs	r3, #0
 801073a:	b298      	uxth	r0, r3
 801073c:	3301      	adds	r3, #1
 801073e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8010742:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8010746:	2900      	cmp	r1, #0
 8010748:	d1f7      	bne.n	801073a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801074a:	4770      	bx	lr
 801074c:	4770      	bx	lr

0801074e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801074e:	b530      	push	{r4, r5, lr}
 8010750:	4604      	mov	r4, r0
 8010752:	b159      	cbz	r1, 801076c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8010754:	b148      	cbz	r0, 801076a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8010756:	2300      	movs	r3, #0
 8010758:	b298      	uxth	r0, r3
 801075a:	4282      	cmp	r2, r0
 801075c:	d905      	bls.n	801076a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801075e:	5ccd      	ldrb	r5, [r1, r3]
 8010760:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8010764:	3301      	adds	r3, #1
 8010766:	2d00      	cmp	r5, #0
 8010768:	d1f6      	bne.n	8010758 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801076a:	bd30      	pop	{r4, r5, pc}
 801076c:	4608      	mov	r0, r1
 801076e:	e7fc      	b.n	801076a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08010770 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8010770:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010772:	468c      	mov	ip, r1
 8010774:	b08b      	sub	sp, #44	; 0x2c
 8010776:	2100      	movs	r1, #0
 8010778:	ae01      	add	r6, sp, #4
 801077a:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801077e:	211f      	movs	r1, #31
 8010780:	fbb0 f7f3 	udiv	r7, r0, r3
 8010784:	fb03 0517 	mls	r5, r3, r7, r0
 8010788:	4638      	mov	r0, r7
 801078a:	b2ec      	uxtb	r4, r5
 801078c:	2d09      	cmp	r5, #9
 801078e:	bfd4      	ite	le
 8010790:	3430      	addle	r4, #48	; 0x30
 8010792:	3457      	addgt	r4, #87	; 0x57
 8010794:	b2e4      	uxtb	r4, r4
 8010796:	558c      	strb	r4, [r1, r6]
 8010798:	1e4c      	subs	r4, r1, #1
 801079a:	b92f      	cbnz	r7, 80107a8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801079c:	4431      	add	r1, r6
 801079e:	4660      	mov	r0, ip
 80107a0:	f7ff ffd5 	bl	801074e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80107a4:	b00b      	add	sp, #44	; 0x2c
 80107a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80107a8:	4621      	mov	r1, r4
 80107aa:	e7e9      	b.n	8010780 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

080107ac <_ZN8touchgfx7Unicode4itoaElPtti>:
 80107ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107ae:	4607      	mov	r7, r0
 80107b0:	b08b      	sub	sp, #44	; 0x2c
 80107b2:	4608      	mov	r0, r1
 80107b4:	b341      	cbz	r1, 8010808 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80107b6:	1e99      	subs	r1, r3, #2
 80107b8:	2922      	cmp	r1, #34	; 0x22
 80107ba:	d825      	bhi.n	8010808 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80107bc:	2100      	movs	r1, #0
 80107be:	463c      	mov	r4, r7
 80107c0:	261f      	movs	r6, #31
 80107c2:	f10d 0c04 	add.w	ip, sp, #4
 80107c6:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80107ca:	1e71      	subs	r1, r6, #1
 80107cc:	fb94 fef3 	sdiv	lr, r4, r3
 80107d0:	fb03 441e 	mls	r4, r3, lr, r4
 80107d4:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80107d8:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80107dc:	b2ec      	uxtb	r4, r5
 80107de:	2d09      	cmp	r5, #9
 80107e0:	bfd4      	ite	le
 80107e2:	3430      	addle	r4, #48	; 0x30
 80107e4:	3457      	addgt	r4, #87	; 0x57
 80107e6:	b2e4      	uxtb	r4, r4
 80107e8:	f80c 4006 	strb.w	r4, [ip, r6]
 80107ec:	4674      	mov	r4, lr
 80107ee:	b96c      	cbnz	r4, 801080c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80107f0:	2f00      	cmp	r7, #0
 80107f2:	da05      	bge.n	8010800 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80107f4:	ab0a      	add	r3, sp, #40	; 0x28
 80107f6:	4419      	add	r1, r3
 80107f8:	232d      	movs	r3, #45	; 0x2d
 80107fa:	f801 3c24 	strb.w	r3, [r1, #-36]
 80107fe:	1eb1      	subs	r1, r6, #2
 8010800:	3101      	adds	r1, #1
 8010802:	4461      	add	r1, ip
 8010804:	f7ff ffa3 	bl	801074e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8010808:	b00b      	add	sp, #44	; 0x2c
 801080a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801080c:	460e      	mov	r6, r1
 801080e:	e7dc      	b.n	80107ca <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08010810 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8010810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010814:	b085      	sub	sp, #20
 8010816:	4691      	mov	r9, r2
 8010818:	6802      	ldr	r2, [r0, #0]
 801081a:	4688      	mov	r8, r1
 801081c:	461c      	mov	r4, r3
 801081e:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8010822:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8010826:	4683      	mov	fp, r0
 8010828:	4610      	mov	r0, r2
 801082a:	9103      	str	r1, [sp, #12]
 801082c:	9302      	str	r3, [sp, #8]
 801082e:	9201      	str	r2, [sp, #4]
 8010830:	f7ff ff80 	bl	8010734 <_ZN8touchgfx7Unicode6strlenEPKt>
 8010834:	f1b8 0f00 	cmp.w	r8, #0
 8010838:	bf0c      	ite	eq
 801083a:	4684      	moveq	ip, r0
 801083c:	f100 0c01 	addne.w	ip, r0, #1
 8010840:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8010844:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8010848:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801084a:	fa1f fc8c 	uxth.w	ip, ip
 801084e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010850:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8010854:	9903      	ldr	r1, [sp, #12]
 8010856:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801085a:	d041      	beq.n	80108e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801085c:	d834      	bhi.n	80108c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801085e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8010862:	d059      	beq.n	8010918 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8010864:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8010868:	d03a      	beq.n	80108e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801086a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801086e:	d034      	beq.n	80108da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8010870:	2400      	movs	r4, #0
 8010872:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8010876:	3a01      	subs	r2, #1
 8010878:	b169      	cbz	r1, 8010896 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801087a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801087c:	458c      	cmp	ip, r1
 801087e:	da09      	bge.n	8010894 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010880:	eba1 010c 	sub.w	r1, r1, ip
 8010884:	b289      	uxth	r1, r1
 8010886:	b933      	cbnz	r3, 8010896 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010888:	2e00      	cmp	r6, #0
 801088a:	d051      	beq.n	8010930 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801088c:	2800      	cmp	r0, #0
 801088e:	d04f      	beq.n	8010930 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8010890:	440c      	add	r4, r1
 8010892:	b2a4      	uxth	r4, r4
 8010894:	2100      	movs	r1, #0
 8010896:	682b      	ldr	r3, [r5, #0]
 8010898:	4293      	cmp	r3, r2
 801089a:	da07      	bge.n	80108ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801089c:	f1b8 0f00 	cmp.w	r8, #0
 80108a0:	d004      	beq.n	80108ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80108a2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80108a6:	682b      	ldr	r3, [r5, #0]
 80108a8:	3301      	adds	r3, #1
 80108aa:	602b      	str	r3, [r5, #0]
 80108ac:	2730      	movs	r7, #48	; 0x30
 80108ae:	2c00      	cmp	r4, #0
 80108b0:	d04e      	beq.n	8010950 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80108b2:	682e      	ldr	r6, [r5, #0]
 80108b4:	3c01      	subs	r4, #1
 80108b6:	42b2      	cmp	r2, r6
 80108b8:	b2a4      	uxth	r4, r4
 80108ba:	dd49      	ble.n	8010950 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80108bc:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80108c0:	682b      	ldr	r3, [r5, #0]
 80108c2:	3301      	adds	r3, #1
 80108c4:	602b      	str	r3, [r5, #0]
 80108c6:	e7f2      	b.n	80108ae <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80108c8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80108cc:	d01d      	beq.n	801090a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80108ce:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80108d2:	d002      	beq.n	80108da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80108d4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80108d8:	e7c9      	b.n	801086e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80108da:	4684      	mov	ip, r0
 80108dc:	f04f 0800 	mov.w	r8, #0
 80108e0:	2c00      	cmp	r4, #0
 80108e2:	d0c6      	beq.n	8010872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80108e4:	b947      	cbnz	r7, 80108f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80108e6:	2801      	cmp	r0, #1
 80108e8:	d106      	bne.n	80108f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80108ea:	8814      	ldrh	r4, [r2, #0]
 80108ec:	2c30      	cmp	r4, #48	; 0x30
 80108ee:	bf02      	ittt	eq
 80108f0:	3202      	addeq	r2, #2
 80108f2:	4638      	moveq	r0, r7
 80108f4:	f8cb 2000 	streq.w	r2, [fp]
 80108f8:	45bc      	cmp	ip, r7
 80108fa:	da14      	bge.n	8010926 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80108fc:	b2bf      	uxth	r7, r7
 80108fe:	eba7 040c 	sub.w	r4, r7, ip
 8010902:	46bc      	mov	ip, r7
 8010904:	b2a4      	uxth	r4, r4
 8010906:	2600      	movs	r6, #0
 8010908:	e7b3      	b.n	8010872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801090a:	4684      	mov	ip, r0
 801090c:	b16c      	cbz	r4, 801092a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801090e:	42b8      	cmp	r0, r7
 8010910:	dd00      	ble.n	8010914 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8010912:	b2b8      	uxth	r0, r7
 8010914:	2400      	movs	r4, #0
 8010916:	e003      	b.n	8010920 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8010918:	f04f 0c01 	mov.w	ip, #1
 801091c:	2400      	movs	r4, #0
 801091e:	4660      	mov	r0, ip
 8010920:	4626      	mov	r6, r4
 8010922:	46a0      	mov	r8, r4
 8010924:	e7a5      	b.n	8010872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010926:	2400      	movs	r4, #0
 8010928:	e7ed      	b.n	8010906 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801092a:	4626      	mov	r6, r4
 801092c:	46a0      	mov	r8, r4
 801092e:	e7a0      	b.n	8010872 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8010930:	2900      	cmp	r1, #0
 8010932:	d0b0      	beq.n	8010896 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8010934:	2720      	movs	r7, #32
 8010936:	682e      	ldr	r6, [r5, #0]
 8010938:	2900      	cmp	r1, #0
 801093a:	d0ac      	beq.n	8010896 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801093c:	3901      	subs	r1, #1
 801093e:	4296      	cmp	r6, r2
 8010940:	b289      	uxth	r1, r1
 8010942:	daa7      	bge.n	8010894 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8010944:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8010948:	682b      	ldr	r3, [r5, #0]
 801094a:	3301      	adds	r3, #1
 801094c:	602b      	str	r3, [r5, #0]
 801094e:	e7f2      	b.n	8010936 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8010950:	b188      	cbz	r0, 8010976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8010952:	682b      	ldr	r3, [r5, #0]
 8010954:	3801      	subs	r0, #1
 8010956:	429a      	cmp	r2, r3
 8010958:	b280      	uxth	r0, r0
 801095a:	dd0c      	ble.n	8010976 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801095c:	f8db 3000 	ldr.w	r3, [fp]
 8010960:	1c9c      	adds	r4, r3, #2
 8010962:	f8cb 4000 	str.w	r4, [fp]
 8010966:	881c      	ldrh	r4, [r3, #0]
 8010968:	682b      	ldr	r3, [r5, #0]
 801096a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801096e:	682b      	ldr	r3, [r5, #0]
 8010970:	3301      	adds	r3, #1
 8010972:	602b      	str	r3, [r5, #0]
 8010974:	e7ec      	b.n	8010950 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8010976:	2620      	movs	r6, #32
 8010978:	b151      	cbz	r1, 8010990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801097a:	6828      	ldr	r0, [r5, #0]
 801097c:	3901      	subs	r1, #1
 801097e:	4282      	cmp	r2, r0
 8010980:	b289      	uxth	r1, r1
 8010982:	dd05      	ble.n	8010990 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8010984:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8010988:	682b      	ldr	r3, [r5, #0]
 801098a:	3301      	adds	r3, #1
 801098c:	602b      	str	r3, [r5, #0]
 801098e:	e7f3      	b.n	8010978 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8010990:	b005      	add	sp, #20
 8010992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8010996:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801099a:	2400      	movs	r4, #0
 801099c:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80109a0:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80109a4:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80109a8:	8014      	strh	r4, [r2, #0]
 80109aa:	701c      	strb	r4, [r3, #0]
 80109ac:	f888 4000 	strb.w	r4, [r8]
 80109b0:	f88c 4000 	strb.w	r4, [ip]
 80109b4:	f88e 4000 	strb.w	r4, [lr]
 80109b8:	703c      	strb	r4, [r7, #0]
 80109ba:	6804      	ldr	r4, [r0, #0]
 80109bc:	b1a4      	cbz	r4, 80109e8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80109be:	8824      	ldrh	r4, [r4, #0]
 80109c0:	f04f 0901 	mov.w	r9, #1
 80109c4:	b314      	cbz	r4, 8010a0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80109c6:	2c2b      	cmp	r4, #43	; 0x2b
 80109c8:	d001      	beq.n	80109ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80109ca:	2c20      	cmp	r4, #32
 80109cc:	d110      	bne.n	80109f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80109ce:	8014      	strh	r4, [r2, #0]
 80109d0:	6804      	ldr	r4, [r0, #0]
 80109d2:	b10c      	cbz	r4, 80109d8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80109d4:	3402      	adds	r4, #2
 80109d6:	6004      	str	r4, [r0, #0]
 80109d8:	680c      	ldr	r4, [r1, #0]
 80109da:	b10c      	cbz	r4, 80109e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80109dc:	3401      	adds	r4, #1
 80109de:	600c      	str	r4, [r1, #0]
 80109e0:	6804      	ldr	r4, [r0, #0]
 80109e2:	b17c      	cbz	r4, 8010a04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80109e4:	8824      	ldrh	r4, [r4, #0]
 80109e6:	e7ed      	b.n	80109c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80109e8:	680c      	ldr	r4, [r1, #0]
 80109ea:	b17c      	cbz	r4, 8010a0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80109ec:	7824      	ldrb	r4, [r4, #0]
 80109ee:	e7e7      	b.n	80109c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80109f0:	2c2d      	cmp	r4, #45	; 0x2d
 80109f2:	d102      	bne.n	80109fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80109f4:	f883 9000 	strb.w	r9, [r3]
 80109f8:	e7ea      	b.n	80109d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80109fa:	2c23      	cmp	r4, #35	; 0x23
 80109fc:	d107      	bne.n	8010a0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80109fe:	f888 9000 	strb.w	r9, [r8]
 8010a02:	e7e5      	b.n	80109d0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8010a04:	680c      	ldr	r4, [r1, #0]
 8010a06:	b10c      	cbz	r4, 8010a0c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8010a08:	7824      	ldrb	r4, [r4, #0]
 8010a0a:	e7db      	b.n	80109c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8010a0c:	2400      	movs	r4, #0
 8010a0e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010a12:	2b09      	cmp	r3, #9
 8010a14:	d901      	bls.n	8010a1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8010a16:	2c2a      	cmp	r4, #42	; 0x2a
 8010a18:	d122      	bne.n	8010a60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010a1a:	2301      	movs	r3, #1
 8010a1c:	2c30      	cmp	r4, #48	; 0x30
 8010a1e:	f88e 3000 	strb.w	r3, [lr]
 8010a22:	d10d      	bne.n	8010a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010a24:	f88c 3000 	strb.w	r3, [ip]
 8010a28:	6803      	ldr	r3, [r0, #0]
 8010a2a:	b10b      	cbz	r3, 8010a30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8010a2c:	3302      	adds	r3, #2
 8010a2e:	6003      	str	r3, [r0, #0]
 8010a30:	680b      	ldr	r3, [r1, #0]
 8010a32:	b10b      	cbz	r3, 8010a38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8010a34:	3301      	adds	r3, #1
 8010a36:	600b      	str	r3, [r1, #0]
 8010a38:	6803      	ldr	r3, [r0, #0]
 8010a3a:	2b00      	cmp	r3, #0
 8010a3c:	d02f      	beq.n	8010a9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8010a3e:	881c      	ldrh	r4, [r3, #0]
 8010a40:	2c2a      	cmp	r4, #42	; 0x2a
 8010a42:	d135      	bne.n	8010ab0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010a44:	f04f 33ff 	mov.w	r3, #4294967295
 8010a48:	6033      	str	r3, [r6, #0]
 8010a4a:	6803      	ldr	r3, [r0, #0]
 8010a4c:	b10b      	cbz	r3, 8010a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8010a4e:	3302      	adds	r3, #2
 8010a50:	6003      	str	r3, [r0, #0]
 8010a52:	680b      	ldr	r3, [r1, #0]
 8010a54:	b10b      	cbz	r3, 8010a5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8010a56:	3301      	adds	r3, #1
 8010a58:	600b      	str	r3, [r1, #0]
 8010a5a:	6803      	ldr	r3, [r0, #0]
 8010a5c:	b31b      	cbz	r3, 8010aa6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8010a5e:	881c      	ldrh	r4, [r3, #0]
 8010a60:	2c2e      	cmp	r4, #46	; 0x2e
 8010a62:	d11a      	bne.n	8010a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010a64:	2301      	movs	r3, #1
 8010a66:	703b      	strb	r3, [r7, #0]
 8010a68:	6803      	ldr	r3, [r0, #0]
 8010a6a:	b10b      	cbz	r3, 8010a70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8010a6c:	3302      	adds	r3, #2
 8010a6e:	6003      	str	r3, [r0, #0]
 8010a70:	680b      	ldr	r3, [r1, #0]
 8010a72:	b10b      	cbz	r3, 8010a78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8010a74:	3301      	adds	r3, #1
 8010a76:	600b      	str	r3, [r1, #0]
 8010a78:	6803      	ldr	r3, [r0, #0]
 8010a7a:	2b00      	cmp	r3, #0
 8010a7c:	d036      	beq.n	8010aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8010a7e:	881b      	ldrh	r3, [r3, #0]
 8010a80:	2b2a      	cmp	r3, #42	; 0x2a
 8010a82:	d137      	bne.n	8010af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010a84:	f04f 33ff 	mov.w	r3, #4294967295
 8010a88:	602b      	str	r3, [r5, #0]
 8010a8a:	6803      	ldr	r3, [r0, #0]
 8010a8c:	b10b      	cbz	r3, 8010a92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8010a8e:	3302      	adds	r3, #2
 8010a90:	6003      	str	r3, [r0, #0]
 8010a92:	680b      	ldr	r3, [r1, #0]
 8010a94:	b10b      	cbz	r3, 8010a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010a96:	3301      	adds	r3, #1
 8010a98:	600b      	str	r3, [r1, #0]
 8010a9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010a9e:	680c      	ldr	r4, [r1, #0]
 8010aa0:	b134      	cbz	r4, 8010ab0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8010aa2:	7824      	ldrb	r4, [r4, #0]
 8010aa4:	e7cc      	b.n	8010a40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8010aa6:	680b      	ldr	r3, [r1, #0]
 8010aa8:	2b00      	cmp	r3, #0
 8010aaa:	d0f6      	beq.n	8010a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8010aac:	781c      	ldrb	r4, [r3, #0]
 8010aae:	e7d7      	b.n	8010a60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010ab0:	2300      	movs	r3, #0
 8010ab2:	220a      	movs	r2, #10
 8010ab4:	6033      	str	r3, [r6, #0]
 8010ab6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8010aba:	fa1f f38c 	uxth.w	r3, ip
 8010abe:	2b09      	cmp	r3, #9
 8010ac0:	d8ce      	bhi.n	8010a60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8010ac2:	6833      	ldr	r3, [r6, #0]
 8010ac4:	fb02 c303 	mla	r3, r2, r3, ip
 8010ac8:	6033      	str	r3, [r6, #0]
 8010aca:	6803      	ldr	r3, [r0, #0]
 8010acc:	b10b      	cbz	r3, 8010ad2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8010ace:	3302      	adds	r3, #2
 8010ad0:	6003      	str	r3, [r0, #0]
 8010ad2:	680b      	ldr	r3, [r1, #0]
 8010ad4:	b10b      	cbz	r3, 8010ada <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8010ad6:	3301      	adds	r3, #1
 8010ad8:	600b      	str	r3, [r1, #0]
 8010ada:	6803      	ldr	r3, [r0, #0]
 8010adc:	b10b      	cbz	r3, 8010ae2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8010ade:	881c      	ldrh	r4, [r3, #0]
 8010ae0:	e7e9      	b.n	8010ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010ae2:	680c      	ldr	r4, [r1, #0]
 8010ae4:	2c00      	cmp	r4, #0
 8010ae6:	d0e6      	beq.n	8010ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010ae8:	7824      	ldrb	r4, [r4, #0]
 8010aea:	e7e4      	b.n	8010ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8010aec:	680b      	ldr	r3, [r1, #0]
 8010aee:	b10b      	cbz	r3, 8010af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8010af0:	781b      	ldrb	r3, [r3, #0]
 8010af2:	e7c5      	b.n	8010a80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8010af4:	2200      	movs	r2, #0
 8010af6:	240a      	movs	r4, #10
 8010af8:	602a      	str	r2, [r5, #0]
 8010afa:	3b30      	subs	r3, #48	; 0x30
 8010afc:	682a      	ldr	r2, [r5, #0]
 8010afe:	b29e      	uxth	r6, r3
 8010b00:	2e09      	cmp	r6, #9
 8010b02:	d813      	bhi.n	8010b2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8010b04:	fb04 3302 	mla	r3, r4, r2, r3
 8010b08:	602b      	str	r3, [r5, #0]
 8010b0a:	6803      	ldr	r3, [r0, #0]
 8010b0c:	b10b      	cbz	r3, 8010b12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8010b0e:	3302      	adds	r3, #2
 8010b10:	6003      	str	r3, [r0, #0]
 8010b12:	680b      	ldr	r3, [r1, #0]
 8010b14:	b10b      	cbz	r3, 8010b1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8010b16:	3301      	adds	r3, #1
 8010b18:	600b      	str	r3, [r1, #0]
 8010b1a:	6803      	ldr	r3, [r0, #0]
 8010b1c:	b10b      	cbz	r3, 8010b22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8010b1e:	881b      	ldrh	r3, [r3, #0]
 8010b20:	e7eb      	b.n	8010afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010b22:	680b      	ldr	r3, [r1, #0]
 8010b24:	2b00      	cmp	r3, #0
 8010b26:	d0e8      	beq.n	8010afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010b28:	781b      	ldrb	r3, [r3, #0]
 8010b2a:	e7e6      	b.n	8010afa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8010b2c:	2a06      	cmp	r2, #6
 8010b2e:	bfa8      	it	ge
 8010b30:	2206      	movge	r2, #6
 8010b32:	602a      	str	r2, [r5, #0]
 8010b34:	e7b1      	b.n	8010a9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08010b36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8010b36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b3a:	b0a3      	sub	sp, #140	; 0x8c
 8010b3c:	2600      	movs	r6, #0
 8010b3e:	4607      	mov	r7, r0
 8010b40:	4688      	mov	r8, r1
 8010b42:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8010b46:	4631      	mov	r1, r6
 8010b48:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8010b4a:	4648      	mov	r0, r9
 8010b4c:	960d      	str	r6, [sp, #52]	; 0x34
 8010b4e:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8010b52:	2242      	movs	r2, #66	; 0x42
 8010b54:	f00c fa31 	bl	801cfba <memset>
 8010b58:	b15f      	cbz	r7, 8010b72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8010b5a:	f108 3aff 	add.w	sl, r8, #4294967295
 8010b5e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8010b60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010b62:	b152      	cbz	r2, 8010b7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8010b64:	8812      	ldrh	r2, [r2, #0]
 8010b66:	b10a      	cbz	r2, 8010b6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010b68:	459a      	cmp	sl, r3
 8010b6a:	dc2e      	bgt.n	8010bca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8010b6c:	2200      	movs	r2, #0
 8010b6e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010b72:	4638      	mov	r0, r7
 8010b74:	b023      	add	sp, #140	; 0x8c
 8010b76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b7a:	9a08      	ldr	r2, [sp, #32]
 8010b7c:	2a00      	cmp	r2, #0
 8010b7e:	d0f5      	beq.n	8010b6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8010b80:	7812      	ldrb	r2, [r2, #0]
 8010b82:	e7f0      	b.n	8010b66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8010b84:	2d00      	cmp	r5, #0
 8010b86:	d0ea      	beq.n	8010b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010b88:	782a      	ldrb	r2, [r5, #0]
 8010b8a:	b142      	cbz	r2, 8010b9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8010b8c:	2a25      	cmp	r2, #37	; 0x25
 8010b8e:	d001      	beq.n	8010b94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8010b90:	459a      	cmp	sl, r3
 8010b92:	dc08      	bgt.n	8010ba6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8010b94:	f1bb 0f00 	cmp.w	fp, #0
 8010b98:	d121      	bne.n	8010bde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8010b9a:	2d00      	cmp	r5, #0
 8010b9c:	d0df      	beq.n	8010b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010b9e:	782a      	ldrb	r2, [r5, #0]
 8010ba0:	f04f 0b00 	mov.w	fp, #0
 8010ba4:	e01d      	b.n	8010be2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8010ba6:	f1bb 0f00 	cmp.w	fp, #0
 8010baa:	d077      	beq.n	8010c9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
 8010bac:	f8bb 2000 	ldrh.w	r2, [fp]
 8010bb0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8010bb4:	f1bb 0f00 	cmp.w	fp, #0
 8010bb8:	d002      	beq.n	8010bc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8010bba:	f10b 0202 	add.w	r2, fp, #2
 8010bbe:	9209      	str	r2, [sp, #36]	; 0x24
 8010bc0:	b10d      	cbz	r5, 8010bc6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8010bc2:	3501      	adds	r5, #1
 8010bc4:	9508      	str	r5, [sp, #32]
 8010bc6:	3301      	adds	r3, #1
 8010bc8:	930d      	str	r3, [sp, #52]	; 0x34
 8010bca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010bcc:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8010bd0:	f1bb 0f00 	cmp.w	fp, #0
 8010bd4:	d0d6      	beq.n	8010b84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8010bd6:	f8bb 2000 	ldrh.w	r2, [fp]
 8010bda:	2a00      	cmp	r2, #0
 8010bdc:	d1d6      	bne.n	8010b8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8010bde:	f8bb 2000 	ldrh.w	r2, [fp]
 8010be2:	2a00      	cmp	r2, #0
 8010be4:	d0bb      	beq.n	8010b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010be6:	459a      	cmp	sl, r3
 8010be8:	ddb9      	ble.n	8010b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010bea:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8010bee:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8010bf2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8010bf6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8010bfa:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8010bfe:	960e      	str	r6, [sp, #56]	; 0x38
 8010c00:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8010c04:	960f      	str	r6, [sp, #60]	; 0x3c
 8010c06:	f1bb 0f00 	cmp.w	fp, #0
 8010c0a:	d002      	beq.n	8010c12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8010c0c:	f10b 0302 	add.w	r3, fp, #2
 8010c10:	9309      	str	r3, [sp, #36]	; 0x24
 8010c12:	b10d      	cbz	r5, 8010c18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8010c14:	1c6b      	adds	r3, r5, #1
 8010c16:	9308      	str	r3, [sp, #32]
 8010c18:	ab0f      	add	r3, sp, #60	; 0x3c
 8010c1a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8010c1e:	a908      	add	r1, sp, #32
 8010c20:	a809      	add	r0, sp, #36	; 0x24
 8010c22:	9305      	str	r3, [sp, #20]
 8010c24:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8010c28:	9304      	str	r3, [sp, #16]
 8010c2a:	ab0e      	add	r3, sp, #56	; 0x38
 8010c2c:	9303      	str	r3, [sp, #12]
 8010c2e:	ab0c      	add	r3, sp, #48	; 0x30
 8010c30:	9302      	str	r3, [sp, #8]
 8010c32:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8010c36:	9301      	str	r3, [sp, #4]
 8010c38:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8010c3c:	9300      	str	r3, [sp, #0]
 8010c3e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8010c42:	f7ff fea8 	bl	8010996 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8010c46:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c48:	2b00      	cmp	r3, #0
 8010c4a:	bfbf      	itttt	lt
 8010c4c:	6823      	ldrlt	r3, [r4, #0]
 8010c4e:	3404      	addlt	r4, #4
 8010c50:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010c54:	930e      	strlt	r3, [sp, #56]	; 0x38
 8010c56:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010c58:	2b00      	cmp	r3, #0
 8010c5a:	bfbe      	ittt	lt
 8010c5c:	6823      	ldrlt	r3, [r4, #0]
 8010c5e:	3404      	addlt	r4, #4
 8010c60:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8010c64:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8010c68:	bfb8      	it	lt
 8010c6a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8010c6c:	b1d9      	cbz	r1, 8010ca6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
 8010c6e:	880b      	ldrh	r3, [r1, #0]
 8010c70:	2b69      	cmp	r3, #105	; 0x69
 8010c72:	d01f      	beq.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010c74:	d82f      	bhi.n	8010cd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
 8010c76:	2b58      	cmp	r3, #88	; 0x58
 8010c78:	d01c      	beq.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010c7a:	d818      	bhi.n	8010cae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
 8010c7c:	2b25      	cmp	r3, #37	; 0x25
 8010c7e:	d034      	beq.n	8010cea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
 8010c80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010c82:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8010c86:	f1bb 0f00 	cmp.w	fp, #0
 8010c8a:	f000 80b7 	beq.w	8010dfc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
 8010c8e:	f8bb 5000 	ldrh.w	r5, [fp]
 8010c92:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8010c96:	3301      	adds	r3, #1
 8010c98:	930d      	str	r3, [sp, #52]	; 0x34
 8010c9a:	e029      	b.n	8010cf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8010c9c:	b10d      	cbz	r5, 8010ca2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
 8010c9e:	782a      	ldrb	r2, [r5, #0]
 8010ca0:	e786      	b.n	8010bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010ca2:	462a      	mov	r2, r5
 8010ca4:	e784      	b.n	8010bb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8010ca6:	2a00      	cmp	r2, #0
 8010ca8:	d0ea      	beq.n	8010c80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010caa:	7813      	ldrb	r3, [r2, #0]
 8010cac:	e7e0      	b.n	8010c70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
 8010cae:	3b63      	subs	r3, #99	; 0x63
 8010cb0:	2b01      	cmp	r3, #1
 8010cb2:	d8e5      	bhi.n	8010c80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010cb4:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8010cb8:	b329      	cbz	r1, 8010d06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
 8010cba:	880b      	ldrh	r3, [r1, #0]
 8010cbc:	2b69      	cmp	r3, #105	; 0x69
 8010cbe:	d063      	beq.n	8010d88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8010cc0:	d825      	bhi.n	8010d0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
 8010cc2:	2b63      	cmp	r3, #99	; 0x63
 8010cc4:	d038      	beq.n	8010d38 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
 8010cc6:	2b64      	cmp	r3, #100	; 0x64
 8010cc8:	d05e      	beq.n	8010d88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
 8010cca:	2b58      	cmp	r3, #88	; 0x58
 8010ccc:	d07a      	beq.n	8010dc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
 8010cce:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8010cd2:	4625      	mov	r5, r4
 8010cd4:	e036      	b.n	8010d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010cd6:	2b73      	cmp	r3, #115	; 0x73
 8010cd8:	d0ec      	beq.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010cda:	d802      	bhi.n	8010ce2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
 8010cdc:	2b6f      	cmp	r3, #111	; 0x6f
 8010cde:	d1cf      	bne.n	8010c80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
 8010ce0:	e7e8      	b.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010ce2:	2b75      	cmp	r3, #117	; 0x75
 8010ce4:	d0e6      	beq.n	8010cb4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
 8010ce6:	2b78      	cmp	r3, #120	; 0x78
 8010ce8:	e7f9      	b.n	8010cde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
 8010cea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010cec:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8010cf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010cf2:	b10b      	cbz	r3, 8010cf8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
 8010cf4:	3302      	adds	r3, #2
 8010cf6:	9309      	str	r3, [sp, #36]	; 0x24
 8010cf8:	9b08      	ldr	r3, [sp, #32]
 8010cfa:	2b00      	cmp	r3, #0
 8010cfc:	f43f af2f 	beq.w	8010b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010d00:	3301      	adds	r3, #1
 8010d02:	9308      	str	r3, [sp, #32]
 8010d04:	e72b      	b.n	8010b5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8010d06:	2a00      	cmp	r2, #0
 8010d08:	d0e1      	beq.n	8010cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010d0a:	7813      	ldrb	r3, [r2, #0]
 8010d0c:	e7d6      	b.n	8010cbc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
 8010d0e:	2b73      	cmp	r3, #115	; 0x73
 8010d10:	d036      	beq.n	8010d80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
 8010d12:	d807      	bhi.n	8010d24 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
 8010d14:	2b6f      	cmp	r3, #111	; 0x6f
 8010d16:	d1da      	bne.n	8010cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010d18:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d1a:	1d25      	adds	r5, r4, #4
 8010d1c:	2308      	movs	r3, #8
 8010d1e:	eba8 0202 	sub.w	r2, r8, r2
 8010d22:	e049      	b.n	8010db8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8010d24:	2b75      	cmp	r3, #117	; 0x75
 8010d26:	d042      	beq.n	8010dae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
 8010d28:	2b78      	cmp	r3, #120	; 0x78
 8010d2a:	d1d0      	bne.n	8010cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
 8010d2c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d2e:	1d25      	adds	r5, r4, #4
 8010d30:	2310      	movs	r3, #16
 8010d32:	eba8 0202 	sub.w	r2, r8, r2
 8010d36:	e03f      	b.n	8010db8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
 8010d38:	6823      	ldr	r3, [r4, #0]
 8010d3a:	1d25      	adds	r5, r4, #4
 8010d3c:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8010d40:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8010d44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010d46:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8010d4a:	2b00      	cmp	r3, #0
 8010d4c:	d051      	beq.n	8010df2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
 8010d4e:	881a      	ldrh	r2, [r3, #0]
 8010d50:	a80d      	add	r0, sp, #52	; 0x34
 8010d52:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8010d56:	462c      	mov	r4, r5
 8010d58:	9005      	str	r0, [sp, #20]
 8010d5a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8010d5e:	9004      	str	r0, [sp, #16]
 8010d60:	980e      	ldr	r0, [sp, #56]	; 0x38
 8010d62:	9003      	str	r0, [sp, #12]
 8010d64:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8010d68:	9002      	str	r0, [sp, #8]
 8010d6a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8010d6c:	9001      	str	r0, [sp, #4]
 8010d6e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8010d72:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8010d76:	9000      	str	r0, [sp, #0]
 8010d78:	a810      	add	r0, sp, #64	; 0x40
 8010d7a:	f7ff fd49 	bl	8010810 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8010d7e:	e7b7      	b.n	8010cf0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
 8010d80:	1d25      	adds	r5, r4, #4
 8010d82:	6823      	ldr	r3, [r4, #0]
 8010d84:	9310      	str	r3, [sp, #64]	; 0x40
 8010d86:	e7dd      	b.n	8010d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010d88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d8a:	230a      	movs	r3, #10
 8010d8c:	4649      	mov	r1, r9
 8010d8e:	6820      	ldr	r0, [r4, #0]
 8010d90:	eba8 0202 	sub.w	r2, r8, r2
 8010d94:	1d25      	adds	r5, r4, #4
 8010d96:	b292      	uxth	r2, r2
 8010d98:	f7ff fd08 	bl	80107ac <_ZN8touchgfx7Unicode4itoaElPtti>
 8010d9c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010da0:	2b2d      	cmp	r3, #45	; 0x2d
 8010da2:	d1cf      	bne.n	8010d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010da4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8010da8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010daa:	3302      	adds	r3, #2
 8010dac:	e7ea      	b.n	8010d84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
 8010dae:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010db0:	1d25      	adds	r5, r4, #4
 8010db2:	230a      	movs	r3, #10
 8010db4:	eba8 0202 	sub.w	r2, r8, r2
 8010db8:	b292      	uxth	r2, r2
 8010dba:	4649      	mov	r1, r9
 8010dbc:	6820      	ldr	r0, [r4, #0]
 8010dbe:	f7ff fcd7 	bl	8010770 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8010dc2:	e7bf      	b.n	8010d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010dc4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010dc6:	2310      	movs	r3, #16
 8010dc8:	4649      	mov	r1, r9
 8010dca:	6820      	ldr	r0, [r4, #0]
 8010dcc:	eba8 0202 	sub.w	r2, r8, r2
 8010dd0:	1d25      	adds	r5, r4, #4
 8010dd2:	b292      	uxth	r2, r2
 8010dd4:	f7ff fccc 	bl	8010770 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8010dd8:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8010ddc:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8010de0:	2b00      	cmp	r3, #0
 8010de2:	d0af      	beq.n	8010d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
 8010de4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8010de8:	2919      	cmp	r1, #25
 8010dea:	d8f7      	bhi.n	8010ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8010dec:	3b20      	subs	r3, #32
 8010dee:	8013      	strh	r3, [r2, #0]
 8010df0:	e7f4      	b.n	8010ddc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
 8010df2:	9a08      	ldr	r2, [sp, #32]
 8010df4:	2a00      	cmp	r2, #0
 8010df6:	d0ab      	beq.n	8010d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8010df8:	7812      	ldrb	r2, [r2, #0]
 8010dfa:	e7a9      	b.n	8010d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
 8010dfc:	2d00      	cmp	r5, #0
 8010dfe:	f43f af48 	beq.w	8010c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
 8010e02:	782d      	ldrb	r5, [r5, #0]
 8010e04:	e745      	b.n	8010c92 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

08010e06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8010e06:	b507      	push	{r0, r1, r2, lr}
 8010e08:	9300      	str	r3, [sp, #0]
 8010e0a:	4613      	mov	r3, r2
 8010e0c:	2200      	movs	r2, #0
 8010e0e:	f7ff fe92 	bl	8010b36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8010e12:	b003      	add	sp, #12
 8010e14:	f85d fb04 	ldr.w	pc, [sp], #4

08010e18 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8010e18:	b40c      	push	{r2, r3}
 8010e1a:	b507      	push	{r0, r1, r2, lr}
 8010e1c:	ab04      	add	r3, sp, #16
 8010e1e:	f853 2b04 	ldr.w	r2, [r3], #4
 8010e22:	9301      	str	r3, [sp, #4]
 8010e24:	f7ff ffef 	bl	8010e06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8010e28:	b003      	add	sp, #12
 8010e2a:	f85d eb04 	ldr.w	lr, [sp], #4
 8010e2e:	b002      	add	sp, #8
 8010e30:	4770      	bx	lr
	...

08010e34 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8010e34:	4b01      	ldr	r3, [pc, #4]	; (8010e3c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8010e36:	6018      	str	r0, [r3, #0]
 8010e38:	4770      	bx	lr
 8010e3a:	bf00      	nop
 8010e3c:	2400b0c0 	.word	0x2400b0c0

08010e40 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8010e40:	4b06      	ldr	r3, [pc, #24]	; (8010e5c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8010e42:	881a      	ldrh	r2, [r3, #0]
 8010e44:	4282      	cmp	r2, r0
 8010e46:	d807      	bhi.n	8010e58 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8010e48:	4b05      	ldr	r3, [pc, #20]	; (8010e60 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8010e4a:	881b      	ldrh	r3, [r3, #0]
 8010e4c:	4413      	add	r3, r2
 8010e4e:	4298      	cmp	r0, r3
 8010e50:	bfac      	ite	ge
 8010e52:	2000      	movge	r0, #0
 8010e54:	2001      	movlt	r0, #1
 8010e56:	4770      	bx	lr
 8010e58:	2000      	movs	r0, #0
 8010e5a:	4770      	bx	lr
 8010e5c:	2400b0e0 	.word	0x2400b0e0
 8010e60:	2400b0e4 	.word	0x2400b0e4

08010e64 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8010e64:	b508      	push	{r3, lr}
 8010e66:	4601      	mov	r1, r0
 8010e68:	f7ff ffea 	bl	8010e40 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8010e6c:	b118      	cbz	r0, 8010e76 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8010e6e:	4b02      	ldr	r3, [pc, #8]	; (8010e78 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8010e70:	681b      	ldr	r3, [r3, #0]
 8010e72:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8010e76:	bd08      	pop	{r3, pc}
 8010e78:	2400b0c4 	.word	0x2400b0c4

08010e7c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8010e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010e7e:	4c24      	ldr	r4, [pc, #144]	; (8010f10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8010e80:	6823      	ldr	r3, [r4, #0]
 8010e82:	2b00      	cmp	r3, #0
 8010e84:	d042      	beq.n	8010f0c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010e86:	4a23      	ldr	r2, [pc, #140]	; (8010f14 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8010e88:	4d23      	ldr	r5, [pc, #140]	; (8010f18 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8010e8a:	8811      	ldrh	r1, [r2, #0]
 8010e8c:	f8b5 c000 	ldrh.w	ip, [r5]
 8010e90:	4822      	ldr	r0, [pc, #136]	; (8010f1c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8010e92:	4461      	add	r1, ip
 8010e94:	1c4a      	adds	r2, r1, #1
 8010e96:	008f      	lsls	r7, r1, #2
 8010e98:	f022 0201 	bic.w	r2, r2, #1
 8010e9c:	19de      	adds	r6, r3, r7
 8010e9e:	0412      	lsls	r2, r2, #16
 8010ea0:	6006      	str	r6, [r0, #0]
 8010ea2:	4e1f      	ldr	r6, [pc, #124]	; (8010f20 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8010ea4:	0c12      	lsrs	r2, r2, #16
 8010ea6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8010eaa:	19da      	adds	r2, r3, r7
 8010eac:	6032      	str	r2, [r6, #0]
 8010eae:	220e      	movs	r2, #14
 8010eb0:	fb02 f20c 	mul.w	r2, r2, ip
 8010eb4:	3203      	adds	r2, #3
 8010eb6:	f022 0203 	bic.w	r2, r2, #3
 8010eba:	443a      	add	r2, r7
 8010ebc:	4f19      	ldr	r7, [pc, #100]	; (8010f24 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8010ebe:	4413      	add	r3, r2
 8010ec0:	603b      	str	r3, [r7, #0]
 8010ec2:	2300      	movs	r3, #0
 8010ec4:	4f18      	ldr	r7, [pc, #96]	; (8010f28 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8010ec6:	469c      	mov	ip, r3
 8010ec8:	803b      	strh	r3, [r7, #0]
 8010eca:	4f18      	ldr	r7, [pc, #96]	; (8010f2c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8010ecc:	683f      	ldr	r7, [r7, #0]
 8010ece:	1aba      	subs	r2, r7, r2
 8010ed0:	4f17      	ldr	r7, [pc, #92]	; (8010f30 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8010ed2:	603a      	str	r2, [r7, #0]
 8010ed4:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8010ed8:	4a16      	ldr	r2, [pc, #88]	; (8010f34 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8010eda:	8013      	strh	r3, [r2, #0]
 8010edc:	428b      	cmp	r3, r1
 8010ede:	d10d      	bne.n	8010efc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8010ee0:	882d      	ldrh	r5, [r5, #0]
 8010ee2:	2300      	movs	r3, #0
 8010ee4:	6830      	ldr	r0, [r6, #0]
 8010ee6:	240e      	movs	r4, #14
 8010ee8:	429d      	cmp	r5, r3
 8010eea:	d90f      	bls.n	8010f0c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8010eec:	fb04 0203 	mla	r2, r4, r3, r0
 8010ef0:	3301      	adds	r3, #1
 8010ef2:	7b11      	ldrb	r1, [r2, #12]
 8010ef4:	f36f 1145 	bfc	r1, #5, #1
 8010ef8:	7311      	strb	r1, [r2, #12]
 8010efa:	e7f5      	b.n	8010ee8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8010efc:	6822      	ldr	r2, [r4, #0]
 8010efe:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8010f02:	6802      	ldr	r2, [r0, #0]
 8010f04:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8010f08:	3301      	adds	r3, #1
 8010f0a:	e7e7      	b.n	8010edc <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8010f0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010f0e:	bf00      	nop
 8010f10:	2400b0c4 	.word	0x2400b0c4
 8010f14:	2400b0e0 	.word	0x2400b0e0
 8010f18:	2400b0e4 	.word	0x2400b0e4
 8010f1c:	2400b0d8 	.word	0x2400b0d8
 8010f20:	2400b0c8 	.word	0x2400b0c8
 8010f24:	2400b0d0 	.word	0x2400b0d0
 8010f28:	2400b0e2 	.word	0x2400b0e2
 8010f2c:	2400b0cc 	.word	0x2400b0cc
 8010f30:	2400b0dc 	.word	0x2400b0dc
 8010f34:	2400b0d4 	.word	0x2400b0d4

08010f38 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8010f38:	4b06      	ldr	r3, [pc, #24]	; (8010f54 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8010f3a:	681b      	ldr	r3, [r3, #0]
 8010f3c:	b943      	cbnz	r3, 8010f50 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8010f3e:	b139      	cbz	r1, 8010f50 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8010f40:	4b05      	ldr	r3, [pc, #20]	; (8010f58 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8010f42:	801a      	strh	r2, [r3, #0]
 8010f44:	4b05      	ldr	r3, [pc, #20]	; (8010f5c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8010f46:	6019      	str	r1, [r3, #0]
 8010f48:	4b05      	ldr	r3, [pc, #20]	; (8010f60 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8010f4a:	6018      	str	r0, [r3, #0]
 8010f4c:	f7ff bf96 	b.w	8010e7c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8010f50:	4770      	bx	lr
 8010f52:	bf00      	nop
 8010f54:	2400b0d0 	.word	0x2400b0d0
 8010f58:	2400b0e4 	.word	0x2400b0e4
 8010f5c:	2400b0cc 	.word	0x2400b0cc
 8010f60:	2400b0c4 	.word	0x2400b0c4

08010f64 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8010f64:	b470      	push	{r4, r5, r6}
 8010f66:	4c07      	ldr	r4, [pc, #28]	; (8010f84 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8010f68:	4605      	mov	r5, r0
 8010f6a:	4610      	mov	r0, r2
 8010f6c:	9a03      	ldr	r2, [sp, #12]
 8010f6e:	6826      	ldr	r6, [r4, #0]
 8010f70:	b936      	cbnz	r6, 8010f80 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8010f72:	6025      	str	r5, [r4, #0]
 8010f74:	4c04      	ldr	r4, [pc, #16]	; (8010f88 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8010f76:	8021      	strh	r1, [r4, #0]
 8010f78:	4619      	mov	r1, r3
 8010f7a:	bc70      	pop	{r4, r5, r6}
 8010f7c:	f7ff bfdc 	b.w	8010f38 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8010f80:	bc70      	pop	{r4, r5, r6}
 8010f82:	4770      	bx	lr
 8010f84:	2400b0e8 	.word	0x2400b0e8
 8010f88:	2400b0e0 	.word	0x2400b0e0

08010f8c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8010f8c:	4a12      	ldr	r2, [pc, #72]	; (8010fd8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8010f8e:	8803      	ldrh	r3, [r0, #0]
 8010f90:	8812      	ldrh	r2, [r2, #0]
 8010f92:	4293      	cmp	r3, r2
 8010f94:	d207      	bcs.n	8010fa6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8010f96:	4a11      	ldr	r2, [pc, #68]	; (8010fdc <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8010f98:	2114      	movs	r1, #20
 8010f9a:	6812      	ldr	r2, [r2, #0]
 8010f9c:	fb01 2303 	mla	r3, r1, r3, r2
 8010fa0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8010fa4:	4770      	bx	lr
 8010fa6:	490e      	ldr	r1, [pc, #56]	; (8010fe0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8010fa8:	8809      	ldrh	r1, [r1, #0]
 8010faa:	4411      	add	r1, r2
 8010fac:	428b      	cmp	r3, r1
 8010fae:	da04      	bge.n	8010fba <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8010fb0:	1a9b      	subs	r3, r3, r2
 8010fb2:	4a0c      	ldr	r2, [pc, #48]	; (8010fe4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8010fb4:	210e      	movs	r1, #14
 8010fb6:	6812      	ldr	r2, [r2, #0]
 8010fb8:	e7f0      	b.n	8010f9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8010fba:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8010fbe:	4293      	cmp	r3, r2
 8010fc0:	d108      	bne.n	8010fd4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8010fc2:	4b09      	ldr	r3, [pc, #36]	; (8010fe8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8010fc4:	781b      	ldrb	r3, [r3, #0]
 8010fc6:	b91b      	cbnz	r3, 8010fd0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8010fc8:	4b08      	ldr	r3, [pc, #32]	; (8010fec <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8010fca:	f9b3 0000 	ldrsh.w	r0, [r3]
 8010fce:	4770      	bx	lr
 8010fd0:	4b07      	ldr	r3, [pc, #28]	; (8010ff0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8010fd2:	e7fa      	b.n	8010fca <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8010fd4:	2000      	movs	r0, #0
 8010fd6:	4770      	bx	lr
 8010fd8:	2400b0e0 	.word	0x2400b0e0
 8010fdc:	2400b0e8 	.word	0x2400b0e8
 8010fe0:	2400b0e4 	.word	0x2400b0e4
 8010fe4:	2400b0c8 	.word	0x2400b0c8
 8010fe8:	2400b058 	.word	0x2400b058
 8010fec:	2400b05a 	.word	0x2400b05a
 8010ff0:	2400b05c 	.word	0x2400b05c

08010ff4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8010ff4:	4a12      	ldr	r2, [pc, #72]	; (8011040 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8010ff6:	8803      	ldrh	r3, [r0, #0]
 8010ff8:	8812      	ldrh	r2, [r2, #0]
 8010ffa:	4293      	cmp	r3, r2
 8010ffc:	d207      	bcs.n	801100e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8010ffe:	4a11      	ldr	r2, [pc, #68]	; (8011044 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8011000:	2114      	movs	r1, #20
 8011002:	6812      	ldr	r2, [r2, #0]
 8011004:	fb01 2303 	mla	r3, r1, r3, r2
 8011008:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801100c:	4770      	bx	lr
 801100e:	490e      	ldr	r1, [pc, #56]	; (8011048 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8011010:	8809      	ldrh	r1, [r1, #0]
 8011012:	4411      	add	r1, r2
 8011014:	428b      	cmp	r3, r1
 8011016:	da04      	bge.n	8011022 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8011018:	1a9b      	subs	r3, r3, r2
 801101a:	4a0c      	ldr	r2, [pc, #48]	; (801104c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801101c:	210e      	movs	r1, #14
 801101e:	6812      	ldr	r2, [r2, #0]
 8011020:	e7f0      	b.n	8011004 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8011022:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8011026:	4293      	cmp	r3, r2
 8011028:	d108      	bne.n	801103c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801102a:	4b09      	ldr	r3, [pc, #36]	; (8011050 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801102c:	781b      	ldrb	r3, [r3, #0]
 801102e:	b91b      	cbnz	r3, 8011038 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8011030:	4b08      	ldr	r3, [pc, #32]	; (8011054 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8011032:	f9b3 0000 	ldrsh.w	r0, [r3]
 8011036:	4770      	bx	lr
 8011038:	4b07      	ldr	r3, [pc, #28]	; (8011058 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801103a:	e7fa      	b.n	8011032 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801103c:	2000      	movs	r0, #0
 801103e:	4770      	bx	lr
 8011040:	2400b0e0 	.word	0x2400b0e0
 8011044:	2400b0e8 	.word	0x2400b0e8
 8011048:	2400b0e4 	.word	0x2400b0e4
 801104c:	2400b0c8 	.word	0x2400b0c8
 8011050:	2400b058 	.word	0x2400b058
 8011054:	2400b05c 	.word	0x2400b05c
 8011058:	2400b05a 	.word	0x2400b05a

0801105c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801105c:	4a1f      	ldr	r2, [pc, #124]	; (80110dc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 801105e:	b510      	push	{r4, lr}
 8011060:	880b      	ldrh	r3, [r1, #0]
 8011062:	8812      	ldrh	r2, [r2, #0]
 8011064:	4293      	cmp	r3, r2
 8011066:	d213      	bcs.n	8011090 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8011068:	4a1d      	ldr	r2, [pc, #116]	; (80110e0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801106a:	2114      	movs	r1, #20
 801106c:	6812      	ldr	r2, [r2, #0]
 801106e:	fb01 2303 	mla	r3, r1, r3, r2
 8011072:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8011076:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801107a:	8a1a      	ldrh	r2, [r3, #16]
 801107c:	8a5b      	ldrh	r3, [r3, #18]
 801107e:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8011082:	8004      	strh	r4, [r0, #0]
 8011084:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8011088:	8041      	strh	r1, [r0, #2]
 801108a:	8082      	strh	r2, [r0, #4]
 801108c:	80c3      	strh	r3, [r0, #6]
 801108e:	e00e      	b.n	80110ae <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8011090:	4914      	ldr	r1, [pc, #80]	; (80110e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8011092:	8809      	ldrh	r1, [r1, #0]
 8011094:	4411      	add	r1, r2
 8011096:	428b      	cmp	r3, r1
 8011098:	da0a      	bge.n	80110b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801109a:	1a9b      	subs	r3, r3, r2
 801109c:	4a12      	ldr	r2, [pc, #72]	; (80110e8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801109e:	210e      	movs	r1, #14
 80110a0:	6812      	ldr	r2, [r2, #0]
 80110a2:	fb01 2303 	mla	r3, r1, r3, r2
 80110a6:	681a      	ldr	r2, [r3, #0]
 80110a8:	6002      	str	r2, [r0, #0]
 80110aa:	685a      	ldr	r2, [r3, #4]
 80110ac:	6042      	str	r2, [r0, #4]
 80110ae:	bd10      	pop	{r4, pc}
 80110b0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80110b4:	4293      	cmp	r3, r2
 80110b6:	d10b      	bne.n	80110d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80110b8:	4b0c      	ldr	r3, [pc, #48]	; (80110ec <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80110ba:	f9b3 1000 	ldrsh.w	r1, [r3]
 80110be:	4b0c      	ldr	r3, [pc, #48]	; (80110f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80110c0:	8081      	strh	r1, [r0, #4]
 80110c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80110c6:	2300      	movs	r3, #0
 80110c8:	80c2      	strh	r2, [r0, #6]
 80110ca:	8003      	strh	r3, [r0, #0]
 80110cc:	8043      	strh	r3, [r0, #2]
 80110ce:	e7ee      	b.n	80110ae <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80110d0:	2300      	movs	r3, #0
 80110d2:	8003      	strh	r3, [r0, #0]
 80110d4:	8043      	strh	r3, [r0, #2]
 80110d6:	8083      	strh	r3, [r0, #4]
 80110d8:	e7d8      	b.n	801108c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80110da:	bf00      	nop
 80110dc:	2400b0e0 	.word	0x2400b0e0
 80110e0:	2400b0e8 	.word	0x2400b0e8
 80110e4:	2400b0e4 	.word	0x2400b0e4
 80110e8:	2400b0c8 	.word	0x2400b0c8
 80110ec:	2400b054 	.word	0x2400b054
 80110f0:	2400b056 	.word	0x2400b056

080110f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80110f4:	4a17      	ldr	r2, [pc, #92]	; (8011154 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80110f6:	8803      	ldrh	r3, [r0, #0]
 80110f8:	8812      	ldrh	r2, [r2, #0]
 80110fa:	4293      	cmp	r3, r2
 80110fc:	d213      	bcs.n	8011126 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80110fe:	4a16      	ldr	r2, [pc, #88]	; (8011158 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8011100:	2114      	movs	r1, #20
 8011102:	6812      	ldr	r2, [r2, #0]
 8011104:	fb01 2303 	mla	r3, r1, r3, r2
 8011108:	8a1a      	ldrh	r2, [r3, #16]
 801110a:	8919      	ldrh	r1, [r3, #8]
 801110c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8011110:	428a      	cmp	r2, r1
 8011112:	db1d      	blt.n	8011150 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8011114:	8a58      	ldrh	r0, [r3, #18]
 8011116:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801111a:	895b      	ldrh	r3, [r3, #10]
 801111c:	4298      	cmp	r0, r3
 801111e:	bfac      	ite	ge
 8011120:	2000      	movge	r0, #0
 8011122:	2001      	movlt	r0, #1
 8011124:	4770      	bx	lr
 8011126:	490d      	ldr	r1, [pc, #52]	; (801115c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8011128:	8809      	ldrh	r1, [r1, #0]
 801112a:	4411      	add	r1, r2
 801112c:	428b      	cmp	r3, r1
 801112e:	da0d      	bge.n	801114c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8011130:	1a9b      	subs	r3, r3, r2
 8011132:	4a0b      	ldr	r2, [pc, #44]	; (8011160 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8011134:	210e      	movs	r1, #14
 8011136:	6812      	ldr	r2, [r2, #0]
 8011138:	fb01 2303 	mla	r3, r1, r3, r2
 801113c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8011140:	891a      	ldrh	r2, [r3, #8]
 8011142:	4291      	cmp	r1, r2
 8011144:	db04      	blt.n	8011150 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8011146:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801114a:	e7e6      	b.n	801111a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801114c:	2000      	movs	r0, #0
 801114e:	4770      	bx	lr
 8011150:	2001      	movs	r0, #1
 8011152:	4770      	bx	lr
 8011154:	2400b0e0 	.word	0x2400b0e0
 8011158:	2400b0e8 	.word	0x2400b0e8
 801115c:	2400b0e4 	.word	0x2400b0e4
 8011160:	2400b0c8 	.word	0x2400b0c8

08011164 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8011164:	4a12      	ldr	r2, [pc, #72]	; (80111b0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8011166:	8803      	ldrh	r3, [r0, #0]
 8011168:	8811      	ldrh	r1, [r2, #0]
 801116a:	428b      	cmp	r3, r1
 801116c:	d20b      	bcs.n	8011186 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801116e:	4a11      	ldr	r2, [pc, #68]	; (80111b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8011170:	6812      	ldr	r2, [r2, #0]
 8011172:	b112      	cbz	r2, 801117a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8011174:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011178:	b9c0      	cbnz	r0, 80111ac <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801117a:	4a0f      	ldr	r2, [pc, #60]	; (80111b8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801117c:	6811      	ldr	r1, [r2, #0]
 801117e:	2214      	movs	r2, #20
 8011180:	4353      	muls	r3, r2
 8011182:	58c8      	ldr	r0, [r1, r3]
 8011184:	4770      	bx	lr
 8011186:	4a0d      	ldr	r2, [pc, #52]	; (80111bc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8011188:	8812      	ldrh	r2, [r2, #0]
 801118a:	440a      	add	r2, r1
 801118c:	4293      	cmp	r3, r2
 801118e:	da04      	bge.n	801119a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8011190:	4a08      	ldr	r2, [pc, #32]	; (80111b4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8011192:	6812      	ldr	r2, [r2, #0]
 8011194:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8011198:	4770      	bx	lr
 801119a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801119e:	4293      	cmp	r3, r2
 80111a0:	d103      	bne.n	80111aa <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80111a2:	4b07      	ldr	r3, [pc, #28]	; (80111c0 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80111a4:	681b      	ldr	r3, [r3, #0]
 80111a6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80111a8:	4770      	bx	lr
 80111aa:	2000      	movs	r0, #0
 80111ac:	4770      	bx	lr
 80111ae:	bf00      	nop
 80111b0:	2400b0e0 	.word	0x2400b0e0
 80111b4:	2400b0c4 	.word	0x2400b0c4
 80111b8:	2400b0e8 	.word	0x2400b0e8
 80111bc:	2400b0e4 	.word	0x2400b0e4
 80111c0:	2400b060 	.word	0x2400b060

080111c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80111c4:	4b24      	ldr	r3, [pc, #144]	; (8011258 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80111c6:	8802      	ldrh	r2, [r0, #0]
 80111c8:	8818      	ldrh	r0, [r3, #0]
 80111ca:	4282      	cmp	r2, r0
 80111cc:	d221      	bcs.n	8011212 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80111ce:	4b23      	ldr	r3, [pc, #140]	; (801125c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80111d0:	6819      	ldr	r1, [r3, #0]
 80111d2:	2314      	movs	r3, #20
 80111d4:	fb03 1302 	mla	r3, r3, r2, r1
 80111d8:	6858      	ldr	r0, [r3, #4]
 80111da:	2800      	cmp	r0, #0
 80111dc:	d03a      	beq.n	8011254 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80111de:	4920      	ldr	r1, [pc, #128]	; (8011260 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80111e0:	6809      	ldr	r1, [r1, #0]
 80111e2:	2900      	cmp	r1, #0
 80111e4:	d036      	beq.n	8011254 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80111e6:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80111ea:	2900      	cmp	r1, #0
 80111ec:	d032      	beq.n	8011254 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80111ee:	891a      	ldrh	r2, [r3, #8]
 80111f0:	8958      	ldrh	r0, [r3, #10]
 80111f2:	4350      	muls	r0, r2
 80111f4:	7c5a      	ldrb	r2, [r3, #17]
 80111f6:	7cdb      	ldrb	r3, [r3, #19]
 80111f8:	0952      	lsrs	r2, r2, #5
 80111fa:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80111fe:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8011202:	2b0b      	cmp	r3, #11
 8011204:	bf18      	it	ne
 8011206:	0040      	lslne	r0, r0, #1
 8011208:	3003      	adds	r0, #3
 801120a:	f020 0003 	bic.w	r0, r0, #3
 801120e:	4408      	add	r0, r1
 8011210:	4770      	bx	lr
 8011212:	4b14      	ldr	r3, [pc, #80]	; (8011264 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8011214:	881b      	ldrh	r3, [r3, #0]
 8011216:	4403      	add	r3, r0
 8011218:	429a      	cmp	r2, r3
 801121a:	da1a      	bge.n	8011252 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801121c:	4b12      	ldr	r3, [pc, #72]	; (8011268 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801121e:	1a10      	subs	r0, r2, r0
 8011220:	210e      	movs	r1, #14
 8011222:	681b      	ldr	r3, [r3, #0]
 8011224:	fb01 3000 	mla	r0, r1, r0, r3
 8011228:	7b03      	ldrb	r3, [r0, #12]
 801122a:	f003 031f 	and.w	r3, r3, #31
 801122e:	2b0b      	cmp	r3, #11
 8011230:	d10b      	bne.n	801124a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8011232:	8903      	ldrh	r3, [r0, #8]
 8011234:	8940      	ldrh	r0, [r0, #10]
 8011236:	4358      	muls	r0, r3
 8011238:	4b09      	ldr	r3, [pc, #36]	; (8011260 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801123a:	3003      	adds	r0, #3
 801123c:	6819      	ldr	r1, [r3, #0]
 801123e:	f020 0303 	bic.w	r3, r0, #3
 8011242:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8011246:	4418      	add	r0, r3
 8011248:	4770      	bx	lr
 801124a:	2b0d      	cmp	r3, #13
 801124c:	d101      	bne.n	8011252 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801124e:	300d      	adds	r0, #13
 8011250:	4770      	bx	lr
 8011252:	2000      	movs	r0, #0
 8011254:	4770      	bx	lr
 8011256:	bf00      	nop
 8011258:	2400b0e0 	.word	0x2400b0e0
 801125c:	2400b0e8 	.word	0x2400b0e8
 8011260:	2400b0c4 	.word	0x2400b0c4
 8011264:	2400b0e4 	.word	0x2400b0e4
 8011268:	2400b0c8 	.word	0x2400b0c8

0801126c <_ZNK8touchgfx6Bitmap9getFormatEv>:
 801126c:	4a17      	ldr	r2, [pc, #92]	; (80112cc <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 801126e:	b510      	push	{r4, lr}
 8011270:	8803      	ldrh	r3, [r0, #0]
 8011272:	8812      	ldrh	r2, [r2, #0]
 8011274:	4293      	cmp	r3, r2
 8011276:	d20c      	bcs.n	8011292 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8011278:	4a15      	ldr	r2, [pc, #84]	; (80112d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801127a:	2114      	movs	r1, #20
 801127c:	6812      	ldr	r2, [r2, #0]
 801127e:	fb01 2303 	mla	r3, r1, r3, r2
 8011282:	7c58      	ldrb	r0, [r3, #17]
 8011284:	0942      	lsrs	r2, r0, #5
 8011286:	7cd8      	ldrb	r0, [r3, #19]
 8011288:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801128c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8011290:	bd10      	pop	{r4, pc}
 8011292:	4910      	ldr	r1, [pc, #64]	; (80112d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8011294:	8809      	ldrh	r1, [r1, #0]
 8011296:	4411      	add	r1, r2
 8011298:	428b      	cmp	r3, r1
 801129a:	da09      	bge.n	80112b0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801129c:	1a9b      	subs	r3, r3, r2
 801129e:	4a0e      	ldr	r2, [pc, #56]	; (80112d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80112a0:	210e      	movs	r1, #14
 80112a2:	6812      	ldr	r2, [r2, #0]
 80112a4:	fb01 2303 	mla	r3, r1, r3, r2
 80112a8:	7b18      	ldrb	r0, [r3, #12]
 80112aa:	f000 001f 	and.w	r0, r0, #31
 80112ae:	e7ef      	b.n	8011290 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80112b0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80112b4:	4293      	cmp	r3, r2
 80112b6:	d106      	bne.n	80112c6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80112b8:	f7f9 ffd8 	bl	800b26c <_ZN8touchgfx3HAL3lcdEv>
 80112bc:	6803      	ldr	r3, [r0, #0]
 80112be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80112c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80112c4:	4718      	bx	r3
 80112c6:	2000      	movs	r0, #0
 80112c8:	e7e2      	b.n	8011290 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80112ca:	bf00      	nop
 80112cc:	2400b0e0 	.word	0x2400b0e0
 80112d0:	2400b0e8 	.word	0x2400b0e8
 80112d4:	2400b0e4 	.word	0x2400b0e4
 80112d8:	2400b0c8 	.word	0x2400b0c8

080112dc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80112dc:	2010      	movs	r0, #16
 80112de:	4770      	bx	lr

080112e0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80112e0:	2000      	movs	r0, #0
 80112e2:	4770      	bx	lr

080112e4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80112e4:	4b02      	ldr	r3, [pc, #8]	; (80112f0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80112e6:	8818      	ldrh	r0, [r3, #0]
 80112e8:	0040      	lsls	r0, r0, #1
 80112ea:	b280      	uxth	r0, r0
 80112ec:	4770      	bx	lr
 80112ee:	bf00      	nop
 80112f0:	2400b05a 	.word	0x2400b05a

080112f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80112f4:	2bff      	cmp	r3, #255	; 0xff
 80112f6:	d050      	beq.n	801139a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80112f8:	2a0b      	cmp	r2, #11
 80112fa:	d04a      	beq.n	8011392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80112fc:	d80e      	bhi.n	801131c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80112fe:	2a03      	cmp	r2, #3
 8011300:	d03f      	beq.n	8011382 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8011302:	d804      	bhi.n	801130e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8011304:	2a01      	cmp	r2, #1
 8011306:	d03e      	beq.n	8011386 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8011308:	d93f      	bls.n	801138a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801130a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801130c:	4770      	bx	lr
 801130e:	2a09      	cmp	r2, #9
 8011310:	d03f      	beq.n	8011392 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8011312:	d83c      	bhi.n	801138e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011314:	2a08      	cmp	r2, #8
 8011316:	d03a      	beq.n	801138e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8011318:	2000      	movs	r0, #0
 801131a:	4770      	bx	lr
 801131c:	2a2f      	cmp	r2, #47	; 0x2f
 801131e:	d024      	beq.n	801136a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8011320:	d80d      	bhi.n	801133e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8011322:	2a2d      	cmp	r2, #45	; 0x2d
 8011324:	d014      	beq.n	8011350 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8011326:	d826      	bhi.n	8011376 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8011328:	2a2c      	cmp	r2, #44	; 0x2c
 801132a:	d1f5      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801132c:	684b      	ldr	r3, [r1, #4]
 801132e:	781b      	ldrb	r3, [r3, #0]
 8011330:	2b01      	cmp	r3, #1
 8011332:	d018      	beq.n	8011366 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8011334:	d323      	bcc.n	801137e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8011336:	2b02      	cmp	r3, #2
 8011338:	d1ee      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801133a:	6880      	ldr	r0, [r0, #8]
 801133c:	4770      	bx	lr
 801133e:	2a31      	cmp	r2, #49	; 0x31
 8011340:	d004      	beq.n	801134c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8011342:	d328      	bcc.n	8011396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8011344:	2a32      	cmp	r2, #50	; 0x32
 8011346:	d026      	beq.n	8011396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8011348:	2a33      	cmp	r2, #51	; 0x33
 801134a:	d1e5      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801134c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 801134e:	4770      	bx	lr
 8011350:	684b      	ldr	r3, [r1, #4]
 8011352:	781b      	ldrb	r3, [r3, #0]
 8011354:	2b01      	cmp	r3, #1
 8011356:	d004      	beq.n	8011362 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8011358:	d30b      	bcc.n	8011372 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801135a:	2b02      	cmp	r3, #2
 801135c:	d1dc      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801135e:	6900      	ldr	r0, [r0, #16]
 8011360:	4770      	bx	lr
 8011362:	6a00      	ldr	r0, [r0, #32]
 8011364:	4770      	bx	lr
 8011366:	6980      	ldr	r0, [r0, #24]
 8011368:	4770      	bx	lr
 801136a:	684b      	ldr	r3, [r1, #4]
 801136c:	781b      	ldrb	r3, [r3, #0]
 801136e:	2b00      	cmp	r3, #0
 8011370:	d1d2      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011372:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8011374:	4770      	bx	lr
 8011376:	684b      	ldr	r3, [r1, #4]
 8011378:	781b      	ldrb	r3, [r3, #0]
 801137a:	2b00      	cmp	r3, #0
 801137c:	d1cc      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801137e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011380:	4770      	bx	lr
 8011382:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8011384:	4770      	bx	lr
 8011386:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8011388:	4770      	bx	lr
 801138a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801138c:	4770      	bx	lr
 801138e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8011390:	4770      	bx	lr
 8011392:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8011394:	4770      	bx	lr
 8011396:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8011398:	4770      	bx	lr
 801139a:	2a0b      	cmp	r2, #11
 801139c:	d049      	beq.n	8011432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801139e:	d80e      	bhi.n	80113be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80113a0:	2a03      	cmp	r2, #3
 80113a2:	d040      	beq.n	8011426 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80113a4:	d804      	bhi.n	80113b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80113a6:	2a01      	cmp	r2, #1
 80113a8:	d03f      	beq.n	801142a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80113aa:	d940      	bls.n	801142e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80113ac:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80113ae:	4770      	bx	lr
 80113b0:	2a09      	cmp	r2, #9
 80113b2:	d03e      	beq.n	8011432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80113b4:	d801      	bhi.n	80113ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80113b6:	2a08      	cmp	r2, #8
 80113b8:	d1ae      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113ba:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80113bc:	4770      	bx	lr
 80113be:	2a2f      	cmp	r2, #47	; 0x2f
 80113c0:	d024      	beq.n	801140c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80113c2:	d80d      	bhi.n	80113e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80113c4:	2a2d      	cmp	r2, #45	; 0x2d
 80113c6:	d014      	beq.n	80113f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80113c8:	d826      	bhi.n	8011418 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80113ca:	2a2c      	cmp	r2, #44	; 0x2c
 80113cc:	d1a4      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113ce:	684b      	ldr	r3, [r1, #4]
 80113d0:	781b      	ldrb	r3, [r3, #0]
 80113d2:	2b01      	cmp	r3, #1
 80113d4:	d018      	beq.n	8011408 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 80113d6:	d324      	bcc.n	8011422 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 80113d8:	2b02      	cmp	r3, #2
 80113da:	d19d      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113dc:	68c0      	ldr	r0, [r0, #12]
 80113de:	4770      	bx	lr
 80113e0:	2a31      	cmp	r2, #49	; 0x31
 80113e2:	d004      	beq.n	80113ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 80113e4:	d327      	bcc.n	8011436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80113e6:	2a32      	cmp	r2, #50	; 0x32
 80113e8:	d025      	beq.n	8011436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 80113ea:	2a33      	cmp	r2, #51	; 0x33
 80113ec:	d194      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80113ee:	6f40      	ldr	r0, [r0, #116]	; 0x74
 80113f0:	4770      	bx	lr
 80113f2:	684b      	ldr	r3, [r1, #4]
 80113f4:	781b      	ldrb	r3, [r3, #0]
 80113f6:	2b01      	cmp	r3, #1
 80113f8:	d004      	beq.n	8011404 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 80113fa:	d30b      	bcc.n	8011414 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 80113fc:	2b02      	cmp	r3, #2
 80113fe:	d18b      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011400:	6940      	ldr	r0, [r0, #20]
 8011402:	4770      	bx	lr
 8011404:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8011406:	4770      	bx	lr
 8011408:	69c0      	ldr	r0, [r0, #28]
 801140a:	4770      	bx	lr
 801140c:	684b      	ldr	r3, [r1, #4]
 801140e:	781b      	ldrb	r3, [r3, #0]
 8011410:	2b00      	cmp	r3, #0
 8011412:	d181      	bne.n	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011414:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8011416:	4770      	bx	lr
 8011418:	684b      	ldr	r3, [r1, #4]
 801141a:	781b      	ldrb	r3, [r3, #0]
 801141c:	2b00      	cmp	r3, #0
 801141e:	f47f af7b 	bne.w	8011318 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8011422:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8011424:	4770      	bx	lr
 8011426:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8011428:	4770      	bx	lr
 801142a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 801142c:	4770      	bx	lr
 801142e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8011430:	4770      	bx	lr
 8011432:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8011434:	4770      	bx	lr
 8011436:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8011438:	4770      	bx	lr

0801143a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801143a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801143e:	b087      	sub	sp, #28
 8011440:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011442:	9205      	str	r2, [sp, #20]
 8011444:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011448:	9101      	str	r1, [sp, #4]
 801144a:	9202      	str	r2, [sp, #8]
 801144c:	6841      	ldr	r1, [r0, #4]
 801144e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8011452:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011456:	fb01 2404 	mla	r4, r1, r4, r2
 801145a:	6802      	ldr	r2, [r0, #0]
 801145c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011460:	f8de 2000 	ldr.w	r2, [lr]
 8011464:	9203      	str	r2, [sp, #12]
 8011466:	f8de 2004 	ldr.w	r2, [lr, #4]
 801146a:	3204      	adds	r2, #4
 801146c:	9204      	str	r2, [sp, #16]
 801146e:	9a02      	ldr	r2, [sp, #8]
 8011470:	43d6      	mvns	r6, r2
 8011472:	b2f6      	uxtb	r6, r6
 8011474:	9a01      	ldr	r2, [sp, #4]
 8011476:	2a00      	cmp	r2, #0
 8011478:	dc03      	bgt.n	8011482 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801147a:	9a05      	ldr	r2, [sp, #20]
 801147c:	2a00      	cmp	r2, #0
 801147e:	f340 8129 	ble.w	80116d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8011482:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011484:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8011488:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801148c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801148e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8011492:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011496:	2b00      	cmp	r3, #0
 8011498:	dd0e      	ble.n	80114b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801149a:	1408      	asrs	r0, r1, #16
 801149c:	d405      	bmi.n	80114aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801149e:	4560      	cmp	r0, ip
 80114a0:	da03      	bge.n	80114aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80114a2:	1410      	asrs	r0, r2, #16
 80114a4:	d401      	bmi.n	80114aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80114a6:	42b8      	cmp	r0, r7
 80114a8:	db07      	blt.n	80114ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80114aa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80114ac:	3b01      	subs	r3, #1
 80114ae:	3402      	adds	r4, #2
 80114b0:	4401      	add	r1, r0
 80114b2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80114b4:	4402      	add	r2, r0
 80114b6:	e7ee      	b.n	8011496 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80114b8:	d071      	beq.n	801159e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80114ba:	1e58      	subs	r0, r3, #1
 80114bc:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80114be:	fb05 1500 	mla	r5, r5, r0, r1
 80114c2:	142d      	asrs	r5, r5, #16
 80114c4:	d45f      	bmi.n	8011586 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80114c6:	4565      	cmp	r5, ip
 80114c8:	da5d      	bge.n	8011586 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80114ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80114cc:	fb05 2000 	mla	r0, r5, r0, r2
 80114d0:	1400      	asrs	r0, r0, #16
 80114d2:	d458      	bmi.n	8011586 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80114d4:	42b8      	cmp	r0, r7
 80114d6:	da56      	bge.n	8011586 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80114d8:	4699      	mov	r9, r3
 80114da:	46a2      	mov	sl, r4
 80114dc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80114e0:	f1b9 0f00 	cmp.w	r9, #0
 80114e4:	dd57      	ble.n	8011596 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80114e6:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80114ea:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80114ee:	9803      	ldr	r0, [sp, #12]
 80114f0:	140d      	asrs	r5, r1, #16
 80114f2:	f109 39ff 	add.w	r9, r9, #4294967295
 80114f6:	fb07 000c 	mla	r0, r7, ip, r0
 80114fa:	5d40      	ldrb	r0, [r0, r5]
 80114fc:	9d04      	ldr	r5, [sp, #16]
 80114fe:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011502:	f8ba 5000 	ldrh.w	r5, [sl]
 8011506:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801150a:	122f      	asrs	r7, r5, #8
 801150c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8011510:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011514:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011518:	00ed      	lsls	r5, r5, #3
 801151a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801151e:	fb17 f706 	smulbb	r7, r7, r6
 8011522:	b2ed      	uxtb	r5, r5
 8011524:	fb18 f806 	smulbb	r8, r8, r6
 8011528:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801152c:	10c7      	asrs	r7, r0, #3
 801152e:	fb15 f506 	smulbb	r5, r5, r6
 8011532:	00c0      	lsls	r0, r0, #3
 8011534:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011538:	fa1f fc8c 	uxth.w	ip, ip
 801153c:	b2c0      	uxtb	r0, r0
 801153e:	fb07 870b 	mla	r7, r7, fp, r8
 8011542:	fb00 500b 	mla	r0, r0, fp, r5
 8011546:	f10c 0501 	add.w	r5, ip, #1
 801154a:	b2bf      	uxth	r7, r7
 801154c:	b280      	uxth	r0, r0
 801154e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8011552:	f107 0801 	add.w	r8, r7, #1
 8011556:	1c45      	adds	r5, r0, #1
 8011558:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801155c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8011560:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8011564:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011566:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801156a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801156e:	4401      	add	r1, r0
 8011570:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011574:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011576:	ea45 0c0c 	orr.w	ip, r5, ip
 801157a:	4402      	add	r2, r0
 801157c:	ea4c 0c08 	orr.w	ip, ip, r8
 8011580:	f82a cb02 	strh.w	ip, [sl], #2
 8011584:	e7ac      	b.n	80114e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8011586:	f04f 0800 	mov.w	r8, #0
 801158a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801158e:	eb03 0008 	add.w	r0, r3, r8
 8011592:	2800      	cmp	r0, #0
 8011594:	dc41      	bgt.n	801161a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8011596:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801159a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801159e:	9b01      	ldr	r3, [sp, #4]
 80115a0:	2b00      	cmp	r3, #0
 80115a2:	f340 8097 	ble.w	80116d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80115a6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80115aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80115ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80115b0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80115b4:	eef0 6a62 	vmov.f32	s13, s5
 80115b8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80115bc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80115c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80115c4:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80115c8:	eef0 6a43 	vmov.f32	s13, s6
 80115cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80115d0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80115d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80115d8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80115dc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80115e0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80115e4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80115e8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80115ec:	ee12 2a90 	vmov	r2, s5
 80115f0:	eef0 2a47 	vmov.f32	s5, s14
 80115f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80115f8:	ee13 2a10 	vmov	r2, s6
 80115fc:	9313      	str	r3, [sp, #76]	; 0x4c
 80115fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011600:	eeb0 3a67 	vmov.f32	s6, s15
 8011604:	fb92 f3f3 	sdiv	r3, r2, r3
 8011608:	9314      	str	r3, [sp, #80]	; 0x50
 801160a:	9b01      	ldr	r3, [sp, #4]
 801160c:	9a05      	ldr	r2, [sp, #20]
 801160e:	3b01      	subs	r3, #1
 8011610:	9301      	str	r3, [sp, #4]
 8011612:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011614:	bf08      	it	eq
 8011616:	4613      	moveq	r3, r2
 8011618:	e72c      	b.n	8011474 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801161a:	140f      	asrs	r7, r1, #16
 801161c:	d453      	bmi.n	80116c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801161e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8011622:	42bd      	cmp	r5, r7
 8011624:	dd4f      	ble.n	80116c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011626:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801162a:	d44c      	bmi.n	80116c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801162c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8011630:	4560      	cmp	r0, ip
 8011632:	dd48      	ble.n	80116c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8011634:	9803      	ldr	r0, [sp, #12]
 8011636:	b22d      	sxth	r5, r5
 8011638:	fb0c 0505 	mla	r5, ip, r5, r0
 801163c:	5de8      	ldrb	r0, [r5, r7]
 801163e:	9d04      	ldr	r5, [sp, #16]
 8011640:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8011644:	f06f 0501 	mvn.w	r5, #1
 8011648:	fb05 fb08 	mul.w	fp, r5, r8
 801164c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8011650:	f834 500b 	ldrh.w	r5, [r4, fp]
 8011654:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011658:	122f      	asrs	r7, r5, #8
 801165a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801165e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011662:	00ed      	lsls	r5, r5, #3
 8011664:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011668:	fb17 f706 	smulbb	r7, r7, r6
 801166c:	b2ed      	uxtb	r5, r5
 801166e:	fb19 f906 	smulbb	r9, r9, r6
 8011672:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8011676:	10c7      	asrs	r7, r0, #3
 8011678:	fb15 f506 	smulbb	r5, r5, r6
 801167c:	00c0      	lsls	r0, r0, #3
 801167e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8011682:	fa1f fc8c 	uxth.w	ip, ip
 8011686:	b2c0      	uxtb	r0, r0
 8011688:	fb07 970a 	mla	r7, r7, sl, r9
 801168c:	fb00 500a 	mla	r0, r0, sl, r5
 8011690:	f10c 0501 	add.w	r5, ip, #1
 8011694:	b2bf      	uxth	r7, r7
 8011696:	b280      	uxth	r0, r0
 8011698:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801169c:	f107 0901 	add.w	r9, r7, #1
 80116a0:	1c45      	adds	r5, r0, #1
 80116a2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80116a6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80116aa:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80116ae:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80116b2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80116b6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80116ba:	ea45 0c0c 	orr.w	ip, r5, ip
 80116be:	ea4c 0c09 	orr.w	ip, ip, r9
 80116c2:	f824 c00b 	strh.w	ip, [r4, fp]
 80116c6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80116c8:	f108 38ff 	add.w	r8, r8, #4294967295
 80116cc:	4401      	add	r1, r0
 80116ce:	9814      	ldr	r0, [sp, #80]	; 0x50
 80116d0:	4402      	add	r2, r0
 80116d2:	e75c      	b.n	801158e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80116d4:	b007      	add	sp, #28
 80116d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080116da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80116da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116de:	b085      	sub	sp, #20
 80116e0:	4693      	mov	fp, r2
 80116e2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80116e6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80116e8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80116ea:	6870      	ldr	r0, [r6, #4]
 80116ec:	9100      	str	r1, [sp, #0]
 80116ee:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80116f2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80116f6:	fb00 2404 	mla	r4, r0, r4, r2
 80116fa:	6832      	ldr	r2, [r6, #0]
 80116fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011700:	682a      	ldr	r2, [r5, #0]
 8011702:	9201      	str	r2, [sp, #4]
 8011704:	686a      	ldr	r2, [r5, #4]
 8011706:	3204      	adds	r2, #4
 8011708:	9202      	str	r2, [sp, #8]
 801170a:	9a00      	ldr	r2, [sp, #0]
 801170c:	2a00      	cmp	r2, #0
 801170e:	dc03      	bgt.n	8011718 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8011710:	f1bb 0f00 	cmp.w	fp, #0
 8011714:	f340 80a0 	ble.w	8011858 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011718:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801171a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801171e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011722:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011724:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011728:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801172c:	2b00      	cmp	r3, #0
 801172e:	dd0c      	ble.n	801174a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011730:	1406      	asrs	r6, r0, #16
 8011732:	d405      	bmi.n	8011740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011734:	454e      	cmp	r6, r9
 8011736:	da03      	bge.n	8011740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8011738:	1416      	asrs	r6, r2, #16
 801173a:	d401      	bmi.n	8011740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801173c:	4546      	cmp	r6, r8
 801173e:	db05      	blt.n	801174c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011740:	4470      	add	r0, lr
 8011742:	4462      	add	r2, ip
 8011744:	3b01      	subs	r3, #1
 8011746:	3402      	adds	r4, #2
 8011748:	e7f0      	b.n	801172c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801174a:	d00f      	beq.n	801176c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801174c:	1e5e      	subs	r6, r3, #1
 801174e:	fb0e 0706 	mla	r7, lr, r6, r0
 8011752:	143f      	asrs	r7, r7, #16
 8011754:	d541      	bpl.n	80117da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8011756:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801175a:	4698      	mov	r8, r3
 801175c:	9603      	str	r6, [sp, #12]
 801175e:	f1b8 0f00 	cmp.w	r8, #0
 8011762:	dc59      	bgt.n	8011818 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8011764:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011768:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801176c:	9b00      	ldr	r3, [sp, #0]
 801176e:	2b00      	cmp	r3, #0
 8011770:	dd72      	ble.n	8011858 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8011772:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011776:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011778:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801177c:	eeb0 6a62 	vmov.f32	s12, s5
 8011780:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011784:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011788:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801178c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011790:	eeb0 6a43 	vmov.f32	s12, s6
 8011794:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011798:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801179c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80117a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117a4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80117a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80117ac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80117b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80117b4:	ee12 2a90 	vmov	r2, s5
 80117b8:	eef0 2a47 	vmov.f32	s5, s14
 80117bc:	fb92 fef3 	sdiv	lr, r2, r3
 80117c0:	ee13 2a10 	vmov	r2, s6
 80117c4:	eeb0 3a67 	vmov.f32	s6, s15
 80117c8:	fb92 fcf3 	sdiv	ip, r2, r3
 80117cc:	9b00      	ldr	r3, [sp, #0]
 80117ce:	3b01      	subs	r3, #1
 80117d0:	9300      	str	r3, [sp, #0]
 80117d2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80117d4:	bf08      	it	eq
 80117d6:	465b      	moveq	r3, fp
 80117d8:	e797      	b.n	801170a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80117da:	454f      	cmp	r7, r9
 80117dc:	dabb      	bge.n	8011756 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80117de:	fb0c 2606 	mla	r6, ip, r6, r2
 80117e2:	1436      	asrs	r6, r6, #16
 80117e4:	d4b7      	bmi.n	8011756 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80117e6:	4546      	cmp	r6, r8
 80117e8:	dab5      	bge.n	8011756 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80117ea:	461e      	mov	r6, r3
 80117ec:	46a0      	mov	r8, r4
 80117ee:	2e00      	cmp	r6, #0
 80117f0:	ddb8      	ble.n	8011764 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80117f2:	1417      	asrs	r7, r2, #16
 80117f4:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80117f8:	9901      	ldr	r1, [sp, #4]
 80117fa:	ea4f 4920 	mov.w	r9, r0, asr #16
 80117fe:	4462      	add	r2, ip
 8011800:	4470      	add	r0, lr
 8011802:	fb0a 1707 	mla	r7, sl, r7, r1
 8011806:	9902      	ldr	r1, [sp, #8]
 8011808:	3e01      	subs	r6, #1
 801180a:	f817 7009 	ldrb.w	r7, [r7, r9]
 801180e:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8011812:	f828 7b02 	strh.w	r7, [r8], #2
 8011816:	e7ea      	b.n	80117ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8011818:	ea5f 4920 	movs.w	r9, r0, asr #16
 801181c:	d417      	bmi.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801181e:	68ae      	ldr	r6, [r5, #8]
 8011820:	454e      	cmp	r6, r9
 8011822:	dd14      	ble.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011824:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8011828:	d411      	bmi.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801182a:	68ef      	ldr	r7, [r5, #12]
 801182c:	4557      	cmp	r7, sl
 801182e:	dd0e      	ble.n	801184e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8011830:	9f01      	ldr	r7, [sp, #4]
 8011832:	b236      	sxth	r6, r6
 8011834:	f06f 0101 	mvn.w	r1, #1
 8011838:	fb0a 7606 	mla	r6, sl, r6, r7
 801183c:	9f02      	ldr	r7, [sp, #8]
 801183e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8011842:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8011846:	fb01 f608 	mul.w	r6, r1, r8
 801184a:	9903      	ldr	r1, [sp, #12]
 801184c:	538f      	strh	r7, [r1, r6]
 801184e:	4470      	add	r0, lr
 8011850:	4462      	add	r2, ip
 8011852:	f108 38ff 	add.w	r8, r8, #4294967295
 8011856:	e782      	b.n	801175e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011858:	b005      	add	sp, #20
 801185a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801185e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801185e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011862:	b087      	sub	sp, #28
 8011864:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8011866:	9205      	str	r2, [sp, #20]
 8011868:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801186c:	9102      	str	r1, [sp, #8]
 801186e:	9203      	str	r2, [sp, #12]
 8011870:	6861      	ldr	r1, [r4, #4]
 8011872:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8011876:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801187a:	fb01 2000 	mla	r0, r1, r0, r2
 801187e:	6822      	ldr	r2, [r4, #0]
 8011880:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8011884:	9200      	str	r2, [sp, #0]
 8011886:	f8dc 2000 	ldr.w	r2, [ip]
 801188a:	9204      	str	r2, [sp, #16]
 801188c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011890:	3204      	adds	r2, #4
 8011892:	9201      	str	r2, [sp, #4]
 8011894:	9a03      	ldr	r2, [sp, #12]
 8011896:	43d5      	mvns	r5, r2
 8011898:	b2ed      	uxtb	r5, r5
 801189a:	9a02      	ldr	r2, [sp, #8]
 801189c:	2a00      	cmp	r2, #0
 801189e:	dc03      	bgt.n	80118a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80118a0:	9a05      	ldr	r2, [sp, #20]
 80118a2:	2a00      	cmp	r2, #0
 80118a4:	f340 812c 	ble.w	8011b00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80118a8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80118aa:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80118ae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80118b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80118b4:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80118b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80118bc:	2b00      	cmp	r3, #0
 80118be:	dd10      	ble.n	80118e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80118c0:	140c      	asrs	r4, r1, #16
 80118c2:	d405      	bmi.n	80118d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80118c4:	4574      	cmp	r4, lr
 80118c6:	da03      	bge.n	80118d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80118c8:	1414      	asrs	r4, r2, #16
 80118ca:	d401      	bmi.n	80118d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80118cc:	42bc      	cmp	r4, r7
 80118ce:	db09      	blt.n	80118e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80118d0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80118d2:	3b01      	subs	r3, #1
 80118d4:	9800      	ldr	r0, [sp, #0]
 80118d6:	4421      	add	r1, r4
 80118d8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80118da:	3002      	adds	r0, #2
 80118dc:	4422      	add	r2, r4
 80118de:	9000      	str	r0, [sp, #0]
 80118e0:	e7ec      	b.n	80118bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80118e2:	d071      	beq.n	80119c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80118e4:	1e5c      	subs	r4, r3, #1
 80118e6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80118e8:	fb06 1604 	mla	r6, r6, r4, r1
 80118ec:	1436      	asrs	r6, r6, #16
 80118ee:	d45d      	bmi.n	80119ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80118f0:	4576      	cmp	r6, lr
 80118f2:	da5b      	bge.n	80119ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80118f4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80118f6:	fb06 2404 	mla	r4, r6, r4, r2
 80118fa:	1424      	asrs	r4, r4, #16
 80118fc:	d456      	bmi.n	80119ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80118fe:	42bc      	cmp	r4, r7
 8011900:	da54      	bge.n	80119ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8011902:	4698      	mov	r8, r3
 8011904:	f8dd 9000 	ldr.w	r9, [sp]
 8011908:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801190c:	f1b8 0f00 	cmp.w	r8, #0
 8011910:	dd54      	ble.n	80119bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8011912:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011916:	1414      	asrs	r4, r2, #16
 8011918:	9804      	ldr	r0, [sp, #16]
 801191a:	140e      	asrs	r6, r1, #16
 801191c:	f108 38ff 	add.w	r8, r8, #4294967295
 8011920:	fb07 0404 	mla	r4, r7, r4, r0
 8011924:	9801      	ldr	r0, [sp, #4]
 8011926:	f814 e006 	ldrb.w	lr, [r4, r6]
 801192a:	f8b9 4000 	ldrh.w	r4, [r9]
 801192e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011932:	1227      	asrs	r7, r4, #8
 8011934:	eb00 0b0e 	add.w	fp, r0, lr
 8011938:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801193c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011940:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011942:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011946:	f89b b001 	ldrb.w	fp, [fp, #1]
 801194a:	4401      	add	r1, r0
 801194c:	fb16 f60a 	smulbb	r6, r6, sl
 8011950:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011952:	fb1b fb0a 	smulbb	fp, fp, sl
 8011956:	fb07 6705 	mla	r7, r7, r5, r6
 801195a:	10e6      	asrs	r6, r4, #3
 801195c:	00e4      	lsls	r4, r4, #3
 801195e:	4402      	add	r2, r0
 8011960:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011964:	b2bf      	uxth	r7, r7
 8011966:	b2e4      	uxtb	r4, r4
 8011968:	fb06 b605 	mla	r6, r6, r5, fp
 801196c:	fb14 f405 	smulbb	r4, r4, r5
 8011970:	b2b6      	uxth	r6, r6
 8011972:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8011976:	1c7c      	adds	r4, r7, #1
 8011978:	f106 0b01 	add.w	fp, r6, #1
 801197c:	fa1f fe8e 	uxth.w	lr, lr
 8011980:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011984:	f10e 0401 	add.w	r4, lr, #1
 8011988:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801198c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011990:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8011994:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011998:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801199c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80119a0:	4327      	orrs	r7, r4
 80119a2:	ea47 070b 	orr.w	r7, r7, fp
 80119a6:	f829 7b02 	strh.w	r7, [r9], #2
 80119aa:	e7af      	b.n	801190c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80119ac:	f04f 0e00 	mov.w	lr, #0
 80119b0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80119b4:	eb03 040e 	add.w	r4, r3, lr
 80119b8:	2c00      	cmp	r4, #0
 80119ba:	dc43      	bgt.n	8011a44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80119bc:	9a00      	ldr	r2, [sp, #0]
 80119be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80119c2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80119c6:	9300      	str	r3, [sp, #0]
 80119c8:	9b02      	ldr	r3, [sp, #8]
 80119ca:	2b00      	cmp	r3, #0
 80119cc:	f340 8098 	ble.w	8011b00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80119d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80119d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80119d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80119da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80119de:	eef0 6a62 	vmov.f32	s13, s5
 80119e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80119e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80119ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80119ee:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80119f2:	eef0 6a43 	vmov.f32	s13, s6
 80119f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80119fa:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80119fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011a02:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011a06:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011a0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011a0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011a12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011a16:	ee12 2a90 	vmov	r2, s5
 8011a1a:	eef0 2a47 	vmov.f32	s5, s14
 8011a1e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a22:	ee13 2a10 	vmov	r2, s6
 8011a26:	9313      	str	r3, [sp, #76]	; 0x4c
 8011a28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a2a:	eeb0 3a67 	vmov.f32	s6, s15
 8011a2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8011a32:	9314      	str	r3, [sp, #80]	; 0x50
 8011a34:	9b02      	ldr	r3, [sp, #8]
 8011a36:	9a05      	ldr	r2, [sp, #20]
 8011a38:	3b01      	subs	r3, #1
 8011a3a:	9302      	str	r3, [sp, #8]
 8011a3c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011a3e:	bf08      	it	eq
 8011a40:	4613      	moveq	r3, r2
 8011a42:	e72a      	b.n	801189a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011a44:	140f      	asrs	r7, r1, #16
 8011a46:	d454      	bmi.n	8011af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011a48:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8011a4c:	42be      	cmp	r6, r7
 8011a4e:	dd50      	ble.n	8011af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011a50:	ea5f 4822 	movs.w	r8, r2, asr #16
 8011a54:	d44d      	bmi.n	8011af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011a56:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8011a5a:	4544      	cmp	r4, r8
 8011a5c:	dd49      	ble.n	8011af2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8011a5e:	9c04      	ldr	r4, [sp, #16]
 8011a60:	b236      	sxth	r6, r6
 8011a62:	f06f 0001 	mvn.w	r0, #1
 8011a66:	fb08 4606 	mla	r6, r8, r6, r4
 8011a6a:	9c01      	ldr	r4, [sp, #4]
 8011a6c:	fb00 fa0e 	mul.w	sl, r0, lr
 8011a70:	9800      	ldr	r0, [sp, #0]
 8011a72:	f816 8007 	ldrb.w	r8, [r6, r7]
 8011a76:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8011a7a:	eb04 0b08 	add.w	fp, r4, r8
 8011a7e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8011a82:	9801      	ldr	r0, [sp, #4]
 8011a84:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8011a88:	1227      	asrs	r7, r4, #8
 8011a8a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011a8e:	fb16 f609 	smulbb	r6, r6, r9
 8011a92:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011a96:	f810 8008 	ldrb.w	r8, [r0, r8]
 8011a9a:	fb1b fb09 	smulbb	fp, fp, r9
 8011a9e:	fb07 6705 	mla	r7, r7, r5, r6
 8011aa2:	10e6      	asrs	r6, r4, #3
 8011aa4:	00e4      	lsls	r4, r4, #3
 8011aa6:	9800      	ldr	r0, [sp, #0]
 8011aa8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011aac:	b2bf      	uxth	r7, r7
 8011aae:	b2e4      	uxtb	r4, r4
 8011ab0:	fb06 b605 	mla	r6, r6, r5, fp
 8011ab4:	fb14 f405 	smulbb	r4, r4, r5
 8011ab8:	b2b6      	uxth	r6, r6
 8011aba:	fb08 4809 	mla	r8, r8, r9, r4
 8011abe:	1c7c      	adds	r4, r7, #1
 8011ac0:	f106 0b01 	add.w	fp, r6, #1
 8011ac4:	fa1f f888 	uxth.w	r8, r8
 8011ac8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8011acc:	f108 0401 	add.w	r4, r8, #1
 8011ad0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8011ad4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011ad8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8011adc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8011ae0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8011ae4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8011ae8:	4327      	orrs	r7, r4
 8011aea:	ea47 070b 	orr.w	r7, r7, fp
 8011aee:	f820 700a 	strh.w	r7, [r0, sl]
 8011af2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011af4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011af8:	4401      	add	r1, r0
 8011afa:	9814      	ldr	r0, [sp, #80]	; 0x50
 8011afc:	4402      	add	r2, r0
 8011afe:	e759      	b.n	80119b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8011b00:	b007      	add	sp, #28
 8011b02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08011b08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b0c:	b085      	sub	sp, #20
 8011b0e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011b12:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8011b14:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8011b16:	9203      	str	r2, [sp, #12]
 8011b18:	6870      	ldr	r0, [r6, #4]
 8011b1a:	686f      	ldr	r7, [r5, #4]
 8011b1c:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8011b20:	3704      	adds	r7, #4
 8011b22:	9101      	str	r1, [sp, #4]
 8011b24:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011b28:	fb00 2404 	mla	r4, r0, r4, r2
 8011b2c:	6832      	ldr	r2, [r6, #0]
 8011b2e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011b32:	682a      	ldr	r2, [r5, #0]
 8011b34:	9202      	str	r2, [sp, #8]
 8011b36:	9a01      	ldr	r2, [sp, #4]
 8011b38:	2a00      	cmp	r2, #0
 8011b3a:	dc03      	bgt.n	8011b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8011b3c:	9a03      	ldr	r2, [sp, #12]
 8011b3e:	2a00      	cmp	r2, #0
 8011b40:	f340 80cc 	ble.w	8011cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011b44:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011b46:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011b4a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011b4e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011b50:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8011b54:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011b58:	2b00      	cmp	r3, #0
 8011b5a:	dd0d      	ble.n	8011b78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8011b5c:	1406      	asrs	r6, r0, #16
 8011b5e:	d405      	bmi.n	8011b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011b60:	454e      	cmp	r6, r9
 8011b62:	da03      	bge.n	8011b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011b64:	1416      	asrs	r6, r2, #16
 8011b66:	d401      	bmi.n	8011b6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8011b68:	4546      	cmp	r6, r8
 8011b6a:	db06      	blt.n	8011b7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8011b6c:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8011b6e:	4460      	add	r0, ip
 8011b70:	3b01      	subs	r3, #1
 8011b72:	3402      	adds	r4, #2
 8011b74:	4432      	add	r2, r6
 8011b76:	e7ef      	b.n	8011b58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8011b78:	d00f      	beq.n	8011b9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8011b7a:	1e5e      	subs	r6, r3, #1
 8011b7c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8011b80:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8011b84:	d543      	bpl.n	8011c0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8011b86:	4698      	mov	r8, r3
 8011b88:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8011b8c:	f1b8 0f00 	cmp.w	r8, #0
 8011b90:	dc71      	bgt.n	8011c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8011b92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011b96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011b9a:	9b01      	ldr	r3, [sp, #4]
 8011b9c:	2b00      	cmp	r3, #0
 8011b9e:	f340 809d 	ble.w	8011cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8011ba2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011ba6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011ba8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011bac:	eeb0 6a62 	vmov.f32	s12, s5
 8011bb0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011bb4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011bb8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bbc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8011bc0:	eeb0 6a43 	vmov.f32	s12, s6
 8011bc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011bc8:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8011bcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011bd0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011bd4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011bd8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011bdc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011be0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011be4:	ee12 2a90 	vmov	r2, s5
 8011be8:	eef0 2a47 	vmov.f32	s5, s14
 8011bec:	fb92 fcf3 	sdiv	ip, r2, r3
 8011bf0:	ee13 2a10 	vmov	r2, s6
 8011bf4:	eeb0 3a67 	vmov.f32	s6, s15
 8011bf8:	fb92 f3f3 	sdiv	r3, r2, r3
 8011bfc:	9312      	str	r3, [sp, #72]	; 0x48
 8011bfe:	9b01      	ldr	r3, [sp, #4]
 8011c00:	9a03      	ldr	r2, [sp, #12]
 8011c02:	3b01      	subs	r3, #1
 8011c04:	9301      	str	r3, [sp, #4]
 8011c06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011c08:	bf08      	it	eq
 8011c0a:	4613      	moveq	r3, r2
 8011c0c:	e793      	b.n	8011b36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8011c0e:	45ce      	cmp	lr, r9
 8011c10:	dab9      	bge.n	8011b86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c12:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011c14:	fb01 2606 	mla	r6, r1, r6, r2
 8011c18:	1436      	asrs	r6, r6, #16
 8011c1a:	d4b4      	bmi.n	8011b86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c1c:	4546      	cmp	r6, r8
 8011c1e:	dab2      	bge.n	8011b86 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011c20:	4698      	mov	r8, r3
 8011c22:	46a2      	mov	sl, r4
 8011c24:	f1b8 0f00 	cmp.w	r8, #0
 8011c28:	ddb3      	ble.n	8011b92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8011c2a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8011c2e:	1416      	asrs	r6, r2, #16
 8011c30:	9902      	ldr	r1, [sp, #8]
 8011c32:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8011c36:	f108 38ff 	add.w	r8, r8, #4294967295
 8011c3a:	4460      	add	r0, ip
 8011c3c:	fb09 1606 	mla	r6, r9, r6, r1
 8011c40:	4928      	ldr	r1, [pc, #160]	; (8011ce4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8011c42:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8011c46:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011c4a:	eb07 0b0e 	add.w	fp, r7, lr
 8011c4e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8011c52:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8011c56:	00f6      	lsls	r6, r6, #3
 8011c58:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8011c5c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011c5e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011c62:	440a      	add	r2, r1
 8011c64:	ea49 0606 	orr.w	r6, r9, r6
 8011c68:	f817 900e 	ldrb.w	r9, [r7, lr]
 8011c6c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8011c70:	f82a 6b02 	strh.w	r6, [sl], #2
 8011c74:	e7d6      	b.n	8011c24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8011c76:	ea5f 4920 	movs.w	r9, r0, asr #16
 8011c7a:	d429      	bmi.n	8011cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011c7c:	68ae      	ldr	r6, [r5, #8]
 8011c7e:	454e      	cmp	r6, r9
 8011c80:	dd26      	ble.n	8011cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011c82:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8011c86:	d423      	bmi.n	8011cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011c88:	68e9      	ldr	r1, [r5, #12]
 8011c8a:	4559      	cmp	r1, fp
 8011c8c:	dd20      	ble.n	8011cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8011c8e:	fa0f fe86 	sxth.w	lr, r6
 8011c92:	9902      	ldr	r1, [sp, #8]
 8011c94:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8011c98:	f06f 0101 	mvn.w	r1, #1
 8011c9c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8011ca0:	fb01 f908 	mul.w	r9, r1, r8
 8011ca4:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8011ca8:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8011cac:	eb07 060e 	add.w	r6, r7, lr
 8011cb0:	f896 b002 	ldrb.w	fp, [r6, #2]
 8011cb4:	7876      	ldrb	r6, [r6, #1]
 8011cb6:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8011cba:	00f6      	lsls	r6, r6, #3
 8011cbc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011cc0:	ea4b 0606 	orr.w	r6, fp, r6
 8011cc4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8011cc8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8011ccc:	f82a 6009 	strh.w	r6, [sl, r9]
 8011cd0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8011cd2:	4460      	add	r0, ip
 8011cd4:	f108 38ff 	add.w	r8, r8, #4294967295
 8011cd8:	440a      	add	r2, r1
 8011cda:	e757      	b.n	8011b8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8011cdc:	b005      	add	sp, #20
 8011cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ce2:	bf00      	nop
 8011ce4:	fffff800 	.word	0xfffff800

08011ce8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011ce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011cec:	b087      	sub	sp, #28
 8011cee:	468b      	mov	fp, r1
 8011cf0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011cf4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8011cf6:	9204      	str	r2, [sp, #16]
 8011cf8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8011cfc:	6841      	ldr	r1, [r0, #4]
 8011cfe:	9205      	str	r2, [sp, #20]
 8011d00:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8011d04:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8011d08:	fb01 2404 	mla	r4, r1, r4, r2
 8011d0c:	6802      	ldr	r2, [r0, #0]
 8011d0e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011d12:	f8dc 2000 	ldr.w	r2, [ip]
 8011d16:	9201      	str	r2, [sp, #4]
 8011d18:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8011d1c:	3204      	adds	r2, #4
 8011d1e:	9202      	str	r2, [sp, #8]
 8011d20:	f1bb 0f00 	cmp.w	fp, #0
 8011d24:	dc03      	bgt.n	8011d2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8011d26:	9a04      	ldr	r2, [sp, #16]
 8011d28:	2a00      	cmp	r2, #0
 8011d2a:	f340 8138 	ble.w	8011f9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011d2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8011d30:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8011d34:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011d38:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011d3a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8011d3e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011d42:	2b00      	cmp	r3, #0
 8011d44:	dd0e      	ble.n	8011d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8011d46:	1402      	asrs	r2, r0, #16
 8011d48:	d405      	bmi.n	8011d56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011d4a:	42ba      	cmp	r2, r7
 8011d4c:	da03      	bge.n	8011d56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011d4e:	140a      	asrs	r2, r1, #16
 8011d50:	d401      	bmi.n	8011d56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8011d52:	42b2      	cmp	r2, r6
 8011d54:	db07      	blt.n	8011d66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8011d56:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011d58:	3b01      	subs	r3, #1
 8011d5a:	3402      	adds	r4, #2
 8011d5c:	4410      	add	r0, r2
 8011d5e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011d60:	4411      	add	r1, r2
 8011d62:	e7ee      	b.n	8011d42 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8011d64:	d019      	beq.n	8011d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8011d66:	1e5a      	subs	r2, r3, #1
 8011d68:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8011d6a:	fb05 0502 	mla	r5, r5, r2, r0
 8011d6e:	142d      	asrs	r5, r5, #16
 8011d70:	d409      	bmi.n	8011d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011d72:	42bd      	cmp	r5, r7
 8011d74:	da07      	bge.n	8011d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011d76:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8011d78:	fb05 1202 	mla	r2, r5, r2, r1
 8011d7c:	1412      	asrs	r2, r2, #16
 8011d7e:	d402      	bmi.n	8011d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8011d80:	42b2      	cmp	r2, r6
 8011d82:	f2c0 80ac 	blt.w	8011ede <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8011d86:	f04f 0e00 	mov.w	lr, #0
 8011d8a:	eb03 020e 	add.w	r2, r3, lr
 8011d8e:	2a00      	cmp	r2, #0
 8011d90:	dc3e      	bgt.n	8011e10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8011d92:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011d96:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011d9a:	f1bb 0f00 	cmp.w	fp, #0
 8011d9e:	f340 80fe 	ble.w	8011f9e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8011da2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011da6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011da8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011dac:	f1bb 0b01 	subs.w	fp, fp, #1
 8011db0:	eeb0 6a62 	vmov.f32	s12, s5
 8011db4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011db8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011dbc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011dc0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8011dc4:	eeb0 6a43 	vmov.f32	s12, s6
 8011dc8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8011dcc:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8011dd0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8011dd4:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011dd8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8011ddc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8011de0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8011de4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8011de8:	ee12 2a90 	vmov	r2, s5
 8011dec:	eef0 2a47 	vmov.f32	s5, s14
 8011df0:	fb92 f3f3 	sdiv	r3, r2, r3
 8011df4:	ee13 2a10 	vmov	r2, s6
 8011df8:	9313      	str	r3, [sp, #76]	; 0x4c
 8011dfa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011dfc:	eeb0 3a67 	vmov.f32	s6, s15
 8011e00:	fb92 f3f3 	sdiv	r3, r2, r3
 8011e04:	9a04      	ldr	r2, [sp, #16]
 8011e06:	9314      	str	r3, [sp, #80]	; 0x50
 8011e08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011e0a:	bf08      	it	eq
 8011e0c:	4613      	moveq	r3, r2
 8011e0e:	e787      	b.n	8011d20 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8011e10:	1406      	asrs	r6, r0, #16
 8011e12:	d45d      	bmi.n	8011ed0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e14:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8011e18:	42b5      	cmp	r5, r6
 8011e1a:	dd59      	ble.n	8011ed0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e1c:	140f      	asrs	r7, r1, #16
 8011e1e:	d457      	bmi.n	8011ed0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e20:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8011e24:	42ba      	cmp	r2, r7
 8011e26:	dd53      	ble.n	8011ed0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e28:	9a01      	ldr	r2, [sp, #4]
 8011e2a:	b22d      	sxth	r5, r5
 8011e2c:	fb07 2505 	mla	r5, r7, r5, r2
 8011e30:	5daa      	ldrb	r2, [r5, r6]
 8011e32:	9d02      	ldr	r5, [sp, #8]
 8011e34:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011e38:	0e2e      	lsrs	r6, r5, #24
 8011e3a:	d049      	beq.n	8011ed0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8011e3c:	f06f 0201 	mvn.w	r2, #1
 8011e40:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011e44:	fb02 f20e 	mul.w	r2, r2, lr
 8011e48:	f834 8002 	ldrh.w	r8, [r4, r2]
 8011e4c:	9203      	str	r2, [sp, #12]
 8011e4e:	9a05      	ldr	r2, [sp, #20]
 8011e50:	ea4f 2728 	mov.w	r7, r8, asr #8
 8011e54:	4356      	muls	r6, r2
 8011e56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011e5a:	1c72      	adds	r2, r6, #1
 8011e5c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011e60:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011e64:	b2ed      	uxtb	r5, r5
 8011e66:	1212      	asrs	r2, r2, #8
 8011e68:	fa1f f982 	uxth.w	r9, r2
 8011e6c:	43d2      	mvns	r2, r2
 8011e6e:	fb16 f609 	smulbb	r6, r6, r9
 8011e72:	b2d2      	uxtb	r2, r2
 8011e74:	fb15 f509 	smulbb	r5, r5, r9
 8011e78:	fb07 6702 	mla	r7, r7, r2, r6
 8011e7c:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8011e80:	fb1a fa09 	smulbb	sl, sl, r9
 8011e84:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8011e88:	b2bf      	uxth	r7, r7
 8011e8a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011e8e:	fa5f f888 	uxtb.w	r8, r8
 8011e92:	fb06 a602 	mla	r6, r6, r2, sl
 8011e96:	fb08 5502 	mla	r5, r8, r2, r5
 8011e9a:	1c7a      	adds	r2, r7, #1
 8011e9c:	b2b6      	uxth	r6, r6
 8011e9e:	b2ad      	uxth	r5, r5
 8011ea0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011ea4:	9a03      	ldr	r2, [sp, #12]
 8011ea6:	f105 0a01 	add.w	sl, r5, #1
 8011eaa:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011eae:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011eb2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011eb6:	ea4a 0707 	orr.w	r7, sl, r7
 8011eba:	f106 0a01 	add.w	sl, r6, #1
 8011ebe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011ec2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011ec6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011eca:	ea47 070a 	orr.w	r7, r7, sl
 8011ece:	52a7      	strh	r7, [r4, r2]
 8011ed0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011ed2:	f10e 3eff 	add.w	lr, lr, #4294967295
 8011ed6:	4410      	add	r0, r2
 8011ed8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011eda:	4411      	add	r1, r2
 8011edc:	e755      	b.n	8011d8a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8011ede:	f04f 0800 	mov.w	r8, #0
 8011ee2:	eba3 0208 	sub.w	r2, r3, r8
 8011ee6:	2a00      	cmp	r2, #0
 8011ee8:	f77f af53 	ble.w	8011d92 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8011eec:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8011ef0:	140a      	asrs	r2, r1, #16
 8011ef2:	9f01      	ldr	r7, [sp, #4]
 8011ef4:	1405      	asrs	r5, r0, #16
 8011ef6:	fb06 7202 	mla	r2, r6, r2, r7
 8011efa:	5d52      	ldrb	r2, [r2, r5]
 8011efc:	9d02      	ldr	r5, [sp, #8]
 8011efe:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011f02:	0e2e      	lsrs	r6, r5, #24
 8011f04:	d044      	beq.n	8011f90 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8011f06:	9a05      	ldr	r2, [sp, #20]
 8011f08:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8011f0c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8011f10:	4356      	muls	r6, r2
 8011f12:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011f16:	1c72      	adds	r2, r6, #1
 8011f18:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011f1c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8011f20:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011f24:	b2ed      	uxtb	r5, r5
 8011f26:	1212      	asrs	r2, r2, #8
 8011f28:	fa1f f982 	uxth.w	r9, r2
 8011f2c:	43d2      	mvns	r2, r2
 8011f2e:	fb16 f609 	smulbb	r6, r6, r9
 8011f32:	b2d2      	uxtb	r2, r2
 8011f34:	fb15 f509 	smulbb	r5, r5, r9
 8011f38:	fb07 6702 	mla	r7, r7, r2, r6
 8011f3c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8011f40:	fb1a fa09 	smulbb	sl, sl, r9
 8011f44:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011f48:	b2bf      	uxth	r7, r7
 8011f4a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011f4e:	fa5f fe8e 	uxtb.w	lr, lr
 8011f52:	fb06 a602 	mla	r6, r6, r2, sl
 8011f56:	fb0e 5502 	mla	r5, lr, r2, r5
 8011f5a:	1c7a      	adds	r2, r7, #1
 8011f5c:	b2b6      	uxth	r6, r6
 8011f5e:	b2ad      	uxth	r5, r5
 8011f60:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8011f64:	f105 0a01 	add.w	sl, r5, #1
 8011f68:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011f6c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8011f70:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8011f74:	ea4a 0707 	orr.w	r7, sl, r7
 8011f78:	f106 0a01 	add.w	sl, r6, #1
 8011f7c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8011f80:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011f84:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011f88:	ea47 070a 	orr.w	r7, r7, sl
 8011f8c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8011f90:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011f92:	f108 0801 	add.w	r8, r8, #1
 8011f96:	4410      	add	r0, r2
 8011f98:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011f9a:	4411      	add	r1, r2
 8011f9c:	e7a1      	b.n	8011ee2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8011f9e:	b007      	add	sp, #28
 8011fa0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011fa4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8011fa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011fa8:	b085      	sub	sp, #20
 8011faa:	468b      	mov	fp, r1
 8011fac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8011fb0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8011fb2:	9203      	str	r2, [sp, #12]
 8011fb4:	6841      	ldr	r1, [r0, #4]
 8011fb6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8011fba:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8011fbe:	fb01 2404 	mla	r4, r1, r4, r2
 8011fc2:	6802      	ldr	r2, [r0, #0]
 8011fc4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8011fc8:	f8de 2000 	ldr.w	r2, [lr]
 8011fcc:	9200      	str	r2, [sp, #0]
 8011fce:	f8de 2004 	ldr.w	r2, [lr, #4]
 8011fd2:	3204      	adds	r2, #4
 8011fd4:	9201      	str	r2, [sp, #4]
 8011fd6:	f1bb 0f00 	cmp.w	fp, #0
 8011fda:	dc03      	bgt.n	8011fe4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8011fdc:	9a03      	ldr	r2, [sp, #12]
 8011fde:	2a00      	cmp	r2, #0
 8011fe0:	f340 8153 	ble.w	801228a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8011fe4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011fe6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8011fea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011fee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8011ff0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8011ff4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011ff8:	2b00      	cmp	r3, #0
 8011ffa:	dd0e      	ble.n	801201a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8011ffc:	1408      	asrs	r0, r1, #16
 8011ffe:	d405      	bmi.n	801200c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012000:	42b8      	cmp	r0, r7
 8012002:	da03      	bge.n	801200c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012004:	1410      	asrs	r0, r2, #16
 8012006:	d401      	bmi.n	801200c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012008:	42b0      	cmp	r0, r6
 801200a:	db07      	blt.n	801201c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801200c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801200e:	3b01      	subs	r3, #1
 8012010:	3402      	adds	r4, #2
 8012012:	4401      	add	r1, r0
 8012014:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012016:	4402      	add	r2, r0
 8012018:	e7ee      	b.n	8011ff8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801201a:	d017      	beq.n	801204c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801201c:	1e58      	subs	r0, r3, #1
 801201e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012020:	fb05 1500 	mla	r5, r5, r0, r1
 8012024:	142d      	asrs	r5, r5, #16
 8012026:	d409      	bmi.n	801203c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012028:	42bd      	cmp	r5, r7
 801202a:	da07      	bge.n	801203c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801202c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801202e:	fb05 2000 	mla	r0, r5, r0, r2
 8012032:	1400      	asrs	r0, r0, #16
 8012034:	d402      	bmi.n	801203c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012036:	42b0      	cmp	r0, r6
 8012038:	f2c0 80bc 	blt.w	80121b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801203c:	2600      	movs	r6, #0
 801203e:	1998      	adds	r0, r3, r6
 8012040:	2800      	cmp	r0, #0
 8012042:	dc3e      	bgt.n	80120c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8012044:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012048:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801204c:	f1bb 0f00 	cmp.w	fp, #0
 8012050:	f340 811b 	ble.w	801228a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8012054:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012058:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801205a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801205e:	f1bb 0b01 	subs.w	fp, fp, #1
 8012062:	eeb0 6a62 	vmov.f32	s12, s5
 8012066:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801206a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801206e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012072:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012076:	eeb0 6a43 	vmov.f32	s12, s6
 801207a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801207e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012082:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012086:	ee61 7a27 	vmul.f32	s15, s2, s15
 801208a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801208e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012092:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012096:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801209a:	ee12 2a90 	vmov	r2, s5
 801209e:	eef0 2a47 	vmov.f32	s5, s14
 80120a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80120a6:	ee13 2a10 	vmov	r2, s6
 80120aa:	9311      	str	r3, [sp, #68]	; 0x44
 80120ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80120ae:	eeb0 3a67 	vmov.f32	s6, s15
 80120b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80120b6:	9a03      	ldr	r2, [sp, #12]
 80120b8:	9312      	str	r3, [sp, #72]	; 0x48
 80120ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80120bc:	bf08      	it	eq
 80120be:	4613      	moveq	r3, r2
 80120c0:	e789      	b.n	8011fd6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80120c2:	140f      	asrs	r7, r1, #16
 80120c4:	d426      	bmi.n	8012114 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80120c6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80120ca:	42bd      	cmp	r5, r7
 80120cc:	dd22      	ble.n	8012114 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80120ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80120d2:	d41f      	bmi.n	8012114 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80120d4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80120d8:	4560      	cmp	r0, ip
 80120da:	dd1b      	ble.n	8012114 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80120dc:	9800      	ldr	r0, [sp, #0]
 80120de:	b22d      	sxth	r5, r5
 80120e0:	fb0c 0505 	mla	r5, ip, r5, r0
 80120e4:	5de8      	ldrb	r0, [r5, r7]
 80120e6:	9d01      	ldr	r5, [sp, #4]
 80120e8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80120ec:	0e07      	lsrs	r7, r0, #24
 80120ee:	2fff      	cmp	r7, #255	; 0xff
 80120f0:	d116      	bne.n	8012120 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80120f2:	f06f 0501 	mvn.w	r5, #1
 80120f6:	fb05 f706 	mul.w	r7, r5, r6
 80120fa:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80120fe:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8012102:	0945      	lsrs	r5, r0, #5
 8012104:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8012108:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801210c:	ea4c 0505 	orr.w	r5, ip, r5
 8012110:	4305      	orrs	r5, r0
 8012112:	53e5      	strh	r5, [r4, r7]
 8012114:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012116:	3e01      	subs	r6, #1
 8012118:	4401      	add	r1, r0
 801211a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801211c:	4402      	add	r2, r0
 801211e:	e78e      	b.n	801203e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8012120:	b2fd      	uxtb	r5, r7
 8012122:	2f00      	cmp	r7, #0
 8012124:	d0f6      	beq.n	8012114 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8012126:	f06f 0701 	mvn.w	r7, #1
 801212a:	fa1f f985 	uxth.w	r9, r5
 801212e:	43ed      	mvns	r5, r5
 8012130:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8012134:	4377      	muls	r7, r6
 8012136:	fb1a fa09 	smulbb	sl, sl, r9
 801213a:	b2ed      	uxtb	r5, r5
 801213c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8012140:	9702      	str	r7, [sp, #8]
 8012142:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8012146:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801214a:	fb17 f709 	smulbb	r7, r7, r9
 801214e:	b2c0      	uxtb	r0, r0
 8012150:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012154:	fb10 f009 	smulbb	r0, r0, r9
 8012158:	fb0c 7c05 	mla	ip, ip, r5, r7
 801215c:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8012160:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012164:	fa1f fc8c 	uxth.w	ip, ip
 8012168:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801216c:	fa5f f888 	uxtb.w	r8, r8
 8012170:	fb07 a705 	mla	r7, r7, r5, sl
 8012174:	fb08 0005 	mla	r0, r8, r5, r0
 8012178:	f10c 0501 	add.w	r5, ip, #1
 801217c:	b2bf      	uxth	r7, r7
 801217e:	b280      	uxth	r0, r0
 8012180:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012184:	f100 0a01 	add.w	sl, r0, #1
 8012188:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801218c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8012190:	9802      	ldr	r0, [sp, #8]
 8012192:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012196:	ea4a 0c0c 	orr.w	ip, sl, ip
 801219a:	f107 0a01 	add.w	sl, r7, #1
 801219e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80121a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80121a6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80121aa:	ea4c 0c0a 	orr.w	ip, ip, sl
 80121ae:	f824 c000 	strh.w	ip, [r4, r0]
 80121b2:	e7af      	b.n	8012114 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80121b4:	f04f 0800 	mov.w	r8, #0
 80121b8:	eba3 0008 	sub.w	r0, r3, r8
 80121bc:	2800      	cmp	r0, #0
 80121be:	f77f af41 	ble.w	8012044 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80121c2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80121c6:	1410      	asrs	r0, r2, #16
 80121c8:	9f00      	ldr	r7, [sp, #0]
 80121ca:	140d      	asrs	r5, r1, #16
 80121cc:	fb06 7000 	mla	r0, r6, r0, r7
 80121d0:	5d40      	ldrb	r0, [r0, r5]
 80121d2:	9d01      	ldr	r5, [sp, #4]
 80121d4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80121d8:	0e2e      	lsrs	r6, r5, #24
 80121da:	2eff      	cmp	r6, #255	; 0xff
 80121dc:	d112      	bne.n	8012204 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80121de:	482c      	ldr	r0, [pc, #176]	; (8012290 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80121e0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80121e4:	0968      	lsrs	r0, r5, #5
 80121e6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80121ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80121ee:	4330      	orrs	r0, r6
 80121f0:	4328      	orrs	r0, r5
 80121f2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80121f6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80121f8:	f108 0801 	add.w	r8, r8, #1
 80121fc:	4401      	add	r1, r0
 80121fe:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012200:	4402      	add	r2, r0
 8012202:	e7d9      	b.n	80121b8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012204:	b2f0      	uxtb	r0, r6
 8012206:	2e00      	cmp	r6, #0
 8012208:	d0f5      	beq.n	80121f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801220a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801220e:	fa1f f980 	uxth.w	r9, r0
 8012212:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8012216:	43c0      	mvns	r0, r0
 8012218:	ea4f 272c 	mov.w	r7, ip, asr #8
 801221c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8012220:	fb16 f609 	smulbb	r6, r6, r9
 8012224:	b2c0      	uxtb	r0, r0
 8012226:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801222a:	b2ed      	uxtb	r5, r5
 801222c:	fb1a fa09 	smulbb	sl, sl, r9
 8012230:	fb07 6700 	mla	r7, r7, r0, r6
 8012234:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8012238:	fb15 f509 	smulbb	r5, r5, r9
 801223c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012240:	b2bf      	uxth	r7, r7
 8012242:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012246:	fa5f fc8c 	uxtb.w	ip, ip
 801224a:	fb06 a600 	mla	r6, r6, r0, sl
 801224e:	fb0c 5500 	mla	r5, ip, r0, r5
 8012252:	1c78      	adds	r0, r7, #1
 8012254:	b2b6      	uxth	r6, r6
 8012256:	b2ad      	uxth	r5, r5
 8012258:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801225c:	f105 0a01 	add.w	sl, r5, #1
 8012260:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012264:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012268:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801226c:	ea4a 0707 	orr.w	r7, sl, r7
 8012270:	f106 0a01 	add.w	sl, r6, #1
 8012274:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012278:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801227c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012280:	ea47 070a 	orr.w	r7, r7, sl
 8012284:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8012288:	e7b5      	b.n	80121f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801228a:	b005      	add	sp, #20
 801228c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012290:	fffff800 	.word	0xfffff800

08012294 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012294:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012298:	b087      	sub	sp, #28
 801229a:	468b      	mov	fp, r1
 801229c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80122a0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80122a2:	9204      	str	r2, [sp, #16]
 80122a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80122a8:	6861      	ldr	r1, [r4, #4]
 80122aa:	9205      	str	r2, [sp, #20]
 80122ac:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80122b0:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80122b4:	fb01 2000 	mla	r0, r1, r0, r2
 80122b8:	6822      	ldr	r2, [r4, #0]
 80122ba:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80122be:	f8de 2000 	ldr.w	r2, [lr]
 80122c2:	9201      	str	r2, [sp, #4]
 80122c4:	f8de 2004 	ldr.w	r2, [lr, #4]
 80122c8:	9202      	str	r2, [sp, #8]
 80122ca:	f1bb 0f00 	cmp.w	fp, #0
 80122ce:	dc03      	bgt.n	80122d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80122d0:	9a04      	ldr	r2, [sp, #16]
 80122d2:	2a00      	cmp	r2, #0
 80122d4:	f340 8142 	ble.w	801255c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80122d8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80122da:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80122de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80122e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80122e4:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80122e8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80122ec:	2b00      	cmp	r3, #0
 80122ee:	dd0e      	ble.n	801230e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80122f0:	140c      	asrs	r4, r1, #16
 80122f2:	d405      	bmi.n	8012300 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80122f4:	42bc      	cmp	r4, r7
 80122f6:	da03      	bge.n	8012300 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80122f8:	1414      	asrs	r4, r2, #16
 80122fa:	d401      	bmi.n	8012300 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80122fc:	42b4      	cmp	r4, r6
 80122fe:	db07      	blt.n	8012310 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012300:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012302:	3b01      	subs	r3, #1
 8012304:	3002      	adds	r0, #2
 8012306:	4421      	add	r1, r4
 8012308:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801230a:	4422      	add	r2, r4
 801230c:	e7ee      	b.n	80122ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801230e:	d019      	beq.n	8012344 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012310:	1e5c      	subs	r4, r3, #1
 8012312:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8012314:	fb05 1504 	mla	r5, r5, r4, r1
 8012318:	142d      	asrs	r5, r5, #16
 801231a:	d409      	bmi.n	8012330 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801231c:	42bd      	cmp	r5, r7
 801231e:	da07      	bge.n	8012330 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8012320:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8012322:	fb05 2404 	mla	r4, r5, r4, r2
 8012326:	1424      	asrs	r4, r4, #16
 8012328:	d402      	bmi.n	8012330 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801232a:	42b4      	cmp	r4, r6
 801232c:	f2c0 80b1 	blt.w	8012492 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8012330:	f04f 0800 	mov.w	r8, #0
 8012334:	eb03 0408 	add.w	r4, r3, r8
 8012338:	2c00      	cmp	r4, #0
 801233a:	dc3e      	bgt.n	80123ba <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801233c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012340:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012344:	f1bb 0f00 	cmp.w	fp, #0
 8012348:	f340 8108 	ble.w	801255c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801234c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012350:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012352:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012356:	f1bb 0b01 	subs.w	fp, fp, #1
 801235a:	eeb0 6a62 	vmov.f32	s12, s5
 801235e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012362:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012366:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801236a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801236e:	eeb0 6a43 	vmov.f32	s12, s6
 8012372:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012376:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801237a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801237e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012382:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012386:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801238a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801238e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012392:	ee12 2a90 	vmov	r2, s5
 8012396:	eef0 2a47 	vmov.f32	s5, s14
 801239a:	fb92 f3f3 	sdiv	r3, r2, r3
 801239e:	ee13 2a10 	vmov	r2, s6
 80123a2:	9313      	str	r3, [sp, #76]	; 0x4c
 80123a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80123a6:	eeb0 3a67 	vmov.f32	s6, s15
 80123aa:	fb92 f3f3 	sdiv	r3, r2, r3
 80123ae:	9a04      	ldr	r2, [sp, #16]
 80123b0:	9314      	str	r3, [sp, #80]	; 0x50
 80123b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80123b4:	bf08      	it	eq
 80123b6:	4613      	moveq	r3, r2
 80123b8:	e787      	b.n	80122ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80123ba:	140e      	asrs	r6, r1, #16
 80123bc:	d462      	bmi.n	8012484 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80123be:	f8de 5008 	ldr.w	r5, [lr, #8]
 80123c2:	42b5      	cmp	r5, r6
 80123c4:	dd5e      	ble.n	8012484 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80123c6:	1417      	asrs	r7, r2, #16
 80123c8:	d45c      	bmi.n	8012484 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80123ca:	f8de 400c 	ldr.w	r4, [lr, #12]
 80123ce:	42bc      	cmp	r4, r7
 80123d0:	dd58      	ble.n	8012484 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80123d2:	b22d      	sxth	r5, r5
 80123d4:	9c02      	ldr	r4, [sp, #8]
 80123d6:	fb07 6505 	mla	r5, r7, r5, r6
 80123da:	5d66      	ldrb	r6, [r4, r5]
 80123dc:	2e00      	cmp	r6, #0
 80123de:	d051      	beq.n	8012484 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80123e0:	9c01      	ldr	r4, [sp, #4]
 80123e2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80123e6:	f06f 0401 	mvn.w	r4, #1
 80123ea:	fb04 f408 	mul.w	r4, r4, r8
 80123ee:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80123f2:	5b05      	ldrh	r5, [r0, r4]
 80123f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80123f8:	9403      	str	r4, [sp, #12]
 80123fa:	9c05      	ldr	r4, [sp, #20]
 80123fc:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8012400:	4366      	muls	r6, r4
 8012402:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012406:	1c74      	adds	r4, r6, #1
 8012408:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801240c:	122e      	asrs	r6, r5, #8
 801240e:	1224      	asrs	r4, r4, #8
 8012410:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012414:	00ed      	lsls	r5, r5, #3
 8012416:	b2a7      	uxth	r7, r4
 8012418:	43e4      	mvns	r4, r4
 801241a:	b2ed      	uxtb	r5, r5
 801241c:	b2e4      	uxtb	r4, r4
 801241e:	fb16 f604 	smulbb	r6, r6, r4
 8012422:	fb15 f504 	smulbb	r5, r5, r4
 8012426:	fb0c 6c07 	mla	ip, ip, r7, r6
 801242a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801242e:	fb1a fa04 	smulbb	sl, sl, r4
 8012432:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8012436:	fa1f fc8c 	uxth.w	ip, ip
 801243a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801243e:	fa5f f989 	uxtb.w	r9, r9
 8012442:	fb06 a607 	mla	r6, r6, r7, sl
 8012446:	f10c 0401 	add.w	r4, ip, #1
 801244a:	fb09 5507 	mla	r5, r9, r7, r5
 801244e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8012452:	9c03      	ldr	r4, [sp, #12]
 8012454:	b2ad      	uxth	r5, r5
 8012456:	b2b6      	uxth	r6, r6
 8012458:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801245c:	f105 0a01 	add.w	sl, r5, #1
 8012460:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8012464:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012468:	ea4a 0c0c 	orr.w	ip, sl, ip
 801246c:	f106 0a01 	add.w	sl, r6, #1
 8012470:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8012474:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012478:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801247c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012480:	f820 c004 	strh.w	ip, [r0, r4]
 8012484:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012486:	f108 38ff 	add.w	r8, r8, #4294967295
 801248a:	4421      	add	r1, r4
 801248c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801248e:	4422      	add	r2, r4
 8012490:	e750      	b.n	8012334 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012492:	f04f 0900 	mov.w	r9, #0
 8012496:	eba3 0409 	sub.w	r4, r3, r9
 801249a:	2c00      	cmp	r4, #0
 801249c:	f77f af4e 	ble.w	801233c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80124a0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80124a4:	140d      	asrs	r5, r1, #16
 80124a6:	1414      	asrs	r4, r2, #16
 80124a8:	fb06 5404 	mla	r4, r6, r4, r5
 80124ac:	9d02      	ldr	r5, [sp, #8]
 80124ae:	5d2e      	ldrb	r6, [r5, r4]
 80124b0:	2e00      	cmp	r6, #0
 80124b2:	d04c      	beq.n	801254e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80124b4:	9d01      	ldr	r5, [sp, #4]
 80124b6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80124ba:	9c05      	ldr	r4, [sp, #20]
 80124bc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80124c0:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80124c4:	4366      	muls	r6, r4
 80124c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80124ca:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80124ce:	1c74      	adds	r4, r6, #1
 80124d0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80124d4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80124d8:	122e      	asrs	r6, r5, #8
 80124da:	1224      	asrs	r4, r4, #8
 80124dc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80124e0:	00ed      	lsls	r5, r5, #3
 80124e2:	b2a7      	uxth	r7, r4
 80124e4:	43e4      	mvns	r4, r4
 80124e6:	b2ed      	uxtb	r5, r5
 80124e8:	b2e4      	uxtb	r4, r4
 80124ea:	fb16 f604 	smulbb	r6, r6, r4
 80124ee:	fb15 f504 	smulbb	r5, r5, r4
 80124f2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80124f6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80124fa:	fb1a fa04 	smulbb	sl, sl, r4
 80124fe:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012502:	fa1f fc8c 	uxth.w	ip, ip
 8012506:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801250a:	fa5f f888 	uxtb.w	r8, r8
 801250e:	fb06 a607 	mla	r6, r6, r7, sl
 8012512:	f10c 0401 	add.w	r4, ip, #1
 8012516:	fb08 5507 	mla	r5, r8, r7, r5
 801251a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801251e:	b2ad      	uxth	r5, r5
 8012520:	b2b6      	uxth	r6, r6
 8012522:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012526:	f105 0a01 	add.w	sl, r5, #1
 801252a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801252e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012532:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012536:	f106 0a01 	add.w	sl, r6, #1
 801253a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801253e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012542:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012546:	ea4c 0c0a 	orr.w	ip, ip, sl
 801254a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801254e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012550:	f109 0901 	add.w	r9, r9, #1
 8012554:	4421      	add	r1, r4
 8012556:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012558:	4422      	add	r2, r4
 801255a:	e79c      	b.n	8012496 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801255c:	b007      	add	sp, #28
 801255e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012562 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012562:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012566:	b085      	sub	sp, #20
 8012568:	468b      	mov	fp, r1
 801256a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801256e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012570:	9203      	str	r2, [sp, #12]
 8012572:	6861      	ldr	r1, [r4, #4]
 8012574:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8012578:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 801257c:	fb01 2000 	mla	r0, r1, r0, r2
 8012580:	6822      	ldr	r2, [r4, #0]
 8012582:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8012586:	f8d8 2000 	ldr.w	r2, [r8]
 801258a:	9200      	str	r2, [sp, #0]
 801258c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8012590:	9201      	str	r2, [sp, #4]
 8012592:	f1bb 0f00 	cmp.w	fp, #0
 8012596:	dc03      	bgt.n	80125a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012598:	9a03      	ldr	r2, [sp, #12]
 801259a:	2a00      	cmp	r2, #0
 801259c:	f340 8146 	ble.w	801282c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80125a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80125a2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80125a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80125aa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80125ac:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80125b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80125b4:	2b00      	cmp	r3, #0
 80125b6:	dd0e      	ble.n	80125d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80125b8:	140c      	asrs	r4, r1, #16
 80125ba:	d405      	bmi.n	80125c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80125bc:	42bc      	cmp	r4, r7
 80125be:	da03      	bge.n	80125c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80125c0:	1414      	asrs	r4, r2, #16
 80125c2:	d401      	bmi.n	80125c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80125c4:	42b4      	cmp	r4, r6
 80125c6:	db07      	blt.n	80125d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80125c8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80125ca:	3b01      	subs	r3, #1
 80125cc:	3002      	adds	r0, #2
 80125ce:	4421      	add	r1, r4
 80125d0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80125d2:	4422      	add	r2, r4
 80125d4:	e7ee      	b.n	80125b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80125d6:	d017      	beq.n	8012608 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80125d8:	1e5c      	subs	r4, r3, #1
 80125da:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80125dc:	fb05 1504 	mla	r5, r5, r4, r1
 80125e0:	142d      	asrs	r5, r5, #16
 80125e2:	d409      	bmi.n	80125f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80125e4:	42bd      	cmp	r5, r7
 80125e6:	da07      	bge.n	80125f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80125e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80125ea:	fb05 2404 	mla	r4, r5, r4, r2
 80125ee:	1424      	asrs	r4, r4, #16
 80125f0:	d402      	bmi.n	80125f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80125f2:	42b4      	cmp	r4, r6
 80125f4:	f2c0 80b3 	blt.w	801275e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80125f8:	2600      	movs	r6, #0
 80125fa:	199c      	adds	r4, r3, r6
 80125fc:	2c00      	cmp	r4, #0
 80125fe:	dc3e      	bgt.n	801267e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012600:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012604:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012608:	f1bb 0f00 	cmp.w	fp, #0
 801260c:	f340 810e 	ble.w	801282c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8012610:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012614:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012616:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801261a:	f1bb 0b01 	subs.w	fp, fp, #1
 801261e:	eeb0 6a62 	vmov.f32	s12, s5
 8012622:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012626:	ee31 1a05 	vadd.f32	s2, s2, s10
 801262a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801262e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012632:	eeb0 6a43 	vmov.f32	s12, s6
 8012636:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801263a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801263e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012642:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012646:	ee77 2a62 	vsub.f32	s5, s14, s5
 801264a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801264e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012652:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012656:	ee12 2a90 	vmov	r2, s5
 801265a:	eef0 2a47 	vmov.f32	s5, s14
 801265e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012662:	ee13 2a10 	vmov	r2, s6
 8012666:	9311      	str	r3, [sp, #68]	; 0x44
 8012668:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801266a:	eeb0 3a67 	vmov.f32	s6, s15
 801266e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012672:	9a03      	ldr	r2, [sp, #12]
 8012674:	9312      	str	r3, [sp, #72]	; 0x48
 8012676:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012678:	bf08      	it	eq
 801267a:	4613      	moveq	r3, r2
 801267c:	e789      	b.n	8012592 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801267e:	140f      	asrs	r7, r1, #16
 8012680:	d418      	bmi.n	80126b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012682:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8012686:	42bd      	cmp	r5, r7
 8012688:	dd14      	ble.n	80126b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801268a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801268e:	d411      	bmi.n	80126b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012690:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8012694:	4564      	cmp	r4, ip
 8012696:	dd0d      	ble.n	80126b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8012698:	b22d      	sxth	r5, r5
 801269a:	9c01      	ldr	r4, [sp, #4]
 801269c:	fb0c 7505 	mla	r5, ip, r5, r7
 80126a0:	5d64      	ldrb	r4, [r4, r5]
 80126a2:	2cff      	cmp	r4, #255	; 0xff
 80126a4:	d10c      	bne.n	80126c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80126a6:	9c00      	ldr	r4, [sp, #0]
 80126a8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80126ac:	f06f 0401 	mvn.w	r4, #1
 80126b0:	4374      	muls	r4, r6
 80126b2:	5305      	strh	r5, [r0, r4]
 80126b4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80126b6:	3e01      	subs	r6, #1
 80126b8:	4421      	add	r1, r4
 80126ba:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80126bc:	4422      	add	r2, r4
 80126be:	e79c      	b.n	80125fa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80126c0:	2c00      	cmp	r4, #0
 80126c2:	d0f7      	beq.n	80126b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80126c4:	9f00      	ldr	r7, [sp, #0]
 80126c6:	fa1f fc84 	uxth.w	ip, r4
 80126ca:	43e4      	mvns	r4, r4
 80126cc:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80126d0:	f06f 0501 	mvn.w	r5, #1
 80126d4:	b2e4      	uxtb	r4, r4
 80126d6:	4375      	muls	r5, r6
 80126d8:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80126dc:	9502      	str	r5, [sp, #8]
 80126de:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80126e2:	5b45      	ldrh	r5, [r0, r5]
 80126e4:	122f      	asrs	r7, r5, #8
 80126e6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80126ea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80126ee:	00ed      	lsls	r5, r5, #3
 80126f0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80126f4:	fb17 f704 	smulbb	r7, r7, r4
 80126f8:	b2ed      	uxtb	r5, r5
 80126fa:	fb1a fa04 	smulbb	sl, sl, r4
 80126fe:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8012702:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8012706:	fb15 f504 	smulbb	r5, r5, r4
 801270a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801270e:	fa1f fe8e 	uxth.w	lr, lr
 8012712:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012716:	fa5f f989 	uxtb.w	r9, r9
 801271a:	fb07 a70c 	mla	r7, r7, ip, sl
 801271e:	f10e 0401 	add.w	r4, lr, #1
 8012722:	fb09 550c 	mla	r5, r9, ip, r5
 8012726:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801272a:	9c02      	ldr	r4, [sp, #8]
 801272c:	b2ad      	uxth	r5, r5
 801272e:	b2bf      	uxth	r7, r7
 8012730:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012734:	f105 0a01 	add.w	sl, r5, #1
 8012738:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801273c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012740:	ea4a 0e0e 	orr.w	lr, sl, lr
 8012744:	f107 0a01 	add.w	sl, r7, #1
 8012748:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801274c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8012750:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012754:	ea4e 0e0a 	orr.w	lr, lr, sl
 8012758:	f820 e004 	strh.w	lr, [r0, r4]
 801275c:	e7aa      	b.n	80126b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801275e:	f04f 0900 	mov.w	r9, #0
 8012762:	eba3 0409 	sub.w	r4, r3, r9
 8012766:	2c00      	cmp	r4, #0
 8012768:	f77f af4a 	ble.w	8012600 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801276c:	1414      	asrs	r4, r2, #16
 801276e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8012772:	140d      	asrs	r5, r1, #16
 8012774:	fb06 5504 	mla	r5, r6, r4, r5
 8012778:	9c01      	ldr	r4, [sp, #4]
 801277a:	5d64      	ldrb	r4, [r4, r5]
 801277c:	2cff      	cmp	r4, #255	; 0xff
 801277e:	d10b      	bne.n	8012798 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8012780:	9c00      	ldr	r4, [sp, #0]
 8012782:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8012786:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801278a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801278c:	f109 0901 	add.w	r9, r9, #1
 8012790:	4421      	add	r1, r4
 8012792:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012794:	4422      	add	r2, r4
 8012796:	e7e4      	b.n	8012762 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8012798:	2c00      	cmp	r4, #0
 801279a:	d0f6      	beq.n	801278a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801279c:	9e00      	ldr	r6, [sp, #0]
 801279e:	b2a7      	uxth	r7, r4
 80127a0:	43e4      	mvns	r4, r4
 80127a2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80127a6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80127aa:	b2e4      	uxtb	r4, r4
 80127ac:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80127b0:	122e      	asrs	r6, r5, #8
 80127b2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80127b6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80127ba:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80127be:	00ed      	lsls	r5, r5, #3
 80127c0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80127c4:	fb16 f604 	smulbb	r6, r6, r4
 80127c8:	b2ed      	uxtb	r5, r5
 80127ca:	fb1a fa04 	smulbb	sl, sl, r4
 80127ce:	fb0c 6c07 	mla	ip, ip, r7, r6
 80127d2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80127d6:	fb15 f504 	smulbb	r5, r5, r4
 80127da:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80127de:	fa1f fc8c 	uxth.w	ip, ip
 80127e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80127e6:	fa5f fe8e 	uxtb.w	lr, lr
 80127ea:	fb06 a607 	mla	r6, r6, r7, sl
 80127ee:	f10c 0401 	add.w	r4, ip, #1
 80127f2:	fb0e 5507 	mla	r5, lr, r7, r5
 80127f6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80127fa:	b2ad      	uxth	r5, r5
 80127fc:	b2b6      	uxth	r6, r6
 80127fe:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012802:	f105 0a01 	add.w	sl, r5, #1
 8012806:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801280a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801280e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8012812:	f106 0a01 	add.w	sl, r6, #1
 8012816:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801281a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801281e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8012822:	ea4c 0c0a 	orr.w	ip, ip, sl
 8012826:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801282a:	e7ae      	b.n	801278a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801282c:	b005      	add	sp, #20
 801282e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012832 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012832:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012836:	b085      	sub	sp, #20
 8012838:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801283a:	9203      	str	r2, [sp, #12]
 801283c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8012840:	9100      	str	r1, [sp, #0]
 8012842:	9201      	str	r2, [sp, #4]
 8012844:	6841      	ldr	r1, [r0, #4]
 8012846:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801284a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801284e:	fb01 2404 	mla	r4, r1, r4, r2
 8012852:	6802      	ldr	r2, [r0, #0]
 8012854:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012858:	f8de 2000 	ldr.w	r2, [lr]
 801285c:	9202      	str	r2, [sp, #8]
 801285e:	9a01      	ldr	r2, [sp, #4]
 8012860:	43d6      	mvns	r6, r2
 8012862:	b2f6      	uxtb	r6, r6
 8012864:	9a00      	ldr	r2, [sp, #0]
 8012866:	2a00      	cmp	r2, #0
 8012868:	dc03      	bgt.n	8012872 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801286a:	9a03      	ldr	r2, [sp, #12]
 801286c:	2a00      	cmp	r2, #0
 801286e:	f340 8124 	ble.w	8012aba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8012872:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012874:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012878:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801287c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801287e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012882:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012886:	2b00      	cmp	r3, #0
 8012888:	dd0e      	ble.n	80128a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801288a:	1408      	asrs	r0, r1, #16
 801288c:	d405      	bmi.n	801289a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801288e:	4560      	cmp	r0, ip
 8012890:	da03      	bge.n	801289a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012892:	1410      	asrs	r0, r2, #16
 8012894:	d401      	bmi.n	801289a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8012896:	42b8      	cmp	r0, r7
 8012898:	db07      	blt.n	80128aa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801289a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801289c:	3b01      	subs	r3, #1
 801289e:	3402      	adds	r4, #2
 80128a0:	4401      	add	r1, r0
 80128a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80128a4:	4402      	add	r2, r0
 80128a6:	e7ee      	b.n	8012886 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80128a8:	d06e      	beq.n	8012988 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80128aa:	1e58      	subs	r0, r3, #1
 80128ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80128ae:	fb05 1500 	mla	r5, r5, r0, r1
 80128b2:	142d      	asrs	r5, r5, #16
 80128b4:	d45c      	bmi.n	8012970 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80128b6:	4565      	cmp	r5, ip
 80128b8:	da5a      	bge.n	8012970 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80128ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80128bc:	fb05 2000 	mla	r0, r5, r0, r2
 80128c0:	1400      	asrs	r0, r0, #16
 80128c2:	d455      	bmi.n	8012970 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80128c4:	42b8      	cmp	r0, r7
 80128c6:	da53      	bge.n	8012970 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80128c8:	4699      	mov	r9, r3
 80128ca:	46a2      	mov	sl, r4
 80128cc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80128d0:	f1b9 0f00 	cmp.w	r9, #0
 80128d4:	dd54      	ble.n	8012980 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80128d6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80128da:	140d      	asrs	r5, r1, #16
 80128dc:	1410      	asrs	r0, r2, #16
 80128de:	f109 39ff 	add.w	r9, r9, #4294967295
 80128e2:	fb07 5000 	mla	r0, r7, r0, r5
 80128e6:	9d02      	ldr	r5, [sp, #8]
 80128e8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80128ec:	f8ba 5000 	ldrh.w	r5, [sl]
 80128f0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80128f4:	122f      	asrs	r7, r5, #8
 80128f6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80128fa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80128fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012902:	00ed      	lsls	r5, r5, #3
 8012904:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8012908:	fb17 f706 	smulbb	r7, r7, r6
 801290c:	b2ed      	uxtb	r5, r5
 801290e:	fb18 f806 	smulbb	r8, r8, r6
 8012912:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012916:	10c7      	asrs	r7, r0, #3
 8012918:	fb15 f506 	smulbb	r5, r5, r6
 801291c:	00c0      	lsls	r0, r0, #3
 801291e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012922:	fa1f fc8c 	uxth.w	ip, ip
 8012926:	b2c0      	uxtb	r0, r0
 8012928:	fb07 870b 	mla	r7, r7, fp, r8
 801292c:	fb00 500b 	mla	r0, r0, fp, r5
 8012930:	f10c 0501 	add.w	r5, ip, #1
 8012934:	b2bf      	uxth	r7, r7
 8012936:	b280      	uxth	r0, r0
 8012938:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801293c:	f107 0801 	add.w	r8, r7, #1
 8012940:	1c45      	adds	r5, r0, #1
 8012942:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012946:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801294a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801294e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012950:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012954:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012958:	4401      	add	r1, r0
 801295a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801295e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012960:	ea45 0c0c 	orr.w	ip, r5, ip
 8012964:	4402      	add	r2, r0
 8012966:	ea4c 0c08 	orr.w	ip, ip, r8
 801296a:	f82a cb02 	strh.w	ip, [sl], #2
 801296e:	e7af      	b.n	80128d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012970:	f04f 0800 	mov.w	r8, #0
 8012974:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8012978:	eb03 0008 	add.w	r0, r3, r8
 801297c:	2800      	cmp	r0, #0
 801297e:	dc41      	bgt.n	8012a04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8012980:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012984:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012988:	9b00      	ldr	r3, [sp, #0]
 801298a:	2b00      	cmp	r3, #0
 801298c:	f340 8095 	ble.w	8012aba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8012990:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012994:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012996:	ee30 0a04 	vadd.f32	s0, s0, s8
 801299a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801299e:	eef0 6a62 	vmov.f32	s13, s5
 80129a2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80129a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80129aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80129ae:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80129b2:	eef0 6a43 	vmov.f32	s13, s6
 80129b6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80129ba:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80129be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80129c2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80129c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80129ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80129ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80129d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80129d6:	ee12 2a90 	vmov	r2, s5
 80129da:	eef0 2a47 	vmov.f32	s5, s14
 80129de:	fb92 f3f3 	sdiv	r3, r2, r3
 80129e2:	ee13 2a10 	vmov	r2, s6
 80129e6:	9311      	str	r3, [sp, #68]	; 0x44
 80129e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80129ea:	eeb0 3a67 	vmov.f32	s6, s15
 80129ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80129f2:	9312      	str	r3, [sp, #72]	; 0x48
 80129f4:	9b00      	ldr	r3, [sp, #0]
 80129f6:	9a03      	ldr	r2, [sp, #12]
 80129f8:	3b01      	subs	r3, #1
 80129fa:	9300      	str	r3, [sp, #0]
 80129fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80129fe:	bf08      	it	eq
 8012a00:	4613      	moveq	r3, r2
 8012a02:	e72f      	b.n	8012864 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8012a04:	140f      	asrs	r7, r1, #16
 8012a06:	d451      	bmi.n	8012aac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012a08:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012a0c:	42bd      	cmp	r5, r7
 8012a0e:	dd4d      	ble.n	8012aac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012a10:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012a14:	d44a      	bmi.n	8012aac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012a16:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012a1a:	4560      	cmp	r0, ip
 8012a1c:	dd46      	ble.n	8012aac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8012a1e:	b22d      	sxth	r5, r5
 8012a20:	9802      	ldr	r0, [sp, #8]
 8012a22:	fb0c 7505 	mla	r5, ip, r5, r7
 8012a26:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8012a2a:	f06f 0501 	mvn.w	r5, #1
 8012a2e:	fb05 fb08 	mul.w	fp, r5, r8
 8012a32:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012a36:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012a3a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012a3e:	122f      	asrs	r7, r5, #8
 8012a40:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012a44:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012a48:	00ed      	lsls	r5, r5, #3
 8012a4a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012a4e:	fb17 f706 	smulbb	r7, r7, r6
 8012a52:	b2ed      	uxtb	r5, r5
 8012a54:	fb19 f906 	smulbb	r9, r9, r6
 8012a58:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8012a5c:	10c7      	asrs	r7, r0, #3
 8012a5e:	fb15 f506 	smulbb	r5, r5, r6
 8012a62:	00c0      	lsls	r0, r0, #3
 8012a64:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012a68:	fa1f fc8c 	uxth.w	ip, ip
 8012a6c:	b2c0      	uxtb	r0, r0
 8012a6e:	fb07 970a 	mla	r7, r7, sl, r9
 8012a72:	fb00 500a 	mla	r0, r0, sl, r5
 8012a76:	f10c 0501 	add.w	r5, ip, #1
 8012a7a:	b2bf      	uxth	r7, r7
 8012a7c:	b280      	uxth	r0, r0
 8012a7e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012a82:	f107 0901 	add.w	r9, r7, #1
 8012a86:	1c45      	adds	r5, r0, #1
 8012a88:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8012a8c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012a90:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012a94:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012a98:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012a9c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8012aa0:	ea45 0c0c 	orr.w	ip, r5, ip
 8012aa4:	ea4c 0c09 	orr.w	ip, ip, r9
 8012aa8:	f824 c00b 	strh.w	ip, [r4, fp]
 8012aac:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012aae:	f108 38ff 	add.w	r8, r8, #4294967295
 8012ab2:	4401      	add	r1, r0
 8012ab4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012ab6:	4402      	add	r2, r0
 8012ab8:	e75e      	b.n	8012978 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8012aba:	b005      	add	sp, #20
 8012abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012ac0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012ac4:	b085      	sub	sp, #20
 8012ac6:	4693      	mov	fp, r2
 8012ac8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012acc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8012ace:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8012ad0:	6870      	ldr	r0, [r6, #4]
 8012ad2:	9101      	str	r1, [sp, #4]
 8012ad4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012ad8:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8012adc:	fb00 2404 	mla	r4, r0, r4, r2
 8012ae0:	6832      	ldr	r2, [r6, #0]
 8012ae2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012ae6:	682a      	ldr	r2, [r5, #0]
 8012ae8:	9202      	str	r2, [sp, #8]
 8012aea:	9a01      	ldr	r2, [sp, #4]
 8012aec:	2a00      	cmp	r2, #0
 8012aee:	dc03      	bgt.n	8012af8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012af0:	f1bb 0f00 	cmp.w	fp, #0
 8012af4:	f340 809a 	ble.w	8012c2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012af8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012afa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012afe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012b02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012b04:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012b08:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012b0c:	2b00      	cmp	r3, #0
 8012b0e:	dd0c      	ble.n	8012b2a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8012b10:	1406      	asrs	r6, r0, #16
 8012b12:	d405      	bmi.n	8012b20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b14:	454e      	cmp	r6, r9
 8012b16:	da03      	bge.n	8012b20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b18:	1416      	asrs	r6, r2, #16
 8012b1a:	d401      	bmi.n	8012b20 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012b1c:	4546      	cmp	r6, r8
 8012b1e:	db05      	blt.n	8012b2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8012b20:	4470      	add	r0, lr
 8012b22:	4462      	add	r2, ip
 8012b24:	3b01      	subs	r3, #1
 8012b26:	3402      	adds	r4, #2
 8012b28:	e7f0      	b.n	8012b0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012b2a:	d00f      	beq.n	8012b4c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8012b2c:	1e5e      	subs	r6, r3, #1
 8012b2e:	fb0e 0706 	mla	r7, lr, r6, r0
 8012b32:	143f      	asrs	r7, r7, #16
 8012b34:	d541      	bpl.n	8012bba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8012b36:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012b3a:	4698      	mov	r8, r3
 8012b3c:	9603      	str	r6, [sp, #12]
 8012b3e:	f1b8 0f00 	cmp.w	r8, #0
 8012b42:	dc56      	bgt.n	8012bf2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8012b44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012b48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012b4c:	9b01      	ldr	r3, [sp, #4]
 8012b4e:	2b00      	cmp	r3, #0
 8012b50:	dd6c      	ble.n	8012c2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8012b52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012b56:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012b58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012b5c:	eeb0 6a62 	vmov.f32	s12, s5
 8012b60:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012b64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012b68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012b6c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012b70:	eeb0 6a43 	vmov.f32	s12, s6
 8012b74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012b78:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012b7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012b80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012b84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012b88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012b8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012b90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012b94:	ee12 2a90 	vmov	r2, s5
 8012b98:	eef0 2a47 	vmov.f32	s5, s14
 8012b9c:	fb92 fef3 	sdiv	lr, r2, r3
 8012ba0:	ee13 2a10 	vmov	r2, s6
 8012ba4:	eeb0 3a67 	vmov.f32	s6, s15
 8012ba8:	fb92 fcf3 	sdiv	ip, r2, r3
 8012bac:	9b01      	ldr	r3, [sp, #4]
 8012bae:	3b01      	subs	r3, #1
 8012bb0:	9301      	str	r3, [sp, #4]
 8012bb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012bb4:	bf08      	it	eq
 8012bb6:	465b      	moveq	r3, fp
 8012bb8:	e797      	b.n	8012aea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8012bba:	454f      	cmp	r7, r9
 8012bbc:	dabb      	bge.n	8012b36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012bbe:	fb0c 2606 	mla	r6, ip, r6, r2
 8012bc2:	1436      	asrs	r6, r6, #16
 8012bc4:	d4b7      	bmi.n	8012b36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012bc6:	4546      	cmp	r6, r8
 8012bc8:	dab5      	bge.n	8012b36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012bca:	461e      	mov	r6, r3
 8012bcc:	46a0      	mov	r8, r4
 8012bce:	2e00      	cmp	r6, #0
 8012bd0:	ddb8      	ble.n	8012b44 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012bd2:	1417      	asrs	r7, r2, #16
 8012bd4:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012bd8:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012bdc:	9902      	ldr	r1, [sp, #8]
 8012bde:	4470      	add	r0, lr
 8012be0:	4462      	add	r2, ip
 8012be2:	fb0a 9707 	mla	r7, sl, r7, r9
 8012be6:	3e01      	subs	r6, #1
 8012be8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012bec:	f828 7b02 	strh.w	r7, [r8], #2
 8012bf0:	e7ed      	b.n	8012bce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8012bf2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012bf6:	d414      	bmi.n	8012c22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012bf8:	68ae      	ldr	r6, [r5, #8]
 8012bfa:	454e      	cmp	r6, r9
 8012bfc:	dd11      	ble.n	8012c22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012bfe:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012c02:	d40e      	bmi.n	8012c22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012c04:	68ef      	ldr	r7, [r5, #12]
 8012c06:	4557      	cmp	r7, sl
 8012c08:	dd0b      	ble.n	8012c22 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8012c0a:	b236      	sxth	r6, r6
 8012c0c:	f06f 0101 	mvn.w	r1, #1
 8012c10:	9f02      	ldr	r7, [sp, #8]
 8012c12:	fb0a 9606 	mla	r6, sl, r6, r9
 8012c16:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012c1a:	fb01 f608 	mul.w	r6, r1, r8
 8012c1e:	9903      	ldr	r1, [sp, #12]
 8012c20:	538f      	strh	r7, [r1, r6]
 8012c22:	4470      	add	r0, lr
 8012c24:	4462      	add	r2, ip
 8012c26:	f108 38ff 	add.w	r8, r8, #4294967295
 8012c2a:	e788      	b.n	8012b3e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012c2c:	b005      	add	sp, #20
 8012c2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012c32 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012c32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c36:	b087      	sub	sp, #28
 8012c38:	468b      	mov	fp, r1
 8012c3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012c3e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8012c40:	9203      	str	r2, [sp, #12]
 8012c42:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8012c46:	6841      	ldr	r1, [r0, #4]
 8012c48:	9204      	str	r2, [sp, #16]
 8012c4a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8012c4e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8012c52:	fb01 2505 	mla	r5, r1, r5, r2
 8012c56:	6802      	ldr	r2, [r0, #0]
 8012c58:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8012c5c:	f8d9 2000 	ldr.w	r2, [r9]
 8012c60:	9201      	str	r2, [sp, #4]
 8012c62:	f1bb 0f00 	cmp.w	fp, #0
 8012c66:	dc03      	bgt.n	8012c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012c68:	9a03      	ldr	r2, [sp, #12]
 8012c6a:	2a00      	cmp	r2, #0
 8012c6c:	f340 8158 	ble.w	8012f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8012c70:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8012c72:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8012c76:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8012c7a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8012c7c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8012c80:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012c84:	2b00      	cmp	r3, #0
 8012c86:	dd0e      	ble.n	8012ca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8012c88:	1402      	asrs	r2, r0, #16
 8012c8a:	d405      	bmi.n	8012c98 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012c8c:	42ba      	cmp	r2, r7
 8012c8e:	da03      	bge.n	8012c98 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012c90:	140a      	asrs	r2, r1, #16
 8012c92:	d401      	bmi.n	8012c98 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012c94:	42b2      	cmp	r2, r6
 8012c96:	db07      	blt.n	8012ca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012c98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012c9a:	3b01      	subs	r3, #1
 8012c9c:	3502      	adds	r5, #2
 8012c9e:	4410      	add	r0, r2
 8012ca0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012ca2:	4411      	add	r1, r2
 8012ca4:	e7ee      	b.n	8012c84 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012ca6:	d017      	beq.n	8012cd8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012ca8:	1e5a      	subs	r2, r3, #1
 8012caa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8012cac:	fb04 0402 	mla	r4, r4, r2, r0
 8012cb0:	1424      	asrs	r4, r4, #16
 8012cb2:	d409      	bmi.n	8012cc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012cb4:	42bc      	cmp	r4, r7
 8012cb6:	da07      	bge.n	8012cc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012cb8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012cba:	fb04 1202 	mla	r2, r4, r2, r1
 8012cbe:	1412      	asrs	r2, r2, #16
 8012cc0:	d402      	bmi.n	8012cc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012cc2:	42b2      	cmp	r2, r6
 8012cc4:	f2c0 80bf 	blt.w	8012e46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012cc8:	2700      	movs	r7, #0
 8012cca:	19da      	adds	r2, r3, r7
 8012ccc:	2a00      	cmp	r2, #0
 8012cce:	dc3e      	bgt.n	8012d4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8012cd0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012cd4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8012cd8:	f1bb 0f00 	cmp.w	fp, #0
 8012cdc:	f340 8120 	ble.w	8012f20 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8012ce0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012ce4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012ce6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012cea:	f1bb 0b01 	subs.w	fp, fp, #1
 8012cee:	eeb0 6a62 	vmov.f32	s12, s5
 8012cf2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012cf6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012cfa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012cfe:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8012d02:	eeb0 6a43 	vmov.f32	s12, s6
 8012d06:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012d0a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8012d0e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012d12:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012d16:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012d1a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012d1e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012d22:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012d26:	ee12 2a90 	vmov	r2, s5
 8012d2a:	eef0 2a47 	vmov.f32	s5, s14
 8012d2e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d32:	ee13 2a10 	vmov	r2, s6
 8012d36:	9313      	str	r3, [sp, #76]	; 0x4c
 8012d38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012d3a:	eeb0 3a67 	vmov.f32	s6, s15
 8012d3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d42:	9a03      	ldr	r2, [sp, #12]
 8012d44:	9314      	str	r3, [sp, #80]	; 0x50
 8012d46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012d48:	bf08      	it	eq
 8012d4a:	4613      	moveq	r3, r2
 8012d4c:	e789      	b.n	8012c62 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012d4e:	1406      	asrs	r6, r0, #16
 8012d50:	d42d      	bmi.n	8012dae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012d52:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8012d56:	42b4      	cmp	r4, r6
 8012d58:	dd29      	ble.n	8012dae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012d5a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8012d5e:	d426      	bmi.n	8012dae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012d60:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8012d64:	4562      	cmp	r2, ip
 8012d66:	dd22      	ble.n	8012dae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012d68:	b224      	sxth	r4, r4
 8012d6a:	9a01      	ldr	r2, [sp, #4]
 8012d6c:	fb0c 6404 	mla	r4, ip, r4, r6
 8012d70:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8012d74:	0e22      	lsrs	r2, r4, #24
 8012d76:	d01a      	beq.n	8012dae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012d78:	9e04      	ldr	r6, [sp, #16]
 8012d7a:	4372      	muls	r2, r6
 8012d7c:	1c56      	adds	r6, r2, #1
 8012d7e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012d82:	0a26      	lsrs	r6, r4, #8
 8012d84:	1212      	asrs	r2, r2, #8
 8012d86:	9605      	str	r6, [sp, #20]
 8012d88:	2aff      	cmp	r2, #255	; 0xff
 8012d8a:	d116      	bne.n	8012dba <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8012d8c:	f06f 0201 	mvn.w	r2, #1
 8012d90:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012d94:	fb02 fc07 	mul.w	ip, r2, r7
 8012d98:	0962      	lsrs	r2, r4, #5
 8012d9a:	f026 0607 	bic.w	r6, r6, #7
 8012d9e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012da2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012da6:	4316      	orrs	r6, r2
 8012da8:	4326      	orrs	r6, r4
 8012daa:	f825 600c 	strh.w	r6, [r5, ip]
 8012dae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012db0:	3f01      	subs	r7, #1
 8012db2:	4410      	add	r0, r2
 8012db4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012db6:	4411      	add	r1, r2
 8012db8:	e787      	b.n	8012cca <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8012dba:	f06f 0601 	mvn.w	r6, #1
 8012dbe:	fa1f fa82 	uxth.w	sl, r2
 8012dc2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8012dc6:	43d2      	mvns	r2, r2
 8012dc8:	437e      	muls	r6, r7
 8012dca:	b2e4      	uxtb	r4, r4
 8012dcc:	fb1c fc0a 	smulbb	ip, ip, sl
 8012dd0:	b2d2      	uxtb	r2, r2
 8012dd2:	f835 8006 	ldrh.w	r8, [r5, r6]
 8012dd6:	fb14 f40a 	smulbb	r4, r4, sl
 8012dda:	9602      	str	r6, [sp, #8]
 8012ddc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8012de0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8012de4:	fb16 f60a 	smulbb	r6, r6, sl
 8012de8:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8012dec:	fb0e ce02 	mla	lr, lr, r2, ip
 8012df0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8012df4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8012df8:	fa1f fe8e 	uxth.w	lr, lr
 8012dfc:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8012e00:	fa5f f888 	uxtb.w	r8, r8
 8012e04:	fb0c 6c02 	mla	ip, ip, r2, r6
 8012e08:	fb08 4402 	mla	r4, r8, r2, r4
 8012e0c:	f10e 0201 	add.w	r2, lr, #1
 8012e10:	fa1f fc8c 	uxth.w	ip, ip
 8012e14:	b2a4      	uxth	r4, r4
 8012e16:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8012e1a:	9a02      	ldr	r2, [sp, #8]
 8012e1c:	1c66      	adds	r6, r4, #1
 8012e1e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8012e22:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012e26:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012e2a:	ea46 0e0e 	orr.w	lr, r6, lr
 8012e2e:	f10c 0601 	add.w	r6, ip, #1
 8012e32:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8012e36:	0976      	lsrs	r6, r6, #5
 8012e38:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012e3c:	ea4e 0e06 	orr.w	lr, lr, r6
 8012e40:	f825 e002 	strh.w	lr, [r5, r2]
 8012e44:	e7b3      	b.n	8012dae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8012e46:	f04f 0800 	mov.w	r8, #0
 8012e4a:	eba3 0208 	sub.w	r2, r3, r8
 8012e4e:	2a00      	cmp	r2, #0
 8012e50:	f77f af3e 	ble.w	8012cd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012e54:	1404      	asrs	r4, r0, #16
 8012e56:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8012e5a:	140a      	asrs	r2, r1, #16
 8012e5c:	fb06 4202 	mla	r2, r6, r2, r4
 8012e60:	9c01      	ldr	r4, [sp, #4]
 8012e62:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8012e66:	0e22      	lsrs	r2, r4, #24
 8012e68:	d015      	beq.n	8012e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8012e6a:	9e04      	ldr	r6, [sp, #16]
 8012e6c:	4372      	muls	r2, r6
 8012e6e:	1c56      	adds	r6, r2, #1
 8012e70:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8012e74:	0a26      	lsrs	r6, r4, #8
 8012e76:	1212      	asrs	r2, r2, #8
 8012e78:	2aff      	cmp	r2, #255	; 0xff
 8012e7a:	d113      	bne.n	8012ea4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8012e7c:	0962      	lsrs	r2, r4, #5
 8012e7e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8012e82:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012e86:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012e8a:	f026 0607 	bic.w	r6, r6, #7
 8012e8e:	4316      	orrs	r6, r2
 8012e90:	4326      	orrs	r6, r4
 8012e92:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8012e96:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8012e98:	f108 0801 	add.w	r8, r8, #1
 8012e9c:	4410      	add	r0, r2
 8012e9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8012ea0:	4411      	add	r1, r2
 8012ea2:	e7d2      	b.n	8012e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8012ea4:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8012ea8:	fa1f fa82 	uxth.w	sl, r2
 8012eac:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8012eb0:	43d2      	mvns	r2, r2
 8012eb2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012eb6:	fb17 f70a 	smulbb	r7, r7, sl
 8012eba:	b2d2      	uxtb	r2, r2
 8012ebc:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012ec0:	b2e4      	uxtb	r4, r4
 8012ec2:	b2f6      	uxtb	r6, r6
 8012ec4:	fb0c 7c02 	mla	ip, ip, r2, r7
 8012ec8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8012ecc:	fb14 f40a 	smulbb	r4, r4, sl
 8012ed0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012ed4:	fa1f fc8c 	uxth.w	ip, ip
 8012ed8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8012edc:	fb16 f60a 	smulbb	r6, r6, sl
 8012ee0:	fa5f fe8e 	uxtb.w	lr, lr
 8012ee4:	fb0e 4402 	mla	r4, lr, r2, r4
 8012ee8:	fb07 6702 	mla	r7, r7, r2, r6
 8012eec:	f10c 0201 	add.w	r2, ip, #1
 8012ef0:	b2a4      	uxth	r4, r4
 8012ef2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8012ef6:	1c66      	adds	r6, r4, #1
 8012ef8:	b2bf      	uxth	r7, r7
 8012efa:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8012efe:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8012f02:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012f06:	ea46 0c0c 	orr.w	ip, r6, ip
 8012f0a:	1c7e      	adds	r6, r7, #1
 8012f0c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012f10:	0976      	lsrs	r6, r6, #5
 8012f12:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012f16:	ea4c 0c06 	orr.w	ip, ip, r6
 8012f1a:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8012f1e:	e7ba      	b.n	8012e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8012f20:	b007      	add	sp, #28
 8012f22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08012f28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012f28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f2c:	b085      	sub	sp, #20
 8012f2e:	468b      	mov	fp, r1
 8012f30:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012f34:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8012f36:	9203      	str	r2, [sp, #12]
 8012f38:	6841      	ldr	r1, [r0, #4]
 8012f3a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8012f3e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8012f42:	fb01 2404 	mla	r4, r1, r4, r2
 8012f46:	6802      	ldr	r2, [r0, #0]
 8012f48:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012f4c:	f8d8 2000 	ldr.w	r2, [r8]
 8012f50:	9201      	str	r2, [sp, #4]
 8012f52:	f1bb 0f00 	cmp.w	fp, #0
 8012f56:	dc03      	bgt.n	8012f60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8012f58:	9a03      	ldr	r2, [sp, #12]
 8012f5a:	2a00      	cmp	r2, #0
 8012f5c:	f340 814f 	ble.w	80131fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012f60:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012f62:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8012f66:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8012f6a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8012f6c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8012f70:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8012f74:	2b00      	cmp	r3, #0
 8012f76:	dd0e      	ble.n	8012f96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012f78:	1408      	asrs	r0, r1, #16
 8012f7a:	d405      	bmi.n	8012f88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012f7c:	42b8      	cmp	r0, r7
 8012f7e:	da03      	bge.n	8012f88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012f80:	1410      	asrs	r0, r2, #16
 8012f82:	d401      	bmi.n	8012f88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8012f84:	42b0      	cmp	r0, r6
 8012f86:	db07      	blt.n	8012f98 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012f88:	9811      	ldr	r0, [sp, #68]	; 0x44
 8012f8a:	3b01      	subs	r3, #1
 8012f8c:	3402      	adds	r4, #2
 8012f8e:	4401      	add	r1, r0
 8012f90:	9812      	ldr	r0, [sp, #72]	; 0x48
 8012f92:	4402      	add	r2, r0
 8012f94:	e7ee      	b.n	8012f74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8012f96:	d017      	beq.n	8012fc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8012f98:	1e58      	subs	r0, r3, #1
 8012f9a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012f9c:	fb05 1500 	mla	r5, r5, r0, r1
 8012fa0:	142d      	asrs	r5, r5, #16
 8012fa2:	d409      	bmi.n	8012fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012fa4:	42bd      	cmp	r5, r7
 8012fa6:	da07      	bge.n	8012fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012fa8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8012faa:	fb05 2000 	mla	r0, r5, r0, r2
 8012fae:	1400      	asrs	r0, r0, #16
 8012fb0:	d402      	bmi.n	8012fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8012fb2:	42b0      	cmp	r0, r6
 8012fb4:	f2c0 80ba 	blt.w	801312c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8012fb8:	2600      	movs	r6, #0
 8012fba:	1998      	adds	r0, r3, r6
 8012fbc:	2800      	cmp	r0, #0
 8012fbe:	dc3e      	bgt.n	801303e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8012fc0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012fc4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012fc8:	f1bb 0f00 	cmp.w	fp, #0
 8012fcc:	f340 8117 	ble.w	80131fe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8012fd0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012fd4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012fd6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012fda:	f1bb 0b01 	subs.w	fp, fp, #1
 8012fde:	eeb0 6a62 	vmov.f32	s12, s5
 8012fe2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012fe6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012fea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012fee:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8012ff2:	eeb0 6a43 	vmov.f32	s12, s6
 8012ff6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ffa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8012ffe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013002:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013006:	ee77 2a62 	vsub.f32	s5, s14, s5
 801300a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801300e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013012:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013016:	ee12 2a90 	vmov	r2, s5
 801301a:	eef0 2a47 	vmov.f32	s5, s14
 801301e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013022:	ee13 2a10 	vmov	r2, s6
 8013026:	9311      	str	r3, [sp, #68]	; 0x44
 8013028:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801302a:	eeb0 3a67 	vmov.f32	s6, s15
 801302e:	fb92 f3f3 	sdiv	r3, r2, r3
 8013032:	9a03      	ldr	r2, [sp, #12]
 8013034:	9312      	str	r3, [sp, #72]	; 0x48
 8013036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013038:	bf08      	it	eq
 801303a:	4613      	moveq	r3, r2
 801303c:	e789      	b.n	8012f52 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801303e:	140f      	asrs	r7, r1, #16
 8013040:	d424      	bmi.n	801308c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013042:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8013046:	42bd      	cmp	r5, r7
 8013048:	dd20      	ble.n	801308c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801304a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801304e:	d41d      	bmi.n	801308c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013050:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8013054:	4560      	cmp	r0, ip
 8013056:	dd19      	ble.n	801308c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8013058:	b22d      	sxth	r5, r5
 801305a:	9801      	ldr	r0, [sp, #4]
 801305c:	fb0c 7505 	mla	r5, ip, r5, r7
 8013060:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8013064:	0e07      	lsrs	r7, r0, #24
 8013066:	2fff      	cmp	r7, #255	; 0xff
 8013068:	d116      	bne.n	8013098 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801306a:	f06f 0501 	mvn.w	r5, #1
 801306e:	fb05 f706 	mul.w	r7, r5, r6
 8013072:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8013076:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801307a:	0945      	lsrs	r5, r0, #5
 801307c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013080:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013084:	ea4c 0505 	orr.w	r5, ip, r5
 8013088:	4305      	orrs	r5, r0
 801308a:	53e5      	strh	r5, [r4, r7]
 801308c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801308e:	3e01      	subs	r6, #1
 8013090:	4401      	add	r1, r0
 8013092:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013094:	4402      	add	r2, r0
 8013096:	e790      	b.n	8012fba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013098:	b2fd      	uxtb	r5, r7
 801309a:	2f00      	cmp	r7, #0
 801309c:	d0f6      	beq.n	801308c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801309e:	f06f 0701 	mvn.w	r7, #1
 80130a2:	fa1f f985 	uxth.w	r9, r5
 80130a6:	43ed      	mvns	r5, r5
 80130a8:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80130ac:	4377      	muls	r7, r6
 80130ae:	fb1a fa09 	smulbb	sl, sl, r9
 80130b2:	b2ed      	uxtb	r5, r5
 80130b4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80130b8:	9702      	str	r7, [sp, #8]
 80130ba:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80130be:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80130c2:	fb17 f709 	smulbb	r7, r7, r9
 80130c6:	b2c0      	uxtb	r0, r0
 80130c8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80130cc:	fb10 f009 	smulbb	r0, r0, r9
 80130d0:	fb0c 7c05 	mla	ip, ip, r5, r7
 80130d4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80130d8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80130dc:	fa1f fc8c 	uxth.w	ip, ip
 80130e0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80130e4:	fa5f fe8e 	uxtb.w	lr, lr
 80130e8:	fb07 a705 	mla	r7, r7, r5, sl
 80130ec:	fb0e 0005 	mla	r0, lr, r5, r0
 80130f0:	f10c 0501 	add.w	r5, ip, #1
 80130f4:	b2bf      	uxth	r7, r7
 80130f6:	b280      	uxth	r0, r0
 80130f8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80130fc:	f100 0a01 	add.w	sl, r0, #1
 8013100:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013104:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8013108:	9802      	ldr	r0, [sp, #8]
 801310a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801310e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013112:	f107 0a01 	add.w	sl, r7, #1
 8013116:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801311a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801311e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013122:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013126:	f824 c000 	strh.w	ip, [r4, r0]
 801312a:	e7af      	b.n	801308c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801312c:	f04f 0e00 	mov.w	lr, #0
 8013130:	eba3 000e 	sub.w	r0, r3, lr
 8013134:	2800      	cmp	r0, #0
 8013136:	f77f af43 	ble.w	8012fc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801313a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801313e:	140d      	asrs	r5, r1, #16
 8013140:	1410      	asrs	r0, r2, #16
 8013142:	fb06 5000 	mla	r0, r6, r0, r5
 8013146:	9d01      	ldr	r5, [sp, #4]
 8013148:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801314c:	0e2e      	lsrs	r6, r5, #24
 801314e:	2eff      	cmp	r6, #255	; 0xff
 8013150:	d112      	bne.n	8013178 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8013152:	482c      	ldr	r0, [pc, #176]	; (8013204 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8013154:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8013158:	0968      	lsrs	r0, r5, #5
 801315a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801315e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8013162:	4330      	orrs	r0, r6
 8013164:	4328      	orrs	r0, r5
 8013166:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801316a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801316c:	f10e 0e01 	add.w	lr, lr, #1
 8013170:	4401      	add	r1, r0
 8013172:	9812      	ldr	r0, [sp, #72]	; 0x48
 8013174:	4402      	add	r2, r0
 8013176:	e7db      	b.n	8013130 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8013178:	b2f0      	uxtb	r0, r6
 801317a:	2e00      	cmp	r6, #0
 801317c:	d0f5      	beq.n	801316a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801317e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8013182:	fa1f f980 	uxth.w	r9, r0
 8013186:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801318a:	43c0      	mvns	r0, r0
 801318c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013190:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013194:	fb16 f609 	smulbb	r6, r6, r9
 8013198:	b2c0      	uxtb	r0, r0
 801319a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801319e:	b2ed      	uxtb	r5, r5
 80131a0:	fb1a fa09 	smulbb	sl, sl, r9
 80131a4:	fb07 6700 	mla	r7, r7, r0, r6
 80131a8:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80131ac:	fb15 f509 	smulbb	r5, r5, r9
 80131b0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80131b4:	b2bf      	uxth	r7, r7
 80131b6:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80131ba:	fa5f fc8c 	uxtb.w	ip, ip
 80131be:	fb06 a600 	mla	r6, r6, r0, sl
 80131c2:	fb0c 5500 	mla	r5, ip, r0, r5
 80131c6:	1c78      	adds	r0, r7, #1
 80131c8:	b2b6      	uxth	r6, r6
 80131ca:	b2ad      	uxth	r5, r5
 80131cc:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80131d0:	f105 0a01 	add.w	sl, r5, #1
 80131d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80131d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80131dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80131e0:	ea4a 0707 	orr.w	r7, sl, r7
 80131e4:	f106 0a01 	add.w	sl, r6, #1
 80131e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80131ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80131f0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80131f4:	ea47 070a 	orr.w	r7, r7, sl
 80131f8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80131fc:	e7b5      	b.n	801316a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80131fe:	b005      	add	sp, #20
 8013200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013204:	fffff800 	.word	0xfffff800

08013208 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801320c:	b087      	sub	sp, #28
 801320e:	468b      	mov	fp, r1
 8013210:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8013214:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013216:	9203      	str	r2, [sp, #12]
 8013218:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801321c:	6841      	ldr	r1, [r0, #4]
 801321e:	9204      	str	r2, [sp, #16]
 8013220:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8013224:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8013228:	fb01 2404 	mla	r4, r1, r4, r2
 801322c:	6802      	ldr	r2, [r0, #0]
 801322e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013232:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013236:	3201      	adds	r2, #1
 8013238:	f022 0201 	bic.w	r2, r2, #1
 801323c:	9200      	str	r2, [sp, #0]
 801323e:	f8d9 2000 	ldr.w	r2, [r9]
 8013242:	9201      	str	r2, [sp, #4]
 8013244:	f1bb 0f00 	cmp.w	fp, #0
 8013248:	dc03      	bgt.n	8013252 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801324a:	9a03      	ldr	r2, [sp, #12]
 801324c:	2a00      	cmp	r2, #0
 801324e:	f340 816a 	ble.w	8013526 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8013252:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8013254:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8013258:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801325c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801325e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8013262:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8013266:	2b00      	cmp	r3, #0
 8013268:	dd0e      	ble.n	8013288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801326a:	1402      	asrs	r2, r0, #16
 801326c:	d405      	bmi.n	801327a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801326e:	42ba      	cmp	r2, r7
 8013270:	da03      	bge.n	801327a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013272:	140a      	asrs	r2, r1, #16
 8013274:	d401      	bmi.n	801327a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013276:	42b2      	cmp	r2, r6
 8013278:	db07      	blt.n	801328a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801327a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801327c:	3b01      	subs	r3, #1
 801327e:	3402      	adds	r4, #2
 8013280:	4410      	add	r0, r2
 8013282:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013284:	4411      	add	r1, r2
 8013286:	e7ee      	b.n	8013266 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8013288:	d017      	beq.n	80132ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801328a:	1e5a      	subs	r2, r3, #1
 801328c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801328e:	fb05 0502 	mla	r5, r5, r2, r0
 8013292:	142d      	asrs	r5, r5, #16
 8013294:	d409      	bmi.n	80132aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013296:	42bd      	cmp	r5, r7
 8013298:	da07      	bge.n	80132aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801329a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801329c:	fb05 1202 	mla	r2, r5, r2, r1
 80132a0:	1412      	asrs	r2, r2, #16
 80132a2:	d402      	bmi.n	80132aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80132a4:	42b2      	cmp	r2, r6
 80132a6:	f2c0 80c8 	blt.w	801343a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80132aa:	2700      	movs	r7, #0
 80132ac:	19da      	adds	r2, r3, r7
 80132ae:	2a00      	cmp	r2, #0
 80132b0:	dc3e      	bgt.n	8013330 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80132b2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80132b6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80132ba:	f1bb 0f00 	cmp.w	fp, #0
 80132be:	f340 8132 	ble.w	8013526 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80132c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80132c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80132c8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80132cc:	f1bb 0b01 	subs.w	fp, fp, #1
 80132d0:	eeb0 6a62 	vmov.f32	s12, s5
 80132d4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80132d8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80132dc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80132e0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80132e4:	eeb0 6a43 	vmov.f32	s12, s6
 80132e8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80132ec:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80132f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80132f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80132f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80132fc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013300:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013304:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013308:	ee12 2a90 	vmov	r2, s5
 801330c:	eef0 2a47 	vmov.f32	s5, s14
 8013310:	fb92 f3f3 	sdiv	r3, r2, r3
 8013314:	ee13 2a10 	vmov	r2, s6
 8013318:	9313      	str	r3, [sp, #76]	; 0x4c
 801331a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801331c:	eeb0 3a67 	vmov.f32	s6, s15
 8013320:	fb92 f3f3 	sdiv	r3, r2, r3
 8013324:	9a03      	ldr	r2, [sp, #12]
 8013326:	9314      	str	r3, [sp, #80]	; 0x50
 8013328:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801332a:	bf08      	it	eq
 801332c:	4613      	moveq	r3, r2
 801332e:	e789      	b.n	8013244 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013330:	1405      	asrs	r5, r0, #16
 8013332:	d436      	bmi.n	80133a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8013334:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8013338:	42aa      	cmp	r2, r5
 801333a:	dd32      	ble.n	80133a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801333c:	140e      	asrs	r6, r1, #16
 801333e:	d430      	bmi.n	80133a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8013340:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8013344:	42b2      	cmp	r2, r6
 8013346:	dd2c      	ble.n	80133a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8013348:	9a00      	ldr	r2, [sp, #0]
 801334a:	fb06 5502 	mla	r5, r6, r2, r5
 801334e:	9e01      	ldr	r6, [sp, #4]
 8013350:	086a      	lsrs	r2, r5, #1
 8013352:	5cb2      	ldrb	r2, [r6, r2]
 8013354:	07ee      	lsls	r6, r5, #31
 8013356:	bf54      	ite	pl
 8013358:	f002 020f 	andpl.w	r2, r2, #15
 801335c:	1112      	asrmi	r2, r2, #4
 801335e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013362:	b2d2      	uxtb	r2, r2
 8013364:	b1ea      	cbz	r2, 80133a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8013366:	9d04      	ldr	r5, [sp, #16]
 8013368:	436a      	muls	r2, r5
 801336a:	1c55      	adds	r5, r2, #1
 801336c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013370:	4d6e      	ldr	r5, [pc, #440]	; (801352c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013372:	1212      	asrs	r2, r2, #8
 8013374:	682d      	ldr	r5, [r5, #0]
 8013376:	2aff      	cmp	r2, #255	; 0xff
 8013378:	ea4f 2615 	mov.w	r6, r5, lsr #8
 801337c:	9605      	str	r6, [sp, #20]
 801337e:	d116      	bne.n	80133ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8013380:	f06f 0201 	mvn.w	r2, #1
 8013384:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8013388:	fb02 fc07 	mul.w	ip, r2, r7
 801338c:	096a      	lsrs	r2, r5, #5
 801338e:	f026 0607 	bic.w	r6, r6, #7
 8013392:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013396:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801339a:	4316      	orrs	r6, r2
 801339c:	432e      	orrs	r6, r5
 801339e:	f824 600c 	strh.w	r6, [r4, ip]
 80133a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80133a4:	3f01      	subs	r7, #1
 80133a6:	4410      	add	r0, r2
 80133a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80133aa:	4411      	add	r1, r2
 80133ac:	e77e      	b.n	80132ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80133ae:	f06f 0601 	mvn.w	r6, #1
 80133b2:	fa1f fa82 	uxth.w	sl, r2
 80133b6:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80133ba:	43d2      	mvns	r2, r2
 80133bc:	437e      	muls	r6, r7
 80133be:	b2ed      	uxtb	r5, r5
 80133c0:	fb1c fc0a 	smulbb	ip, ip, sl
 80133c4:	b2d2      	uxtb	r2, r2
 80133c6:	f834 8006 	ldrh.w	r8, [r4, r6]
 80133ca:	fb15 f50a 	smulbb	r5, r5, sl
 80133ce:	9602      	str	r6, [sp, #8]
 80133d0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80133d4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80133d8:	fb16 f60a 	smulbb	r6, r6, sl
 80133dc:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80133e0:	fb0e ce02 	mla	lr, lr, r2, ip
 80133e4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80133e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80133ec:	fa1f fe8e 	uxth.w	lr, lr
 80133f0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80133f4:	fa5f f888 	uxtb.w	r8, r8
 80133f8:	fb0c 6c02 	mla	ip, ip, r2, r6
 80133fc:	fb08 5502 	mla	r5, r8, r2, r5
 8013400:	f10e 0201 	add.w	r2, lr, #1
 8013404:	fa1f fc8c 	uxth.w	ip, ip
 8013408:	b2ad      	uxth	r5, r5
 801340a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801340e:	9a02      	ldr	r2, [sp, #8]
 8013410:	1c6e      	adds	r6, r5, #1
 8013412:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8013416:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801341a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801341e:	ea46 0e0e 	orr.w	lr, r6, lr
 8013422:	f10c 0601 	add.w	r6, ip, #1
 8013426:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801342a:	0976      	lsrs	r6, r6, #5
 801342c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8013430:	ea4e 0e06 	orr.w	lr, lr, r6
 8013434:	f824 e002 	strh.w	lr, [r4, r2]
 8013438:	e7b3      	b.n	80133a2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801343a:	f04f 0800 	mov.w	r8, #0
 801343e:	eba3 0208 	sub.w	r2, r3, r8
 8013442:	2a00      	cmp	r2, #0
 8013444:	f77f af35 	ble.w	80132b2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013448:	1402      	asrs	r2, r0, #16
 801344a:	9e00      	ldr	r6, [sp, #0]
 801344c:	140d      	asrs	r5, r1, #16
 801344e:	fb06 2505 	mla	r5, r6, r5, r2
 8013452:	9e01      	ldr	r6, [sp, #4]
 8013454:	086a      	lsrs	r2, r5, #1
 8013456:	07ed      	lsls	r5, r5, #31
 8013458:	5cb2      	ldrb	r2, [r6, r2]
 801345a:	bf54      	ite	pl
 801345c:	f002 020f 	andpl.w	r2, r2, #15
 8013460:	1112      	asrmi	r2, r2, #4
 8013462:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013466:	b2d2      	uxtb	r2, r2
 8013468:	b1c2      	cbz	r2, 801349c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801346a:	9d04      	ldr	r5, [sp, #16]
 801346c:	436a      	muls	r2, r5
 801346e:	1c55      	adds	r5, r2, #1
 8013470:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8013474:	4d2d      	ldr	r5, [pc, #180]	; (801352c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8013476:	1212      	asrs	r2, r2, #8
 8013478:	682e      	ldr	r6, [r5, #0]
 801347a:	2aff      	cmp	r2, #255	; 0xff
 801347c:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8013480:	d113      	bne.n	80134aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013482:	0972      	lsrs	r2, r6, #5
 8013484:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8013488:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801348c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013490:	f025 0507 	bic.w	r5, r5, #7
 8013494:	4315      	orrs	r5, r2
 8013496:	4335      	orrs	r5, r6
 8013498:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801349c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801349e:	f108 0801 	add.w	r8, r8, #1
 80134a2:	4410      	add	r0, r2
 80134a4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80134a6:	4411      	add	r1, r2
 80134a8:	e7c9      	b.n	801343e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80134aa:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80134ae:	fa1f fa82 	uxth.w	sl, r2
 80134b2:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80134b6:	43d2      	mvns	r2, r2
 80134b8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80134bc:	fb17 f70a 	smulbb	r7, r7, sl
 80134c0:	b2d2      	uxtb	r2, r2
 80134c2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80134c6:	b2f6      	uxtb	r6, r6
 80134c8:	b2ed      	uxtb	r5, r5
 80134ca:	fb0c 7c02 	mla	ip, ip, r2, r7
 80134ce:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80134d2:	fb16 f60a 	smulbb	r6, r6, sl
 80134d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80134da:	fa1f fc8c 	uxth.w	ip, ip
 80134de:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80134e2:	fb15 f50a 	smulbb	r5, r5, sl
 80134e6:	fa5f fe8e 	uxtb.w	lr, lr
 80134ea:	fb0e 6602 	mla	r6, lr, r2, r6
 80134ee:	fb07 5702 	mla	r7, r7, r2, r5
 80134f2:	f10c 0201 	add.w	r2, ip, #1
 80134f6:	b2b6      	uxth	r6, r6
 80134f8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80134fc:	1c75      	adds	r5, r6, #1
 80134fe:	b2bf      	uxth	r7, r7
 8013500:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8013504:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8013508:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801350c:	ea45 0c0c 	orr.w	ip, r5, ip
 8013510:	1c7d      	adds	r5, r7, #1
 8013512:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8013516:	096d      	lsrs	r5, r5, #5
 8013518:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801351c:	ea4c 0c05 	orr.w	ip, ip, r5
 8013520:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8013524:	e7ba      	b.n	801349c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013526:	b007      	add	sp, #28
 8013528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801352c:	2400b068 	.word	0x2400b068

08013530 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013534:	b087      	sub	sp, #28
 8013536:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801353a:	f8df 8308 	ldr.w	r8, [pc, #776]	; 8013844 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801353e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013540:	9101      	str	r1, [sp, #4]
 8013542:	9205      	str	r2, [sp, #20]
 8013544:	6841      	ldr	r1, [r0, #4]
 8013546:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801354a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801354e:	fb01 2404 	mla	r4, r1, r4, r2
 8013552:	6802      	ldr	r2, [r0, #0]
 8013554:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013558:	f8db 2008 	ldr.w	r2, [fp, #8]
 801355c:	3201      	adds	r2, #1
 801355e:	f022 0201 	bic.w	r2, r2, #1
 8013562:	9202      	str	r2, [sp, #8]
 8013564:	f8db 2000 	ldr.w	r2, [fp]
 8013568:	9203      	str	r2, [sp, #12]
 801356a:	9a01      	ldr	r2, [sp, #4]
 801356c:	2a00      	cmp	r2, #0
 801356e:	dc03      	bgt.n	8013578 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8013570:	9a05      	ldr	r2, [sp, #20]
 8013572:	2a00      	cmp	r2, #0
 8013574:	f340 8162 	ble.w	801383c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8013578:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801357a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801357e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8013582:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013584:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8013588:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801358c:	2b00      	cmp	r3, #0
 801358e:	dd0e      	ble.n	80135ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013590:	1402      	asrs	r2, r0, #16
 8013592:	d405      	bmi.n	80135a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013594:	42ba      	cmp	r2, r7
 8013596:	da03      	bge.n	80135a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8013598:	140a      	asrs	r2, r1, #16
 801359a:	d401      	bmi.n	80135a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801359c:	42b2      	cmp	r2, r6
 801359e:	db07      	blt.n	80135b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80135a0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80135a2:	3b01      	subs	r3, #1
 80135a4:	3402      	adds	r4, #2
 80135a6:	4410      	add	r0, r2
 80135a8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80135aa:	4411      	add	r1, r2
 80135ac:	e7ee      	b.n	801358c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80135ae:	d017      	beq.n	80135e0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80135b0:	1e5a      	subs	r2, r3, #1
 80135b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80135b4:	fb05 0502 	mla	r5, r5, r2, r0
 80135b8:	142d      	asrs	r5, r5, #16
 80135ba:	d409      	bmi.n	80135d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80135bc:	42bd      	cmp	r5, r7
 80135be:	da07      	bge.n	80135d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80135c0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80135c2:	fb05 1202 	mla	r2, r5, r2, r1
 80135c6:	1412      	asrs	r2, r2, #16
 80135c8:	d402      	bmi.n	80135d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80135ca:	42b2      	cmp	r2, r6
 80135cc:	f2c0 80c3 	blt.w	8013756 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80135d0:	2500      	movs	r5, #0
 80135d2:	195a      	adds	r2, r3, r5
 80135d4:	2a00      	cmp	r2, #0
 80135d6:	dc3f      	bgt.n	8013658 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80135d8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80135dc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80135e0:	9b01      	ldr	r3, [sp, #4]
 80135e2:	2b00      	cmp	r3, #0
 80135e4:	f340 812a 	ble.w	801383c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80135e8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80135ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80135ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80135f2:	eeb0 6a62 	vmov.f32	s12, s5
 80135f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80135fa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80135fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013602:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8013606:	eeb0 6a43 	vmov.f32	s12, s6
 801360a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801360e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8013612:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013616:	ee61 7a27 	vmul.f32	s15, s2, s15
 801361a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801361e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013622:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013626:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801362a:	ee12 2a90 	vmov	r2, s5
 801362e:	eef0 2a47 	vmov.f32	s5, s14
 8013632:	fb92 f3f3 	sdiv	r3, r2, r3
 8013636:	ee13 2a10 	vmov	r2, s6
 801363a:	9313      	str	r3, [sp, #76]	; 0x4c
 801363c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801363e:	eeb0 3a67 	vmov.f32	s6, s15
 8013642:	fb92 f3f3 	sdiv	r3, r2, r3
 8013646:	9314      	str	r3, [sp, #80]	; 0x50
 8013648:	9b01      	ldr	r3, [sp, #4]
 801364a:	9a05      	ldr	r2, [sp, #20]
 801364c:	3b01      	subs	r3, #1
 801364e:	9301      	str	r3, [sp, #4]
 8013650:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013652:	bf08      	it	eq
 8013654:	4613      	moveq	r3, r2
 8013656:	e788      	b.n	801356a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8013658:	1406      	asrs	r6, r0, #16
 801365a:	d42c      	bmi.n	80136b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801365c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8013660:	42b2      	cmp	r2, r6
 8013662:	dd28      	ble.n	80136b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013664:	140f      	asrs	r7, r1, #16
 8013666:	d426      	bmi.n	80136b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013668:	f8db 200c 	ldr.w	r2, [fp, #12]
 801366c:	42ba      	cmp	r2, r7
 801366e:	dd22      	ble.n	80136b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013670:	9a02      	ldr	r2, [sp, #8]
 8013672:	fb07 6602 	mla	r6, r7, r2, r6
 8013676:	9f03      	ldr	r7, [sp, #12]
 8013678:	0872      	lsrs	r2, r6, #1
 801367a:	07f6      	lsls	r6, r6, #31
 801367c:	5cba      	ldrb	r2, [r7, r2]
 801367e:	bf54      	ite	pl
 8013680:	f002 020f 	andpl.w	r2, r2, #15
 8013684:	1112      	asrmi	r2, r2, #4
 8013686:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801368a:	b2d2      	uxtb	r2, r2
 801368c:	2aff      	cmp	r2, #255	; 0xff
 801368e:	d118      	bne.n	80136c2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8013690:	f06f 0601 	mvn.w	r6, #1
 8013694:	f8d8 2000 	ldr.w	r2, [r8]
 8013698:	fb06 f705 	mul.w	r7, r6, r5
 801369c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80136a0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80136a4:	0956      	lsrs	r6, r2, #5
 80136a6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80136aa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80136ae:	ea4c 0606 	orr.w	r6, ip, r6
 80136b2:	4316      	orrs	r6, r2
 80136b4:	53e6      	strh	r6, [r4, r7]
 80136b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80136b8:	3d01      	subs	r5, #1
 80136ba:	4410      	add	r0, r2
 80136bc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80136be:	4411      	add	r1, r2
 80136c0:	e787      	b.n	80135d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80136c2:	2a00      	cmp	r2, #0
 80136c4:	d0f7      	beq.n	80136b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80136c6:	f06f 0601 	mvn.w	r6, #1
 80136ca:	f8d8 c000 	ldr.w	ip, [r8]
 80136ce:	fa1f f982 	uxth.w	r9, r2
 80136d2:	43d2      	mvns	r2, r2
 80136d4:	436e      	muls	r6, r5
 80136d6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80136da:	b2d2      	uxtb	r2, r2
 80136dc:	f834 e006 	ldrh.w	lr, [r4, r6]
 80136e0:	fb1a fa09 	smulbb	sl, sl, r9
 80136e4:	9604      	str	r6, [sp, #16]
 80136e6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80136ea:	ea4f 272e 	mov.w	r7, lr, asr #8
 80136ee:	fb16 f609 	smulbb	r6, r6, r9
 80136f2:	fa5f fc8c 	uxtb.w	ip, ip
 80136f6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80136fa:	fb1c fc09 	smulbb	ip, ip, r9
 80136fe:	fb07 6702 	mla	r7, r7, r2, r6
 8013702:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013706:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801370a:	b2bf      	uxth	r7, r7
 801370c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013710:	fa5f fe8e 	uxtb.w	lr, lr
 8013714:	fb06 a602 	mla	r6, r6, r2, sl
 8013718:	fb0e cc02 	mla	ip, lr, r2, ip
 801371c:	1c7a      	adds	r2, r7, #1
 801371e:	b2b6      	uxth	r6, r6
 8013720:	fa1f fc8c 	uxth.w	ip, ip
 8013724:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8013728:	9a04      	ldr	r2, [sp, #16]
 801372a:	f10c 0a01 	add.w	sl, ip, #1
 801372e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8013732:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8013736:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801373a:	ea4a 0707 	orr.w	r7, sl, r7
 801373e:	f106 0a01 	add.w	sl, r6, #1
 8013742:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013746:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801374a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801374e:	ea47 070a 	orr.w	r7, r7, sl
 8013752:	52a7      	strh	r7, [r4, r2]
 8013754:	e7af      	b.n	80136b6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8013756:	f04f 0e00 	mov.w	lr, #0
 801375a:	eba3 020e 	sub.w	r2, r3, lr
 801375e:	2a00      	cmp	r2, #0
 8013760:	f77f af3a 	ble.w	80135d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013764:	1402      	asrs	r2, r0, #16
 8013766:	9e02      	ldr	r6, [sp, #8]
 8013768:	140d      	asrs	r5, r1, #16
 801376a:	fb06 2505 	mla	r5, r6, r5, r2
 801376e:	9e03      	ldr	r6, [sp, #12]
 8013770:	086a      	lsrs	r2, r5, #1
 8013772:	07ed      	lsls	r5, r5, #31
 8013774:	5cb2      	ldrb	r2, [r6, r2]
 8013776:	bf54      	ite	pl
 8013778:	f002 020f 	andpl.w	r2, r2, #15
 801377c:	1112      	asrmi	r2, r2, #4
 801377e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8013782:	b2d2      	uxtb	r2, r2
 8013784:	2aff      	cmp	r2, #255	; 0xff
 8013786:	d115      	bne.n	80137b4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8013788:	f8d8 5000 	ldr.w	r5, [r8]
 801378c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8013790:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8013794:	096a      	lsrs	r2, r5, #5
 8013796:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801379a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801379e:	4332      	orrs	r2, r6
 80137a0:	432a      	orrs	r2, r5
 80137a2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80137a6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80137a8:	f10e 0e01 	add.w	lr, lr, #1
 80137ac:	4410      	add	r0, r2
 80137ae:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80137b0:	4411      	add	r1, r2
 80137b2:	e7d2      	b.n	801375a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80137b4:	2a00      	cmp	r2, #0
 80137b6:	d0f6      	beq.n	80137a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80137b8:	f8d8 7000 	ldr.w	r7, [r8]
 80137bc:	fa1f f982 	uxth.w	r9, r2
 80137c0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80137c4:	43d2      	mvns	r2, r2
 80137c6:	f3c7 4507 	ubfx	r5, r7, #16, #8
 80137ca:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80137ce:	ea4f 262c 	mov.w	r6, ip, asr #8
 80137d2:	fb15 f509 	smulbb	r5, r5, r9
 80137d6:	b2d2      	uxtb	r2, r2
 80137d8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80137dc:	b2ff      	uxtb	r7, r7
 80137de:	fb1a fa09 	smulbb	sl, sl, r9
 80137e2:	fb06 5602 	mla	r6, r6, r2, r5
 80137e6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80137ea:	fb17 f709 	smulbb	r7, r7, r9
 80137ee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80137f2:	b2b6      	uxth	r6, r6
 80137f4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80137f8:	fa5f fc8c 	uxtb.w	ip, ip
 80137fc:	fb05 a502 	mla	r5, r5, r2, sl
 8013800:	fb0c 7702 	mla	r7, ip, r2, r7
 8013804:	1c72      	adds	r2, r6, #1
 8013806:	b2ad      	uxth	r5, r5
 8013808:	b2bf      	uxth	r7, r7
 801380a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801380e:	f107 0a01 	add.w	sl, r7, #1
 8013812:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8013816:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801381a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801381e:	ea4a 0606 	orr.w	r6, sl, r6
 8013822:	f105 0a01 	add.w	sl, r5, #1
 8013826:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801382a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801382e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8013832:	ea46 060a 	orr.w	r6, r6, sl
 8013836:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801383a:	e7b4      	b.n	80137a6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801383c:	b007      	add	sp, #28
 801383e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013842:	bf00      	nop
 8013844:	2400b068 	.word	0x2400b068

08013848 <_ZN8touchgfx8LCD16bppD1Ev>:
 8013848:	4770      	bx	lr

0801384a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801384a:	4770      	bx	lr

0801384c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801384c:	4770      	bx	lr

0801384e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801384e:	4770      	bx	lr

08013850 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8013850:	4770      	bx	lr

08013852 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8013852:	4770      	bx	lr

08013854 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013854:	4770      	bx	lr

08013856 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013856:	4770      	bx	lr

08013858 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013858:	4770      	bx	lr

0801385a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801385a:	4770      	bx	lr

0801385c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801385c:	4770      	bx	lr

0801385e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801385e:	4770      	bx	lr

08013860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8013860:	4770      	bx	lr

08013862 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013862:	4770      	bx	lr

08013864 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8013864:	4770      	bx	lr

08013866 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8013866:	4770      	bx	lr

08013868 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013868:	4770      	bx	lr

0801386a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801386a:	4770      	bx	lr

0801386c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801386c:	4770      	bx	lr

0801386e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801386e:	4770      	bx	lr

08013870 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8013870:	4770      	bx	lr

08013872 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8013872:	4770      	bx	lr

08013874 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8013874:	4770      	bx	lr

08013876 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8013876:	4770      	bx	lr

08013878 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8013878:	4770      	bx	lr

0801387a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801387a:	4770      	bx	lr

0801387c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801387c:	4770      	bx	lr

0801387e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801387e:	4770      	bx	lr

08013880 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8013880:	4770      	bx	lr

08013882 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8013882:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013886:	b088      	sub	sp, #32
 8013888:	4606      	mov	r6, r0
 801388a:	4688      	mov	r8, r1
 801388c:	4691      	mov	r9, r2
 801388e:	ac08      	add	r4, sp, #32
 8013890:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8013894:	4620      	mov	r0, r4
 8013896:	f7fd fc65 	bl	8011164 <_ZNK8touchgfx6Bitmap7getDataEv>
 801389a:	6833      	ldr	r3, [r6, #0]
 801389c:	4605      	mov	r5, r0
 801389e:	4620      	mov	r0, r4
 80138a0:	699f      	ldr	r7, [r3, #24]
 80138a2:	f7fd fb73 	bl	8010f8c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80138a6:	4682      	mov	sl, r0
 80138a8:	4620      	mov	r0, r4
 80138aa:	f7fd fba3 	bl	8010ff4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80138ae:	9500      	str	r5, [sp, #0]
 80138b0:	464b      	mov	r3, r9
 80138b2:	4642      	mov	r2, r8
 80138b4:	4631      	mov	r1, r6
 80138b6:	e9cd a001 	strd	sl, r0, [sp, #4]
 80138ba:	a806      	add	r0, sp, #24
 80138bc:	47b8      	blx	r7
 80138be:	4628      	mov	r0, r5
 80138c0:	b008      	add	sp, #32
 80138c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080138c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80138c8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80138cc:	2300      	movs	r3, #0
 80138ce:	9300      	str	r3, [sp, #0]
 80138d0:	4b3d      	ldr	r3, [pc, #244]	; (80139c8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 80138d2:	781b      	ldrb	r3, [r3, #0]
 80138d4:	2b00      	cmp	r3, #0
 80138d6:	d137      	bne.n	8013948 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80138d8:	4a3c      	ldr	r2, [pc, #240]	; (80139cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80138da:	f9b2 2000 	ldrsh.w	r2, [r2]
 80138de:	f8ad 2004 	strh.w	r2, [sp, #4]
 80138e2:	2b00      	cmp	r3, #0
 80138e4:	d132      	bne.n	801394c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80138e6:	4b3a      	ldr	r3, [pc, #232]	; (80139d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80138e8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80138ec:	ac02      	add	r4, sp, #8
 80138ee:	6808      	ldr	r0, [r1, #0]
 80138f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80138f4:	ab02      	add	r3, sp, #8
 80138f6:	6849      	ldr	r1, [r1, #4]
 80138f8:	4d36      	ldr	r5, [pc, #216]	; (80139d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80138fa:	c303      	stmia	r3!, {r0, r1}
 80138fc:	4669      	mov	r1, sp
 80138fe:	4620      	mov	r0, r4
 8013900:	f7fa f9ea 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013904:	4668      	mov	r0, sp
 8013906:	f7fa f9bf 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801390a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801390e:	f8bd 2000 	ldrh.w	r2, [sp]
 8013912:	462f      	mov	r7, r5
 8013914:	6828      	ldr	r0, [r5, #0]
 8013916:	4413      	add	r3, r2
 8013918:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801391c:	f8ad 3008 	strh.w	r3, [sp, #8]
 8013920:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013924:	4413      	add	r3, r2
 8013926:	f8ad 300a 	strh.w	r3, [sp, #10]
 801392a:	6803      	ldr	r3, [r0, #0]
 801392c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801392e:	4798      	blx	r3
 8013930:	f010 0f01 	tst.w	r0, #1
 8013934:	d00c      	beq.n	8013950 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8013936:	6828      	ldr	r0, [r5, #0]
 8013938:	6803      	ldr	r3, [r0, #0]
 801393a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801393e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8013940:	4798      	blx	r3
 8013942:	b004      	add	sp, #16
 8013944:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013948:	4a21      	ldr	r2, [pc, #132]	; (80139d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801394a:	e7c6      	b.n	80138da <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801394c:	4b1f      	ldr	r3, [pc, #124]	; (80139cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801394e:	e7cb      	b.n	80138e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8013950:	6838      	ldr	r0, [r7, #0]
 8013952:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8013956:	6803      	ldr	r3, [r0, #0]
 8013958:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801395c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8013960:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013962:	4798      	blx	r3
 8013964:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8013968:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801396c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8013970:	fb16 3602 	smlabb	r6, r6, r2, r3
 8013974:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013978:	6838      	ldr	r0, [r7, #0]
 801397a:	6803      	ldr	r3, [r0, #0]
 801397c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801397e:	4798      	blx	r3
 8013980:	4a12      	ldr	r2, [pc, #72]	; (80139cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8013982:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8013986:	8813      	ldrh	r3, [r2, #0]
 8013988:	4691      	mov	r9, r2
 801398a:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801398e:	435d      	muls	r5, r3
 8013990:	fb03 1404 	mla	r4, r3, r4, r1
 8013994:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013998:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801399c:	6838      	ldr	r0, [r7, #0]
 801399e:	42ac      	cmp	r4, r5
 80139a0:	6803      	ldr	r3, [r0, #0]
 80139a2:	d20e      	bcs.n	80139c2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80139a4:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80139a8:	4632      	mov	r2, r6
 80139aa:	4643      	mov	r3, r8
 80139ac:	4621      	mov	r1, r4
 80139ae:	47d0      	blx	sl
 80139b0:	f8b9 3000 	ldrh.w	r3, [r9]
 80139b4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80139b8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80139bc:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80139c0:	e7ec      	b.n	801399c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80139c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80139c4:	4798      	blx	r3
 80139c6:	e7bc      	b.n	8013942 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80139c8:	2400b058 	.word	0x2400b058
 80139cc:	2400b05a 	.word	0x2400b05a
 80139d0:	2400b05c 	.word	0x2400b05c
 80139d4:	2400b060 	.word	0x2400b060

080139d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80139d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139dc:	b08b      	sub	sp, #44	; 0x2c
 80139de:	460f      	mov	r7, r1
 80139e0:	4616      	mov	r6, r2
 80139e2:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80139e6:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80139ea:	f1bb 0f00 	cmp.w	fp, #0
 80139ee:	d049      	beq.n	8013a84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80139f0:	6810      	ldr	r0, [r2, #0]
 80139f2:	ad06      	add	r5, sp, #24
 80139f4:	6851      	ldr	r1, [r2, #4]
 80139f6:	c503      	stmia	r5!, {r0, r1}
 80139f8:	6818      	ldr	r0, [r3, #0]
 80139fa:	ad08      	add	r5, sp, #32
 80139fc:	6859      	ldr	r1, [r3, #4]
 80139fe:	c503      	stmia	r5!, {r0, r1}
 8013a00:	a806      	add	r0, sp, #24
 8013a02:	f7fa f941 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013a06:	4631      	mov	r1, r6
 8013a08:	a808      	add	r0, sp, #32
 8013a0a:	f7fa f965 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013a0e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8013a12:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8013a16:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8013a1a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8013a1e:	fb16 2103 	smlabb	r1, r6, r3, r2
 8013a22:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8013a26:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8013a2a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8013a2e:	4f5f      	ldr	r7, [pc, #380]	; (8013bac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013a30:	440a      	add	r2, r1
 8013a32:	6838      	ldr	r0, [r7, #0]
 8013a34:	46b9      	mov	r9, r7
 8013a36:	f8ad 2020 	strh.w	r2, [sp, #32]
 8013a3a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013a3e:	4413      	add	r3, r2
 8013a40:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8013a44:	6803      	ldr	r3, [r0, #0]
 8013a46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013a48:	4798      	blx	r3
 8013a4a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013a4e:	d01c      	beq.n	8013a8a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8013a50:	f010 0f04 	tst.w	r0, #4
 8013a54:	d01d      	beq.n	8013a92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8013a56:	f8d9 0000 	ldr.w	r0, [r9]
 8013a5a:	2700      	movs	r7, #0
 8013a5c:	b2ad      	uxth	r5, r5
 8013a5e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8013a62:	6801      	ldr	r1, [r0, #0]
 8013a64:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8013a68:	f8cd b00c 	str.w	fp, [sp, #12]
 8013a6c:	9501      	str	r5, [sp, #4]
 8013a6e:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8013a72:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8013a76:	9402      	str	r4, [sp, #8]
 8013a78:	fa1f f488 	uxth.w	r4, r8
 8013a7c:	9400      	str	r4, [sp, #0]
 8013a7e:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8013a80:	4631      	mov	r1, r6
 8013a82:	47a0      	blx	r4
 8013a84:	b00b      	add	sp, #44	; 0x2c
 8013a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a8a:	b914      	cbnz	r4, 8013a92 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8013a8c:	f010 0f01 	tst.w	r0, #1
 8013a90:	e7e0      	b.n	8013a54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8013a92:	f8d9 0000 	ldr.w	r0, [r9]
 8013a96:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8013a9a:	6803      	ldr	r3, [r0, #0]
 8013a9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013a9e:	4798      	blx	r3
 8013aa0:	4b43      	ldr	r3, [pc, #268]	; (8013bb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8013aa2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8013aa6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013aaa:	881a      	ldrh	r2, [r3, #0]
 8013aac:	469a      	mov	sl, r3
 8013aae:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8013ab2:	fb05 f502 	mul.w	r5, r5, r2
 8013ab6:	fb02 1404 	mla	r4, r2, r4, r1
 8013aba:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013abe:	d059      	beq.n	8013b74 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8013ac0:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8013ac4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013ac8:	fa1f f28b 	uxth.w	r2, fp
 8013acc:	469e      	mov	lr, r3
 8013ace:	fa1f f989 	uxth.w	r9, r9
 8013ad2:	42ac      	cmp	r4, r5
 8013ad4:	d264      	bcs.n	8013ba0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8013ad6:	eb04 0a07 	add.w	sl, r4, r7
 8013ada:	4554      	cmp	r4, sl
 8013adc:	d23d      	bcs.n	8013b5a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8013ade:	8821      	ldrh	r1, [r4, #0]
 8013ae0:	f836 3b02 	ldrh.w	r3, [r6], #2
 8013ae4:	1208      	asrs	r0, r1, #8
 8013ae6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013aea:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013aee:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8013af2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013af6:	00c9      	lsls	r1, r1, #3
 8013af8:	fb10 f009 	smulbb	r0, r0, r9
 8013afc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013b00:	b2c9      	uxtb	r1, r1
 8013b02:	fb0c 0c02 	mla	ip, ip, r2, r0
 8013b06:	10d8      	asrs	r0, r3, #3
 8013b08:	fb1b fb09 	smulbb	fp, fp, r9
 8013b0c:	00db      	lsls	r3, r3, #3
 8013b0e:	fa1f fc8c 	uxth.w	ip, ip
 8013b12:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8013b16:	fb11 f109 	smulbb	r1, r1, r9
 8013b1a:	b2db      	uxtb	r3, r3
 8013b1c:	fb00 b002 	mla	r0, r0, r2, fp
 8013b20:	f10c 0b01 	add.w	fp, ip, #1
 8013b24:	fb03 1302 	mla	r3, r3, r2, r1
 8013b28:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8013b2c:	b29b      	uxth	r3, r3
 8013b2e:	b280      	uxth	r0, r0
 8013b30:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8013b34:	f103 0c01 	add.w	ip, r3, #1
 8013b38:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8013b3c:	1c43      	adds	r3, r0, #1
 8013b3e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8013b42:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8013b46:	0940      	lsrs	r0, r0, #5
 8013b48:	ea4c 0c0b 	orr.w	ip, ip, fp
 8013b4c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8013b50:	ea4c 0c00 	orr.w	ip, ip, r0
 8013b54:	f824 cb02 	strh.w	ip, [r4], #2
 8013b58:	e7bf      	b.n	8013ada <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8013b5a:	f8be 3000 	ldrh.w	r3, [lr]
 8013b5e:	eba3 0308 	sub.w	r3, r3, r8
 8013b62:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b66:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013b6a:	eba3 0308 	sub.w	r3, r3, r8
 8013b6e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013b72:	e7ae      	b.n	8013ad2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8013b74:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8013b78:	f8d9 0000 	ldr.w	r0, [r9]
 8013b7c:	42ac      	cmp	r4, r5
 8013b7e:	6803      	ldr	r3, [r0, #0]
 8013b80:	d20e      	bcs.n	8013ba0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8013b82:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8013b86:	4632      	mov	r2, r6
 8013b88:	463b      	mov	r3, r7
 8013b8a:	4621      	mov	r1, r4
 8013b8c:	47c0      	blx	r8
 8013b8e:	f8ba 3000 	ldrh.w	r3, [sl]
 8013b92:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013b96:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8013b9a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8013b9e:	e7eb      	b.n	8013b78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8013ba0:	4b02      	ldr	r3, [pc, #8]	; (8013bac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8013ba2:	6818      	ldr	r0, [r3, #0]
 8013ba4:	6803      	ldr	r3, [r0, #0]
 8013ba6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ba8:	4798      	blx	r3
 8013baa:	e76b      	b.n	8013a84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8013bac:	2400b060 	.word	0x2400b060
 8013bb0:	2400b05a 	.word	0x2400b05a

08013bb4 <_ZN8touchgfx8LCD16bppD0Ev>:
 8013bb4:	b510      	push	{r4, lr}
 8013bb6:	4604      	mov	r4, r0
 8013bb8:	2178      	movs	r1, #120	; 0x78
 8013bba:	f008 ffca 	bl	801cb52 <_ZdlPvj>
 8013bbe:	4620      	mov	r0, r4
 8013bc0:	bd10      	pop	{r4, pc}

08013bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013bc2:	b510      	push	{r4, lr}
 8013bc4:	4604      	mov	r4, r0
 8013bc6:	2104      	movs	r1, #4
 8013bc8:	f008 ffc3 	bl	801cb52 <_ZdlPvj>
 8013bcc:	4620      	mov	r0, r4
 8013bce:	bd10      	pop	{r4, pc}

08013bd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013bd0:	b510      	push	{r4, lr}
 8013bd2:	4604      	mov	r4, r0
 8013bd4:	2104      	movs	r1, #4
 8013bd6:	f008 ffbc 	bl	801cb52 <_ZdlPvj>
 8013bda:	4620      	mov	r0, r4
 8013bdc:	bd10      	pop	{r4, pc}

08013bde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013bde:	b510      	push	{r4, lr}
 8013be0:	4604      	mov	r4, r0
 8013be2:	2104      	movs	r1, #4
 8013be4:	f008 ffb5 	bl	801cb52 <_ZdlPvj>
 8013be8:	4620      	mov	r0, r4
 8013bea:	bd10      	pop	{r4, pc}

08013bec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013bec:	b510      	push	{r4, lr}
 8013bee:	4604      	mov	r4, r0
 8013bf0:	2104      	movs	r1, #4
 8013bf2:	f008 ffae 	bl	801cb52 <_ZdlPvj>
 8013bf6:	4620      	mov	r0, r4
 8013bf8:	bd10      	pop	{r4, pc}

08013bfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013bfa:	b510      	push	{r4, lr}
 8013bfc:	4604      	mov	r4, r0
 8013bfe:	2104      	movs	r1, #4
 8013c00:	f008 ffa7 	bl	801cb52 <_ZdlPvj>
 8013c04:	4620      	mov	r0, r4
 8013c06:	bd10      	pop	{r4, pc}

08013c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8013c08:	b510      	push	{r4, lr}
 8013c0a:	4604      	mov	r4, r0
 8013c0c:	2104      	movs	r1, #4
 8013c0e:	f008 ffa0 	bl	801cb52 <_ZdlPvj>
 8013c12:	4620      	mov	r0, r4
 8013c14:	bd10      	pop	{r4, pc}

08013c16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013c16:	b510      	push	{r4, lr}
 8013c18:	4604      	mov	r4, r0
 8013c1a:	2104      	movs	r1, #4
 8013c1c:	f008 ff99 	bl	801cb52 <_ZdlPvj>
 8013c20:	4620      	mov	r0, r4
 8013c22:	bd10      	pop	{r4, pc}

08013c24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8013c24:	b510      	push	{r4, lr}
 8013c26:	4604      	mov	r4, r0
 8013c28:	2104      	movs	r1, #4
 8013c2a:	f008 ff92 	bl	801cb52 <_ZdlPvj>
 8013c2e:	4620      	mov	r0, r4
 8013c30:	bd10      	pop	{r4, pc}

08013c32 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013c32:	b510      	push	{r4, lr}
 8013c34:	4604      	mov	r4, r0
 8013c36:	2104      	movs	r1, #4
 8013c38:	f008 ff8b 	bl	801cb52 <_ZdlPvj>
 8013c3c:	4620      	mov	r0, r4
 8013c3e:	bd10      	pop	{r4, pc}

08013c40 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013c40:	b510      	push	{r4, lr}
 8013c42:	4604      	mov	r4, r0
 8013c44:	2104      	movs	r1, #4
 8013c46:	f008 ff84 	bl	801cb52 <_ZdlPvj>
 8013c4a:	4620      	mov	r0, r4
 8013c4c:	bd10      	pop	{r4, pc}

08013c4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013c4e:	b510      	push	{r4, lr}
 8013c50:	4604      	mov	r4, r0
 8013c52:	2104      	movs	r1, #4
 8013c54:	f008 ff7d 	bl	801cb52 <_ZdlPvj>
 8013c58:	4620      	mov	r0, r4
 8013c5a:	bd10      	pop	{r4, pc}

08013c5c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013c5c:	b510      	push	{r4, lr}
 8013c5e:	4604      	mov	r4, r0
 8013c60:	2104      	movs	r1, #4
 8013c62:	f008 ff76 	bl	801cb52 <_ZdlPvj>
 8013c66:	4620      	mov	r0, r4
 8013c68:	bd10      	pop	{r4, pc}

08013c6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8013c6a:	b510      	push	{r4, lr}
 8013c6c:	4604      	mov	r4, r0
 8013c6e:	2104      	movs	r1, #4
 8013c70:	f008 ff6f 	bl	801cb52 <_ZdlPvj>
 8013c74:	4620      	mov	r0, r4
 8013c76:	bd10      	pop	{r4, pc}

08013c78 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8013c78:	b510      	push	{r4, lr}
 8013c7a:	4604      	mov	r4, r0
 8013c7c:	2104      	movs	r1, #4
 8013c7e:	f008 ff68 	bl	801cb52 <_ZdlPvj>
 8013c82:	4620      	mov	r0, r4
 8013c84:	bd10      	pop	{r4, pc}

08013c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013c86:	b510      	push	{r4, lr}
 8013c88:	4604      	mov	r4, r0
 8013c8a:	2104      	movs	r1, #4
 8013c8c:	f008 ff61 	bl	801cb52 <_ZdlPvj>
 8013c90:	4620      	mov	r0, r4
 8013c92:	bd10      	pop	{r4, pc}

08013c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013c94:	b510      	push	{r4, lr}
 8013c96:	4604      	mov	r4, r0
 8013c98:	2104      	movs	r1, #4
 8013c9a:	f008 ff5a 	bl	801cb52 <_ZdlPvj>
 8013c9e:	4620      	mov	r0, r4
 8013ca0:	bd10      	pop	{r4, pc}

08013ca2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8013ca2:	b510      	push	{r4, lr}
 8013ca4:	4604      	mov	r4, r0
 8013ca6:	2104      	movs	r1, #4
 8013ca8:	f008 ff53 	bl	801cb52 <_ZdlPvj>
 8013cac:	4620      	mov	r0, r4
 8013cae:	bd10      	pop	{r4, pc}

08013cb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8013cb0:	b510      	push	{r4, lr}
 8013cb2:	4604      	mov	r4, r0
 8013cb4:	2104      	movs	r1, #4
 8013cb6:	f008 ff4c 	bl	801cb52 <_ZdlPvj>
 8013cba:	4620      	mov	r0, r4
 8013cbc:	bd10      	pop	{r4, pc}

08013cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013cbe:	b510      	push	{r4, lr}
 8013cc0:	4604      	mov	r4, r0
 8013cc2:	2104      	movs	r1, #4
 8013cc4:	f008 ff45 	bl	801cb52 <_ZdlPvj>
 8013cc8:	4620      	mov	r0, r4
 8013cca:	bd10      	pop	{r4, pc}

08013ccc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013ccc:	b510      	push	{r4, lr}
 8013cce:	4604      	mov	r4, r0
 8013cd0:	2104      	movs	r1, #4
 8013cd2:	f008 ff3e 	bl	801cb52 <_ZdlPvj>
 8013cd6:	4620      	mov	r0, r4
 8013cd8:	bd10      	pop	{r4, pc}

08013cda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8013cda:	b510      	push	{r4, lr}
 8013cdc:	4604      	mov	r4, r0
 8013cde:	2104      	movs	r1, #4
 8013ce0:	f008 ff37 	bl	801cb52 <_ZdlPvj>
 8013ce4:	4620      	mov	r0, r4
 8013ce6:	bd10      	pop	{r4, pc}

08013ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8013ce8:	b510      	push	{r4, lr}
 8013cea:	4604      	mov	r4, r0
 8013cec:	2104      	movs	r1, #4
 8013cee:	f008 ff30 	bl	801cb52 <_ZdlPvj>
 8013cf2:	4620      	mov	r0, r4
 8013cf4:	bd10      	pop	{r4, pc}

08013cf6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8013cf6:	b510      	push	{r4, lr}
 8013cf8:	4604      	mov	r4, r0
 8013cfa:	2104      	movs	r1, #4
 8013cfc:	f008 ff29 	bl	801cb52 <_ZdlPvj>
 8013d00:	4620      	mov	r0, r4
 8013d02:	bd10      	pop	{r4, pc}

08013d04 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8013d04:	b510      	push	{r4, lr}
 8013d06:	4604      	mov	r4, r0
 8013d08:	2104      	movs	r1, #4
 8013d0a:	f008 ff22 	bl	801cb52 <_ZdlPvj>
 8013d0e:	4620      	mov	r0, r4
 8013d10:	bd10      	pop	{r4, pc}

08013d12 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8013d12:	b510      	push	{r4, lr}
 8013d14:	4604      	mov	r4, r0
 8013d16:	2104      	movs	r1, #4
 8013d18:	f008 ff1b 	bl	801cb52 <_ZdlPvj>
 8013d1c:	4620      	mov	r0, r4
 8013d1e:	bd10      	pop	{r4, pc}

08013d20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8013d20:	b510      	push	{r4, lr}
 8013d22:	4604      	mov	r4, r0
 8013d24:	2104      	movs	r1, #4
 8013d26:	f008 ff14 	bl	801cb52 <_ZdlPvj>
 8013d2a:	4620      	mov	r0, r4
 8013d2c:	bd10      	pop	{r4, pc}

08013d2e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8013d2e:	b510      	push	{r4, lr}
 8013d30:	4604      	mov	r4, r0
 8013d32:	2104      	movs	r1, #4
 8013d34:	f008 ff0d 	bl	801cb52 <_ZdlPvj>
 8013d38:	4620      	mov	r0, r4
 8013d3a:	bd10      	pop	{r4, pc}

08013d3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8013d3c:	b510      	push	{r4, lr}
 8013d3e:	4604      	mov	r4, r0
 8013d40:	2104      	movs	r1, #4
 8013d42:	f008 ff06 	bl	801cb52 <_ZdlPvj>
 8013d46:	4620      	mov	r0, r4
 8013d48:	bd10      	pop	{r4, pc}
	...

08013d4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8013d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d50:	b091      	sub	sp, #68	; 0x44
 8013d52:	469b      	mov	fp, r3
 8013d54:	4616      	mov	r6, r2
 8013d56:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013d5a:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8013d5e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013d62:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8013d66:	4604      	mov	r4, r0
 8013d68:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8013d6c:	4640      	mov	r0, r8
 8013d6e:	460d      	mov	r5, r1
 8013d70:	4659      	mov	r1, fp
 8013d72:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8013d76:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8013d7a:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8013d7e:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8013d82:	f7f6 ffa5 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 8013d86:	4631      	mov	r1, r6
 8013d88:	4640      	mov	r0, r8
 8013d8a:	f7f6 ffa1 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 8013d8e:	4b74      	ldr	r3, [pc, #464]	; (8013f60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8013d90:	8818      	ldrh	r0, [r3, #0]
 8013d92:	4b74      	ldr	r3, [pc, #464]	; (8013f64 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8013d94:	b202      	sxth	r2, r0
 8013d96:	8819      	ldrh	r1, [r3, #0]
 8013d98:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8013d9c:	b20e      	sxth	r6, r1
 8013d9e:	2b00      	cmp	r3, #0
 8013da0:	da07      	bge.n	8013db2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8013da2:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8013da6:	4463      	add	r3, ip
 8013da8:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8013dac:	2300      	movs	r3, #0
 8013dae:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8013db2:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8013db6:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8013dba:	1ad2      	subs	r2, r2, r3
 8013dbc:	4594      	cmp	ip, r2
 8013dbe:	bfc4      	itt	gt
 8013dc0:	1ac2      	subgt	r2, r0, r3
 8013dc2:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8013dc6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8013dca:	2a00      	cmp	r2, #0
 8013dcc:	da07      	bge.n	8013dde <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8013dce:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8013dd2:	4462      	add	r2, ip
 8013dd4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8013dd8:	2200      	movs	r2, #0
 8013dda:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8013dde:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8013de2:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8013de6:	eba6 060a 	sub.w	r6, r6, sl
 8013dea:	42b2      	cmp	r2, r6
 8013dec:	bfc4      	itt	gt
 8013dee:	eba1 020a 	subgt.w	r2, r1, sl
 8013df2:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8013df6:	4a5c      	ldr	r2, [pc, #368]	; (8013f68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8013df8:	7812      	ldrb	r2, [r2, #0]
 8013dfa:	b9a2      	cbnz	r2, 8013e26 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8013dfc:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8013e00:	4286      	cmp	r6, r0
 8013e02:	4640      	mov	r0, r8
 8013e04:	9303      	str	r3, [sp, #12]
 8013e06:	bf14      	ite	ne
 8013e08:	2600      	movne	r6, #0
 8013e0a:	2601      	moveq	r6, #1
 8013e0c:	f7f6 ffa3 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013e10:	9b03      	ldr	r3, [sp, #12]
 8013e12:	b160      	cbz	r0, 8013e2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8013e14:	2300      	movs	r3, #0
 8013e16:	8023      	strh	r3, [r4, #0]
 8013e18:	8063      	strh	r3, [r4, #2]
 8013e1a:	80a3      	strh	r3, [r4, #4]
 8013e1c:	4620      	mov	r0, r4
 8013e1e:	80e3      	strh	r3, [r4, #6]
 8013e20:	b011      	add	sp, #68	; 0x44
 8013e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e26:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8013e2a:	428e      	cmp	r6, r1
 8013e2c:	e7e9      	b.n	8013e02 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8013e2e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8013e32:	a90e      	add	r1, sp, #56	; 0x38
 8013e34:	900e      	str	r0, [sp, #56]	; 0x38
 8013e36:	a80c      	add	r0, sp, #48	; 0x30
 8013e38:	9205      	str	r2, [sp, #20]
 8013e3a:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8013e3e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8013e42:	9206      	str	r2, [sp, #24]
 8013e44:	f8bb 2000 	ldrh.w	r2, [fp]
 8013e48:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8013e4c:	1a9b      	subs	r3, r3, r2
 8013e4e:	b21b      	sxth	r3, r3
 8013e50:	9303      	str	r3, [sp, #12]
 8013e52:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8013e56:	f8df b118 	ldr.w	fp, [pc, #280]	; 8013f70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8013e5a:	ebaa 0a03 	sub.w	sl, sl, r3
 8013e5e:	fa0f f38a 	sxth.w	r3, sl
 8013e62:	9304      	str	r3, [sp, #16]
 8013e64:	9b03      	ldr	r3, [sp, #12]
 8013e66:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8013e6a:	9b04      	ldr	r3, [sp, #16]
 8013e6c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013e70:	9b05      	ldr	r3, [sp, #20]
 8013e72:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8013e76:	9b06      	ldr	r3, [sp, #24]
 8013e78:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8013e7c:	f7f9 ff2c 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8013e80:	4640      	mov	r0, r8
 8013e82:	f7f9 ff01 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e86:	a80e      	add	r0, sp, #56	; 0x38
 8013e88:	f7f9 fefe 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013e8c:	4b37      	ldr	r3, [pc, #220]	; (8013f6c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8013e8e:	4628      	mov	r0, r5
 8013e90:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8013e94:	881b      	ldrh	r3, [r3, #0]
 8013e96:	9307      	str	r3, [sp, #28]
 8013e98:	682b      	ldr	r3, [r5, #0]
 8013e9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013e9c:	4798      	blx	r3
 8013e9e:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8013ea2:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8013ea6:	4681      	mov	r9, r0
 8013ea8:	f8db 0000 	ldr.w	r0, [fp]
 8013eac:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8013eb0:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8013eb2:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8013eb6:	6803      	ldr	r3, [r0, #0]
 8013eb8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013eba:	4798      	blx	r3
 8013ebc:	4607      	mov	r7, r0
 8013ebe:	f8db 0000 	ldr.w	r0, [fp]
 8013ec2:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8013ec6:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8013eca:	6803      	ldr	r3, [r0, #0]
 8013ecc:	9109      	str	r1, [sp, #36]	; 0x24
 8013ece:	9208      	str	r2, [sp, #32]
 8013ed0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013ed2:	4798      	blx	r3
 8013ed4:	f010 0f01 	tst.w	r0, #1
 8013ed8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013edc:	d012      	beq.n	8013f04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8013ede:	f8db 0000 	ldr.w	r0, [fp]
 8013ee2:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8013ee6:	6803      	ldr	r3, [r0, #0]
 8013ee8:	9200      	str	r2, [sp, #0]
 8013eea:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8013eec:	462b      	mov	r3, r5
 8013eee:	e898 0006 	ldmia.w	r8, {r1, r2}
 8013ef2:	47b0      	blx	r6
 8013ef4:	9b03      	ldr	r3, [sp, #12]
 8013ef6:	8023      	strh	r3, [r4, #0]
 8013ef8:	9b04      	ldr	r3, [sp, #16]
 8013efa:	8063      	strh	r3, [r4, #2]
 8013efc:	9b05      	ldr	r3, [sp, #20]
 8013efe:	80a3      	strh	r3, [r4, #4]
 8013f00:	9b06      	ldr	r3, [sp, #24]
 8013f02:	e78b      	b.n	8013e1c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8013f04:	fb09 f202 	mul.w	r2, r9, r2
 8013f08:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8013f0c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8013f10:	440f      	add	r7, r1
 8013f12:	b166      	cbz	r6, 8013f2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8013f14:	9a07      	ldr	r2, [sp, #28]
 8013f16:	4592      	cmp	sl, r2
 8013f18:	d109      	bne.n	8013f2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8013f1a:	f8db 0000 	ldr.w	r0, [fp]
 8013f1e:	fb09 f303 	mul.w	r3, r9, r3
 8013f22:	4629      	mov	r1, r5
 8013f24:	6802      	ldr	r2, [r0, #0]
 8013f26:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8013f28:	463a      	mov	r2, r7
 8013f2a:	47b0      	blx	r6
 8013f2c:	e7e2      	b.n	8013ef4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8013f2e:	fb0a f303 	mul.w	r3, sl, r3
 8013f32:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8013f36:	f8df b038 	ldr.w	fp, [pc, #56]	; 8013f70 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8013f3a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8013f3e:	4545      	cmp	r5, r8
 8013f40:	d2d8      	bcs.n	8013ef4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8013f42:	f8db 0000 	ldr.w	r0, [fp]
 8013f46:	4629      	mov	r1, r5
 8013f48:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8013f4c:	4435      	add	r5, r6
 8013f4e:	6802      	ldr	r2, [r0, #0]
 8013f50:	005b      	lsls	r3, r3, #1
 8013f52:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8013f56:	463a      	mov	r2, r7
 8013f58:	47d0      	blx	sl
 8013f5a:	444f      	add	r7, r9
 8013f5c:	e7ef      	b.n	8013f3e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8013f5e:	bf00      	nop
 8013f60:	2400b054 	.word	0x2400b054
 8013f64:	2400b056 	.word	0x2400b056
 8013f68:	2400b058 	.word	0x2400b058
 8013f6c:	2400b05a 	.word	0x2400b05a
 8013f70:	2400b060 	.word	0x2400b060

08013f74 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8013f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f76:	4606      	mov	r6, r0
 8013f78:	b087      	sub	sp, #28
 8013f7a:	460c      	mov	r4, r1
 8013f7c:	4617      	mov	r7, r2
 8013f7e:	461d      	mov	r5, r3
 8013f80:	b333      	cbz	r3, 8013fd0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8013f82:	4608      	mov	r0, r1
 8013f84:	f7f6 fee7 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8013f88:	bb10      	cbnz	r0, 8013fd0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8013f8a:	6820      	ldr	r0, [r4, #0]
 8013f8c:	ab04      	add	r3, sp, #16
 8013f8e:	6861      	ldr	r1, [r4, #4]
 8013f90:	4c1b      	ldr	r4, [pc, #108]	; (8014000 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8013f92:	c303      	stmia	r3!, {r0, r1}
 8013f94:	a804      	add	r0, sp, #16
 8013f96:	f7f9 fe77 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8013f9a:	6820      	ldr	r0, [r4, #0]
 8013f9c:	6803      	ldr	r3, [r0, #0]
 8013f9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8013fa0:	4798      	blx	r3
 8013fa2:	2dff      	cmp	r5, #255	; 0xff
 8013fa4:	d016      	beq.n	8013fd4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8013fa6:	f010 0f08 	tst.w	r0, #8
 8013faa:	6820      	ldr	r0, [r4, #0]
 8013fac:	d015      	beq.n	8013fda <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8013fae:	2400      	movs	r4, #0
 8013fb0:	6801      	ldr	r1, [r0, #0]
 8013fb2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8013fb6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013fba:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8013fbe:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8013fc2:	9401      	str	r4, [sp, #4]
 8013fc4:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8013fc8:	9400      	str	r4, [sp, #0]
 8013fca:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8013fcc:	4639      	mov	r1, r7
 8013fce:	47a0      	blx	r4
 8013fd0:	b007      	add	sp, #28
 8013fd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013fd4:	f010 0f02 	tst.w	r0, #2
 8013fd8:	e7e7      	b.n	8013faa <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8013fda:	6803      	ldr	r3, [r0, #0]
 8013fdc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013fde:	4798      	blx	r3
 8013fe0:	4b08      	ldr	r3, [pc, #32]	; (8014004 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8013fe2:	4601      	mov	r1, r0
 8013fe4:	4630      	mov	r0, r6
 8013fe6:	881a      	ldrh	r2, [r3, #0]
 8013fe8:	6833      	ldr	r3, [r6, #0]
 8013fea:	e9cd 7500 	strd	r7, r5, [sp]
 8013fee:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8013ff0:	ab04      	add	r3, sp, #16
 8013ff2:	47a8      	blx	r5
 8013ff4:	6820      	ldr	r0, [r4, #0]
 8013ff6:	6803      	ldr	r3, [r0, #0]
 8013ff8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013ffa:	4798      	blx	r3
 8013ffc:	e7e8      	b.n	8013fd0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8013ffe:	bf00      	nop
 8014000:	2400b060 	.word	0x2400b060
 8014004:	2400b05a 	.word	0x2400b05a

08014008 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8014008:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801400c:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8014010:	4688      	mov	r8, r1
 8014012:	4614      	mov	r4, r2
 8014014:	461d      	mov	r5, r3
 8014016:	9e08      	ldr	r6, [sp, #32]
 8014018:	2f00      	cmp	r7, #0
 801401a:	f000 80ab 	beq.w	8014174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801401e:	4618      	mov	r0, r3
 8014020:	f7f6 fe99 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014024:	2800      	cmp	r0, #0
 8014026:	f040 80a5 	bne.w	8014174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801402a:	f9b5 1000 	ldrsh.w	r1, [r5]
 801402e:	2fff      	cmp	r7, #255	; 0xff
 8014030:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014034:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8014038:	fb04 1303 	mla	r3, r4, r3, r1
 801403c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8014040:	eba4 0200 	sub.w	r2, r4, r0
 8014044:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8014048:	fb04 f505 	mul.w	r5, r4, r5
 801404c:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8014050:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8014054:	d04a      	beq.n	80140ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 8014056:	b2bc      	uxth	r4, r7
 8014058:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801405c:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8014060:	fa5f f788 	uxtb.w	r7, r8
 8014064:	b2f3      	uxtb	r3, r6
 8014066:	0040      	lsls	r0, r0, #1
 8014068:	fb0e fe04 	mul.w	lr, lr, r4
 801406c:	4367      	muls	r7, r4
 801406e:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8014072:	4363      	muls	r3, r4
 8014074:	fa1f fc8c 	uxth.w	ip, ip
 8014078:	42a9      	cmp	r1, r5
 801407a:	d27b      	bcs.n	8014174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801407c:	eb01 0900 	add.w	r9, r1, r0
 8014080:	4549      	cmp	r1, r9
 8014082:	d231      	bcs.n	80140e8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8014084:	880a      	ldrh	r2, [r1, #0]
 8014086:	1214      	asrs	r4, r2, #8
 8014088:	10d6      	asrs	r6, r2, #3
 801408a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801408e:	00d2      	lsls	r2, r2, #3
 8014090:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014094:	b2d2      	uxtb	r2, r2
 8014096:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801409a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801409e:	fb14 f40c 	smulbb	r4, r4, ip
 80140a2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80140a6:	fb12 f20c 	smulbb	r2, r2, ip
 80140aa:	fb16 f60c 	smulbb	r6, r6, ip
 80140ae:	4474      	add	r4, lr
 80140b0:	441a      	add	r2, r3
 80140b2:	b2a4      	uxth	r4, r4
 80140b4:	443e      	add	r6, r7
 80140b6:	b292      	uxth	r2, r2
 80140b8:	f104 0a01 	add.w	sl, r4, #1
 80140bc:	b2b6      	uxth	r6, r6
 80140be:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80140c2:	f102 0a01 	add.w	sl, r2, #1
 80140c6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80140ca:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80140ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80140d2:	4322      	orrs	r2, r4
 80140d4:	1c74      	adds	r4, r6, #1
 80140d6:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80140da:	0976      	lsrs	r6, r6, #5
 80140dc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80140e0:	4332      	orrs	r2, r6
 80140e2:	f821 2b02 	strh.w	r2, [r1], #2
 80140e6:	e7cb      	b.n	8014080 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 80140e8:	4441      	add	r1, r8
 80140ea:	e7c5      	b.n	8014078 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 80140ec:	0973      	lsrs	r3, r6, #5
 80140ee:	4f22      	ldr	r7, [pc, #136]	; (8014178 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 80140f0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80140f4:	ea08 0707 	and.w	r7, r8, r7
 80140f8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80140fc:	433b      	orrs	r3, r7
 80140fe:	07e7      	lsls	r7, r4, #31
 8014100:	ea43 0306 	orr.w	r3, r3, r6
 8014104:	b29b      	uxth	r3, r3
 8014106:	d50b      	bpl.n	8014120 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 8014108:	0040      	lsls	r0, r0, #1
 801410a:	0052      	lsls	r2, r2, #1
 801410c:	42a9      	cmp	r1, r5
 801410e:	d231      	bcs.n	8014174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8014110:	180c      	adds	r4, r1, r0
 8014112:	42a1      	cmp	r1, r4
 8014114:	d202      	bcs.n	801411c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8014116:	f821 3b02 	strh.w	r3, [r1], #2
 801411a:	e7fa      	b.n	8014112 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801411c:	4411      	add	r1, r2
 801411e:	e7f5      	b.n	801410c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 8014120:	078e      	lsls	r6, r1, #30
 8014122:	d008      	beq.n	8014136 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 8014124:	0066      	lsls	r6, r4, #1
 8014126:	460a      	mov	r2, r1
 8014128:	42aa      	cmp	r2, r5
 801412a:	d202      	bcs.n	8014132 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801412c:	8013      	strh	r3, [r2, #0]
 801412e:	4432      	add	r2, r6
 8014130:	e7fa      	b.n	8014128 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 8014132:	3102      	adds	r1, #2
 8014134:	3801      	subs	r0, #1
 8014136:	07c2      	lsls	r2, r0, #31
 8014138:	d50b      	bpl.n	8014152 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801413a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801413e:	0066      	lsls	r6, r4, #1
 8014140:	3a01      	subs	r2, #1
 8014142:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8014146:	42aa      	cmp	r2, r5
 8014148:	d202      	bcs.n	8014150 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801414a:	8013      	strh	r3, [r2, #0]
 801414c:	4432      	add	r2, r6
 801414e:	e7fa      	b.n	8014146 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8014150:	3801      	subs	r0, #1
 8014152:	b178      	cbz	r0, 8014174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8014154:	1040      	asrs	r0, r0, #1
 8014156:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801415a:	0080      	lsls	r0, r0, #2
 801415c:	0064      	lsls	r4, r4, #1
 801415e:	42a9      	cmp	r1, r5
 8014160:	d208      	bcs.n	8014174 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8014162:	180e      	adds	r6, r1, r0
 8014164:	460a      	mov	r2, r1
 8014166:	42b2      	cmp	r2, r6
 8014168:	d202      	bcs.n	8014170 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801416a:	f842 3b04 	str.w	r3, [r2], #4
 801416e:	e7fa      	b.n	8014166 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 8014170:	4421      	add	r1, r4
 8014172:	e7f4      	b.n	801415e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8014174:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014178:	00fff800 	.word	0x00fff800

0801417c <_ZN8touchgfx8LCD16bppC1Ev>:
 801417c:	2200      	movs	r2, #0
 801417e:	4910      	ldr	r1, [pc, #64]	; (80141c0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8014180:	6042      	str	r2, [r0, #4]
 8014182:	6001      	str	r1, [r0, #0]
 8014184:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8014188:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801418c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8014190:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8014194:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8014198:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801419c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80141a0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80141a4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80141a8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80141ac:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80141b0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80141b4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80141b8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80141bc:	4770      	bx	lr
 80141be:	bf00      	nop
 80141c0:	0801f280 	.word	0x0801f280

080141c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80141c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141c8:	b08d      	sub	sp, #52	; 0x34
 80141ca:	460d      	mov	r5, r1
 80141cc:	4604      	mov	r4, r0
 80141ce:	4699      	mov	r9, r3
 80141d0:	6808      	ldr	r0, [r1, #0]
 80141d2:	ab08      	add	r3, sp, #32
 80141d4:	6849      	ldr	r1, [r1, #4]
 80141d6:	c303      	stmia	r3!, {r0, r1}
 80141d8:	6810      	ldr	r0, [r2, #0]
 80141da:	ab0a      	add	r3, sp, #40	; 0x28
 80141dc:	6851      	ldr	r1, [r2, #4]
 80141de:	c303      	stmia	r3!, {r0, r1}
 80141e0:	a808      	add	r0, sp, #32
 80141e2:	f7f9 fd51 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80141e6:	4629      	mov	r1, r5
 80141e8:	a80a      	add	r0, sp, #40	; 0x28
 80141ea:	4d67      	ldr	r5, [pc, #412]	; (8014388 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80141ec:	f7f9 fd74 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80141f0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80141f4:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 80141f8:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 80141fc:	6828      	ldr	r0, [r5, #0]
 80141fe:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014202:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8014206:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801420a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801420e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8014212:	440a      	add	r2, r1
 8014214:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8014218:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801421c:	4413      	add	r3, r2
 801421e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8014222:	6803      	ldr	r3, [r0, #0]
 8014224:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014226:	4798      	blx	r3
 8014228:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801422c:	d119      	bne.n	8014262 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801422e:	f010 0f20 	tst.w	r0, #32
 8014232:	6828      	ldr	r0, [r5, #0]
 8014234:	d018      	beq.n	8014268 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8014236:	2500      	movs	r5, #0
 8014238:	6801      	ldr	r1, [r0, #0]
 801423a:	b2b6      	uxth	r6, r6
 801423c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8014240:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8014244:	9601      	str	r6, [sp, #4]
 8014246:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801424a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801424e:	9502      	str	r5, [sp, #8]
 8014250:	fa1f f588 	uxth.w	r5, r8
 8014254:	9500      	str	r5, [sp, #0]
 8014256:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8014258:	4621      	mov	r1, r4
 801425a:	47a8      	blx	r5
 801425c:	b00d      	add	sp, #52	; 0x34
 801425e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014262:	f010 0f40 	tst.w	r0, #64	; 0x40
 8014266:	e7e4      	b.n	8014232 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8014268:	6803      	ldr	r3, [r0, #0]
 801426a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801426c:	4798      	blx	r3
 801426e:	4947      	ldr	r1, [pc, #284]	; (801438c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8014270:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8014274:	880b      	ldrh	r3, [r1, #0]
 8014276:	468a      	mov	sl, r1
 8014278:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801427c:	fb03 5202 	mla	r2, r3, r2, r5
 8014280:	4373      	muls	r3, r6
 8014282:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014286:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801428a:	9307      	str	r3, [sp, #28]
 801428c:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8014290:	9306      	str	r3, [sp, #24]
 8014292:	9b07      	ldr	r3, [sp, #28]
 8014294:	4298      	cmp	r0, r3
 8014296:	d270      	bcs.n	801437a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8014298:	9b06      	ldr	r3, [sp, #24]
 801429a:	4621      	mov	r1, r4
 801429c:	eb00 0b03 	add.w	fp, r0, r3
 80142a0:	4558      	cmp	r0, fp
 80142a2:	d25d      	bcs.n	8014360 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80142a4:	f851 4b04 	ldr.w	r4, [r1], #4
 80142a8:	0e23      	lsrs	r3, r4, #24
 80142aa:	d014      	beq.n	80142d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80142ac:	2bff      	cmp	r3, #255	; 0xff
 80142ae:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80142b2:	d112      	bne.n	80142da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80142b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80142b8:	d10f      	bne.n	80142da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80142ba:	0963      	lsrs	r3, r4, #5
 80142bc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80142c0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80142c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80142c8:	f02c 0c07 	bic.w	ip, ip, #7
 80142cc:	ea43 0c0c 	orr.w	ip, r3, ip
 80142d0:	ea4c 0404 	orr.w	r4, ip, r4
 80142d4:	8004      	strh	r4, [r0, #0]
 80142d6:	3002      	adds	r0, #2
 80142d8:	e7e2      	b.n	80142a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80142da:	fb09 f303 	mul.w	r3, r9, r3
 80142de:	8807      	ldrh	r7, [r0, #0]
 80142e0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80142e4:	fa5f fc8c 	uxtb.w	ip, ip
 80142e8:	1c5a      	adds	r2, r3, #1
 80142ea:	123e      	asrs	r6, r7, #8
 80142ec:	10fd      	asrs	r5, r7, #3
 80142ee:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80142f2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80142f6:	00ff      	lsls	r7, r7, #3
 80142f8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80142fc:	1212      	asrs	r2, r2, #8
 80142fe:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8014302:	b293      	uxth	r3, r2
 8014304:	43d2      	mvns	r2, r2
 8014306:	b2ff      	uxtb	r7, r7
 8014308:	fb1e fe03 	smulbb	lr, lr, r3
 801430c:	b2d2      	uxtb	r2, r2
 801430e:	fb1c fc03 	smulbb	ip, ip, r3
 8014312:	b2e4      	uxtb	r4, r4
 8014314:	fb06 e602 	mla	r6, r6, r2, lr
 8014318:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801431c:	fb14 f403 	smulbb	r4, r4, r3
 8014320:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8014324:	b2b6      	uxth	r6, r6
 8014326:	fb05 c502 	mla	r5, r5, r2, ip
 801432a:	fb07 4702 	mla	r7, r7, r2, r4
 801432e:	f106 0e01 	add.w	lr, r6, #1
 8014332:	b2ad      	uxth	r5, r5
 8014334:	b2bf      	uxth	r7, r7
 8014336:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801433a:	f105 0c01 	add.w	ip, r5, #1
 801433e:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8014342:	1c7e      	adds	r6, r7, #1
 8014344:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014348:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801434c:	096d      	lsrs	r5, r5, #5
 801434e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014352:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014356:	ea46 060e 	orr.w	r6, r6, lr
 801435a:	432e      	orrs	r6, r5
 801435c:	8006      	strh	r6, [r0, #0]
 801435e:	e7ba      	b.n	80142d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8014360:	f8ba 3000 	ldrh.w	r3, [sl]
 8014364:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8014368:	eba3 0308 	sub.w	r3, r3, r8
 801436c:	eba4 0408 	sub.w	r4, r4, r8
 8014370:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014374:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8014378:	e78b      	b.n	8014292 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801437a:	4b03      	ldr	r3, [pc, #12]	; (8014388 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801437c:	6818      	ldr	r0, [r3, #0]
 801437e:	6803      	ldr	r3, [r0, #0]
 8014380:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014382:	4798      	blx	r3
 8014384:	e76a      	b.n	801425c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8014386:	bf00      	nop
 8014388:	2400b060 	.word	0x2400b060
 801438c:	2400b05a 	.word	0x2400b05a

08014390 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8014390:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014394:	b085      	sub	sp, #20
 8014396:	6810      	ldr	r0, [r2, #0]
 8014398:	460c      	mov	r4, r1
 801439a:	6851      	ldr	r1, [r2, #4]
 801439c:	466d      	mov	r5, sp
 801439e:	4616      	mov	r6, r2
 80143a0:	c503      	stmia	r5!, {r0, r1}
 80143a2:	6818      	ldr	r0, [r3, #0]
 80143a4:	6859      	ldr	r1, [r3, #4]
 80143a6:	c503      	stmia	r5!, {r0, r1}
 80143a8:	4668      	mov	r0, sp
 80143aa:	4d2e      	ldr	r5, [pc, #184]	; (8014464 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80143ac:	f7f9 fc6c 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80143b0:	4631      	mov	r1, r6
 80143b2:	a802      	add	r0, sp, #8
 80143b4:	4e2c      	ldr	r6, [pc, #176]	; (8014468 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80143b6:	f7f9 fc8f 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80143ba:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80143be:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80143c2:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80143c6:	6828      	ldr	r0, [r5, #0]
 80143c8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80143cc:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80143d0:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 80143d4:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80143d8:	f8bd 1000 	ldrh.w	r1, [sp]
 80143dc:	440a      	add	r2, r1
 80143de:	f8ad 2008 	strh.w	r2, [sp, #8]
 80143e2:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80143e6:	4413      	add	r3, r2
 80143e8:	f8ad 300a 	strh.w	r3, [sp, #10]
 80143ec:	6803      	ldr	r3, [r0, #0]
 80143ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80143f0:	4798      	blx	r3
 80143f2:	8833      	ldrh	r3, [r6, #0]
 80143f4:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 80143f8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 80143fc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8014400:	f8df e068 	ldr.w	lr, [pc, #104]	; 801446c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8014404:	fb03 1202 	mla	r2, r3, r2, r1
 8014408:	fb08 f303 	mul.w	r3, r8, r3
 801440c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014410:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8014414:	4298      	cmp	r0, r3
 8014416:	d21d      	bcs.n	8014454 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8014418:	eb00 080c 	add.w	r8, r0, ip
 801441c:	4540      	cmp	r0, r8
 801441e:	d20f      	bcs.n	8014440 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8014420:	f854 1b04 	ldr.w	r1, [r4], #4
 8014424:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8014428:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801442c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8014430:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014434:	ea42 0209 	orr.w	r2, r2, r9
 8014438:	430a      	orrs	r2, r1
 801443a:	f820 2b02 	strh.w	r2, [r0], #2
 801443e:	e7ed      	b.n	801441c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8014440:	8832      	ldrh	r2, [r6, #0]
 8014442:	1bd2      	subs	r2, r2, r7
 8014444:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014448:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801444c:	1bd2      	subs	r2, r2, r7
 801444e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8014452:	e7df      	b.n	8014414 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8014454:	6828      	ldr	r0, [r5, #0]
 8014456:	6803      	ldr	r3, [r0, #0]
 8014458:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801445a:	4798      	blx	r3
 801445c:	b005      	add	sp, #20
 801445e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014462:	bf00      	nop
 8014464:	2400b060 	.word	0x2400b060
 8014468:	2400b05a 	.word	0x2400b05a
 801446c:	fffff800 	.word	0xfffff800

08014470 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8014470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014474:	b08e      	sub	sp, #56	; 0x38
 8014476:	460e      	mov	r6, r1
 8014478:	4604      	mov	r4, r0
 801447a:	461d      	mov	r5, r3
 801447c:	6808      	ldr	r0, [r1, #0]
 801447e:	ab0a      	add	r3, sp, #40	; 0x28
 8014480:	6849      	ldr	r1, [r1, #4]
 8014482:	f8df 81d4 	ldr.w	r8, [pc, #468]	; 8014658 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8014486:	f8df 91d4 	ldr.w	r9, [pc, #468]	; 801465c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801448a:	c303      	stmia	r3!, {r0, r1}
 801448c:	6810      	ldr	r0, [r2, #0]
 801448e:	ab0c      	add	r3, sp, #48	; 0x30
 8014490:	6851      	ldr	r1, [r2, #4]
 8014492:	c303      	stmia	r3!, {r0, r1}
 8014494:	a80a      	add	r0, sp, #40	; 0x28
 8014496:	f7f9 fbf7 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801449a:	4631      	mov	r1, r6
 801449c:	a80c      	add	r0, sp, #48	; 0x30
 801449e:	f7f9 fc1b 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80144a2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80144a6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80144aa:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80144ae:	f8d8 0000 	ldr.w	r0, [r8]
 80144b2:	fb11 2103 	smlabb	r1, r1, r3, r2
 80144b6:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80144ba:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80144be:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80144c2:	440c      	add	r4, r1
 80144c4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80144c8:	440a      	add	r2, r1
 80144ca:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80144ce:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 80144d2:	4413      	add	r3, r2
 80144d4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80144d8:	6803      	ldr	r3, [r0, #0]
 80144da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80144dc:	4798      	blx	r3
 80144de:	2dff      	cmp	r5, #255	; 0xff
 80144e0:	d124      	bne.n	801452c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80144e2:	f010 0f01 	tst.w	r0, #1
 80144e6:	f8d8 0000 	ldr.w	r0, [r8]
 80144ea:	d022      	beq.n	8014532 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80144ec:	2100      	movs	r1, #0
 80144ee:	f04f 0e01 	mov.w	lr, #1
 80144f2:	f8d0 c000 	ldr.w	ip, [r0]
 80144f6:	b2b6      	uxth	r6, r6
 80144f8:	f8cd e018 	str.w	lr, [sp, #24]
 80144fc:	b2bf      	uxth	r7, r7
 80144fe:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014502:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014506:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801450a:	f8b9 e000 	ldrh.w	lr, [r9]
 801450e:	9503      	str	r5, [sp, #12]
 8014510:	9601      	str	r6, [sp, #4]
 8014512:	9700      	str	r7, [sp, #0]
 8014514:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8014518:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801451c:	9102      	str	r1, [sp, #8]
 801451e:	4621      	mov	r1, r4
 8014520:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8014524:	47a8      	blx	r5
 8014526:	b00e      	add	sp, #56	; 0x38
 8014528:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801452c:	f010 0f04 	tst.w	r0, #4
 8014530:	e7d9      	b.n	80144e6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8014532:	6803      	ldr	r3, [r0, #0]
 8014534:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014536:	4798      	blx	r3
 8014538:	f8b9 3000 	ldrh.w	r3, [r9]
 801453c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8014540:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8014544:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8014548:	435e      	muls	r6, r3
 801454a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801454e:	2dff      	cmp	r5, #255	; 0xff
 8014550:	fb03 1202 	mla	r2, r3, r2, r1
 8014554:	ebac 0c07 	sub.w	ip, ip, r7
 8014558:	eba3 0707 	sub.w	r7, r3, r7
 801455c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014560:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014564:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8014568:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801456c:	d049      	beq.n	8014602 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801456e:	43eb      	mvns	r3, r5
 8014570:	fa1f f985 	uxth.w	r9, r5
 8014574:	b2db      	uxtb	r3, r3
 8014576:	42b0      	cmp	r0, r6
 8014578:	d266      	bcs.n	8014648 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801457a:	eb00 0a0e 	add.w	sl, r0, lr
 801457e:	4550      	cmp	r0, sl
 8014580:	4621      	mov	r1, r4
 8014582:	f104 0403 	add.w	r4, r4, #3
 8014586:	d25b      	bcs.n	8014640 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8014588:	8802      	ldrh	r2, [r0, #0]
 801458a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801458e:	ea4f 2822 	mov.w	r8, r2, asr #8
 8014592:	fb11 f109 	smulbb	r1, r1, r9
 8014596:	10d5      	asrs	r5, r2, #3
 8014598:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801459c:	00d2      	lsls	r2, r2, #3
 801459e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80145a2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80145a6:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80145aa:	fb08 1803 	mla	r8, r8, r3, r1
 80145ae:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80145b2:	b2d2      	uxtb	r2, r2
 80145b4:	fb11 f109 	smulbb	r1, r1, r9
 80145b8:	fa1f f888 	uxth.w	r8, r8
 80145bc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80145c0:	fb05 1503 	mla	r5, r5, r3, r1
 80145c4:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80145c8:	fb11 f109 	smulbb	r1, r1, r9
 80145cc:	b2ad      	uxth	r5, r5
 80145ce:	fb02 1203 	mla	r2, r2, r3, r1
 80145d2:	f108 0101 	add.w	r1, r8, #1
 80145d6:	b292      	uxth	r2, r2
 80145d8:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80145dc:	1c51      	adds	r1, r2, #1
 80145de:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80145e2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80145e6:	1c69      	adds	r1, r5, #1
 80145e8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80145ec:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80145f0:	096d      	lsrs	r5, r5, #5
 80145f2:	ea42 0208 	orr.w	r2, r2, r8
 80145f6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80145fa:	432a      	orrs	r2, r5
 80145fc:	f820 2b02 	strh.w	r2, [r0], #2
 8014600:	e7bd      	b.n	801457e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8014602:	4a14      	ldr	r2, [pc, #80]	; (8014654 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8014604:	42b0      	cmp	r0, r6
 8014606:	d21f      	bcs.n	8014648 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8014608:	eb00 050e 	add.w	r5, r0, lr
 801460c:	42a8      	cmp	r0, r5
 801460e:	4621      	mov	r1, r4
 8014610:	f104 0403 	add.w	r4, r4, #3
 8014614:	d210      	bcs.n	8014638 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8014616:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801461a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801461e:	00db      	lsls	r3, r3, #3
 8014620:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8014624:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014628:	430b      	orrs	r3, r1
 801462a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801462e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8014632:	f820 3b02 	strh.w	r3, [r0], #2
 8014636:	e7e9      	b.n	801460c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8014638:	4438      	add	r0, r7
 801463a:	eb01 040c 	add.w	r4, r1, ip
 801463e:	e7e1      	b.n	8014604 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8014640:	4438      	add	r0, r7
 8014642:	eb01 040c 	add.w	r4, r1, ip
 8014646:	e796      	b.n	8014576 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8014648:	4b03      	ldr	r3, [pc, #12]	; (8014658 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801464a:	6818      	ldr	r0, [r3, #0]
 801464c:	6803      	ldr	r3, [r0, #0]
 801464e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014650:	4798      	blx	r3
 8014652:	e768      	b.n	8014526 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8014654:	fffff800 	.word	0xfffff800
 8014658:	2400b060 	.word	0x2400b060
 801465c:	2400b05a 	.word	0x2400b05a

08014660 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8014660:	b4f0      	push	{r4, r5, r6, r7}
 8014662:	4616      	mov	r6, r2
 8014664:	461c      	mov	r4, r3
 8014666:	460d      	mov	r5, r1
 8014668:	9a04      	ldr	r2, [sp, #16]
 801466a:	2e01      	cmp	r6, #1
 801466c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014670:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8014674:	d012      	beq.n	801469c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8014676:	d303      	bcc.n	8014680 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8014678:	2e02      	cmp	r6, #2
 801467a:	d00a      	beq.n	8014692 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801467c:	bcf0      	pop	{r4, r5, r6, r7}
 801467e:	4770      	bx	lr
 8014680:	6805      	ldr	r5, [r0, #0]
 8014682:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8014686:	68ed      	ldr	r5, [r5, #12]
 8014688:	4613      	mov	r3, r2
 801468a:	4622      	mov	r2, r4
 801468c:	46ac      	mov	ip, r5
 801468e:	bcf0      	pop	{r4, r5, r6, r7}
 8014690:	4760      	bx	ip
 8014692:	4621      	mov	r1, r4
 8014694:	4628      	mov	r0, r5
 8014696:	bcf0      	pop	{r4, r5, r6, r7}
 8014698:	f7ff bd94 	b.w	80141c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801469c:	4621      	mov	r1, r4
 801469e:	4628      	mov	r0, r5
 80146a0:	bcf0      	pop	{r4, r5, r6, r7}
 80146a2:	f7ff bee5 	b.w	8014470 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080146a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80146a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80146ac:	b093      	sub	sp, #76	; 0x4c
 80146ae:	4681      	mov	r9, r0
 80146b0:	4688      	mov	r8, r1
 80146b2:	6810      	ldr	r0, [r2, #0]
 80146b4:	6851      	ldr	r1, [r2, #4]
 80146b6:	ac0e      	add	r4, sp, #56	; 0x38
 80146b8:	4616      	mov	r6, r2
 80146ba:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80146be:	4f6b      	ldr	r7, [pc, #428]	; (801486c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80146c0:	c403      	stmia	r4!, {r0, r1}
 80146c2:	6818      	ldr	r0, [r3, #0]
 80146c4:	ac10      	add	r4, sp, #64	; 0x40
 80146c6:	6859      	ldr	r1, [r3, #4]
 80146c8:	c403      	stmia	r4!, {r0, r1}
 80146ca:	a80e      	add	r0, sp, #56	; 0x38
 80146cc:	f7f9 fadc 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80146d0:	4631      	mov	r1, r6
 80146d2:	a810      	add	r0, sp, #64	; 0x40
 80146d4:	4e66      	ldr	r6, [pc, #408]	; (8014870 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80146d6:	f7f9 faff 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80146da:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80146de:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80146e2:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80146e6:	6830      	ldr	r0, [r6, #0]
 80146e8:	fb11 2103 	smlabb	r1, r1, r3, r2
 80146ec:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80146f0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80146f4:	4489      	add	r9, r1
 80146f6:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80146fa:	440a      	add	r2, r1
 80146fc:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8014700:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8014704:	4413      	add	r3, r2
 8014706:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801470a:	6803      	ldr	r3, [r0, #0]
 801470c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801470e:	4798      	blx	r3
 8014710:	f010 0f80 	tst.w	r0, #128	; 0x80
 8014714:	6830      	ldr	r0, [r6, #0]
 8014716:	d01d      	beq.n	8014754 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8014718:	2200      	movs	r2, #0
 801471a:	6801      	ldr	r1, [r0, #0]
 801471c:	b2a4      	uxth	r4, r4
 801471e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014722:	b2ad      	uxth	r5, r5
 8014724:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014728:	220b      	movs	r2, #11
 801472a:	9207      	str	r2, [sp, #28]
 801472c:	883a      	ldrh	r2, [r7, #0]
 801472e:	9502      	str	r5, [sp, #8]
 8014730:	9206      	str	r2, [sp, #24]
 8014732:	2201      	movs	r2, #1
 8014734:	9401      	str	r4, [sp, #4]
 8014736:	e9cd a204 	strd	sl, r2, [sp, #16]
 801473a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801473e:	9203      	str	r2, [sp, #12]
 8014740:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8014744:	9200      	str	r2, [sp, #0]
 8014746:	4642      	mov	r2, r8
 8014748:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801474a:	4649      	mov	r1, r9
 801474c:	47a0      	blx	r4
 801474e:	b013      	add	sp, #76	; 0x4c
 8014750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014754:	6803      	ldr	r3, [r0, #0]
 8014756:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014758:	4798      	blx	r3
 801475a:	883b      	ldrh	r3, [r7, #0]
 801475c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8014760:	f04f 0e04 	mov.w	lr, #4
 8014764:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8014768:	435d      	muls	r5, r3
 801476a:	fb03 1202 	mla	r2, r3, r2, r1
 801476e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8014772:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8014776:	920c      	str	r2, [sp, #48]	; 0x30
 8014778:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801477c:	1b12      	subs	r2, r2, r4
 801477e:	920d      	str	r2, [sp, #52]	; 0x34
 8014780:	0062      	lsls	r2, r4, #1
 8014782:	1b1c      	subs	r4, r3, r4
 8014784:	920a      	str	r2, [sp, #40]	; 0x28
 8014786:	0063      	lsls	r3, r4, #1
 8014788:	930b      	str	r3, [sp, #44]	; 0x2c
 801478a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801478c:	4298      	cmp	r0, r3
 801478e:	d266      	bcs.n	801485e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8014790:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014792:	eb00 0b03 	add.w	fp, r0, r3
 8014796:	4558      	cmp	r0, fp
 8014798:	d25c      	bcs.n	8014854 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801479a:	f819 3b01 	ldrb.w	r3, [r9], #1
 801479e:	fb1e e303 	smlabb	r3, lr, r3, lr
 80147a2:	f858 2003 	ldr.w	r2, [r8, r3]
 80147a6:	0e11      	lsrs	r1, r2, #24
 80147a8:	d012      	beq.n	80147d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80147aa:	29ff      	cmp	r1, #255	; 0xff
 80147ac:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80147b0:	d110      	bne.n	80147d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80147b2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80147b6:	d10d      	bne.n	80147d4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80147b8:	0953      	lsrs	r3, r2, #5
 80147ba:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80147be:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80147c2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80147c6:	f027 0707 	bic.w	r7, r7, #7
 80147ca:	431f      	orrs	r7, r3
 80147cc:	433a      	orrs	r2, r7
 80147ce:	8002      	strh	r2, [r0, #0]
 80147d0:	3002      	adds	r0, #2
 80147d2:	e7e0      	b.n	8014796 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 80147d4:	fb0a f101 	mul.w	r1, sl, r1
 80147d8:	8806      	ldrh	r6, [r0, #0]
 80147da:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80147de:	b2d2      	uxtb	r2, r2
 80147e0:	1c4b      	adds	r3, r1, #1
 80147e2:	1235      	asrs	r5, r6, #8
 80147e4:	10f4      	asrs	r4, r6, #3
 80147e6:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80147ea:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80147ee:	00f6      	lsls	r6, r6, #3
 80147f0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80147f4:	121b      	asrs	r3, r3, #8
 80147f6:	b2f6      	uxtb	r6, r6
 80147f8:	b299      	uxth	r1, r3
 80147fa:	43db      	mvns	r3, r3
 80147fc:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8014800:	fb1c fc01 	smulbb	ip, ip, r1
 8014804:	b2db      	uxtb	r3, r3
 8014806:	fb12 f201 	smulbb	r2, r2, r1
 801480a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801480e:	fb05 c503 	mla	r5, r5, r3, ip
 8014812:	b2ff      	uxtb	r7, r7
 8014814:	fb06 2203 	mla	r2, r6, r3, r2
 8014818:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801481c:	fb17 f701 	smulbb	r7, r7, r1
 8014820:	b2ad      	uxth	r5, r5
 8014822:	b292      	uxth	r2, r2
 8014824:	fb04 7403 	mla	r4, r4, r3, r7
 8014828:	f105 0c01 	add.w	ip, r5, #1
 801482c:	1c57      	adds	r7, r2, #1
 801482e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8014832:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8014836:	b2a4      	uxth	r4, r4
 8014838:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801483c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014840:	433d      	orrs	r5, r7
 8014842:	1c67      	adds	r7, r4, #1
 8014844:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8014848:	0964      	lsrs	r4, r4, #5
 801484a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801484e:	4325      	orrs	r5, r4
 8014850:	8005      	strh	r5, [r0, #0]
 8014852:	e7bd      	b.n	80147d0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8014854:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014856:	4418      	add	r0, r3
 8014858:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801485a:	4499      	add	r9, r3
 801485c:	e795      	b.n	801478a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801485e:	4b04      	ldr	r3, [pc, #16]	; (8014870 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8014860:	6818      	ldr	r0, [r3, #0]
 8014862:	6803      	ldr	r3, [r0, #0]
 8014864:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014866:	4798      	blx	r3
 8014868:	e771      	b.n	801474e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801486a:	bf00      	nop
 801486c:	2400b05a 	.word	0x2400b05a
 8014870:	2400b060 	.word	0x2400b060

08014874 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8014874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014878:	b087      	sub	sp, #28
 801487a:	4680      	mov	r8, r0
 801487c:	460d      	mov	r5, r1
 801487e:	4614      	mov	r4, r2
 8014880:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8014884:	2e00      	cmp	r6, #0
 8014886:	f000 80b9 	beq.w	80149fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801488a:	6810      	ldr	r0, [r2, #0]
 801488c:	af02      	add	r7, sp, #8
 801488e:	6851      	ldr	r1, [r2, #4]
 8014890:	c703      	stmia	r7!, {r0, r1}
 8014892:	6818      	ldr	r0, [r3, #0]
 8014894:	af04      	add	r7, sp, #16
 8014896:	6859      	ldr	r1, [r3, #4]
 8014898:	c703      	stmia	r7!, {r0, r1}
 801489a:	a802      	add	r0, sp, #8
 801489c:	f7f9 f9f4 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80148a0:	4621      	mov	r1, r4
 80148a2:	a804      	add	r0, sp, #16
 80148a4:	f7f9 fa18 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80148a8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80148ac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80148b0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80148b4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80148b8:	fb14 2103 	smlabb	r1, r4, r3, r2
 80148bc:	eb08 0401 	add.w	r4, r8, r1
 80148c0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80148c4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80148c8:	440a      	add	r2, r1
 80148ca:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80148ce:	f8ad 2010 	strh.w	r2, [sp, #16]
 80148d2:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80148d6:	4413      	add	r3, r2
 80148d8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80148dc:	4b49      	ldr	r3, [pc, #292]	; (8014a04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80148de:	6818      	ldr	r0, [r3, #0]
 80148e0:	6803      	ldr	r3, [r0, #0]
 80148e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80148e4:	4798      	blx	r3
 80148e6:	4b48      	ldr	r3, [pc, #288]	; (8014a08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80148e8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80148ec:	2eff      	cmp	r6, #255	; 0xff
 80148ee:	881a      	ldrh	r2, [r3, #0]
 80148f0:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80148f4:	fb02 c101 	mla	r1, r2, r1, ip
 80148f8:	fb02 f207 	mul.w	r2, r2, r7
 80148fc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8014900:	f105 0104 	add.w	r1, r5, #4
 8014904:	461d      	mov	r5, r3
 8014906:	d05a      	beq.n	80149be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8014908:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801490c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8014910:	b2b6      	uxth	r6, r6
 8014912:	9301      	str	r3, [sp, #4]
 8014914:	fa1f fe8e 	uxth.w	lr, lr
 8014918:	4282      	cmp	r2, r0
 801491a:	d96a      	bls.n	80149f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801491c:	eb00 0b0a 	add.w	fp, r0, sl
 8014920:	4583      	cmp	fp, r0
 8014922:	d940      	bls.n	80149a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8014924:	8805      	ldrh	r5, [r0, #0]
 8014926:	f814 3b01 	ldrb.w	r3, [r4], #1
 801492a:	122f      	asrs	r7, r5, #8
 801492c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8014930:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014934:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014938:	00ed      	lsls	r5, r5, #3
 801493a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801493e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014942:	fb17 f70e 	smulbb	r7, r7, lr
 8014946:	b2ed      	uxtb	r5, r5
 8014948:	fb19 f90e 	smulbb	r9, r9, lr
 801494c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014950:	fb15 f50e 	smulbb	r5, r5, lr
 8014954:	fb0c 7c06 	mla	ip, ip, r6, r7
 8014958:	10df      	asrs	r7, r3, #3
 801495a:	00db      	lsls	r3, r3, #3
 801495c:	fa1f fc8c 	uxth.w	ip, ip
 8014960:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014964:	b2db      	uxtb	r3, r3
 8014966:	fb07 9706 	mla	r7, r7, r6, r9
 801496a:	f10c 0901 	add.w	r9, ip, #1
 801496e:	fb03 5306 	mla	r3, r3, r6, r5
 8014972:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8014976:	b29b      	uxth	r3, r3
 8014978:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801497c:	b2bf      	uxth	r7, r7
 801497e:	f103 0c01 	add.w	ip, r3, #1
 8014982:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014986:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801498a:	ea4c 0c09 	orr.w	ip, ip, r9
 801498e:	f107 0901 	add.w	r9, r7, #1
 8014992:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8014996:	097f      	lsrs	r7, r7, #5
 8014998:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801499c:	ea4c 0c07 	orr.w	ip, ip, r7
 80149a0:	f820 cb02 	strh.w	ip, [r0], #2
 80149a4:	e7bc      	b.n	8014920 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80149a6:	9b01      	ldr	r3, [sp, #4]
 80149a8:	881b      	ldrh	r3, [r3, #0]
 80149aa:	eba3 0308 	sub.w	r3, r3, r8
 80149ae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80149b2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80149b6:	eba3 0308 	sub.w	r3, r3, r8
 80149ba:	441c      	add	r4, r3
 80149bc:	e7ac      	b.n	8014918 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80149be:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80149c2:	4282      	cmp	r2, r0
 80149c4:	d915      	bls.n	80149f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80149c6:	eb00 060a 	add.w	r6, r0, sl
 80149ca:	4286      	cmp	r6, r0
 80149cc:	d906      	bls.n	80149dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80149ce:	f814 3b01 	ldrb.w	r3, [r4], #1
 80149d2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80149d6:	f820 3b02 	strh.w	r3, [r0], #2
 80149da:	e7f6      	b.n	80149ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80149dc:	882b      	ldrh	r3, [r5, #0]
 80149de:	eba3 0308 	sub.w	r3, r3, r8
 80149e2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80149e6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80149ea:	eba3 0308 	sub.w	r3, r3, r8
 80149ee:	441c      	add	r4, r3
 80149f0:	e7e7      	b.n	80149c2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80149f2:	4b04      	ldr	r3, [pc, #16]	; (8014a04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80149f4:	6818      	ldr	r0, [r3, #0]
 80149f6:	6803      	ldr	r3, [r0, #0]
 80149f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80149fa:	4798      	blx	r3
 80149fc:	b007      	add	sp, #28
 80149fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a02:	bf00      	nop
 8014a04:	2400b060 	.word	0x2400b060
 8014a08:	2400b05a 	.word	0x2400b05a

08014a0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8014a0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014a10:	b091      	sub	sp, #68	; 0x44
 8014a12:	4680      	mov	r8, r0
 8014a14:	460f      	mov	r7, r1
 8014a16:	4614      	mov	r4, r2
 8014a18:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8014a1c:	2d00      	cmp	r5, #0
 8014a1e:	d051      	beq.n	8014ac4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8014a20:	6810      	ldr	r0, [r2, #0]
 8014a22:	ae0c      	add	r6, sp, #48	; 0x30
 8014a24:	6851      	ldr	r1, [r2, #4]
 8014a26:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8014c28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8014a2a:	c603      	stmia	r6!, {r0, r1}
 8014a2c:	6818      	ldr	r0, [r3, #0]
 8014a2e:	ae0e      	add	r6, sp, #56	; 0x38
 8014a30:	6859      	ldr	r1, [r3, #4]
 8014a32:	c603      	stmia	r6!, {r0, r1}
 8014a34:	a80c      	add	r0, sp, #48	; 0x30
 8014a36:	f7f9 f927 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014a3a:	4621      	mov	r1, r4
 8014a3c:	a80e      	add	r0, sp, #56	; 0x38
 8014a3e:	f7f9 f94b 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014a42:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8014a46:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014a4a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014a4e:	f8d9 0000 	ldr.w	r0, [r9]
 8014a52:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014a56:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8014a5a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8014a5e:	eb08 0401 	add.w	r4, r8, r1
 8014a62:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8014a66:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8014c2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8014a6a:	440a      	add	r2, r1
 8014a6c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8014a70:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014a74:	4413      	add	r3, r2
 8014a76:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8014a7a:	6803      	ldr	r3, [r0, #0]
 8014a7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014a7e:	4798      	blx	r3
 8014a80:	f010 0f80 	tst.w	r0, #128	; 0x80
 8014a84:	f8d9 0000 	ldr.w	r0, [r9]
 8014a88:	d01f      	beq.n	8014aca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8014a8a:	2200      	movs	r2, #0
 8014a8c:	6801      	ldr	r1, [r0, #0]
 8014a8e:	b2b6      	uxth	r6, r6
 8014a90:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8014a94:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8014a98:	220b      	movs	r2, #11
 8014a9a:	9207      	str	r2, [sp, #28]
 8014a9c:	f8b8 2000 	ldrh.w	r2, [r8]
 8014aa0:	9601      	str	r6, [sp, #4]
 8014aa2:	9206      	str	r2, [sp, #24]
 8014aa4:	2201      	movs	r2, #1
 8014aa6:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8014aaa:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8014aae:	9203      	str	r2, [sp, #12]
 8014ab0:	fa1f f28a 	uxth.w	r2, sl
 8014ab4:	9202      	str	r2, [sp, #8]
 8014ab6:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8014aba:	9200      	str	r2, [sp, #0]
 8014abc:	463a      	mov	r2, r7
 8014abe:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8014ac0:	4621      	mov	r1, r4
 8014ac2:	47a8      	blx	r5
 8014ac4:	b011      	add	sp, #68	; 0x44
 8014ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014aca:	6803      	ldr	r3, [r0, #0]
 8014acc:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8014ad0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014ad2:	4798      	blx	r3
 8014ad4:	f8b8 2000 	ldrh.w	r2, [r8]
 8014ad8:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8014adc:	2dff      	cmp	r5, #255	; 0xff
 8014ade:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8014ae2:	fb0a fa02 	mul.w	sl, sl, r2
 8014ae6:	fb02 1303 	mla	r3, r2, r3, r1
 8014aea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014aee:	d062      	beq.n	8014bb6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8014af0:	ea6f 0c05 	mvn.w	ip, r5
 8014af4:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8014af8:	b2ad      	uxth	r5, r5
 8014afa:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8014afe:	fa5f fc8c 	uxtb.w	ip, ip
 8014b02:	930a      	str	r3, [sp, #40]	; 0x28
 8014b04:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014b06:	4298      	cmp	r0, r3
 8014b08:	f080 8085 	bcs.w	8014c16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014b0c:	eb00 0b09 	add.w	fp, r0, r9
 8014b10:	4558      	cmp	r0, fp
 8014b12:	d246      	bcs.n	8014ba2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8014b14:	f814 eb01 	ldrb.w	lr, [r4], #1
 8014b18:	2303      	movs	r3, #3
 8014b1a:	2204      	movs	r2, #4
 8014b1c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8014b20:	8803      	ldrh	r3, [r0, #0]
 8014b22:	eb07 0a0e 	add.w	sl, r7, lr
 8014b26:	1219      	asrs	r1, r3, #8
 8014b28:	10da      	asrs	r2, r3, #3
 8014b2a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014b2e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8014b32:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014b36:	00db      	lsls	r3, r3, #3
 8014b38:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014b3c:	fb18 f805 	smulbb	r8, r8, r5
 8014b40:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8014b44:	fb1e fe05 	smulbb	lr, lr, r5
 8014b48:	b2db      	uxtb	r3, r3
 8014b4a:	fb01 810c 	mla	r1, r1, ip, r8
 8014b4e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8014b52:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8014b56:	fb18 f805 	smulbb	r8, r8, r5
 8014b5a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8014b5e:	b289      	uxth	r1, r1
 8014b60:	fb02 820c 	mla	r2, r2, ip, r8
 8014b64:	fb03 e30c 	mla	r3, r3, ip, lr
 8014b68:	f101 0801 	add.w	r8, r1, #1
 8014b6c:	b292      	uxth	r2, r2
 8014b6e:	b29b      	uxth	r3, r3
 8014b70:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8014b74:	f102 0801 	add.w	r8, r2, #1
 8014b78:	f103 0e01 	add.w	lr, r3, #1
 8014b7c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8014b80:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8014b84:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8014b88:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014b8c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014b90:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014b94:	ea4e 0101 	orr.w	r1, lr, r1
 8014b98:	ea41 0108 	orr.w	r1, r1, r8
 8014b9c:	f820 1b02 	strh.w	r1, [r0], #2
 8014ba0:	e7b6      	b.n	8014b10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8014ba2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014ba4:	881b      	ldrh	r3, [r3, #0]
 8014ba6:	1b9b      	subs	r3, r3, r6
 8014ba8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014bac:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014bb0:	1b9b      	subs	r3, r3, r6
 8014bb2:	441c      	add	r4, r3
 8014bb4:	e7a6      	b.n	8014b04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8014bb6:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8014bba:	2203      	movs	r2, #3
 8014bbc:	2504      	movs	r5, #4
 8014bbe:	4919      	ldr	r1, [pc, #100]	; (8014c24 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8014bc0:	4550      	cmp	r0, sl
 8014bc2:	d228      	bcs.n	8014c16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8014bc4:	eb00 0c09 	add.w	ip, r0, r9
 8014bc8:	4560      	cmp	r0, ip
 8014bca:	4623      	mov	r3, r4
 8014bcc:	d219      	bcs.n	8014c02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8014bce:	f893 e000 	ldrb.w	lr, [r3]
 8014bd2:	3401      	adds	r4, #1
 8014bd4:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8014bd8:	eb07 0b0e 	add.w	fp, r7, lr
 8014bdc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8014be0:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8014be4:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014be8:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8014bec:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014bf0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014bf4:	ea43 030b 	orr.w	r3, r3, fp
 8014bf8:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8014bfc:	f820 3b02 	strh.w	r3, [r0], #2
 8014c00:	e7e2      	b.n	8014bc8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8014c02:	f8b8 3000 	ldrh.w	r3, [r8]
 8014c06:	1b9b      	subs	r3, r3, r6
 8014c08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014c0c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8014c10:	1b9b      	subs	r3, r3, r6
 8014c12:	441c      	add	r4, r3
 8014c14:	e7d4      	b.n	8014bc0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8014c16:	4b04      	ldr	r3, [pc, #16]	; (8014c28 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8014c18:	6818      	ldr	r0, [r3, #0]
 8014c1a:	6803      	ldr	r3, [r0, #0]
 8014c1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014c1e:	4798      	blx	r3
 8014c20:	e750      	b.n	8014ac4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8014c22:	bf00      	nop
 8014c24:	fffff800 	.word	0xfffff800
 8014c28:	2400b060 	.word	0x2400b060
 8014c2c:	2400b05a 	.word	0x2400b05a

08014c30 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8014c30:	b430      	push	{r4, r5}
 8014c32:	780d      	ldrb	r5, [r1, #0]
 8014c34:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8014c38:	2d01      	cmp	r5, #1
 8014c3a:	d00a      	beq.n	8014c52 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8014c3c:	d305      	bcc.n	8014c4a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8014c3e:	2d02      	cmp	r5, #2
 8014c40:	d10b      	bne.n	8014c5a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8014c42:	9402      	str	r4, [sp, #8]
 8014c44:	bc30      	pop	{r4, r5}
 8014c46:	f7ff be15 	b.w	8014874 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8014c4a:	9402      	str	r4, [sp, #8]
 8014c4c:	bc30      	pop	{r4, r5}
 8014c4e:	f7ff bd2b 	b.w	80146a8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8014c52:	9402      	str	r4, [sp, #8]
 8014c54:	bc30      	pop	{r4, r5}
 8014c56:	f7ff bed9 	b.w	8014a0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8014c5a:	bc30      	pop	{r4, r5}
 8014c5c:	4770      	bx	lr
	...

08014c60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8014c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c64:	b087      	sub	sp, #28
 8014c66:	4604      	mov	r4, r0
 8014c68:	460e      	mov	r6, r1
 8014c6a:	6810      	ldr	r0, [r2, #0]
 8014c6c:	6851      	ldr	r1, [r2, #4]
 8014c6e:	ad02      	add	r5, sp, #8
 8014c70:	4617      	mov	r7, r2
 8014c72:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8014c76:	f8df 9230 	ldr.w	r9, [pc, #560]	; 8014ea8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8014c7a:	c503      	stmia	r5!, {r0, r1}
 8014c7c:	6818      	ldr	r0, [r3, #0]
 8014c7e:	ad04      	add	r5, sp, #16
 8014c80:	6859      	ldr	r1, [r3, #4]
 8014c82:	c503      	stmia	r5!, {r0, r1}
 8014c84:	a802      	add	r0, sp, #8
 8014c86:	f7f8 ffff 	bl	800dc88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014c8a:	4639      	mov	r1, r7
 8014c8c:	a804      	add	r0, sp, #16
 8014c8e:	f7f9 f823 	bl	800dcd8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8014c92:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014c96:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014c9a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8014c9e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8014ca2:	fb11 2103 	smlabb	r1, r1, r3, r2
 8014ca6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8014caa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8014cae:	440e      	add	r6, r1
 8014cb0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014cb4:	440a      	add	r2, r1
 8014cb6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8014cba:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8014cbe:	4413      	add	r3, r2
 8014cc0:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014cc4:	4b77      	ldr	r3, [pc, #476]	; (8014ea4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8014cc6:	6818      	ldr	r0, [r3, #0]
 8014cc8:	6803      	ldr	r3, [r0, #0]
 8014cca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014ccc:	4798      	blx	r3
 8014cce:	f8b9 b000 	ldrh.w	fp, [r9]
 8014cd2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014cd6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8014cda:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8014cde:	fb05 f50b 	mul.w	r5, r5, fp
 8014ce2:	fb0b 2303 	mla	r3, fp, r3, r2
 8014ce6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014cea:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8014cee:	9300      	str	r3, [sp, #0]
 8014cf0:	d069      	beq.n	8014dc6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8014cf2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8014cf6:	4558      	cmp	r0, fp
 8014cf8:	f080 80cc 	bcs.w	8014e94 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014cfc:	9b00      	ldr	r3, [sp, #0]
 8014cfe:	4631      	mov	r1, r6
 8014d00:	18c3      	adds	r3, r0, r3
 8014d02:	9301      	str	r3, [sp, #4]
 8014d04:	9b01      	ldr	r3, [sp, #4]
 8014d06:	4298      	cmp	r0, r3
 8014d08:	d24f      	bcs.n	8014daa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8014d0a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8014d0e:	2a00      	cmp	r2, #0
 8014d10:	d048      	beq.n	8014da4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014d12:	fb0a f202 	mul.w	r2, sl, r2
 8014d16:	1c53      	adds	r3, r2, #1
 8014d18:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014d1c:	121b      	asrs	r3, r3, #8
 8014d1e:	d041      	beq.n	8014da4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8014d20:	8802      	ldrh	r2, [r0, #0]
 8014d22:	b29e      	uxth	r6, r3
 8014d24:	f8b4 c000 	ldrh.w	ip, [r4]
 8014d28:	43db      	mvns	r3, r3
 8014d2a:	1215      	asrs	r5, r2, #8
 8014d2c:	b2db      	uxtb	r3, r3
 8014d2e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8014d32:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8014d36:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8014d3a:	fb15 f503 	smulbb	r5, r5, r3
 8014d3e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014d42:	00d2      	lsls	r2, r2, #3
 8014d44:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8014d48:	fb07 5706 	mla	r7, r7, r6, r5
 8014d4c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014d50:	b2d2      	uxtb	r2, r2
 8014d52:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014d56:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8014d5a:	fb1e fe03 	smulbb	lr, lr, r3
 8014d5e:	b2bf      	uxth	r7, r7
 8014d60:	fb12 f203 	smulbb	r2, r2, r3
 8014d64:	fa5f fc8c 	uxtb.w	ip, ip
 8014d68:	fb05 e506 	mla	r5, r5, r6, lr
 8014d6c:	f107 0e01 	add.w	lr, r7, #1
 8014d70:	fb0c 2c06 	mla	ip, ip, r6, r2
 8014d74:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8014d78:	fa1f fc8c 	uxth.w	ip, ip
 8014d7c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8014d80:	b2ad      	uxth	r5, r5
 8014d82:	f10c 0701 	add.w	r7, ip, #1
 8014d86:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8014d8a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014d8e:	ea47 070e 	orr.w	r7, r7, lr
 8014d92:	f105 0e01 	add.w	lr, r5, #1
 8014d96:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8014d9a:	096d      	lsrs	r5, r5, #5
 8014d9c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8014da0:	432f      	orrs	r7, r5
 8014da2:	8007      	strh	r7, [r0, #0]
 8014da4:	3002      	adds	r0, #2
 8014da6:	3402      	adds	r4, #2
 8014da8:	e7ac      	b.n	8014d04 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8014daa:	f8b9 3000 	ldrh.w	r3, [r9]
 8014dae:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8014db2:	eba3 0308 	sub.w	r3, r3, r8
 8014db6:	eba6 0608 	sub.w	r6, r6, r8
 8014dba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014dbe:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014dc2:	440e      	add	r6, r1
 8014dc4:	e797      	b.n	8014cf6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8014dc6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8014dca:	42a8      	cmp	r0, r5
 8014dcc:	d262      	bcs.n	8014e94 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8014dce:	9b00      	ldr	r3, [sp, #0]
 8014dd0:	4631      	mov	r1, r6
 8014dd2:	eb00 0b03 	add.w	fp, r0, r3
 8014dd6:	4558      	cmp	r0, fp
 8014dd8:	d24e      	bcs.n	8014e78 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8014dda:	f811 3b01 	ldrb.w	r3, [r1], #1
 8014dde:	b12b      	cbz	r3, 8014dec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8014de0:	2bff      	cmp	r3, #255	; 0xff
 8014de2:	f8b4 e000 	ldrh.w	lr, [r4]
 8014de6:	d104      	bne.n	8014df2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8014de8:	f8a0 e000 	strh.w	lr, [r0]
 8014dec:	3002      	adds	r0, #2
 8014dee:	3402      	adds	r4, #2
 8014df0:	e7f1      	b.n	8014dd6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8014df2:	8802      	ldrh	r2, [r0, #0]
 8014df4:	b29f      	uxth	r7, r3
 8014df6:	43db      	mvns	r3, r3
 8014df8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014dfc:	1216      	asrs	r6, r2, #8
 8014dfe:	b2db      	uxtb	r3, r3
 8014e00:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014e04:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8014e08:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8014e0c:	00d2      	lsls	r2, r2, #3
 8014e0e:	fb16 f603 	smulbb	r6, r6, r3
 8014e12:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8014e16:	b2d2      	uxtb	r2, r2
 8014e18:	fb0c 6c07 	mla	ip, ip, r7, r6
 8014e1c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014e20:	fb1a fa03 	smulbb	sl, sl, r3
 8014e24:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014e28:	fa1f fc8c 	uxth.w	ip, ip
 8014e2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014e30:	fb12 f303 	smulbb	r3, r2, r3
 8014e34:	fa5f fe8e 	uxtb.w	lr, lr
 8014e38:	fb06 a607 	mla	r6, r6, r7, sl
 8014e3c:	f10c 0201 	add.w	r2, ip, #1
 8014e40:	fb0e 3307 	mla	r3, lr, r7, r3
 8014e44:	b2b6      	uxth	r6, r6
 8014e46:	b29b      	uxth	r3, r3
 8014e48:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014e4c:	f106 0a01 	add.w	sl, r6, #1
 8014e50:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8014e54:	f103 0c01 	add.w	ip, r3, #1
 8014e58:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8014e5c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8014e60:	0976      	lsrs	r6, r6, #5
 8014e62:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8014e66:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014e6a:	ea4c 0c02 	orr.w	ip, ip, r2
 8014e6e:	ea4c 0c06 	orr.w	ip, ip, r6
 8014e72:	f8a0 c000 	strh.w	ip, [r0]
 8014e76:	e7b9      	b.n	8014dec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8014e78:	f8b9 3000 	ldrh.w	r3, [r9]
 8014e7c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8014e80:	eba3 0308 	sub.w	r3, r3, r8
 8014e84:	eba6 0608 	sub.w	r6, r6, r8
 8014e88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8014e8c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8014e90:	440e      	add	r6, r1
 8014e92:	e79a      	b.n	8014dca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8014e94:	4b03      	ldr	r3, [pc, #12]	; (8014ea4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8014e96:	6818      	ldr	r0, [r3, #0]
 8014e98:	6803      	ldr	r3, [r0, #0]
 8014e9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014e9c:	4798      	blx	r3
 8014e9e:	b007      	add	sp, #28
 8014ea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014ea4:	2400b060 	.word	0x2400b060
 8014ea8:	2400b05a 	.word	0x2400b05a

08014eac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8014eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014eb0:	b089      	sub	sp, #36	; 0x24
 8014eb2:	4682      	mov	sl, r0
 8014eb4:	460f      	mov	r7, r1
 8014eb6:	4691      	mov	r9, r2
 8014eb8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8014ebc:	4698      	mov	r8, r3
 8014ebe:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014ec0:	2e00      	cmp	r6, #0
 8014ec2:	d036      	beq.n	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8014ec4:	4608      	mov	r0, r1
 8014ec6:	f7fc f861 	bl	8010f8c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014eca:	4605      	mov	r5, r0
 8014ecc:	4638      	mov	r0, r7
 8014ece:	f7fc f891 	bl	8010ff4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014ed2:	f8ad 000e 	strh.w	r0, [sp, #14]
 8014ed6:	4638      	mov	r0, r7
 8014ed8:	f8ad 9008 	strh.w	r9, [sp, #8]
 8014edc:	f8ad 500c 	strh.w	r5, [sp, #12]
 8014ee0:	f8ad 800a 	strh.w	r8, [sp, #10]
 8014ee4:	f7fc f93e 	bl	8011164 <_ZNK8touchgfx6Bitmap7getDataEv>
 8014ee8:	4605      	mov	r5, r0
 8014eea:	4638      	mov	r0, r7
 8014eec:	f7fc f96a 	bl	80111c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8014ef0:	4681      	mov	r9, r0
 8014ef2:	4638      	mov	r0, r7
 8014ef4:	f7fc f9ba 	bl	801126c <_ZNK8touchgfx6Bitmap9getFormatEv>
 8014ef8:	280b      	cmp	r0, #11
 8014efa:	d81a      	bhi.n	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8014efc:	e8df f000 	tbb	[pc, r0]
 8014f00:	1906aebd 	.word	0x1906aebd
 8014f04:	19191919 	.word	0x19191919
 8014f08:	b5191919 	.word	0xb5191919
 8014f0c:	4bb0      	ldr	r3, [pc, #704]	; (80151d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8014f0e:	6818      	ldr	r0, [r3, #0]
 8014f10:	6803      	ldr	r3, [r0, #0]
 8014f12:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014f14:	4798      	blx	r3
 8014f16:	2eff      	cmp	r6, #255	; 0xff
 8014f18:	d121      	bne.n	8014f5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8014f1a:	0683      	lsls	r3, r0, #26
 8014f1c:	d41f      	bmi.n	8014f5e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8014f1e:	4638      	mov	r0, r7
 8014f20:	f7fc f8e8 	bl	80110f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8014f24:	b940      	cbnz	r0, 8014f38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8014f26:	4623      	mov	r3, r4
 8014f28:	aa02      	add	r2, sp, #8
 8014f2a:	4629      	mov	r1, r5
 8014f2c:	4650      	mov	r0, sl
 8014f2e:	f7ff fa2f 	bl	8014390 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8014f32:	b009      	add	sp, #36	; 0x24
 8014f34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f38:	f10d 0818 	add.w	r8, sp, #24
 8014f3c:	4639      	mov	r1, r7
 8014f3e:	af04      	add	r7, sp, #16
 8014f40:	4640      	mov	r0, r8
 8014f42:	f7fc f88b 	bl	801105c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8014f46:	e898 0003 	ldmia.w	r8, {r0, r1}
 8014f4a:	e887 0003 	stmia.w	r7, {r0, r1}
 8014f4e:	4638      	mov	r0, r7
 8014f50:	4621      	mov	r1, r4
 8014f52:	f7f5 febd 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 8014f56:	4638      	mov	r0, r7
 8014f58:	f7f5 fefd 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014f5c:	b130      	cbz	r0, 8014f6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8014f5e:	4633      	mov	r3, r6
 8014f60:	4622      	mov	r2, r4
 8014f62:	a902      	add	r1, sp, #8
 8014f64:	4628      	mov	r0, r5
 8014f66:	f7ff f92d 	bl	80141c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014f6a:	e7e2      	b.n	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8014f6c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014f70:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8014f74:	4293      	cmp	r3, r2
 8014f76:	dd12      	ble.n	8014f9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8014f78:	1a9b      	subs	r3, r3, r2
 8014f7a:	f9b4 0000 	ldrsh.w	r0, [r4]
 8014f7e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8014f82:	f8ad 0018 	strh.w	r0, [sp, #24]
 8014f86:	4628      	mov	r0, r5
 8014f88:	f8ad 201a 	strh.w	r2, [sp, #26]
 8014f8c:	4642      	mov	r2, r8
 8014f8e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8014f92:	a902      	add	r1, sp, #8
 8014f94:	f8ad 301e 	strh.w	r3, [sp, #30]
 8014f98:	4633      	mov	r3, r6
 8014f9a:	f7ff f913 	bl	80141c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014f9e:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8014fa2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8014fa6:	4293      	cmp	r3, r2
 8014fa8:	dd12      	ble.n	8014fd0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8014faa:	1a9b      	subs	r3, r3, r2
 8014fac:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8014fb0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8014fb4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8014fb8:	4642      	mov	r2, r8
 8014fba:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014fbe:	4628      	mov	r0, r5
 8014fc0:	f8ad 301c 	strh.w	r3, [sp, #28]
 8014fc4:	23ff      	movs	r3, #255	; 0xff
 8014fc6:	f8ad 101e 	strh.w	r1, [sp, #30]
 8014fca:	a902      	add	r1, sp, #8
 8014fcc:	f7ff f8fa 	bl	80141c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8014fd0:	463b      	mov	r3, r7
 8014fd2:	aa02      	add	r2, sp, #8
 8014fd4:	4629      	mov	r1, r5
 8014fd6:	4650      	mov	r0, sl
 8014fd8:	f7ff f9da 	bl	8014390 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8014fdc:	88a2      	ldrh	r2, [r4, #4]
 8014fde:	8823      	ldrh	r3, [r4, #0]
 8014fe0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8014fe4:	4413      	add	r3, r2
 8014fe6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8014fea:	440a      	add	r2, r1
 8014fec:	b29b      	uxth	r3, r3
 8014fee:	b292      	uxth	r2, r2
 8014ff0:	b218      	sxth	r0, r3
 8014ff2:	b211      	sxth	r1, r2
 8014ff4:	4288      	cmp	r0, r1
 8014ff6:	dd12      	ble.n	801501e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8014ff8:	1a9b      	subs	r3, r3, r2
 8014ffa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8014ffe:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8015002:	4642      	mov	r2, r8
 8015004:	f8ad 1018 	strh.w	r1, [sp, #24]
 8015008:	a902      	add	r1, sp, #8
 801500a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801500e:	23ff      	movs	r3, #255	; 0xff
 8015010:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015014:	4628      	mov	r0, r5
 8015016:	f8ad 601a 	strh.w	r6, [sp, #26]
 801501a:	f7ff f8d3 	bl	80141c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801501e:	88e2      	ldrh	r2, [r4, #6]
 8015020:	8863      	ldrh	r3, [r4, #2]
 8015022:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015026:	4413      	add	r3, r2
 8015028:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801502c:	440a      	add	r2, r1
 801502e:	b29b      	uxth	r3, r3
 8015030:	b292      	uxth	r2, r2
 8015032:	b218      	sxth	r0, r3
 8015034:	b211      	sxth	r1, r2
 8015036:	4288      	cmp	r0, r1
 8015038:	f77f af7b 	ble.w	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801503c:	1a9b      	subs	r3, r3, r2
 801503e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8015042:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015046:	4642      	mov	r2, r8
 8015048:	f8ad 301e 	strh.w	r3, [sp, #30]
 801504c:	23ff      	movs	r3, #255	; 0xff
 801504e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8015052:	f8ad 101a 	strh.w	r1, [sp, #26]
 8015056:	f8ad 001c 	strh.w	r0, [sp, #28]
 801505a:	e782      	b.n	8014f62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 801505c:	4633      	mov	r3, r6
 801505e:	4622      	mov	r2, r4
 8015060:	a902      	add	r1, sp, #8
 8015062:	4628      	mov	r0, r5
 8015064:	f7ff fa04 	bl	8014470 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8015068:	e763      	b.n	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801506a:	9600      	str	r6, [sp, #0]
 801506c:	4623      	mov	r3, r4
 801506e:	aa02      	add	r2, sp, #8
 8015070:	4649      	mov	r1, r9
 8015072:	4628      	mov	r0, r5
 8015074:	f7ff fddc 	bl	8014c30 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8015078:	e75b      	b.n	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801507a:	4638      	mov	r0, r7
 801507c:	f7fc f83a 	bl	80110f4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8015080:	b950      	cbnz	r0, 8015098 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8015082:	f8da 3000 	ldr.w	r3, [sl]
 8015086:	aa02      	add	r2, sp, #8
 8015088:	4629      	mov	r1, r5
 801508a:	e9cd 6000 	strd	r6, r0, [sp]
 801508e:	4650      	mov	r0, sl
 8015090:	68de      	ldr	r6, [r3, #12]
 8015092:	4623      	mov	r3, r4
 8015094:	47b0      	blx	r6
 8015096:	e74c      	b.n	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8015098:	f10d 0818 	add.w	r8, sp, #24
 801509c:	4639      	mov	r1, r7
 801509e:	af04      	add	r7, sp, #16
 80150a0:	4640      	mov	r0, r8
 80150a2:	f7fb ffdb 	bl	801105c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80150a6:	e898 0003 	ldmia.w	r8, {r0, r1}
 80150aa:	e887 0003 	stmia.w	r7, {r0, r1}
 80150ae:	4638      	mov	r0, r7
 80150b0:	4621      	mov	r1, r4
 80150b2:	f7f5 fe0d 	bl	800acd0 <_ZN8touchgfx4RectaNERKS0_>
 80150b6:	4638      	mov	r0, r7
 80150b8:	f7f5 fe4d 	bl	800ad56 <_ZNK8touchgfx4Rect7isEmptyEv>
 80150bc:	b138      	cbz	r0, 80150ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80150be:	4623      	mov	r3, r4
 80150c0:	9600      	str	r6, [sp, #0]
 80150c2:	aa02      	add	r2, sp, #8
 80150c4:	4649      	mov	r1, r9
 80150c6:	4628      	mov	r0, r5
 80150c8:	f7ff fdca 	bl	8014c60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80150cc:	e731      	b.n	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80150ce:	f8da 3000 	ldr.w	r3, [sl]
 80150d2:	aa02      	add	r2, sp, #8
 80150d4:	4629      	mov	r1, r5
 80150d6:	e9cd 6000 	strd	r6, r0, [sp]
 80150da:	4650      	mov	r0, sl
 80150dc:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 80150e0:	463b      	mov	r3, r7
 80150e2:	47d8      	blx	fp
 80150e4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80150e8:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80150ec:	4293      	cmp	r3, r2
 80150ee:	dd13      	ble.n	8015118 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 80150f0:	f9b4 0000 	ldrsh.w	r0, [r4]
 80150f4:	1a9b      	subs	r3, r3, r2
 80150f6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80150fa:	f8ad 0018 	strh.w	r0, [sp, #24]
 80150fe:	4628      	mov	r0, r5
 8015100:	f8ad 201a 	strh.w	r2, [sp, #26]
 8015104:	aa02      	add	r2, sp, #8
 8015106:	f8ad 101c 	strh.w	r1, [sp, #28]
 801510a:	4649      	mov	r1, r9
 801510c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8015110:	4643      	mov	r3, r8
 8015112:	9600      	str	r6, [sp, #0]
 8015114:	f7ff fda4 	bl	8014c60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015118:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801511c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015120:	4293      	cmp	r3, r2
 8015122:	dd13      	ble.n	801514c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8015124:	1a9b      	subs	r3, r3, r2
 8015126:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801512a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801512e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015132:	aa02      	add	r2, sp, #8
 8015134:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015138:	4628      	mov	r0, r5
 801513a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801513e:	4643      	mov	r3, r8
 8015140:	f8ad 101e 	strh.w	r1, [sp, #30]
 8015144:	4649      	mov	r1, r9
 8015146:	9600      	str	r6, [sp, #0]
 8015148:	f7ff fd8a 	bl	8014c60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801514c:	88a2      	ldrh	r2, [r4, #4]
 801514e:	8823      	ldrh	r3, [r4, #0]
 8015150:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8015154:	4413      	add	r3, r2
 8015156:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801515a:	440a      	add	r2, r1
 801515c:	b29b      	uxth	r3, r3
 801515e:	b292      	uxth	r2, r2
 8015160:	b218      	sxth	r0, r3
 8015162:	b211      	sxth	r1, r2
 8015164:	4288      	cmp	r0, r1
 8015166:	dd13      	ble.n	8015190 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8015168:	1a9b      	subs	r3, r3, r2
 801516a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801516e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8015172:	aa02      	add	r2, sp, #8
 8015174:	f8ad 1018 	strh.w	r1, [sp, #24]
 8015178:	4649      	mov	r1, r9
 801517a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801517e:	4643      	mov	r3, r8
 8015180:	f8ad 001e 	strh.w	r0, [sp, #30]
 8015184:	4628      	mov	r0, r5
 8015186:	9600      	str	r6, [sp, #0]
 8015188:	f8ad 701a 	strh.w	r7, [sp, #26]
 801518c:	f7ff fd68 	bl	8014c60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8015190:	88e2      	ldrh	r2, [r4, #6]
 8015192:	8863      	ldrh	r3, [r4, #2]
 8015194:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8015198:	4413      	add	r3, r2
 801519a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801519e:	440a      	add	r2, r1
 80151a0:	b29b      	uxth	r3, r3
 80151a2:	b292      	uxth	r2, r2
 80151a4:	b218      	sxth	r0, r3
 80151a6:	b211      	sxth	r1, r2
 80151a8:	4288      	cmp	r0, r1
 80151aa:	f77f aec2 	ble.w	8014f32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80151ae:	f9b4 7000 	ldrsh.w	r7, [r4]
 80151b2:	1a9b      	subs	r3, r3, r2
 80151b4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80151b8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80151bc:	4643      	mov	r3, r8
 80151be:	f8ad 7018 	strh.w	r7, [sp, #24]
 80151c2:	f8ad 101a 	strh.w	r1, [sp, #26]
 80151c6:	f8ad 001c 	strh.w	r0, [sp, #28]
 80151ca:	9600      	str	r6, [sp, #0]
 80151cc:	e779      	b.n	80150c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 80151ce:	bf00      	nop
 80151d0:	2400b060 	.word	0x2400b060

080151d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 80151d4:	b180      	cbz	r0, 80151f8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 80151d6:	2903      	cmp	r1, #3
 80151d8:	d81c      	bhi.n	8015214 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80151da:	e8df f001 	tbb	[pc, r1]
 80151de:	1d02      	.short	0x1d02
 80151e0:	1f08      	.short	0x1f08
 80151e2:	4b10      	ldr	r3, [pc, #64]	; (8015224 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80151e4:	8818      	ldrh	r0, [r3, #0]
 80151e6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80151ea:	4240      	negs	r0, r0
 80151ec:	4770      	bx	lr
 80151ee:	4b0d      	ldr	r3, [pc, #52]	; (8015224 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 80151f0:	8818      	ldrh	r0, [r3, #0]
 80151f2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80151f6:	4770      	bx	lr
 80151f8:	2903      	cmp	r1, #3
 80151fa:	d80b      	bhi.n	8015214 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80151fc:	a301      	add	r3, pc, #4	; (adr r3, 8015204 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80151fe:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8015202:	bf00      	nop
 8015204:	08015219 	.word	0x08015219
 8015208:	080151ef 	.word	0x080151ef
 801520c:	0801521d 	.word	0x0801521d
 8015210:	080151e3 	.word	0x080151e3
 8015214:	2000      	movs	r0, #0
 8015216:	4770      	bx	lr
 8015218:	2001      	movs	r0, #1
 801521a:	4770      	bx	lr
 801521c:	f04f 30ff 	mov.w	r0, #4294967295
 8015220:	4770      	bx	lr
 8015222:	bf00      	nop
 8015224:	2400b05a 	.word	0x2400b05a

08015228 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8015228:	b180      	cbz	r0, 801524c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801522a:	2903      	cmp	r1, #3
 801522c:	d81c      	bhi.n	8015268 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801522e:	e8df f001 	tbb	[pc, r1]
 8015232:	021d      	.short	0x021d
 8015234:	071f      	.short	0x071f
 8015236:	4b10      	ldr	r3, [pc, #64]	; (8015278 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015238:	8818      	ldrh	r0, [r3, #0]
 801523a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801523e:	4770      	bx	lr
 8015240:	4b0d      	ldr	r3, [pc, #52]	; (8015278 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8015242:	8818      	ldrh	r0, [r3, #0]
 8015244:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8015248:	4240      	negs	r0, r0
 801524a:	4770      	bx	lr
 801524c:	2903      	cmp	r1, #3
 801524e:	d80b      	bhi.n	8015268 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8015250:	a301      	add	r3, pc, #4	; (adr r3, 8015258 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8015252:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8015256:	bf00      	nop
 8015258:	08015237 	.word	0x08015237
 801525c:	08015271 	.word	0x08015271
 8015260:	08015241 	.word	0x08015241
 8015264:	0801526d 	.word	0x0801526d
 8015268:	2000      	movs	r0, #0
 801526a:	4770      	bx	lr
 801526c:	2001      	movs	r0, #1
 801526e:	4770      	bx	lr
 8015270:	f04f 30ff 	mov.w	r0, #4294967295
 8015274:	4770      	bx	lr
 8015276:	bf00      	nop
 8015278:	2400b05a 	.word	0x2400b05a

0801527c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801527c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015280:	b099      	sub	sp, #100	; 0x64
 8015282:	910b      	str	r1, [sp, #44]	; 0x2c
 8015284:	a914      	add	r1, sp, #80	; 0x50
 8015286:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801528a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801528e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8015292:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8015296:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801529a:	e881 000c 	stmia.w	r1, {r2, r3}
 801529e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80152a2:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80152a6:	9309      	str	r3, [sp, #36]	; 0x24
 80152a8:	f891 900d 	ldrb.w	r9, [r1, #13]
 80152ac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80152b0:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80152b4:	9310      	str	r3, [sp, #64]	; 0x40
 80152b6:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80152ba:	930c      	str	r3, [sp, #48]	; 0x30
 80152bc:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80152c0:	798f      	ldrb	r7, [r1, #6]
 80152c2:	431f      	orrs	r7, r3
 80152c4:	f000 8195 	beq.w	80155f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80152c8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80152cc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80152d0:	f891 9007 	ldrb.w	r9, [r1, #7]
 80152d4:	ea59 0903 	orrs.w	r9, r9, r3
 80152d8:	f000 818b 	beq.w	80155f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80152dc:	f991 3009 	ldrsb.w	r3, [r1, #9]
 80152e0:	b29b      	uxth	r3, r3
 80152e2:	2d00      	cmp	r5, #0
 80152e4:	f000 812e 	beq.w	8015544 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 80152e8:	1aed      	subs	r5, r5, r3
 80152ea:	b2ad      	uxth	r5, r5
 80152ec:	042b      	lsls	r3, r5, #16
 80152ee:	d502      	bpl.n	80152f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 80152f0:	1b64      	subs	r4, r4, r5
 80152f2:	2500      	movs	r5, #0
 80152f4:	b224      	sxth	r4, r4
 80152f6:	f9b2 1000 	ldrsh.w	r1, [r2]
 80152fa:	a814      	add	r0, sp, #80	; 0x50
 80152fc:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8015300:	428c      	cmp	r4, r1
 8015302:	b28b      	uxth	r3, r1
 8015304:	bfbf      	itttt	lt
 8015306:	18ed      	addlt	r5, r5, r3
 8015308:	1b2c      	sublt	r4, r5, r4
 801530a:	b2a5      	uxthlt	r5, r4
 801530c:	460c      	movlt	r4, r1
 801530e:	8891      	ldrh	r1, [r2, #4]
 8015310:	440b      	add	r3, r1
 8015312:	4621      	mov	r1, r4
 8015314:	b21b      	sxth	r3, r3
 8015316:	930f      	str	r3, [sp, #60]	; 0x3c
 8015318:	88d3      	ldrh	r3, [r2, #6]
 801531a:	8852      	ldrh	r2, [r2, #2]
 801531c:	4413      	add	r3, r2
 801531e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015320:	b21b      	sxth	r3, r3
 8015322:	930d      	str	r3, [sp, #52]	; 0x34
 8015324:	4bbd      	ldr	r3, [pc, #756]	; (801561c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8015326:	f893 b000 	ldrb.w	fp, [r3]
 801532a:	f10b 3cff 	add.w	ip, fp, #4294967295
 801532e:	f1dc 0300 	rsbs	r3, ip, #0
 8015332:	eb43 030c 	adc.w	r3, r3, ip
 8015336:	930e      	str	r3, [sp, #56]	; 0x38
 8015338:	4653      	mov	r3, sl
 801533a:	f7f8 fb20 	bl	800d97e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801533e:	4621      	mov	r1, r4
 8015340:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8015344:	4653      	mov	r3, sl
 8015346:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015348:	a814      	add	r0, sp, #80	; 0x50
 801534a:	f7f8 fb35 	bl	800d9b8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801534e:	a918      	add	r1, sp, #96	; 0x60
 8015350:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8015354:	a817      	add	r0, sp, #92	; 0x5c
 8015356:	f7f8 fc55 	bl	800dc04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801535a:	f1ba 0f00 	cmp.w	sl, #0
 801535e:	f040 80f4 	bne.w	801554a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8015362:	f1bb 0f01 	cmp.w	fp, #1
 8015366:	f040 80f8 	bne.w	801555a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801536a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801536c:	2b00      	cmp	r3, #0
 801536e:	f040 8145 	bne.w	80155fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8015372:	b2ba      	uxth	r2, r7
 8015374:	b905      	cbnz	r5, 8015378 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8015376:	b16e      	cbz	r6, 8015394 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8015378:	fb06 5302 	mla	r3, r6, r2, r5
 801537c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801537e:	4631      	mov	r1, r6
 8015380:	fb08 f303 	mul.w	r3, r8, r3
 8015384:	f003 0607 	and.w	r6, r3, #7
 8015388:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801538c:	9328      	str	r3, [sp, #160]	; 0xa0
 801538e:	eba9 0301 	sub.w	r3, r9, r1
 8015392:	930a      	str	r3, [sp, #40]	; 0x28
 8015394:	4651      	mov	r1, sl
 8015396:	980e      	ldr	r0, [sp, #56]	; 0x38
 8015398:	f7ff ff1c 	bl	80151d4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801539c:	4681      	mov	r9, r0
 801539e:	980e      	ldr	r0, [sp, #56]	; 0x38
 80153a0:	f7ff ff42 	bl	8015228 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80153a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80153a6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80153a8:	4683      	mov	fp, r0
 80153aa:	eba3 0a01 	sub.w	sl, r3, r1
 80153ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80153b0:	459a      	cmp	sl, r3
 80153b2:	bfa8      	it	ge
 80153b4:	469a      	movge	sl, r3
 80153b6:	f1ba 0f00 	cmp.w	sl, #0
 80153ba:	f340 811a 	ble.w	80155f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80153be:	1b64      	subs	r4, r4, r5
 80153c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80153c2:	1b1c      	subs	r4, r3, r4
 80153c4:	42bc      	cmp	r4, r7
 80153c6:	bfd4      	ite	le
 80153c8:	ebc5 0504 	rsble	r5, r5, r4
 80153cc:	ebc5 0507 	rsbgt	r5, r5, r7
 80153d0:	2d00      	cmp	r5, #0
 80153d2:	f340 810e 	ble.w	80155f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80153d6:	1b52      	subs	r2, r2, r5
 80153d8:	fb08 f302 	mul.w	r3, r8, r2
 80153dc:	930f      	str	r3, [sp, #60]	; 0x3c
 80153de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80153e0:	2b00      	cmp	r3, #0
 80153e2:	f040 8116 	bne.w	8015612 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 80153e6:	4b8e      	ldr	r3, [pc, #568]	; (8015620 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 80153e8:	6818      	ldr	r0, [r3, #0]
 80153ea:	6803      	ldr	r3, [r0, #0]
 80153ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80153ee:	4798      	blx	r3
 80153f0:	2301      	movs	r3, #1
 80153f2:	4a8c      	ldr	r2, [pc, #560]	; (8015624 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 80153f4:	fa03 f308 	lsl.w	r3, r3, r8
 80153f8:	8811      	ldrh	r1, [r2, #0]
 80153fa:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 80153fe:	3b01      	subs	r3, #1
 8015400:	b2db      	uxtb	r3, r3
 8015402:	930e      	str	r3, [sp, #56]	; 0x38
 8015404:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8015408:	fb01 2303 	mla	r3, r1, r3, r2
 801540c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015410:	930a      	str	r3, [sp, #40]	; 0x28
 8015412:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015414:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8015418:	9313      	str	r3, [sp, #76]	; 0x4c
 801541a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801541c:	0a19      	lsrs	r1, r3, #8
 801541e:	b2cb      	uxtb	r3, r1
 8015420:	9312      	str	r3, [sp, #72]	; 0x48
 8015422:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015424:	b2db      	uxtb	r3, r3
 8015426:	9311      	str	r3, [sp, #68]	; 0x44
 8015428:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801542a:	095a      	lsrs	r2, r3, #5
 801542c:	4b7e      	ldr	r3, [pc, #504]	; (8015628 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801542e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015432:	400b      	ands	r3, r1
 8015434:	4313      	orrs	r3, r2
 8015436:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015438:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801543c:	4313      	orrs	r3, r2
 801543e:	b29b      	uxth	r3, r3
 8015440:	9310      	str	r3, [sp, #64]	; 0x40
 8015442:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015444:	781a      	ldrb	r2, [r3, #0]
 8015446:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801544a:	fb05 b919 	mls	r9, r5, r9, fp
 801544e:	4132      	asrs	r2, r6
 8015450:	fb03 fb05 	mul.w	fp, r3, r5
 8015454:	930d      	str	r3, [sp, #52]	; 0x34
 8015456:	b2d2      	uxtb	r2, r2
 8015458:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801545c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8015460:	f0c0 80f5 	bcc.w	801564e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8015464:	46ae      	mov	lr, r5
 8015466:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801546a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801546e:	f0c0 80dd 	bcc.w	801562c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8015472:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015474:	4013      	ands	r3, r2
 8015476:	d055      	beq.n	8015524 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8015478:	20ff      	movs	r0, #255	; 0xff
 801547a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801547c:	fb90 f1f1 	sdiv	r1, r0, r1
 8015480:	434b      	muls	r3, r1
 8015482:	2bfe      	cmp	r3, #254	; 0xfe
 8015484:	dd03      	ble.n	801548e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8015486:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015488:	4281      	cmp	r1, r0
 801548a:	f000 80c4 	beq.w	8015616 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801548e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8015490:	f8bc 4000 	ldrh.w	r4, [ip]
 8015494:	fb11 f303 	smulbb	r3, r1, r3
 8015498:	1220      	asrs	r0, r4, #8
 801549a:	b29b      	uxth	r3, r3
 801549c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80154a0:	1c59      	adds	r1, r3, #1
 80154a2:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80154a6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80154aa:	10e1      	asrs	r1, r4, #3
 80154ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80154b0:	00e4      	lsls	r4, r4, #3
 80154b2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80154b6:	b29f      	uxth	r7, r3
 80154b8:	43db      	mvns	r3, r3
 80154ba:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 80154be:	b2db      	uxtb	r3, r3
 80154c0:	b2e4      	uxtb	r4, r4
 80154c2:	9309      	str	r3, [sp, #36]	; 0x24
 80154c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80154c6:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80154ca:	fb13 f907 	smulbb	r9, r3, r7
 80154ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154d0:	fb00 9003 	mla	r0, r0, r3, r9
 80154d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80154d6:	fb13 f907 	smulbb	r9, r3, r7
 80154da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154dc:	b280      	uxth	r0, r0
 80154de:	fb01 9103 	mla	r1, r1, r3, r9
 80154e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80154e4:	fb13 f707 	smulbb	r7, r3, r7
 80154e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80154ea:	b289      	uxth	r1, r1
 80154ec:	fb04 7403 	mla	r4, r4, r3, r7
 80154f0:	1c43      	adds	r3, r0, #1
 80154f2:	b2a4      	uxth	r4, r4
 80154f4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80154f8:	f104 0901 	add.w	r9, r4, #1
 80154fc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8015500:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8015504:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8015508:	ea49 0000 	orr.w	r0, r9, r0
 801550c:	f101 0901 	add.w	r9, r1, #1
 8015510:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8015514:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015518:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801551c:	ea40 0009 	orr.w	r0, r0, r9
 8015520:	f8ac 0000 	strh.w	r0, [ip]
 8015524:	4446      	add	r6, r8
 8015526:	b2b6      	uxth	r6, r6
 8015528:	2e07      	cmp	r6, #7
 801552a:	bf89      	itett	hi
 801552c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801552e:	fa42 f208 	asrls.w	r2, r2, r8
 8015532:	2600      	movhi	r6, #0
 8015534:	785a      	ldrbhi	r2, [r3, #1]
 8015536:	bf8a      	itet	hi
 8015538:	3301      	addhi	r3, #1
 801553a:	b2d2      	uxtbls	r2, r2
 801553c:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801553e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015540:	449c      	add	ip, r3
 8015542:	e792      	b.n	801546a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8015544:	441c      	add	r4, r3
 8015546:	b224      	sxth	r4, r4
 8015548:	e6d5      	b.n	80152f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801554a:	f1ba 0f01 	cmp.w	sl, #1
 801554e:	f47f af0c 	bne.w	801536a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015552:	f1bb 0f01 	cmp.w	fp, #1
 8015556:	f47f af08 	bne.w	801536a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801555a:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 8015620 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801555e:	f8db 0000 	ldr.w	r0, [fp]
 8015562:	6803      	ldr	r3, [r0, #0]
 8015564:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015566:	4798      	blx	r3
 8015568:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801556c:	465a      	mov	r2, fp
 801556e:	d006      	beq.n	801557e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8015570:	f1b8 0f04 	cmp.w	r8, #4
 8015574:	d140      	bne.n	80155f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8015576:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015578:	3300      	adds	r3, #0
 801557a:	bf18      	it	ne
 801557c:	2301      	movne	r3, #1
 801557e:	0580      	lsls	r0, r0, #22
 8015580:	d56e      	bpl.n	8015660 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8015582:	f1b8 0f08 	cmp.w	r8, #8
 8015586:	d16b      	bne.n	8015660 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8015588:	2b00      	cmp	r3, #0
 801558a:	bf0c      	ite	eq
 801558c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8015590:	f44f 7180 	movne.w	r1, #256	; 0x100
 8015594:	2d00      	cmp	r5, #0
 8015596:	f47f aee8 	bne.w	801536a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801559a:	2e00      	cmp	r6, #0
 801559c:	f47f aee5 	bne.w	801536a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80155a0:	19e3      	adds	r3, r4, r7
 80155a2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80155a4:	4283      	cmp	r3, r0
 80155a6:	f73f aee0 	bgt.w	801536a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80155aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155ac:	980d      	ldr	r0, [sp, #52]	; 0x34
 80155ae:	444b      	add	r3, r9
 80155b0:	4283      	cmp	r3, r0
 80155b2:	f73f aeda 	bgt.w	801536a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80155b6:	b2bf      	uxth	r7, r7
 80155b8:	f1b8 0f08 	cmp.w	r8, #8
 80155bc:	6810      	ldr	r0, [r2, #0]
 80155be:	f04f 0500 	mov.w	r5, #0
 80155c2:	bf18      	it	ne
 80155c4:	3701      	addne	r7, #1
 80155c6:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80155ca:	6804      	ldr	r4, [r0, #0]
 80155cc:	bf18      	it	ne
 80155ce:	f027 0701 	bicne.w	r7, r7, #1
 80155d2:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80155d6:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80155da:	990c      	ldr	r1, [sp, #48]	; 0x30
 80155dc:	bf18      	it	ne
 80155de:	b2bf      	uxthne	r7, r7
 80155e0:	9104      	str	r1, [sp, #16]
 80155e2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80155e4:	e9cd 7900 	strd	r7, r9, [sp]
 80155e8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80155ec:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80155ee:	6d64      	ldr	r4, [r4, #84]	; 0x54
 80155f0:	47a0      	blx	r4
 80155f2:	b019      	add	sp, #100	; 0x64
 80155f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80155f8:	2300      	movs	r3, #0
 80155fa:	e7c0      	b.n	801557e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80155fc:	2208      	movs	r2, #8
 80155fe:	fb92 f3f8 	sdiv	r3, r2, r8
 8015602:	1e5a      	subs	r2, r3, #1
 8015604:	443a      	add	r2, r7
 8015606:	fb92 f2f3 	sdiv	r2, r2, r3
 801560a:	fb12 f203 	smulbb	r2, r2, r3
 801560e:	b292      	uxth	r2, r2
 8015610:	e6b0      	b.n	8015374 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8015612:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8015614:	e6ec      	b.n	80153f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8015616:	9810      	ldr	r0, [sp, #64]	; 0x40
 8015618:	e782      	b.n	8015520 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801561a:	bf00      	nop
 801561c:	2400b058 	.word	0x2400b058
 8015620:	2400b060 	.word	0x2400b060
 8015624:	2400b05a 	.word	0x2400b05a
 8015628:	00fff800 	.word	0x00fff800
 801562c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801562e:	b153      	cbz	r3, 8015646 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8015630:	441e      	add	r6, r3
 8015632:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015634:	b2b6      	uxth	r6, r6
 8015636:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801563a:	f006 0607 	and.w	r6, r6, #7
 801563e:	781a      	ldrb	r2, [r3, #0]
 8015640:	9328      	str	r3, [sp, #160]	; 0xa0
 8015642:	4132      	asrs	r2, r6
 8015644:	b2d2      	uxtb	r2, r2
 8015646:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015648:	445b      	add	r3, fp
 801564a:	930a      	str	r3, [sp, #40]	; 0x28
 801564c:	e706      	b.n	801545c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801564e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015650:	2b00      	cmp	r3, #0
 8015652:	d1ce      	bne.n	80155f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015654:	4b05      	ldr	r3, [pc, #20]	; (801566c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8015656:	6818      	ldr	r0, [r3, #0]
 8015658:	6803      	ldr	r3, [r0, #0]
 801565a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801565c:	4798      	blx	r3
 801565e:	e7c8      	b.n	80155f2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8015660:	2b00      	cmp	r3, #0
 8015662:	f43f ae82 	beq.w	801536a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8015666:	f44f 7180 	mov.w	r1, #256	; 0x100
 801566a:	e793      	b.n	8015594 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801566c:	2400b060 	.word	0x2400b060

08015670 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8015670:	b538      	push	{r3, r4, r5, lr}
 8015672:	4c15      	ldr	r4, [pc, #84]	; (80156c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8015674:	4605      	mov	r5, r0
 8015676:	7823      	ldrb	r3, [r4, #0]
 8015678:	f3bf 8f5b 	dmb	ish
 801567c:	07da      	lsls	r2, r3, #31
 801567e:	d40b      	bmi.n	8015698 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015680:	4620      	mov	r0, r4
 8015682:	f007 fa68 	bl	801cb56 <__cxa_guard_acquire>
 8015686:	b138      	cbz	r0, 8015698 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8015688:	4620      	mov	r0, r4
 801568a:	f007 fa70 	bl	801cb6e <__cxa_guard_release>
 801568e:	4a0f      	ldr	r2, [pc, #60]	; (80156cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8015690:	490f      	ldr	r1, [pc, #60]	; (80156d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8015692:	4810      	ldr	r0, [pc, #64]	; (80156d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8015694:	f007 fa58 	bl	801cb48 <__aeabi_atexit>
 8015698:	4c0f      	ldr	r4, [pc, #60]	; (80156d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801569a:	7823      	ldrb	r3, [r4, #0]
 801569c:	f3bf 8f5b 	dmb	ish
 80156a0:	07db      	lsls	r3, r3, #31
 80156a2:	d40b      	bmi.n	80156bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80156a4:	4620      	mov	r0, r4
 80156a6:	f007 fa56 	bl	801cb56 <__cxa_guard_acquire>
 80156aa:	b138      	cbz	r0, 80156bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80156ac:	4620      	mov	r0, r4
 80156ae:	f007 fa5e 	bl	801cb6e <__cxa_guard_release>
 80156b2:	4a06      	ldr	r2, [pc, #24]	; (80156cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80156b4:	4909      	ldr	r1, [pc, #36]	; (80156dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80156b6:	480a      	ldr	r0, [pc, #40]	; (80156e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80156b8:	f007 fa46 	bl	801cb48 <__aeabi_atexit>
 80156bc:	4b05      	ldr	r3, [pc, #20]	; (80156d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80156be:	612b      	str	r3, [r5, #16]
 80156c0:	4b07      	ldr	r3, [pc, #28]	; (80156e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80156c2:	616b      	str	r3, [r5, #20]
 80156c4:	bd38      	pop	{r3, r4, r5, pc}
 80156c6:	bf00      	nop
 80156c8:	2400b12c 	.word	0x2400b12c
 80156cc:	24000000 	.word	0x24000000
 80156d0:	0801387d 	.word	0x0801387d
 80156d4:	24000094 	.word	0x24000094
 80156d8:	2400b130 	.word	0x2400b130
 80156dc:	0801387b 	.word	0x0801387b
 80156e0:	24000098 	.word	0x24000098

080156e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80156e4:	b538      	push	{r3, r4, r5, lr}
 80156e6:	4c15      	ldr	r4, [pc, #84]	; (801573c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80156e8:	4605      	mov	r5, r0
 80156ea:	7823      	ldrb	r3, [r4, #0]
 80156ec:	f3bf 8f5b 	dmb	ish
 80156f0:	07da      	lsls	r2, r3, #31
 80156f2:	d40b      	bmi.n	801570c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80156f4:	4620      	mov	r0, r4
 80156f6:	f007 fa2e 	bl	801cb56 <__cxa_guard_acquire>
 80156fa:	b138      	cbz	r0, 801570c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80156fc:	4620      	mov	r0, r4
 80156fe:	f007 fa36 	bl	801cb6e <__cxa_guard_release>
 8015702:	4a0f      	ldr	r2, [pc, #60]	; (8015740 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015704:	490f      	ldr	r1, [pc, #60]	; (8015744 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8015706:	4810      	ldr	r0, [pc, #64]	; (8015748 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015708:	f007 fa1e 	bl	801cb48 <__aeabi_atexit>
 801570c:	4c0f      	ldr	r4, [pc, #60]	; (801574c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801570e:	7823      	ldrb	r3, [r4, #0]
 8015710:	f3bf 8f5b 	dmb	ish
 8015714:	07db      	lsls	r3, r3, #31
 8015716:	d40b      	bmi.n	8015730 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015718:	4620      	mov	r0, r4
 801571a:	f007 fa1c 	bl	801cb56 <__cxa_guard_acquire>
 801571e:	b138      	cbz	r0, 8015730 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8015720:	4620      	mov	r0, r4
 8015722:	f007 fa24 	bl	801cb6e <__cxa_guard_release>
 8015726:	4a06      	ldr	r2, [pc, #24]	; (8015740 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8015728:	4909      	ldr	r1, [pc, #36]	; (8015750 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801572a:	480a      	ldr	r0, [pc, #40]	; (8015754 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801572c:	f007 fa0c 	bl	801cb48 <__aeabi_atexit>
 8015730:	4b05      	ldr	r3, [pc, #20]	; (8015748 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8015732:	60ab      	str	r3, [r5, #8]
 8015734:	4b07      	ldr	r3, [pc, #28]	; (8015754 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8015736:	60eb      	str	r3, [r5, #12]
 8015738:	bd38      	pop	{r3, r4, r5, pc}
 801573a:	bf00      	nop
 801573c:	2400b104 	.word	0x2400b104
 8015740:	24000000 	.word	0x24000000
 8015744:	08013881 	.word	0x08013881
 8015748:	2400006c 	.word	0x2400006c
 801574c:	2400b108 	.word	0x2400b108
 8015750:	0801387f 	.word	0x0801387f
 8015754:	24000070 	.word	0x24000070

08015758 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8015758:	b510      	push	{r4, lr}
 801575a:	4604      	mov	r4, r0
 801575c:	f7ff ff88 	bl	8015670 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8015760:	4620      	mov	r0, r4
 8015762:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015766:	f7ff bfbd 	b.w	80156e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801576c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801576c:	b538      	push	{r3, r4, r5, lr}
 801576e:	4c15      	ldr	r4, [pc, #84]	; (80157c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8015770:	4605      	mov	r5, r0
 8015772:	7823      	ldrb	r3, [r4, #0]
 8015774:	f3bf 8f5b 	dmb	ish
 8015778:	07da      	lsls	r2, r3, #31
 801577a:	d40b      	bmi.n	8015794 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801577c:	4620      	mov	r0, r4
 801577e:	f007 f9ea 	bl	801cb56 <__cxa_guard_acquire>
 8015782:	b138      	cbz	r0, 8015794 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8015784:	4620      	mov	r0, r4
 8015786:	f007 f9f2 	bl	801cb6e <__cxa_guard_release>
 801578a:	4a0f      	ldr	r2, [pc, #60]	; (80157c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801578c:	490f      	ldr	r1, [pc, #60]	; (80157cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801578e:	4810      	ldr	r0, [pc, #64]	; (80157d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8015790:	f007 f9da 	bl	801cb48 <__aeabi_atexit>
 8015794:	4c0f      	ldr	r4, [pc, #60]	; (80157d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8015796:	7823      	ldrb	r3, [r4, #0]
 8015798:	f3bf 8f5b 	dmb	ish
 801579c:	07db      	lsls	r3, r3, #31
 801579e:	d40b      	bmi.n	80157b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80157a0:	4620      	mov	r0, r4
 80157a2:	f007 f9d8 	bl	801cb56 <__cxa_guard_acquire>
 80157a6:	b138      	cbz	r0, 80157b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80157a8:	4620      	mov	r0, r4
 80157aa:	f007 f9e0 	bl	801cb6e <__cxa_guard_release>
 80157ae:	4a06      	ldr	r2, [pc, #24]	; (80157c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80157b0:	4909      	ldr	r1, [pc, #36]	; (80157d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80157b2:	480a      	ldr	r0, [pc, #40]	; (80157dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80157b4:	f007 f9c8 	bl	801cb48 <__aeabi_atexit>
 80157b8:	4b05      	ldr	r3, [pc, #20]	; (80157d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80157ba:	622b      	str	r3, [r5, #32]
 80157bc:	4b07      	ldr	r3, [pc, #28]	; (80157dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80157be:	626b      	str	r3, [r5, #36]	; 0x24
 80157c0:	bd38      	pop	{r3, r4, r5, pc}
 80157c2:	bf00      	nop
 80157c4:	2400b134 	.word	0x2400b134
 80157c8:	24000000 	.word	0x24000000
 80157cc:	08013875 	.word	0x08013875
 80157d0:	2400009c 	.word	0x2400009c
 80157d4:	2400b138 	.word	0x2400b138
 80157d8:	08013873 	.word	0x08013873
 80157dc:	240000a0 	.word	0x240000a0

080157e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80157e0:	b538      	push	{r3, r4, r5, lr}
 80157e2:	4c15      	ldr	r4, [pc, #84]	; (8015838 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80157e4:	4605      	mov	r5, r0
 80157e6:	7823      	ldrb	r3, [r4, #0]
 80157e8:	f3bf 8f5b 	dmb	ish
 80157ec:	07da      	lsls	r2, r3, #31
 80157ee:	d40b      	bmi.n	8015808 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80157f0:	4620      	mov	r0, r4
 80157f2:	f007 f9b0 	bl	801cb56 <__cxa_guard_acquire>
 80157f6:	b138      	cbz	r0, 8015808 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80157f8:	4620      	mov	r0, r4
 80157fa:	f007 f9b8 	bl	801cb6e <__cxa_guard_release>
 80157fe:	4a0f      	ldr	r2, [pc, #60]	; (801583c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015800:	490f      	ldr	r1, [pc, #60]	; (8015840 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8015802:	4810      	ldr	r0, [pc, #64]	; (8015844 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8015804:	f007 f9a0 	bl	801cb48 <__aeabi_atexit>
 8015808:	4c0f      	ldr	r4, [pc, #60]	; (8015848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801580a:	7823      	ldrb	r3, [r4, #0]
 801580c:	f3bf 8f5b 	dmb	ish
 8015810:	07db      	lsls	r3, r3, #31
 8015812:	d40b      	bmi.n	801582c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8015814:	4620      	mov	r0, r4
 8015816:	f007 f99e 	bl	801cb56 <__cxa_guard_acquire>
 801581a:	b138      	cbz	r0, 801582c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801581c:	4620      	mov	r0, r4
 801581e:	f007 f9a6 	bl	801cb6e <__cxa_guard_release>
 8015822:	4a06      	ldr	r2, [pc, #24]	; (801583c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8015824:	4909      	ldr	r1, [pc, #36]	; (801584c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8015826:	480a      	ldr	r0, [pc, #40]	; (8015850 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015828:	f007 f98e 	bl	801cb48 <__aeabi_atexit>
 801582c:	4b05      	ldr	r3, [pc, #20]	; (8015844 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801582e:	61ab      	str	r3, [r5, #24]
 8015830:	4b07      	ldr	r3, [pc, #28]	; (8015850 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8015832:	61eb      	str	r3, [r5, #28]
 8015834:	bd38      	pop	{r3, r4, r5, pc}
 8015836:	bf00      	nop
 8015838:	2400b10c 	.word	0x2400b10c
 801583c:	24000000 	.word	0x24000000
 8015840:	08013879 	.word	0x08013879
 8015844:	24000074 	.word	0x24000074
 8015848:	2400b110 	.word	0x2400b110
 801584c:	08013877 	.word	0x08013877
 8015850:	24000078 	.word	0x24000078

08015854 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8015854:	b510      	push	{r4, lr}
 8015856:	4604      	mov	r4, r0
 8015858:	f7ff ff88 	bl	801576c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801585c:	4620      	mov	r0, r4
 801585e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015862:	f7ff bfbd 	b.w	80157e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08015868 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8015868:	b538      	push	{r3, r4, r5, lr}
 801586a:	4c15      	ldr	r4, [pc, #84]	; (80158c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801586c:	4605      	mov	r5, r0
 801586e:	7823      	ldrb	r3, [r4, #0]
 8015870:	f3bf 8f5b 	dmb	ish
 8015874:	07da      	lsls	r2, r3, #31
 8015876:	d40b      	bmi.n	8015890 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015878:	4620      	mov	r0, r4
 801587a:	f007 f96c 	bl	801cb56 <__cxa_guard_acquire>
 801587e:	b138      	cbz	r0, 8015890 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8015880:	4620      	mov	r0, r4
 8015882:	f007 f974 	bl	801cb6e <__cxa_guard_release>
 8015886:	4a0f      	ldr	r2, [pc, #60]	; (80158c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8015888:	490f      	ldr	r1, [pc, #60]	; (80158c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801588a:	4810      	ldr	r0, [pc, #64]	; (80158cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801588c:	f007 f95c 	bl	801cb48 <__aeabi_atexit>
 8015890:	4c0f      	ldr	r4, [pc, #60]	; (80158d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8015892:	7823      	ldrb	r3, [r4, #0]
 8015894:	f3bf 8f5b 	dmb	ish
 8015898:	07db      	lsls	r3, r3, #31
 801589a:	d40b      	bmi.n	80158b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801589c:	4620      	mov	r0, r4
 801589e:	f007 f95a 	bl	801cb56 <__cxa_guard_acquire>
 80158a2:	b138      	cbz	r0, 80158b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80158a4:	4620      	mov	r0, r4
 80158a6:	f007 f962 	bl	801cb6e <__cxa_guard_release>
 80158aa:	4a06      	ldr	r2, [pc, #24]	; (80158c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80158ac:	4909      	ldr	r1, [pc, #36]	; (80158d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80158ae:	480a      	ldr	r0, [pc, #40]	; (80158d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80158b0:	f007 f94a 	bl	801cb48 <__aeabi_atexit>
 80158b4:	4b05      	ldr	r3, [pc, #20]	; (80158cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80158b6:	632b      	str	r3, [r5, #48]	; 0x30
 80158b8:	4b07      	ldr	r3, [pc, #28]	; (80158d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80158ba:	636b      	str	r3, [r5, #52]	; 0x34
 80158bc:	bd38      	pop	{r3, r4, r5, pc}
 80158be:	bf00      	nop
 80158c0:	2400b144 	.word	0x2400b144
 80158c4:	24000000 	.word	0x24000000
 80158c8:	0801386d 	.word	0x0801386d
 80158cc:	240000ac 	.word	0x240000ac
 80158d0:	2400b148 	.word	0x2400b148
 80158d4:	0801386b 	.word	0x0801386b
 80158d8:	240000b0 	.word	0x240000b0

080158dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80158dc:	b538      	push	{r3, r4, r5, lr}
 80158de:	4c15      	ldr	r4, [pc, #84]	; (8015934 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80158e0:	4605      	mov	r5, r0
 80158e2:	7823      	ldrb	r3, [r4, #0]
 80158e4:	f3bf 8f5b 	dmb	ish
 80158e8:	07da      	lsls	r2, r3, #31
 80158ea:	d40b      	bmi.n	8015904 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80158ec:	4620      	mov	r0, r4
 80158ee:	f007 f932 	bl	801cb56 <__cxa_guard_acquire>
 80158f2:	b138      	cbz	r0, 8015904 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80158f4:	4620      	mov	r0, r4
 80158f6:	f007 f93a 	bl	801cb6e <__cxa_guard_release>
 80158fa:	4a0f      	ldr	r2, [pc, #60]	; (8015938 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80158fc:	490f      	ldr	r1, [pc, #60]	; (801593c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80158fe:	4810      	ldr	r0, [pc, #64]	; (8015940 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8015900:	f007 f922 	bl	801cb48 <__aeabi_atexit>
 8015904:	4c0f      	ldr	r4, [pc, #60]	; (8015944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8015906:	7823      	ldrb	r3, [r4, #0]
 8015908:	f3bf 8f5b 	dmb	ish
 801590c:	07db      	lsls	r3, r3, #31
 801590e:	d40b      	bmi.n	8015928 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015910:	4620      	mov	r0, r4
 8015912:	f007 f920 	bl	801cb56 <__cxa_guard_acquire>
 8015916:	b138      	cbz	r0, 8015928 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8015918:	4620      	mov	r0, r4
 801591a:	f007 f928 	bl	801cb6e <__cxa_guard_release>
 801591e:	4a06      	ldr	r2, [pc, #24]	; (8015938 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8015920:	4909      	ldr	r1, [pc, #36]	; (8015948 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8015922:	480a      	ldr	r0, [pc, #40]	; (801594c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8015924:	f007 f910 	bl	801cb48 <__aeabi_atexit>
 8015928:	4b05      	ldr	r3, [pc, #20]	; (8015940 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801592a:	62ab      	str	r3, [r5, #40]	; 0x28
 801592c:	4b07      	ldr	r3, [pc, #28]	; (801594c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801592e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8015930:	bd38      	pop	{r3, r4, r5, pc}
 8015932:	bf00      	nop
 8015934:	2400b114 	.word	0x2400b114
 8015938:	24000000 	.word	0x24000000
 801593c:	08013871 	.word	0x08013871
 8015940:	2400007c 	.word	0x2400007c
 8015944:	2400b118 	.word	0x2400b118
 8015948:	0801386f 	.word	0x0801386f
 801594c:	24000080 	.word	0x24000080

08015950 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8015950:	b510      	push	{r4, lr}
 8015952:	4604      	mov	r4, r0
 8015954:	f7ff ff88 	bl	8015868 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8015958:	4620      	mov	r0, r4
 801595a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801595e:	f7ff bfbd 	b.w	80158dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08015964 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8015964:	b538      	push	{r3, r4, r5, lr}
 8015966:	4c15      	ldr	r4, [pc, #84]	; (80159bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8015968:	4605      	mov	r5, r0
 801596a:	7823      	ldrb	r3, [r4, #0]
 801596c:	f3bf 8f5b 	dmb	ish
 8015970:	07da      	lsls	r2, r3, #31
 8015972:	d40b      	bmi.n	801598c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8015974:	4620      	mov	r0, r4
 8015976:	f007 f8ee 	bl	801cb56 <__cxa_guard_acquire>
 801597a:	b138      	cbz	r0, 801598c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801597c:	4620      	mov	r0, r4
 801597e:	f007 f8f6 	bl	801cb6e <__cxa_guard_release>
 8015982:	4a0f      	ldr	r2, [pc, #60]	; (80159c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8015984:	490f      	ldr	r1, [pc, #60]	; (80159c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8015986:	4810      	ldr	r0, [pc, #64]	; (80159c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8015988:	f007 f8de 	bl	801cb48 <__aeabi_atexit>
 801598c:	4c0f      	ldr	r4, [pc, #60]	; (80159cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801598e:	7823      	ldrb	r3, [r4, #0]
 8015990:	f3bf 8f5b 	dmb	ish
 8015994:	07db      	lsls	r3, r3, #31
 8015996:	d40b      	bmi.n	80159b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8015998:	4620      	mov	r0, r4
 801599a:	f007 f8dc 	bl	801cb56 <__cxa_guard_acquire>
 801599e:	b138      	cbz	r0, 80159b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80159a0:	4620      	mov	r0, r4
 80159a2:	f007 f8e4 	bl	801cb6e <__cxa_guard_release>
 80159a6:	4a06      	ldr	r2, [pc, #24]	; (80159c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80159a8:	4909      	ldr	r1, [pc, #36]	; (80159d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80159aa:	480a      	ldr	r0, [pc, #40]	; (80159d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80159ac:	f007 f8cc 	bl	801cb48 <__aeabi_atexit>
 80159b0:	4b05      	ldr	r3, [pc, #20]	; (80159c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80159b2:	652b      	str	r3, [r5, #80]	; 0x50
 80159b4:	4b07      	ldr	r3, [pc, #28]	; (80159d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80159b6:	656b      	str	r3, [r5, #84]	; 0x54
 80159b8:	bd38      	pop	{r3, r4, r5, pc}
 80159ba:	bf00      	nop
 80159bc:	2400b14c 	.word	0x2400b14c
 80159c0:	24000000 	.word	0x24000000
 80159c4:	0801385d 	.word	0x0801385d
 80159c8:	240000b4 	.word	0x240000b4
 80159cc:	2400b150 	.word	0x2400b150
 80159d0:	0801385b 	.word	0x0801385b
 80159d4:	240000b8 	.word	0x240000b8

080159d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80159d8:	b538      	push	{r3, r4, r5, lr}
 80159da:	4c15      	ldr	r4, [pc, #84]	; (8015a30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80159dc:	4605      	mov	r5, r0
 80159de:	7823      	ldrb	r3, [r4, #0]
 80159e0:	f3bf 8f5b 	dmb	ish
 80159e4:	07da      	lsls	r2, r3, #31
 80159e6:	d40b      	bmi.n	8015a00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80159e8:	4620      	mov	r0, r4
 80159ea:	f007 f8b4 	bl	801cb56 <__cxa_guard_acquire>
 80159ee:	b138      	cbz	r0, 8015a00 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80159f0:	4620      	mov	r0, r4
 80159f2:	f007 f8bc 	bl	801cb6e <__cxa_guard_release>
 80159f6:	4a0f      	ldr	r2, [pc, #60]	; (8015a34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80159f8:	490f      	ldr	r1, [pc, #60]	; (8015a38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80159fa:	4810      	ldr	r0, [pc, #64]	; (8015a3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80159fc:	f007 f8a4 	bl	801cb48 <__aeabi_atexit>
 8015a00:	4c0f      	ldr	r4, [pc, #60]	; (8015a40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8015a02:	7823      	ldrb	r3, [r4, #0]
 8015a04:	f3bf 8f5b 	dmb	ish
 8015a08:	07db      	lsls	r3, r3, #31
 8015a0a:	d40b      	bmi.n	8015a24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015a0c:	4620      	mov	r0, r4
 8015a0e:	f007 f8a2 	bl	801cb56 <__cxa_guard_acquire>
 8015a12:	b138      	cbz	r0, 8015a24 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8015a14:	4620      	mov	r0, r4
 8015a16:	f007 f8aa 	bl	801cb6e <__cxa_guard_release>
 8015a1a:	4a06      	ldr	r2, [pc, #24]	; (8015a34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8015a1c:	4909      	ldr	r1, [pc, #36]	; (8015a44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8015a1e:	480a      	ldr	r0, [pc, #40]	; (8015a48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015a20:	f007 f892 	bl	801cb48 <__aeabi_atexit>
 8015a24:	4b05      	ldr	r3, [pc, #20]	; (8015a3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8015a26:	64ab      	str	r3, [r5, #72]	; 0x48
 8015a28:	4b07      	ldr	r3, [pc, #28]	; (8015a48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8015a2a:	64eb      	str	r3, [r5, #76]	; 0x4c
 8015a2c:	bd38      	pop	{r3, r4, r5, pc}
 8015a2e:	bf00      	nop
 8015a30:	2400b154 	.word	0x2400b154
 8015a34:	24000000 	.word	0x24000000
 8015a38:	08013861 	.word	0x08013861
 8015a3c:	240000bc 	.word	0x240000bc
 8015a40:	2400b158 	.word	0x2400b158
 8015a44:	0801385f 	.word	0x0801385f
 8015a48:	240000c0 	.word	0x240000c0

08015a4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8015a4c:	b538      	push	{r3, r4, r5, lr}
 8015a4e:	4c15      	ldr	r4, [pc, #84]	; (8015aa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8015a50:	4605      	mov	r5, r0
 8015a52:	7823      	ldrb	r3, [r4, #0]
 8015a54:	f3bf 8f5b 	dmb	ish
 8015a58:	07da      	lsls	r2, r3, #31
 8015a5a:	d40b      	bmi.n	8015a74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015a5c:	4620      	mov	r0, r4
 8015a5e:	f007 f87a 	bl	801cb56 <__cxa_guard_acquire>
 8015a62:	b138      	cbz	r0, 8015a74 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8015a64:	4620      	mov	r0, r4
 8015a66:	f007 f882 	bl	801cb6e <__cxa_guard_release>
 8015a6a:	4a0f      	ldr	r2, [pc, #60]	; (8015aa8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015a6c:	490f      	ldr	r1, [pc, #60]	; (8015aac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8015a6e:	4810      	ldr	r0, [pc, #64]	; (8015ab0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015a70:	f007 f86a 	bl	801cb48 <__aeabi_atexit>
 8015a74:	4c0f      	ldr	r4, [pc, #60]	; (8015ab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8015a76:	7823      	ldrb	r3, [r4, #0]
 8015a78:	f3bf 8f5b 	dmb	ish
 8015a7c:	07db      	lsls	r3, r3, #31
 8015a7e:	d40b      	bmi.n	8015a98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015a80:	4620      	mov	r0, r4
 8015a82:	f007 f868 	bl	801cb56 <__cxa_guard_acquire>
 8015a86:	b138      	cbz	r0, 8015a98 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8015a88:	4620      	mov	r0, r4
 8015a8a:	f007 f870 	bl	801cb6e <__cxa_guard_release>
 8015a8e:	4a06      	ldr	r2, [pc, #24]	; (8015aa8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8015a90:	4909      	ldr	r1, [pc, #36]	; (8015ab8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8015a92:	480a      	ldr	r0, [pc, #40]	; (8015abc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015a94:	f007 f858 	bl	801cb48 <__aeabi_atexit>
 8015a98:	4b05      	ldr	r3, [pc, #20]	; (8015ab0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8015a9a:	642b      	str	r3, [r5, #64]	; 0x40
 8015a9c:	4b07      	ldr	r3, [pc, #28]	; (8015abc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8015a9e:	646b      	str	r3, [r5, #68]	; 0x44
 8015aa0:	bd38      	pop	{r3, r4, r5, pc}
 8015aa2:	bf00      	nop
 8015aa4:	2400b11c 	.word	0x2400b11c
 8015aa8:	24000000 	.word	0x24000000
 8015aac:	08013865 	.word	0x08013865
 8015ab0:	24000084 	.word	0x24000084
 8015ab4:	2400b120 	.word	0x2400b120
 8015ab8:	08013863 	.word	0x08013863
 8015abc:	24000088 	.word	0x24000088

08015ac0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8015ac0:	b538      	push	{r3, r4, r5, lr}
 8015ac2:	4c15      	ldr	r4, [pc, #84]	; (8015b18 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8015ac4:	4605      	mov	r5, r0
 8015ac6:	7823      	ldrb	r3, [r4, #0]
 8015ac8:	f3bf 8f5b 	dmb	ish
 8015acc:	07da      	lsls	r2, r3, #31
 8015ace:	d40b      	bmi.n	8015ae8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015ad0:	4620      	mov	r0, r4
 8015ad2:	f007 f840 	bl	801cb56 <__cxa_guard_acquire>
 8015ad6:	b138      	cbz	r0, 8015ae8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8015ad8:	4620      	mov	r0, r4
 8015ada:	f007 f848 	bl	801cb6e <__cxa_guard_release>
 8015ade:	4a0f      	ldr	r2, [pc, #60]	; (8015b1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015ae0:	490f      	ldr	r1, [pc, #60]	; (8015b20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8015ae2:	4810      	ldr	r0, [pc, #64]	; (8015b24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015ae4:	f007 f830 	bl	801cb48 <__aeabi_atexit>
 8015ae8:	4c0f      	ldr	r4, [pc, #60]	; (8015b28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8015aea:	7823      	ldrb	r3, [r4, #0]
 8015aec:	f3bf 8f5b 	dmb	ish
 8015af0:	07db      	lsls	r3, r3, #31
 8015af2:	d40b      	bmi.n	8015b0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015af4:	4620      	mov	r0, r4
 8015af6:	f007 f82e 	bl	801cb56 <__cxa_guard_acquire>
 8015afa:	b138      	cbz	r0, 8015b0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8015afc:	4620      	mov	r0, r4
 8015afe:	f007 f836 	bl	801cb6e <__cxa_guard_release>
 8015b02:	4a06      	ldr	r2, [pc, #24]	; (8015b1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8015b04:	4909      	ldr	r1, [pc, #36]	; (8015b2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8015b06:	480a      	ldr	r0, [pc, #40]	; (8015b30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8015b08:	f007 f81e 	bl	801cb48 <__aeabi_atexit>
 8015b0c:	4b05      	ldr	r3, [pc, #20]	; (8015b24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8015b0e:	63ab      	str	r3, [r5, #56]	; 0x38
 8015b10:	4b07      	ldr	r3, [pc, #28]	; (8015b30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8015b12:	63eb      	str	r3, [r5, #60]	; 0x3c
 8015b14:	bd38      	pop	{r3, r4, r5, pc}
 8015b16:	bf00      	nop
 8015b18:	2400b13c 	.word	0x2400b13c
 8015b1c:	24000000 	.word	0x24000000
 8015b20:	08013869 	.word	0x08013869
 8015b24:	240000a4 	.word	0x240000a4
 8015b28:	2400b140 	.word	0x2400b140
 8015b2c:	08013867 	.word	0x08013867
 8015b30:	240000a8 	.word	0x240000a8

08015b34 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8015b34:	b510      	push	{r4, lr}
 8015b36:	4604      	mov	r4, r0
 8015b38:	f7ff ff14 	bl	8015964 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8015b3c:	4620      	mov	r0, r4
 8015b3e:	f7ff ff85 	bl	8015a4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8015b42:	4620      	mov	r0, r4
 8015b44:	f7ff ff48 	bl	80159d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8015b48:	4620      	mov	r0, r4
 8015b4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015b4e:	f7ff bfb7 	b.w	8015ac0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08015b54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8015b54:	b538      	push	{r3, r4, r5, lr}
 8015b56:	4c15      	ldr	r4, [pc, #84]	; (8015bac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8015b58:	4605      	mov	r5, r0
 8015b5a:	7823      	ldrb	r3, [r4, #0]
 8015b5c:	f3bf 8f5b 	dmb	ish
 8015b60:	07da      	lsls	r2, r3, #31
 8015b62:	d40b      	bmi.n	8015b7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015b64:	4620      	mov	r0, r4
 8015b66:	f006 fff6 	bl	801cb56 <__cxa_guard_acquire>
 8015b6a:	b138      	cbz	r0, 8015b7c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8015b6c:	4620      	mov	r0, r4
 8015b6e:	f006 fffe 	bl	801cb6e <__cxa_guard_release>
 8015b72:	4a0f      	ldr	r2, [pc, #60]	; (8015bb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015b74:	490f      	ldr	r1, [pc, #60]	; (8015bb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8015b76:	4810      	ldr	r0, [pc, #64]	; (8015bb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015b78:	f006 ffe6 	bl	801cb48 <__aeabi_atexit>
 8015b7c:	4c0f      	ldr	r4, [pc, #60]	; (8015bbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8015b7e:	7823      	ldrb	r3, [r4, #0]
 8015b80:	f3bf 8f5b 	dmb	ish
 8015b84:	07db      	lsls	r3, r3, #31
 8015b86:	d40b      	bmi.n	8015ba0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015b88:	4620      	mov	r0, r4
 8015b8a:	f006 ffe4 	bl	801cb56 <__cxa_guard_acquire>
 8015b8e:	b138      	cbz	r0, 8015ba0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8015b90:	4620      	mov	r0, r4
 8015b92:	f006 ffec 	bl	801cb6e <__cxa_guard_release>
 8015b96:	4a06      	ldr	r2, [pc, #24]	; (8015bb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8015b98:	4909      	ldr	r1, [pc, #36]	; (8015bc0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8015b9a:	480a      	ldr	r0, [pc, #40]	; (8015bc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015b9c:	f006 ffd4 	bl	801cb48 <__aeabi_atexit>
 8015ba0:	4b05      	ldr	r3, [pc, #20]	; (8015bb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8015ba2:	662b      	str	r3, [r5, #96]	; 0x60
 8015ba4:	4b07      	ldr	r3, [pc, #28]	; (8015bc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8015ba6:	666b      	str	r3, [r5, #100]	; 0x64
 8015ba8:	bd38      	pop	{r3, r4, r5, pc}
 8015baa:	bf00      	nop
 8015bac:	2400b124 	.word	0x2400b124
 8015bb0:	24000000 	.word	0x24000000
 8015bb4:	08013855 	.word	0x08013855
 8015bb8:	2400008c 	.word	0x2400008c
 8015bbc:	2400b128 	.word	0x2400b128
 8015bc0:	08013853 	.word	0x08013853
 8015bc4:	24000090 	.word	0x24000090

08015bc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8015bc8:	b538      	push	{r3, r4, r5, lr}
 8015bca:	4c15      	ldr	r4, [pc, #84]	; (8015c20 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8015bcc:	4605      	mov	r5, r0
 8015bce:	7823      	ldrb	r3, [r4, #0]
 8015bd0:	f3bf 8f5b 	dmb	ish
 8015bd4:	07da      	lsls	r2, r3, #31
 8015bd6:	d40b      	bmi.n	8015bf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015bd8:	4620      	mov	r0, r4
 8015bda:	f006 ffbc 	bl	801cb56 <__cxa_guard_acquire>
 8015bde:	b138      	cbz	r0, 8015bf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8015be0:	4620      	mov	r0, r4
 8015be2:	f006 ffc4 	bl	801cb6e <__cxa_guard_release>
 8015be6:	4a0f      	ldr	r2, [pc, #60]	; (8015c24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8015be8:	490f      	ldr	r1, [pc, #60]	; (8015c28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8015bea:	4810      	ldr	r0, [pc, #64]	; (8015c2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015bec:	f006 ffac 	bl	801cb48 <__aeabi_atexit>
 8015bf0:	4c0f      	ldr	r4, [pc, #60]	; (8015c30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8015bf2:	7823      	ldrb	r3, [r4, #0]
 8015bf4:	f3bf 8f5b 	dmb	ish
 8015bf8:	07db      	lsls	r3, r3, #31
 8015bfa:	d40b      	bmi.n	8015c14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015bfc:	4620      	mov	r0, r4
 8015bfe:	f006 ffaa 	bl	801cb56 <__cxa_guard_acquire>
 8015c02:	b138      	cbz	r0, 8015c14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8015c04:	4620      	mov	r0, r4
 8015c06:	f006 ffb2 	bl	801cb6e <__cxa_guard_release>
 8015c0a:	4a06      	ldr	r2, [pc, #24]	; (8015c24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8015c0c:	4909      	ldr	r1, [pc, #36]	; (8015c34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8015c0e:	480a      	ldr	r0, [pc, #40]	; (8015c38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8015c10:	f006 ff9a 	bl	801cb48 <__aeabi_atexit>
 8015c14:	4b05      	ldr	r3, [pc, #20]	; (8015c2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8015c16:	65ab      	str	r3, [r5, #88]	; 0x58
 8015c18:	4b07      	ldr	r3, [pc, #28]	; (8015c38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8015c1a:	65eb      	str	r3, [r5, #92]	; 0x5c
 8015c1c:	bd38      	pop	{r3, r4, r5, pc}
 8015c1e:	bf00      	nop
 8015c20:	2400b0fc 	.word	0x2400b0fc
 8015c24:	24000000 	.word	0x24000000
 8015c28:	08013859 	.word	0x08013859
 8015c2c:	24000064 	.word	0x24000064
 8015c30:	2400b100 	.word	0x2400b100
 8015c34:	08013857 	.word	0x08013857
 8015c38:	24000068 	.word	0x24000068

08015c3c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8015c3c:	b510      	push	{r4, lr}
 8015c3e:	4604      	mov	r4, r0
 8015c40:	f7ff ff88 	bl	8015b54 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8015c44:	4620      	mov	r0, r4
 8015c46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015c4a:	f7ff bfbd 	b.w	8015bc8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08015c50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8015c50:	b538      	push	{r3, r4, r5, lr}
 8015c52:	4c15      	ldr	r4, [pc, #84]	; (8015ca8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8015c54:	4605      	mov	r5, r0
 8015c56:	7823      	ldrb	r3, [r4, #0]
 8015c58:	f3bf 8f5b 	dmb	ish
 8015c5c:	07da      	lsls	r2, r3, #31
 8015c5e:	d40b      	bmi.n	8015c78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015c60:	4620      	mov	r0, r4
 8015c62:	f006 ff78 	bl	801cb56 <__cxa_guard_acquire>
 8015c66:	b138      	cbz	r0, 8015c78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8015c68:	4620      	mov	r0, r4
 8015c6a:	f006 ff80 	bl	801cb6e <__cxa_guard_release>
 8015c6e:	4a0f      	ldr	r2, [pc, #60]	; (8015cac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015c70:	490f      	ldr	r1, [pc, #60]	; (8015cb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8015c72:	4810      	ldr	r0, [pc, #64]	; (8015cb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015c74:	f006 ff68 	bl	801cb48 <__aeabi_atexit>
 8015c78:	4c0f      	ldr	r4, [pc, #60]	; (8015cb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8015c7a:	7823      	ldrb	r3, [r4, #0]
 8015c7c:	f3bf 8f5b 	dmb	ish
 8015c80:	07db      	lsls	r3, r3, #31
 8015c82:	d40b      	bmi.n	8015c9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015c84:	4620      	mov	r0, r4
 8015c86:	f006 ff66 	bl	801cb56 <__cxa_guard_acquire>
 8015c8a:	b138      	cbz	r0, 8015c9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8015c8c:	4620      	mov	r0, r4
 8015c8e:	f006 ff6e 	bl	801cb6e <__cxa_guard_release>
 8015c92:	4a06      	ldr	r2, [pc, #24]	; (8015cac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8015c94:	4909      	ldr	r1, [pc, #36]	; (8015cbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8015c96:	480a      	ldr	r0, [pc, #40]	; (8015cc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015c98:	f006 ff56 	bl	801cb48 <__aeabi_atexit>
 8015c9c:	4b05      	ldr	r3, [pc, #20]	; (8015cb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8015c9e:	672b      	str	r3, [r5, #112]	; 0x70
 8015ca0:	4b07      	ldr	r3, [pc, #28]	; (8015cc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8015ca2:	676b      	str	r3, [r5, #116]	; 0x74
 8015ca4:	bd38      	pop	{r3, r4, r5, pc}
 8015ca6:	bf00      	nop
 8015ca8:	2400b0f4 	.word	0x2400b0f4
 8015cac:	24000000 	.word	0x24000000
 8015cb0:	0801384d 	.word	0x0801384d
 8015cb4:	2400005c 	.word	0x2400005c
 8015cb8:	2400b0f8 	.word	0x2400b0f8
 8015cbc:	0801384b 	.word	0x0801384b
 8015cc0:	24000060 	.word	0x24000060

08015cc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8015cc4:	b538      	push	{r3, r4, r5, lr}
 8015cc6:	4c15      	ldr	r4, [pc, #84]	; (8015d1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8015cc8:	4605      	mov	r5, r0
 8015cca:	7823      	ldrb	r3, [r4, #0]
 8015ccc:	f3bf 8f5b 	dmb	ish
 8015cd0:	07da      	lsls	r2, r3, #31
 8015cd2:	d40b      	bmi.n	8015cec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015cd4:	4620      	mov	r0, r4
 8015cd6:	f006 ff3e 	bl	801cb56 <__cxa_guard_acquire>
 8015cda:	b138      	cbz	r0, 8015cec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8015cdc:	4620      	mov	r0, r4
 8015cde:	f006 ff46 	bl	801cb6e <__cxa_guard_release>
 8015ce2:	4a0f      	ldr	r2, [pc, #60]	; (8015d20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015ce4:	490f      	ldr	r1, [pc, #60]	; (8015d24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8015ce6:	4810      	ldr	r0, [pc, #64]	; (8015d28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015ce8:	f006 ff2e 	bl	801cb48 <__aeabi_atexit>
 8015cec:	4c0f      	ldr	r4, [pc, #60]	; (8015d2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8015cee:	7823      	ldrb	r3, [r4, #0]
 8015cf0:	f3bf 8f5b 	dmb	ish
 8015cf4:	07db      	lsls	r3, r3, #31
 8015cf6:	d40b      	bmi.n	8015d10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015cf8:	4620      	mov	r0, r4
 8015cfa:	f006 ff2c 	bl	801cb56 <__cxa_guard_acquire>
 8015cfe:	b138      	cbz	r0, 8015d10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8015d00:	4620      	mov	r0, r4
 8015d02:	f006 ff34 	bl	801cb6e <__cxa_guard_release>
 8015d06:	4a06      	ldr	r2, [pc, #24]	; (8015d20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8015d08:	4909      	ldr	r1, [pc, #36]	; (8015d30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8015d0a:	480a      	ldr	r0, [pc, #40]	; (8015d34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015d0c:	f006 ff1c 	bl	801cb48 <__aeabi_atexit>
 8015d10:	4b05      	ldr	r3, [pc, #20]	; (8015d28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8015d12:	66ab      	str	r3, [r5, #104]	; 0x68
 8015d14:	4b07      	ldr	r3, [pc, #28]	; (8015d34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8015d16:	66eb      	str	r3, [r5, #108]	; 0x6c
 8015d18:	bd38      	pop	{r3, r4, r5, pc}
 8015d1a:	bf00      	nop
 8015d1c:	2400b0ec 	.word	0x2400b0ec
 8015d20:	24000000 	.word	0x24000000
 8015d24:	08013851 	.word	0x08013851
 8015d28:	24000054 	.word	0x24000054
 8015d2c:	2400b0f0 	.word	0x2400b0f0
 8015d30:	0801384f 	.word	0x0801384f
 8015d34:	24000058 	.word	0x24000058

08015d38 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8015d38:	b510      	push	{r4, lr}
 8015d3a:	4604      	mov	r4, r0
 8015d3c:	f7ff ff88 	bl	8015c50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8015d40:	4620      	mov	r0, r4
 8015d42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015d46:	f7ff bfbd 	b.w	8015cc4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08015d4a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8015d4a:	b510      	push	{r4, lr}
 8015d4c:	4604      	mov	r4, r0
 8015d4e:	f7ff fff3 	bl	8015d38 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8015d52:	4620      	mov	r0, r4
 8015d54:	f7ff ff72 	bl	8015c3c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8015d58:	4620      	mov	r0, r4
 8015d5a:	f7ff fdf9 	bl	8015950 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8015d5e:	4620      	mov	r0, r4
 8015d60:	f7ff fcfa 	bl	8015758 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8015d64:	4620      	mov	r0, r4
 8015d66:	f7ff fd75 	bl	8015854 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8015d6a:	4620      	mov	r0, r4
 8015d6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015d70:	f7ff bee0 	b.w	8015b34 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08015d74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8015d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d78:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8015d7c:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8015d80:	2d00      	cmp	r5, #0
 8015d82:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8015d86:	fb05 4c0e 	mla	ip, r5, lr, r4
 8015d8a:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8015d8e:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8015d92:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8015d96:	eb02 0a0c 	add.w	sl, r2, ip
 8015d9a:	8808      	ldrh	r0, [r1, #0]
 8015d9c:	f2c0 80b0 	blt.w	8015f00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8015da0:	45ab      	cmp	fp, r5
 8015da2:	f340 80ad 	ble.w	8015f00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8015da6:	2c00      	cmp	r4, #0
 8015da8:	f2c0 80a8 	blt.w	8015efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8015dac:	45a6      	cmp	lr, r4
 8015dae:	f340 80a5 	ble.w	8015efc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8015db2:	f812 200c 	ldrb.w	r2, [r2, ip]
 8015db6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8015dba:	1c62      	adds	r2, r4, #1
 8015dbc:	f100 80a3 	bmi.w	8015f06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8015dc0:	4596      	cmp	lr, r2
 8015dc2:	f340 80a0 	ble.w	8015f06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8015dc6:	f1b9 0f00 	cmp.w	r9, #0
 8015dca:	f000 809c 	beq.w	8015f06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8015dce:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8015dd2:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8015dd6:	3501      	adds	r5, #1
 8015dd8:	f100 8099 	bmi.w	8015f0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8015ddc:	45ab      	cmp	fp, r5
 8015dde:	f340 8096 	ble.w	8015f0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8015de2:	2f00      	cmp	r7, #0
 8015de4:	f000 8093 	beq.w	8015f0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8015de8:	2c00      	cmp	r4, #0
 8015dea:	f2c0 808e 	blt.w	8015f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8015dee:	45a6      	cmp	lr, r4
 8015df0:	f340 808b 	ble.w	8015f0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8015df4:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8015df8:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8015dfc:	3401      	adds	r4, #1
 8015dfe:	f100 8089 	bmi.w	8015f14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8015e02:	45a6      	cmp	lr, r4
 8015e04:	f340 8086 	ble.w	8015f14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8015e08:	f1b9 0f00 	cmp.w	r9, #0
 8015e0c:	f000 8082 	beq.w	8015f14 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8015e10:	44d6      	add	lr, sl
 8015e12:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8015e16:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8015e1a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8015e1e:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8015e22:	fb19 fe07 	smulbb	lr, r9, r7
 8015e26:	f1c7 0210 	rsb	r2, r7, #16
 8015e2a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015e2e:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8015e32:	eba2 0209 	sub.w	r2, r2, r9
 8015e36:	ea44 0808 	orr.w	r8, r4, r8
 8015e3a:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8015e3e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8015e42:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8015e46:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8015e4a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8015e4e:	ea44 0c0c 	orr.w	ip, r4, ip
 8015e52:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8015e56:	fb04 f40c 	mul.w	r4, r4, ip
 8015e5a:	fb02 4808 	mla	r8, r2, r8, r4
 8015e5e:	041a      	lsls	r2, r3, #16
 8015e60:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015e64:	b2b4      	uxth	r4, r6
 8015e66:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015e6a:	43f6      	mvns	r6, r6
 8015e6c:	4313      	orrs	r3, r2
 8015e6e:	042a      	lsls	r2, r5, #16
 8015e70:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015e74:	b2f6      	uxtb	r6, r6
 8015e76:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8015e7a:	fb0e 8303 	mla	r3, lr, r3, r8
 8015e7e:	432a      	orrs	r2, r5
 8015e80:	fb07 3202 	mla	r2, r7, r2, r3
 8015e84:	10c7      	asrs	r7, r0, #3
 8015e86:	0d53      	lsrs	r3, r2, #21
 8015e88:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015e8c:	0952      	lsrs	r2, r2, #5
 8015e8e:	fb17 f706 	smulbb	r7, r7, r6
 8015e92:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015e96:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015e9a:	431a      	orrs	r2, r3
 8015e9c:	b293      	uxth	r3, r2
 8015e9e:	1202      	asrs	r2, r0, #8
 8015ea0:	121d      	asrs	r5, r3, #8
 8015ea2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015ea6:	00c0      	lsls	r0, r0, #3
 8015ea8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8015eac:	fb12 f206 	smulbb	r2, r2, r6
 8015eb0:	b2c0      	uxtb	r0, r0
 8015eb2:	fb05 2504 	mla	r5, r5, r4, r2
 8015eb6:	10da      	asrs	r2, r3, #3
 8015eb8:	fb10 f006 	smulbb	r0, r0, r6
 8015ebc:	00db      	lsls	r3, r3, #3
 8015ebe:	b2ad      	uxth	r5, r5
 8015ec0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015ec4:	b2db      	uxtb	r3, r3
 8015ec6:	fb02 7204 	mla	r2, r2, r4, r7
 8015eca:	fb03 0004 	mla	r0, r3, r4, r0
 8015ece:	1c6b      	adds	r3, r5, #1
 8015ed0:	b292      	uxth	r2, r2
 8015ed2:	b280      	uxth	r0, r0
 8015ed4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8015ed8:	1c43      	adds	r3, r0, #1
 8015eda:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8015ede:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015ee2:	1c50      	adds	r0, r2, #1
 8015ee4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8015ee8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015eec:	0952      	lsrs	r2, r2, #5
 8015eee:	432b      	orrs	r3, r5
 8015ef0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015ef4:	4313      	orrs	r3, r2
 8015ef6:	800b      	strh	r3, [r1, #0]
 8015ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015efc:	4680      	mov	r8, r0
 8015efe:	e75c      	b.n	8015dba <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8015f00:	4684      	mov	ip, r0
 8015f02:	4680      	mov	r8, r0
 8015f04:	e767      	b.n	8015dd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8015f06:	4684      	mov	ip, r0
 8015f08:	e765      	b.n	8015dd6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8015f0a:	4605      	mov	r5, r0
 8015f0c:	e776      	b.n	8015dfc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8015f0e:	4603      	mov	r3, r0
 8015f10:	4605      	mov	r5, r0
 8015f12:	e782      	b.n	8015e1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8015f14:	4603      	mov	r3, r0
 8015f16:	e780      	b.n	8015e1a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08015f18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015f18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f1c:	b099      	sub	sp, #100	; 0x64
 8015f1e:	9215      	str	r2, [sp, #84]	; 0x54
 8015f20:	9309      	str	r3, [sp, #36]	; 0x24
 8015f22:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015f24:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8015f28:	9016      	str	r0, [sp, #88]	; 0x58
 8015f2a:	930d      	str	r3, [sp, #52]	; 0x34
 8015f2c:	6850      	ldr	r0, [r2, #4]
 8015f2e:	910c      	str	r1, [sp, #48]	; 0x30
 8015f30:	6812      	ldr	r2, [r2, #0]
 8015f32:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8015f36:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8015f3a:	fb00 1303 	mla	r3, r0, r3, r1
 8015f3e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8015f42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015f44:	681b      	ldr	r3, [r3, #0]
 8015f46:	930b      	str	r3, [sp, #44]	; 0x2c
 8015f48:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015f4a:	685e      	ldr	r6, [r3, #4]
 8015f4c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015f4e:	3604      	adds	r6, #4
 8015f50:	43db      	mvns	r3, r3
 8015f52:	b2db      	uxtb	r3, r3
 8015f54:	930a      	str	r3, [sp, #40]	; 0x28
 8015f56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015f58:	2b00      	cmp	r3, #0
 8015f5a:	dc03      	bgt.n	8015f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8015f5c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015f5e:	2b00      	cmp	r3, #0
 8015f60:	f340 8225 	ble.w	80163ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8015f64:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015f66:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015f6a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015f6e:	1e48      	subs	r0, r1, #1
 8015f70:	1e57      	subs	r7, r2, #1
 8015f72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015f74:	2b00      	cmp	r3, #0
 8015f76:	f340 80e3 	ble.w	8016140 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015f7a:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8015f7e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8015f82:	d406      	bmi.n	8015f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015f84:	4584      	cmp	ip, r0
 8015f86:	da04      	bge.n	8015f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015f88:	2b00      	cmp	r3, #0
 8015f8a:	db02      	blt.n	8015f92 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015f8c:	42bb      	cmp	r3, r7
 8015f8e:	f2c0 80d8 	blt.w	8016142 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8015f92:	f11c 0c01 	adds.w	ip, ip, #1
 8015f96:	f100 80c9 	bmi.w	801612c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015f9a:	4561      	cmp	r1, ip
 8015f9c:	f2c0 80c6 	blt.w	801612c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015fa0:	3301      	adds	r3, #1
 8015fa2:	f100 80c3 	bmi.w	801612c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015fa6:	429a      	cmp	r2, r3
 8015fa8:	f2c0 80c0 	blt.w	801612c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015fac:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8015fb0:	4647      	mov	r7, r8
 8015fb2:	f1bb 0f00 	cmp.w	fp, #0
 8015fb6:	f340 80e3 	ble.w	8016180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8015fba:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015fbc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8015fc0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015fc2:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8015fc6:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8015fca:	ea5f 422a 	movs.w	r2, sl, asr #16
 8015fce:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8015fd2:	689b      	ldr	r3, [r3, #8]
 8015fd4:	f100 8121 	bmi.w	801621a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8015fd8:	f103 39ff 	add.w	r9, r3, #4294967295
 8015fdc:	454a      	cmp	r2, r9
 8015fde:	f280 811c 	bge.w	801621a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8015fe2:	f1bc 0f00 	cmp.w	ip, #0
 8015fe6:	f2c0 8118 	blt.w	801621a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8015fea:	f10e 39ff 	add.w	r9, lr, #4294967295
 8015fee:	45cc      	cmp	ip, r9
 8015ff0:	f280 8113 	bge.w	801621a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8015ff4:	b21b      	sxth	r3, r3
 8015ff6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015ff8:	fb0c 2203 	mla	r2, ip, r3, r2
 8015ffc:	eb04 0902 	add.w	r9, r4, r2
 8016000:	5ca2      	ldrb	r2, [r4, r2]
 8016002:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8016006:	2800      	cmp	r0, #0
 8016008:	f000 80fe 	beq.w	8016208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801600c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016010:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8016014:	9211      	str	r2, [sp, #68]	; 0x44
 8016016:	b151      	cbz	r1, 801602e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016018:	eb09 0203 	add.w	r2, r9, r3
 801601c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016020:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016024:	930f      	str	r3, [sp, #60]	; 0x3c
 8016026:	7853      	ldrb	r3, [r2, #1]
 8016028:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801602c:	9312      	str	r3, [sp, #72]	; 0x48
 801602e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016030:	fb10 f201 	smulbb	r2, r0, r1
 8016034:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016036:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801603a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801603e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8016042:	10d2      	asrs	r2, r2, #3
 8016044:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016048:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801604c:	ea4c 0c03 	orr.w	ip, ip, r3
 8016050:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016052:	041b      	lsls	r3, r3, #16
 8016054:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016058:	4323      	orrs	r3, r4
 801605a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801605c:	4353      	muls	r3, r2
 801605e:	fb09 330c 	mla	r3, r9, ip, r3
 8016062:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016066:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801606a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801606e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8016072:	f1c1 0c10 	rsb	ip, r1, #16
 8016076:	ebac 0c00 	sub.w	ip, ip, r0
 801607a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801607e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8016082:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016086:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016088:	0418      	lsls	r0, r3, #16
 801608a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801608e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016092:	4318      	orrs	r0, r3
 8016094:	fb02 c200 	mla	r2, r2, r0, ip
 8016098:	8838      	ldrh	r0, [r7, #0]
 801609a:	0d53      	lsrs	r3, r2, #21
 801609c:	0952      	lsrs	r2, r2, #5
 801609e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80160a2:	1201      	asrs	r1, r0, #8
 80160a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80160a8:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80160ac:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80160b0:	00c0      	lsls	r0, r0, #3
 80160b2:	431a      	orrs	r2, r3
 80160b4:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80160b8:	fb11 f104 	smulbb	r1, r1, r4
 80160bc:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80160c0:	b292      	uxth	r2, r2
 80160c2:	fb1e fe04 	smulbb	lr, lr, r4
 80160c6:	b2c0      	uxtb	r0, r0
 80160c8:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80160cc:	fb10 f004 	smulbb	r0, r0, r4
 80160d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80160d4:	fb0c 1c03 	mla	ip, ip, r3, r1
 80160d8:	10d1      	asrs	r1, r2, #3
 80160da:	00d2      	lsls	r2, r2, #3
 80160dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80160e0:	fa1f fc8c 	uxth.w	ip, ip
 80160e4:	b2d2      	uxtb	r2, r2
 80160e6:	fb01 e103 	mla	r1, r1, r3, lr
 80160ea:	fb02 0303 	mla	r3, r2, r3, r0
 80160ee:	b289      	uxth	r1, r1
 80160f0:	b29a      	uxth	r2, r3
 80160f2:	f10c 0301 	add.w	r3, ip, #1
 80160f6:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80160fa:	1c53      	adds	r3, r2, #1
 80160fc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016100:	1c4a      	adds	r2, r1, #1
 8016102:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016106:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801610a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801610e:	0949      	lsrs	r1, r1, #5
 8016110:	ea43 030c 	orr.w	r3, r3, ip
 8016114:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016118:	430b      	orrs	r3, r1
 801611a:	803b      	strh	r3, [r7, #0]
 801611c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801611e:	3702      	adds	r7, #2
 8016120:	f10b 3bff 	add.w	fp, fp, #4294967295
 8016124:	449a      	add	sl, r3
 8016126:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016128:	441d      	add	r5, r3
 801612a:	e742      	b.n	8015fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801612c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801612e:	f108 0802 	add.w	r8, r8, #2
 8016132:	449a      	add	sl, r3
 8016134:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016136:	441d      	add	r5, r3
 8016138:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801613a:	3b01      	subs	r3, #1
 801613c:	9309      	str	r3, [sp, #36]	; 0x24
 801613e:	e718      	b.n	8015f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8016140:	d023      	beq.n	801618a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8016142:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016144:	9825      	ldr	r0, [sp, #148]	; 0x94
 8016146:	3b01      	subs	r3, #1
 8016148:	fb00 a003 	mla	r0, r0, r3, sl
 801614c:	1400      	asrs	r0, r0, #16
 801614e:	f53f af2d 	bmi.w	8015fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016152:	3901      	subs	r1, #1
 8016154:	4288      	cmp	r0, r1
 8016156:	f6bf af29 	bge.w	8015fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801615a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801615c:	fb01 5303 	mla	r3, r1, r3, r5
 8016160:	141b      	asrs	r3, r3, #16
 8016162:	f53f af23 	bmi.w	8015fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8016166:	3a01      	subs	r2, #1
 8016168:	4293      	cmp	r3, r2
 801616a:	f6bf af1f 	bge.w	8015fac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801616e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8016172:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8016176:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801617a:	f1be 0f00 	cmp.w	lr, #0
 801617e:	dc6c      	bgt.n	801625a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8016180:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016182:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016186:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801618a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801618c:	2b00      	cmp	r3, #0
 801618e:	f340 810e 	ble.w	80163ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8016192:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016196:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8016198:	ee30 0a04 	vadd.f32	s0, s0, s8
 801619c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80161a0:	eef0 6a62 	vmov.f32	s13, s5
 80161a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80161a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80161ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80161b0:	ee16 aa90 	vmov	sl, s13
 80161b4:	eef0 6a43 	vmov.f32	s13, s6
 80161b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80161bc:	ee16 5a90 	vmov	r5, s13
 80161c0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80161c4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80161c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80161cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80161d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80161d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80161d8:	ee12 2a90 	vmov	r2, s5
 80161dc:	eef0 2a47 	vmov.f32	s5, s14
 80161e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80161e4:	ee13 2a10 	vmov	r2, s6
 80161e8:	9325      	str	r3, [sp, #148]	; 0x94
 80161ea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80161ec:	eeb0 3a67 	vmov.f32	s6, s15
 80161f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80161f4:	9326      	str	r3, [sp, #152]	; 0x98
 80161f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80161f8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80161fa:	3b01      	subs	r3, #1
 80161fc:	930c      	str	r3, [sp, #48]	; 0x30
 80161fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8016200:	bf08      	it	eq
 8016202:	4613      	moveq	r3, r2
 8016204:	9309      	str	r3, [sp, #36]	; 0x24
 8016206:	e6a6      	b.n	8015f56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016208:	2900      	cmp	r1, #0
 801620a:	f43f af10 	beq.w	801602e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801620e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8016212:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016216:	930f      	str	r3, [sp, #60]	; 0x3c
 8016218:	e709      	b.n	801602e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801621a:	f112 0901 	adds.w	r9, r2, #1
 801621e:	f53f af7d 	bmi.w	801611c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016222:	454b      	cmp	r3, r9
 8016224:	f6ff af7a 	blt.w	801611c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016228:	f11c 0901 	adds.w	r9, ip, #1
 801622c:	f53f af76 	bmi.w	801611c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016230:	45ce      	cmp	lr, r9
 8016232:	f6ff af73 	blt.w	801611c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016236:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8016238:	b21b      	sxth	r3, r3
 801623a:	9202      	str	r2, [sp, #8]
 801623c:	fa0f f28e 	sxth.w	r2, lr
 8016240:	9300      	str	r3, [sp, #0]
 8016242:	4633      	mov	r3, r6
 8016244:	9201      	str	r2, [sp, #4]
 8016246:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016248:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801624c:	e9cd c003 	strd	ip, r0, [sp, #12]
 8016250:	4639      	mov	r1, r7
 8016252:	9816      	ldr	r0, [sp, #88]	; 0x58
 8016254:	f7ff fd8e 	bl	8015d74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8016258:	e760      	b.n	801611c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801625a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801625c:	ea4f 422a 	mov.w	r2, sl, asr #16
 8016260:	1429      	asrs	r1, r5, #16
 8016262:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016264:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016268:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801626c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8016270:	fb03 2101 	mla	r1, r3, r1, r2
 8016274:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016276:	440a      	add	r2, r1
 8016278:	5c61      	ldrb	r1, [r4, r1]
 801627a:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801627e:	f1bc 0f00 	cmp.w	ip, #0
 8016282:	f000 808c 	beq.w	801639e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8016286:	7857      	ldrb	r7, [r2, #1]
 8016288:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801628c:	9413      	str	r4, [sp, #76]	; 0x4c
 801628e:	b140      	cbz	r0, 80162a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8016290:	18d7      	adds	r7, r2, r3
 8016292:	5cd3      	ldrb	r3, [r2, r3]
 8016294:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8016298:	9310      	str	r3, [sp, #64]	; 0x40
 801629a:	787b      	ldrb	r3, [r7, #1]
 801629c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80162a0:	9314      	str	r3, [sp, #80]	; 0x50
 80162a2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80162a4:	fb1c f200 	smulbb	r2, ip, r0
 80162a8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80162aa:	f10e 3eff 	add.w	lr, lr, #4294967295
 80162ae:	041f      	lsls	r7, r3, #16
 80162b0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80162b4:	10d2      	asrs	r2, r2, #3
 80162b6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80162ba:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80162be:	431f      	orrs	r7, r3
 80162c0:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80162c4:	9317      	str	r3, [sp, #92]	; 0x5c
 80162c6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80162c8:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80162ca:	041b      	lsls	r3, r3, #16
 80162cc:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80162d0:	ea43 030b 	orr.w	r3, r3, fp
 80162d4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80162d8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80162dc:	4353      	muls	r3, r2
 80162de:	fb04 3707 	mla	r7, r4, r7, r3
 80162e2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80162e6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80162e8:	ea43 0b01 	orr.w	fp, r3, r1
 80162ec:	f1c0 0110 	rsb	r1, r0, #16
 80162f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80162f2:	eba1 0c0c 	sub.w	ip, r1, ip
 80162f6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80162fa:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80162fe:	fb0c 770b 	mla	r7, ip, fp, r7
 8016302:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8016306:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801630a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801630e:	ea4c 0c0b 	orr.w	ip, ip, fp
 8016312:	fb02 770c 	mla	r7, r2, ip, r7
 8016316:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016318:	0d79      	lsrs	r1, r7, #21
 801631a:	8812      	ldrh	r2, [r2, #0]
 801631c:	097f      	lsrs	r7, r7, #5
 801631e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016322:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016326:	430f      	orrs	r7, r1
 8016328:	1211      	asrs	r1, r2, #8
 801632a:	b2bb      	uxth	r3, r7
 801632c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016330:	10d7      	asrs	r7, r2, #3
 8016332:	fb11 f104 	smulbb	r1, r1, r4
 8016336:	1218      	asrs	r0, r3, #8
 8016338:	00d2      	lsls	r2, r2, #3
 801633a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801633e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016342:	fb17 f704 	smulbb	r7, r7, r4
 8016346:	b2d2      	uxtb	r2, r2
 8016348:	fb00 1009 	mla	r0, r0, r9, r1
 801634c:	10d9      	asrs	r1, r3, #3
 801634e:	fb12 f204 	smulbb	r2, r2, r4
 8016352:	00db      	lsls	r3, r3, #3
 8016354:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016358:	b280      	uxth	r0, r0
 801635a:	b2db      	uxtb	r3, r3
 801635c:	fb01 7109 	mla	r1, r1, r9, r7
 8016360:	fb03 2309 	mla	r3, r3, r9, r2
 8016364:	1c42      	adds	r2, r0, #1
 8016366:	b289      	uxth	r1, r1
 8016368:	b29b      	uxth	r3, r3
 801636a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801636e:	1c4f      	adds	r7, r1, #1
 8016370:	1c5a      	adds	r2, r3, #1
 8016372:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8016376:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801637a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801637e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016380:	0949      	lsrs	r1, r1, #5
 8016382:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016386:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801638a:	4310      	orrs	r0, r2
 801638c:	4308      	orrs	r0, r1
 801638e:	f823 0b02 	strh.w	r0, [r3], #2
 8016392:	930e      	str	r3, [sp, #56]	; 0x38
 8016394:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016396:	449a      	add	sl, r3
 8016398:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801639a:	441d      	add	r5, r3
 801639c:	e6ed      	b.n	801617a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801639e:	2800      	cmp	r0, #0
 80163a0:	f43f af7f 	beq.w	80162a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80163a4:	5cd3      	ldrb	r3, [r2, r3]
 80163a6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80163aa:	9310      	str	r3, [sp, #64]	; 0x40
 80163ac:	e779      	b.n	80162a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80163ae:	b019      	add	sp, #100	; 0x64
 80163b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080163b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80163b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80163b8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80163bc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80163c0:	f1b8 0f00 	cmp.w	r8, #0
 80163c4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80163c8:	fb08 470e 	mla	r7, r8, lr, r4
 80163cc:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80163d0:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80163d4:	eb02 0907 	add.w	r9, r2, r7
 80163d8:	8808      	ldrh	r0, [r1, #0]
 80163da:	db67      	blt.n	80164ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80163dc:	45c2      	cmp	sl, r8
 80163de:	dd65      	ble.n	80164ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 80163e0:	2c00      	cmp	r4, #0
 80163e2:	db61      	blt.n	80164a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80163e4:	45a6      	cmp	lr, r4
 80163e6:	dd5f      	ble.n	80164a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 80163e8:	5dd2      	ldrb	r2, [r2, r7]
 80163ea:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80163ee:	1c62      	adds	r2, r4, #1
 80163f0:	d45f      	bmi.n	80164b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80163f2:	4596      	cmp	lr, r2
 80163f4:	dd5d      	ble.n	80164b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80163f6:	2d00      	cmp	r5, #0
 80163f8:	d05b      	beq.n	80164b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 80163fa:	f899 2001 	ldrb.w	r2, [r9, #1]
 80163fe:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8016402:	f118 0801 	adds.w	r8, r8, #1
 8016406:	d458      	bmi.n	80164ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016408:	45c2      	cmp	sl, r8
 801640a:	dd56      	ble.n	80164ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801640c:	2e00      	cmp	r6, #0
 801640e:	d054      	beq.n	80164ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8016410:	2c00      	cmp	r4, #0
 8016412:	db50      	blt.n	80164b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016414:	45a6      	cmp	lr, r4
 8016416:	dd4e      	ble.n	80164b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8016418:	f819 200e 	ldrb.w	r2, [r9, lr]
 801641c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8016420:	3401      	adds	r4, #1
 8016422:	d407      	bmi.n	8016434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016424:	45a6      	cmp	lr, r4
 8016426:	dd05      	ble.n	8016434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8016428:	b125      	cbz	r5, 8016434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801642a:	44ce      	add	lr, r9
 801642c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8016430:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8016434:	fb15 f406 	smulbb	r4, r5, r6
 8016438:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801643c:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8016440:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016444:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8016448:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801644c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016450:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016454:	ea43 0c0c 	orr.w	ip, r3, ip
 8016458:	f1c6 0310 	rsb	r3, r6, #16
 801645c:	ea4e 0707 	orr.w	r7, lr, r7
 8016460:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8016464:	1b5b      	subs	r3, r3, r5
 8016466:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801646a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801646e:	437d      	muls	r5, r7
 8016470:	fb03 5c0c 	mla	ip, r3, ip, r5
 8016474:	0403      	lsls	r3, r0, #16
 8016476:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801647a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801647e:	4318      	orrs	r0, r3
 8016480:	0413      	lsls	r3, r2, #16
 8016482:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016486:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801648a:	fb04 c000 	mla	r0, r4, r0, ip
 801648e:	4313      	orrs	r3, r2
 8016490:	fb06 0003 	mla	r0, r6, r3, r0
 8016494:	0d43      	lsrs	r3, r0, #21
 8016496:	0940      	lsrs	r0, r0, #5
 8016498:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801649c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80164a0:	4318      	orrs	r0, r3
 80164a2:	8008      	strh	r0, [r1, #0]
 80164a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80164a8:	4684      	mov	ip, r0
 80164aa:	e7a0      	b.n	80163ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80164ac:	4607      	mov	r7, r0
 80164ae:	4684      	mov	ip, r0
 80164b0:	e7a7      	b.n	8016402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80164b2:	4607      	mov	r7, r0
 80164b4:	e7a5      	b.n	8016402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80164b6:	4602      	mov	r2, r0
 80164b8:	e7b2      	b.n	8016420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80164ba:	4602      	mov	r2, r0
 80164bc:	e7ba      	b.n	8016434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080164be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80164be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80164c2:	b093      	sub	sp, #76	; 0x4c
 80164c4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80164c8:	920f      	str	r2, [sp, #60]	; 0x3c
 80164ca:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80164cc:	9010      	str	r0, [sp, #64]	; 0x40
 80164ce:	9108      	str	r1, [sp, #32]
 80164d0:	6850      	ldr	r0, [r2, #4]
 80164d2:	9306      	str	r3, [sp, #24]
 80164d4:	6812      	ldr	r2, [r2, #0]
 80164d6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 80164da:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80164de:	fb00 1303 	mla	r3, r0, r3, r1
 80164e2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80164e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80164e8:	681b      	ldr	r3, [r3, #0]
 80164ea:	9307      	str	r3, [sp, #28]
 80164ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80164ee:	685f      	ldr	r7, [r3, #4]
 80164f0:	3704      	adds	r7, #4
 80164f2:	9b08      	ldr	r3, [sp, #32]
 80164f4:	2b00      	cmp	r3, #0
 80164f6:	dc03      	bgt.n	8016500 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80164f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80164fa:	2b00      	cmp	r3, #0
 80164fc:	f340 81b2 	ble.w	8016864 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8016500:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016502:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016506:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801650a:	1e48      	subs	r0, r1, #1
 801650c:	f102 3cff 	add.w	ip, r2, #4294967295
 8016510:	9b06      	ldr	r3, [sp, #24]
 8016512:	2b00      	cmp	r3, #0
 8016514:	f340 80a9 	ble.w	801666a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8016518:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801651c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016520:	d406      	bmi.n	8016530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016522:	4586      	cmp	lr, r0
 8016524:	da04      	bge.n	8016530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016526:	2b00      	cmp	r3, #0
 8016528:	db02      	blt.n	8016530 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801652a:	4563      	cmp	r3, ip
 801652c:	f2c0 809e 	blt.w	801666c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016530:	f11e 0e01 	adds.w	lr, lr, #1
 8016534:	f100 808f 	bmi.w	8016656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016538:	4571      	cmp	r1, lr
 801653a:	f2c0 808c 	blt.w	8016656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801653e:	3301      	adds	r3, #1
 8016540:	f100 8089 	bmi.w	8016656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016544:	429a      	cmp	r2, r3
 8016546:	f2c0 8086 	blt.w	8016656 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801654a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801654e:	46c8      	mov	r8, r9
 8016550:	f1bb 0f00 	cmp.w	fp, #0
 8016554:	f340 80a6 	ble.w	80166a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016558:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801655a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801655e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016560:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8016564:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8016568:	1422      	asrs	r2, r4, #16
 801656a:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801656e:	689b      	ldr	r3, [r3, #8]
 8016570:	f100 80e3 	bmi.w	801673a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016574:	f103 3aff 	add.w	sl, r3, #4294967295
 8016578:	4552      	cmp	r2, sl
 801657a:	f280 80de 	bge.w	801673a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801657e:	f1bc 0f00 	cmp.w	ip, #0
 8016582:	f2c0 80da 	blt.w	801673a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016586:	f10e 3aff 	add.w	sl, lr, #4294967295
 801658a:	45d4      	cmp	ip, sl
 801658c:	f280 80d5 	bge.w	801673a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8016590:	b21b      	sxth	r3, r3
 8016592:	9d07      	ldr	r5, [sp, #28]
 8016594:	fb0c 2203 	mla	r2, ip, r3, r2
 8016598:	eb05 0a02 	add.w	sl, r5, r2
 801659c:	5caa      	ldrb	r2, [r5, r2]
 801659e:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80165a2:	2800      	cmp	r0, #0
 80165a4:	f000 80c0 	beq.w	8016728 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80165a8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80165ac:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80165b0:	920b      	str	r2, [sp, #44]	; 0x2c
 80165b2:	b151      	cbz	r1, 80165ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80165b4:	eb0a 0203 	add.w	r2, sl, r3
 80165b8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80165bc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80165c0:	9309      	str	r3, [sp, #36]	; 0x24
 80165c2:	7853      	ldrb	r3, [r2, #1]
 80165c4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80165c8:	930c      	str	r3, [sp, #48]	; 0x30
 80165ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80165cc:	fb10 f201 	smulbb	r2, r0, r1
 80165d0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80165d2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80165d6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80165da:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80165de:	10d2      	asrs	r2, r2, #3
 80165e0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80165e4:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80165e8:	ea4c 0c03 	orr.w	ip, ip, r3
 80165ec:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80165ee:	041b      	lsls	r3, r3, #16
 80165f0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80165f4:	432b      	orrs	r3, r5
 80165f6:	4353      	muls	r3, r2
 80165f8:	fb0a 330c 	mla	r3, sl, ip, r3
 80165fc:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8016600:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8016604:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016608:	ea4c 0e0e 	orr.w	lr, ip, lr
 801660c:	f1c1 0c10 	rsb	ip, r1, #16
 8016610:	ebac 0c00 	sub.w	ip, ip, r0
 8016614:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8016618:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801661c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8016620:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016622:	0418      	lsls	r0, r3, #16
 8016624:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016628:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801662c:	4318      	orrs	r0, r3
 801662e:	fb02 c200 	mla	r2, r2, r0, ip
 8016632:	0d53      	lsrs	r3, r2, #21
 8016634:	0952      	lsrs	r2, r2, #5
 8016636:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801663a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801663e:	431a      	orrs	r2, r3
 8016640:	f8a8 2000 	strh.w	r2, [r8]
 8016644:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016646:	f108 0802 	add.w	r8, r8, #2
 801664a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801664e:	441c      	add	r4, r3
 8016650:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016652:	441e      	add	r6, r3
 8016654:	e77c      	b.n	8016550 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016656:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016658:	f109 0902 	add.w	r9, r9, #2
 801665c:	441c      	add	r4, r3
 801665e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016660:	441e      	add	r6, r3
 8016662:	9b06      	ldr	r3, [sp, #24]
 8016664:	3b01      	subs	r3, #1
 8016666:	9306      	str	r3, [sp, #24]
 8016668:	e752      	b.n	8016510 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801666a:	d020      	beq.n	80166ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801666c:	9b06      	ldr	r3, [sp, #24]
 801666e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8016670:	3b01      	subs	r3, #1
 8016672:	fb00 4003 	mla	r0, r0, r3, r4
 8016676:	1400      	asrs	r0, r0, #16
 8016678:	f53f af67 	bmi.w	801654a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801667c:	3901      	subs	r1, #1
 801667e:	4288      	cmp	r0, r1
 8016680:	f6bf af63 	bge.w	801654a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016684:	9920      	ldr	r1, [sp, #128]	; 0x80
 8016686:	fb01 6303 	mla	r3, r1, r3, r6
 801668a:	141b      	asrs	r3, r3, #16
 801668c:	f53f af5d 	bmi.w	801654a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016690:	3a01      	subs	r2, #1
 8016692:	4293      	cmp	r3, r2
 8016694:	f6bf af59 	bge.w	801654a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016698:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801669c:	46ca      	mov	sl, r9
 801669e:	f1b8 0f00 	cmp.w	r8, #0
 80166a2:	dc67      	bgt.n	8016774 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80166a4:	9b06      	ldr	r3, [sp, #24]
 80166a6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80166aa:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80166ae:	9b08      	ldr	r3, [sp, #32]
 80166b0:	2b00      	cmp	r3, #0
 80166b2:	f340 80d7 	ble.w	8016864 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80166b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80166ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80166bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80166c0:	eeb0 6a62 	vmov.f32	s12, s5
 80166c4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80166c8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80166cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166d0:	ee16 4a10 	vmov	r4, s12
 80166d4:	eeb0 6a43 	vmov.f32	s12, s6
 80166d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166dc:	ee16 6a10 	vmov	r6, s12
 80166e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80166e4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80166e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80166ec:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80166f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80166f4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80166f8:	ee12 2a90 	vmov	r2, s5
 80166fc:	eef0 2a47 	vmov.f32	s5, s14
 8016700:	fb92 f3f3 	sdiv	r3, r2, r3
 8016704:	ee13 2a10 	vmov	r2, s6
 8016708:	931f      	str	r3, [sp, #124]	; 0x7c
 801670a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801670c:	eeb0 3a67 	vmov.f32	s6, s15
 8016710:	fb92 f3f3 	sdiv	r3, r2, r3
 8016714:	9320      	str	r3, [sp, #128]	; 0x80
 8016716:	9b08      	ldr	r3, [sp, #32]
 8016718:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801671a:	3b01      	subs	r3, #1
 801671c:	9308      	str	r3, [sp, #32]
 801671e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8016720:	bf08      	it	eq
 8016722:	4613      	moveq	r3, r2
 8016724:	9306      	str	r3, [sp, #24]
 8016726:	e6e4      	b.n	80164f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8016728:	2900      	cmp	r1, #0
 801672a:	f43f af4e 	beq.w	80165ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801672e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8016732:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016736:	9309      	str	r3, [sp, #36]	; 0x24
 8016738:	e747      	b.n	80165ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801673a:	f112 0a01 	adds.w	sl, r2, #1
 801673e:	d481      	bmi.n	8016644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016740:	4553      	cmp	r3, sl
 8016742:	f6ff af7f 	blt.w	8016644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016746:	f11c 0a01 	adds.w	sl, ip, #1
 801674a:	f53f af7b 	bmi.w	8016644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801674e:	45d6      	cmp	lr, sl
 8016750:	f6ff af78 	blt.w	8016644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016754:	b21b      	sxth	r3, r3
 8016756:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801675a:	fa0f f28e 	sxth.w	r2, lr
 801675e:	9300      	str	r3, [sp, #0]
 8016760:	463b      	mov	r3, r7
 8016762:	9201      	str	r2, [sp, #4]
 8016764:	9a07      	ldr	r2, [sp, #28]
 8016766:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801676a:	4641      	mov	r1, r8
 801676c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801676e:	f7ff fe21 	bl	80163b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8016772:	e767      	b.n	8016644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016774:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016776:	1422      	asrs	r2, r4, #16
 8016778:	1431      	asrs	r1, r6, #16
 801677a:	9d07      	ldr	r5, [sp, #28]
 801677c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016780:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8016784:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8016788:	fb03 2101 	mla	r1, r3, r1, r2
 801678c:	9a07      	ldr	r2, [sp, #28]
 801678e:	440a      	add	r2, r1
 8016790:	5c69      	ldrb	r1, [r5, r1]
 8016792:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8016796:	f1be 0f00 	cmp.w	lr, #0
 801679a:	d05c      	beq.n	8016856 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801679c:	f892 c001 	ldrb.w	ip, [r2, #1]
 80167a0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80167a4:	950d      	str	r5, [sp, #52]	; 0x34
 80167a6:	b150      	cbz	r0, 80167be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80167a8:	eb02 0c03 	add.w	ip, r2, r3
 80167ac:	5cd3      	ldrb	r3, [r2, r3]
 80167ae:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80167b2:	930a      	str	r3, [sp, #40]	; 0x28
 80167b4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80167b8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80167bc:	930e      	str	r3, [sp, #56]	; 0x38
 80167be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80167c0:	fb1e f200 	smulbb	r2, lr, r0
 80167c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80167c6:	f108 38ff 	add.w	r8, r8, #4294967295
 80167ca:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80167ce:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80167d2:	10d2      	asrs	r2, r2, #3
 80167d4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80167d8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80167dc:	ea4c 0c03 	orr.w	ip, ip, r3
 80167e0:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80167e4:	9311      	str	r3, [sp, #68]	; 0x44
 80167e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80167e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80167ea:	041b      	lsls	r3, r3, #16
 80167ec:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80167f0:	ea43 030b 	orr.w	r3, r3, fp
 80167f4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80167f8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80167fc:	4353      	muls	r3, r2
 80167fe:	fb05 3c0c 	mla	ip, r5, ip, r3
 8016802:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8016806:	ea43 0b01 	orr.w	fp, r3, r1
 801680a:	f1c0 0110 	rsb	r1, r0, #16
 801680e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016810:	eba1 0e0e 	sub.w	lr, r1, lr
 8016814:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8016818:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801681c:	fb0e cc0b 	mla	ip, lr, fp, ip
 8016820:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016824:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8016828:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801682c:	ea4b 0e0e 	orr.w	lr, fp, lr
 8016830:	fb02 cc0e 	mla	ip, r2, lr, ip
 8016834:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8016838:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801683c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016840:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016844:	ea43 0c0c 	orr.w	ip, r3, ip
 8016848:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801684a:	441c      	add	r4, r3
 801684c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801684e:	f82a cb02 	strh.w	ip, [sl], #2
 8016852:	441e      	add	r6, r3
 8016854:	e723      	b.n	801669e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8016856:	2800      	cmp	r0, #0
 8016858:	d0b1      	beq.n	80167be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801685a:	5cd3      	ldrb	r3, [r2, r3]
 801685c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8016860:	930a      	str	r3, [sp, #40]	; 0x28
 8016862:	e7ac      	b.n	80167be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8016864:	b013      	add	sp, #76	; 0x4c
 8016866:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801686a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801686a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801686e:	880d      	ldrh	r5, [r1, #0]
 8016870:	b087      	sub	sp, #28
 8016872:	10ef      	asrs	r7, r5, #3
 8016874:	9103      	str	r1, [sp, #12]
 8016876:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801687a:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801687e:	00ed      	lsls	r5, r5, #3
 8016880:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016884:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8016888:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801688c:	b2ed      	uxtb	r5, r5
 801688e:	9701      	str	r7, [sp, #4]
 8016890:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8016894:	9502      	str	r5, [sp, #8]
 8016896:	9d01      	ldr	r5, [sp, #4]
 8016898:	9902      	ldr	r1, [sp, #8]
 801689a:	022d      	lsls	r5, r5, #8
 801689c:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 80168a0:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 80168a4:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80168a8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 80168ac:	430d      	orrs	r5, r1
 80168ae:	fb06 0709 	mla	r7, r6, r9, r0
 80168b2:	2e00      	cmp	r6, #0
 80168b4:	9505      	str	r5, [sp, #20]
 80168b6:	eb02 0c07 	add.w	ip, r2, r7
 80168ba:	f2c0 80b6 	blt.w	8016a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80168be:	45b3      	cmp	fp, r6
 80168c0:	f340 80b3 	ble.w	8016a2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80168c4:	2800      	cmp	r0, #0
 80168c6:	f2c0 80ae 	blt.w	8016a26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80168ca:	4581      	cmp	r9, r0
 80168cc:	f340 80ab 	ble.w	8016a26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80168d0:	5dd7      	ldrb	r7, [r2, r7]
 80168d2:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80168d6:	441f      	add	r7, r3
 80168d8:	1c42      	adds	r2, r0, #1
 80168da:	f100 80a9 	bmi.w	8016a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80168de:	4591      	cmp	r9, r2
 80168e0:	f340 80a6 	ble.w	8016a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80168e4:	2c00      	cmp	r4, #0
 80168e6:	f000 80a3 	beq.w	8016a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80168ea:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80168ee:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80168f2:	441d      	add	r5, r3
 80168f4:	3601      	adds	r6, #1
 80168f6:	f100 809f 	bmi.w	8016a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80168fa:	45b3      	cmp	fp, r6
 80168fc:	f340 809c 	ble.w	8016a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016900:	f1be 0f00 	cmp.w	lr, #0
 8016904:	f000 8098 	beq.w	8016a38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8016908:	2800      	cmp	r0, #0
 801690a:	f2c0 8093 	blt.w	8016a34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801690e:	4581      	cmp	r9, r0
 8016910:	f340 8090 	ble.w	8016a34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8016914:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8016918:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801691c:	441e      	add	r6, r3
 801691e:	3001      	adds	r0, #1
 8016920:	f100 808d 	bmi.w	8016a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016924:	4581      	cmp	r9, r0
 8016926:	f340 808a 	ble.w	8016a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801692a:	2c00      	cmp	r4, #0
 801692c:	f000 8087 	beq.w	8016a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8016930:	44e1      	add	r9, ip
 8016932:	f899 2001 	ldrb.w	r2, [r9, #1]
 8016936:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801693a:	4413      	add	r3, r2
 801693c:	b2a4      	uxth	r4, r4
 801693e:	f897 c002 	ldrb.w	ip, [r7, #2]
 8016942:	fa1f fe8e 	uxth.w	lr, lr
 8016946:	9901      	ldr	r1, [sp, #4]
 8016948:	fb04 fb0e 	mul.w	fp, r4, lr
 801694c:	0124      	lsls	r4, r4, #4
 801694e:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8016952:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8016956:	eba4 040b 	sub.w	r4, r4, fp
 801695a:	fa1f f08e 	uxth.w	r0, lr
 801695e:	b2a2      	uxth	r2, r4
 8016960:	78ac      	ldrb	r4, [r5, #2]
 8016962:	eba9 0900 	sub.w	r9, r9, r0
 8016966:	fa1f fe88 	uxth.w	lr, r8
 801696a:	4354      	muls	r4, r2
 801696c:	ea6f 0808 	mvn.w	r8, r8
 8016970:	fa1f f989 	uxth.w	r9, r9
 8016974:	fa5f f888 	uxtb.w	r8, r8
 8016978:	fb09 440c 	mla	r4, r9, ip, r4
 801697c:	f896 c002 	ldrb.w	ip, [r6, #2]
 8016980:	fb1a fa08 	smulbb	sl, sl, r8
 8016984:	fb00 440c 	mla	r4, r0, ip, r4
 8016988:	f893 c002 	ldrb.w	ip, [r3, #2]
 801698c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8016990:	787c      	ldrb	r4, [r7, #1]
 8016992:	783f      	ldrb	r7, [r7, #0]
 8016994:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016998:	fb0c ac0e 	mla	ip, ip, lr, sl
 801699c:	f895 a001 	ldrb.w	sl, [r5, #1]
 80169a0:	782d      	ldrb	r5, [r5, #0]
 80169a2:	fb02 fa0a 	mul.w	sl, r2, sl
 80169a6:	fa1f fc8c 	uxth.w	ip, ip
 80169aa:	436a      	muls	r2, r5
 80169ac:	7835      	ldrb	r5, [r6, #0]
 80169ae:	fb09 aa04 	mla	sl, r9, r4, sl
 80169b2:	7874      	ldrb	r4, [r6, #1]
 80169b4:	fb09 2207 	mla	r2, r9, r7, r2
 80169b8:	fb00 aa04 	mla	sl, r0, r4, sl
 80169bc:	785c      	ldrb	r4, [r3, #1]
 80169be:	fb00 2005 	mla	r0, r0, r5, r2
 80169c2:	781b      	ldrb	r3, [r3, #0]
 80169c4:	fb0b a404 	mla	r4, fp, r4, sl
 80169c8:	fb11 fa08 	smulbb	sl, r1, r8
 80169cc:	fb0b 0b03 	mla	fp, fp, r3, r0
 80169d0:	9b02      	ldr	r3, [sp, #8]
 80169d2:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80169d6:	fb13 f808 	smulbb	r8, r3, r8
 80169da:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 80169de:	fb04 a40e 	mla	r4, r4, lr, sl
 80169e2:	f10c 0301 	add.w	r3, ip, #1
 80169e6:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80169ea:	b2a4      	uxth	r4, r4
 80169ec:	fa1f fe8e 	uxth.w	lr, lr
 80169f0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80169f4:	f104 0a01 	add.w	sl, r4, #1
 80169f8:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80169fc:	f10e 0c01 	add.w	ip, lr, #1
 8016a00:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8016a04:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8016a08:	0964      	lsrs	r4, r4, #5
 8016a0a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016a0e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8016a12:	ea4c 0c03 	orr.w	ip, ip, r3
 8016a16:	9b03      	ldr	r3, [sp, #12]
 8016a18:	ea4c 0c04 	orr.w	ip, ip, r4
 8016a1c:	f8a3 c000 	strh.w	ip, [r3]
 8016a20:	b007      	add	sp, #28
 8016a22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a26:	af05      	add	r7, sp, #20
 8016a28:	e756      	b.n	80168d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8016a2a:	ad05      	add	r5, sp, #20
 8016a2c:	462f      	mov	r7, r5
 8016a2e:	e761      	b.n	80168f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8016a30:	ad05      	add	r5, sp, #20
 8016a32:	e75f      	b.n	80168f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8016a34:	ae05      	add	r6, sp, #20
 8016a36:	e772      	b.n	801691e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8016a38:	ab05      	add	r3, sp, #20
 8016a3a:	461e      	mov	r6, r3
 8016a3c:	e77e      	b.n	801693c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8016a3e:	ab05      	add	r3, sp, #20
 8016a40:	e77c      	b.n	801693c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08016a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016a42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a46:	b095      	sub	sp, #84	; 0x54
 8016a48:	9212      	str	r2, [sp, #72]	; 0x48
 8016a4a:	9309      	str	r3, [sp, #36]	; 0x24
 8016a4c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8016a4e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8016a52:	9013      	str	r0, [sp, #76]	; 0x4c
 8016a54:	930f      	str	r3, [sp, #60]	; 0x3c
 8016a56:	6850      	ldr	r0, [r2, #4]
 8016a58:	910e      	str	r1, [sp, #56]	; 0x38
 8016a5a:	6812      	ldr	r2, [r2, #0]
 8016a5c:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8016a60:	fb00 1303 	mla	r3, r0, r3, r1
 8016a64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016a68:	930a      	str	r3, [sp, #40]	; 0x28
 8016a6a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016a6c:	681b      	ldr	r3, [r3, #0]
 8016a6e:	930d      	str	r3, [sp, #52]	; 0x34
 8016a70:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016a72:	685c      	ldr	r4, [r3, #4]
 8016a74:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016a76:	3404      	adds	r4, #4
 8016a78:	43db      	mvns	r3, r3
 8016a7a:	b2db      	uxtb	r3, r3
 8016a7c:	930b      	str	r3, [sp, #44]	; 0x2c
 8016a7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a80:	2b00      	cmp	r3, #0
 8016a82:	dc03      	bgt.n	8016a8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016a84:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8016a86:	2b00      	cmp	r3, #0
 8016a88:	f340 8255 	ble.w	8016f36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8016a8c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016a8e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016a92:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016a96:	1e48      	subs	r0, r1, #1
 8016a98:	1e55      	subs	r5, r2, #1
 8016a9a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016a9c:	2b00      	cmp	r3, #0
 8016a9e:	f340 80f9 	ble.w	8016c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8016aa2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8016aa4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016aa6:	1436      	asrs	r6, r6, #16
 8016aa8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016aac:	d406      	bmi.n	8016abc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016aae:	4286      	cmp	r6, r0
 8016ab0:	da04      	bge.n	8016abc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016ab2:	2b00      	cmp	r3, #0
 8016ab4:	db02      	blt.n	8016abc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016ab6:	42ab      	cmp	r3, r5
 8016ab8:	f2c0 80ed 	blt.w	8016c96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8016abc:	3601      	adds	r6, #1
 8016abe:	f100 80da 	bmi.w	8016c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016ac2:	42b1      	cmp	r1, r6
 8016ac4:	f2c0 80d7 	blt.w	8016c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016ac8:	3301      	adds	r3, #1
 8016aca:	f100 80d4 	bmi.w	8016c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016ace:	429a      	cmp	r2, r3
 8016ad0:	f2c0 80d1 	blt.w	8016c76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016ad4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016ad6:	9311      	str	r3, [sp, #68]	; 0x44
 8016ad8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016ada:	930c      	str	r3, [sp, #48]	; 0x30
 8016adc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016ade:	2b00      	cmp	r3, #0
 8016ae0:	f340 80fa 	ble.w	8016cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8016ae4:	9826      	ldr	r0, [sp, #152]	; 0x98
 8016ae6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016ae8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016aea:	68c6      	ldr	r6, [r0, #12]
 8016aec:	141d      	asrs	r5, r3, #16
 8016aee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8016af0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016af4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016af6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8016af8:	1400      	asrs	r0, r0, #16
 8016afa:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016afe:	6892      	ldr	r2, [r2, #8]
 8016b00:	f100 813e 	bmi.w	8016d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016b04:	1e57      	subs	r7, r2, #1
 8016b06:	42b8      	cmp	r0, r7
 8016b08:	f280 813a 	bge.w	8016d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016b0c:	2d00      	cmp	r5, #0
 8016b0e:	f2c0 8137 	blt.w	8016d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016b12:	1e77      	subs	r7, r6, #1
 8016b14:	42bd      	cmp	r5, r7
 8016b16:	f280 8133 	bge.w	8016d80 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8016b1a:	b212      	sxth	r2, r2
 8016b1c:	fb05 0002 	mla	r0, r5, r2, r0
 8016b20:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016b22:	f815 a000 	ldrb.w	sl, [r5, r0]
 8016b26:	182e      	adds	r6, r5, r0
 8016b28:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8016b2c:	eb04 050a 	add.w	r5, r4, sl
 8016b30:	2b00      	cmp	r3, #0
 8016b32:	f000 8117 	beq.w	8016d64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8016b36:	f896 c001 	ldrb.w	ip, [r6, #1]
 8016b3a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8016b3e:	44a4      	add	ip, r4
 8016b40:	2900      	cmp	r1, #0
 8016b42:	f000 8117 	beq.w	8016d74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8016b46:	18b0      	adds	r0, r6, r2
 8016b48:	5cb2      	ldrb	r2, [r6, r2]
 8016b4a:	7840      	ldrb	r0, [r0, #1]
 8016b4c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016b50:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016b54:	4422      	add	r2, r4
 8016b56:	4420      	add	r0, r4
 8016b58:	b29b      	uxth	r3, r3
 8016b5a:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8016b5e:	b289      	uxth	r1, r1
 8016b60:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016b64:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016b66:	fb03 f901 	mul.w	r9, r3, r1
 8016b6a:	011b      	lsls	r3, r3, #4
 8016b6c:	f8b6 e000 	ldrh.w	lr, [r6]
 8016b70:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8016b74:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8016b78:	eba3 0309 	sub.w	r3, r3, r9
 8016b7c:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8016b80:	b289      	uxth	r1, r1
 8016b82:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8016b86:	b29b      	uxth	r3, r3
 8016b88:	eba8 0801 	sub.w	r8, r8, r1
 8016b8c:	435f      	muls	r7, r3
 8016b8e:	fa1f f888 	uxth.w	r8, r8
 8016b92:	9310      	str	r3, [sp, #64]	; 0x40
 8016b94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016b96:	fb08 770b 	mla	r7, r8, fp, r7
 8016b9a:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016b9e:	fb01 770b 	mla	r7, r1, fp, r7
 8016ba2:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016ba6:	fb09 770b 	mla	r7, r9, fp, r7
 8016baa:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8016bae:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016bb2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016bb6:	fb1b fb03 	smulbb	fp, fp, r3
 8016bba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016bbc:	fb07 b706 	mla	r7, r7, r6, fp
 8016bc0:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016bc4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8016bc8:	f89c c000 	ldrb.w	ip, [ip]
 8016bcc:	b2bf      	uxth	r7, r7
 8016bce:	435d      	muls	r5, r3
 8016bd0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016bd2:	fb08 550b 	mla	r5, r8, fp, r5
 8016bd6:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016bda:	fb01 550b 	mla	r5, r1, fp, r5
 8016bde:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016be2:	fb09 550b 	mla	r5, r9, fp, r5
 8016be6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8016bea:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016bee:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016bf2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8016bf6:	fa5f fe8e 	uxtb.w	lr, lr
 8016bfa:	fb1b fb03 	smulbb	fp, fp, r3
 8016bfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c00:	fb03 f30c 	mul.w	r3, r3, ip
 8016c04:	f892 c000 	ldrb.w	ip, [r2]
 8016c08:	fb05 b506 	mla	r5, r5, r6, fp
 8016c0c:	fb08 330a 	mla	r3, r8, sl, r3
 8016c10:	b2ad      	uxth	r5, r5
 8016c12:	fb01 330c 	mla	r3, r1, ip, r3
 8016c16:	f890 c000 	ldrb.w	ip, [r0]
 8016c1a:	f105 0b01 	add.w	fp, r5, #1
 8016c1e:	fb09 3c0c 	mla	ip, r9, ip, r3
 8016c22:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016c24:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016c28:	fb1e fe03 	smulbb	lr, lr, r3
 8016c2c:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8016c30:	1c7b      	adds	r3, r7, #1
 8016c32:	096d      	lsrs	r5, r5, #5
 8016c34:	fb0c e606 	mla	r6, ip, r6, lr
 8016c38:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8016c3c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016c40:	b2b6      	uxth	r6, r6
 8016c42:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8016c46:	1c77      	adds	r7, r6, #1
 8016c48:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8016c4c:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8016c50:	431f      	orrs	r7, r3
 8016c52:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016c54:	433d      	orrs	r5, r7
 8016c56:	801d      	strh	r5, [r3, #0]
 8016c58:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016c5a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016c5c:	3302      	adds	r3, #2
 8016c5e:	930c      	str	r3, [sp, #48]	; 0x30
 8016c60:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016c62:	4413      	add	r3, r2
 8016c64:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8016c66:	931f      	str	r3, [sp, #124]	; 0x7c
 8016c68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016c6a:	4413      	add	r3, r2
 8016c6c:	9320      	str	r3, [sp, #128]	; 0x80
 8016c6e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016c70:	3b01      	subs	r3, #1
 8016c72:	9311      	str	r3, [sp, #68]	; 0x44
 8016c74:	e732      	b.n	8016adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016c76:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016c78:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8016c7a:	4433      	add	r3, r6
 8016c7c:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8016c7e:	931f      	str	r3, [sp, #124]	; 0x7c
 8016c80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016c82:	4433      	add	r3, r6
 8016c84:	9320      	str	r3, [sp, #128]	; 0x80
 8016c86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016c88:	3b01      	subs	r3, #1
 8016c8a:	9309      	str	r3, [sp, #36]	; 0x24
 8016c8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016c8e:	3302      	adds	r3, #2
 8016c90:	930a      	str	r3, [sp, #40]	; 0x28
 8016c92:	e702      	b.n	8016a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016c94:	d027      	beq.n	8016ce6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8016c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016c98:	9821      	ldr	r0, [sp, #132]	; 0x84
 8016c9a:	3b01      	subs	r3, #1
 8016c9c:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8016c9e:	fb00 5003 	mla	r0, r0, r3, r5
 8016ca2:	1400      	asrs	r0, r0, #16
 8016ca4:	f53f af16 	bmi.w	8016ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016ca8:	3901      	subs	r1, #1
 8016caa:	4288      	cmp	r0, r1
 8016cac:	f6bf af12 	bge.w	8016ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016cb0:	9922      	ldr	r1, [sp, #136]	; 0x88
 8016cb2:	9820      	ldr	r0, [sp, #128]	; 0x80
 8016cb4:	fb01 0303 	mla	r3, r1, r3, r0
 8016cb8:	141b      	asrs	r3, r3, #16
 8016cba:	f53f af0b 	bmi.w	8016ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016cbe:	3a01      	subs	r2, #1
 8016cc0:	4293      	cmp	r3, r2
 8016cc2:	f6bf af07 	bge.w	8016ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016cc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016cc8:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8016ccc:	9311      	str	r3, [sp, #68]	; 0x44
 8016cce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016cd0:	930c      	str	r3, [sp, #48]	; 0x30
 8016cd2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016cd4:	2b00      	cmp	r3, #0
 8016cd6:	dc70      	bgt.n	8016dba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8016cd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016cda:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016cdc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016ce0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016ce4:	930a      	str	r3, [sp, #40]	; 0x28
 8016ce6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016ce8:	2b00      	cmp	r3, #0
 8016cea:	f340 8124 	ble.w	8016f36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8016cee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016cf2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016cf4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016cf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016cfc:	eef0 6a62 	vmov.f32	s13, s5
 8016d00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016d04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016d08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016d0c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8016d10:	eef0 6a43 	vmov.f32	s13, s6
 8016d14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016d18:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8016d1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016d20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d34:	ee12 2a90 	vmov	r2, s5
 8016d38:	eef0 2a47 	vmov.f32	s5, s14
 8016d3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d40:	ee13 2a10 	vmov	r2, s6
 8016d44:	9321      	str	r3, [sp, #132]	; 0x84
 8016d46:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016d48:	eeb0 3a67 	vmov.f32	s6, s15
 8016d4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d50:	9322      	str	r3, [sp, #136]	; 0x88
 8016d52:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016d54:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016d56:	3b01      	subs	r3, #1
 8016d58:	930e      	str	r3, [sp, #56]	; 0x38
 8016d5a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8016d5c:	bf08      	it	eq
 8016d5e:	4613      	moveq	r3, r2
 8016d60:	9309      	str	r3, [sp, #36]	; 0x24
 8016d62:	e68c      	b.n	8016a7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016d64:	b149      	cbz	r1, 8016d7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8016d66:	5cb2      	ldrb	r2, [r6, r2]
 8016d68:	4628      	mov	r0, r5
 8016d6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016d6e:	4422      	add	r2, r4
 8016d70:	46ac      	mov	ip, r5
 8016d72:	e6f1      	b.n	8016b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016d74:	4628      	mov	r0, r5
 8016d76:	462a      	mov	r2, r5
 8016d78:	e6ee      	b.n	8016b58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016d7a:	4628      	mov	r0, r5
 8016d7c:	462a      	mov	r2, r5
 8016d7e:	e7f7      	b.n	8016d70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8016d80:	1c47      	adds	r7, r0, #1
 8016d82:	f53f af69 	bmi.w	8016c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016d86:	42ba      	cmp	r2, r7
 8016d88:	f6ff af66 	blt.w	8016c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016d8c:	1c6f      	adds	r7, r5, #1
 8016d8e:	f53f af63 	bmi.w	8016c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016d92:	42be      	cmp	r6, r7
 8016d94:	f6ff af60 	blt.w	8016c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016d98:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016d9a:	b236      	sxth	r6, r6
 8016d9c:	b212      	sxth	r2, r2
 8016d9e:	9002      	str	r0, [sp, #8]
 8016da0:	9601      	str	r6, [sp, #4]
 8016da2:	9200      	str	r2, [sp, #0]
 8016da4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016da6:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8016daa:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8016dae:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8016db2:	4623      	mov	r3, r4
 8016db4:	f7ff fd59 	bl	801686a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8016db8:	e74e      	b.n	8016c58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8016dba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8016dbc:	9820      	ldr	r0, [sp, #128]	; 0x80
 8016dbe:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8016dc2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8016dc4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8016dc6:	1400      	asrs	r0, r0, #16
 8016dc8:	142d      	asrs	r5, r5, #16
 8016dca:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016dcc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8016dd0:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8016dd4:	fb02 5000 	mla	r0, r2, r0, r5
 8016dd8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8016dda:	f815 9000 	ldrb.w	r9, [r5, r0]
 8016dde:	182e      	adds	r6, r5, r0
 8016de0:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8016de4:	eb04 0509 	add.w	r5, r4, r9
 8016de8:	2b00      	cmp	r3, #0
 8016dea:	f000 8096 	beq.w	8016f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8016dee:	7877      	ldrb	r7, [r6, #1]
 8016df0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016df4:	4427      	add	r7, r4
 8016df6:	2900      	cmp	r1, #0
 8016df8:	f000 8097 	beq.w	8016f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8016dfc:	18b0      	adds	r0, r6, r2
 8016dfe:	5cb2      	ldrb	r2, [r6, r2]
 8016e00:	7840      	ldrb	r0, [r0, #1]
 8016e02:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016e06:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8016e0a:	4422      	add	r2, r4
 8016e0c:	4420      	add	r0, r4
 8016e0e:	b29b      	uxth	r3, r3
 8016e10:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8016e12:	b289      	uxth	r1, r1
 8016e14:	f895 b002 	ldrb.w	fp, [r5, #2]
 8016e18:	f8b6 c000 	ldrh.w	ip, [r6]
 8016e1c:	fb03 f801 	mul.w	r8, r3, r1
 8016e20:	011b      	lsls	r3, r3, #4
 8016e22:	78be      	ldrb	r6, [r7, #2]
 8016e24:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8016e28:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8016e2c:	eba3 0308 	sub.w	r3, r3, r8
 8016e30:	f814 9009 	ldrb.w	r9, [r4, r9]
 8016e34:	b289      	uxth	r1, r1
 8016e36:	b29b      	uxth	r3, r3
 8016e38:	ebae 0e01 	sub.w	lr, lr, r1
 8016e3c:	435e      	muls	r6, r3
 8016e3e:	fa1f fe8e 	uxth.w	lr, lr
 8016e42:	9310      	str	r3, [sp, #64]	; 0x40
 8016e44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016e46:	fb0e 660b 	mla	r6, lr, fp, r6
 8016e4a:	f892 b002 	ldrb.w	fp, [r2, #2]
 8016e4e:	fb01 660b 	mla	r6, r1, fp, r6
 8016e52:	f890 b002 	ldrb.w	fp, [r0, #2]
 8016e56:	fb08 660b 	mla	r6, r8, fp, r6
 8016e5a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8016e5e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8016e62:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016e66:	fb1b fb03 	smulbb	fp, fp, r3
 8016e6a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e6c:	fb06 b60a 	mla	r6, r6, sl, fp
 8016e70:	f895 b001 	ldrb.w	fp, [r5, #1]
 8016e74:	787d      	ldrb	r5, [r7, #1]
 8016e76:	783f      	ldrb	r7, [r7, #0]
 8016e78:	b2b6      	uxth	r6, r6
 8016e7a:	435d      	muls	r5, r3
 8016e7c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016e7e:	fb0e 550b 	mla	r5, lr, fp, r5
 8016e82:	f892 b001 	ldrb.w	fp, [r2, #1]
 8016e86:	fb01 550b 	mla	r5, r1, fp, r5
 8016e8a:	f890 b001 	ldrb.w	fp, [r0, #1]
 8016e8e:	fb08 550b 	mla	r5, r8, fp, r5
 8016e92:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8016e96:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016e9a:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8016e9e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8016ea2:	fa5f fc8c 	uxtb.w	ip, ip
 8016ea6:	fb1b fb03 	smulbb	fp, fp, r3
 8016eaa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016eac:	437b      	muls	r3, r7
 8016eae:	7817      	ldrb	r7, [r2, #0]
 8016eb0:	fb05 b50a 	mla	r5, r5, sl, fp
 8016eb4:	fb0e 3309 	mla	r3, lr, r9, r3
 8016eb8:	b2ad      	uxth	r5, r5
 8016eba:	fb01 3307 	mla	r3, r1, r7, r3
 8016ebe:	7807      	ldrb	r7, [r0, #0]
 8016ec0:	f105 0b01 	add.w	fp, r5, #1
 8016ec4:	fb08 3707 	mla	r7, r8, r7, r3
 8016ec8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016eca:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8016ece:	fb1c fc03 	smulbb	ip, ip, r3
 8016ed2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8016ed6:	1c73      	adds	r3, r6, #1
 8016ed8:	096d      	lsrs	r5, r5, #5
 8016eda:	fb07 c70a 	mla	r7, r7, sl, ip
 8016ede:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8016ee2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016ee6:	b2bf      	uxth	r7, r7
 8016ee8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016eea:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016eee:	1c7a      	adds	r2, r7, #1
 8016ef0:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8016ef4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016ef8:	4316      	orrs	r6, r2
 8016efa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8016efc:	432e      	orrs	r6, r5
 8016efe:	f823 6b02 	strh.w	r6, [r3], #2
 8016f02:	930c      	str	r3, [sp, #48]	; 0x30
 8016f04:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8016f06:	4413      	add	r3, r2
 8016f08:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8016f0a:	931f      	str	r3, [sp, #124]	; 0x7c
 8016f0c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016f0e:	4413      	add	r3, r2
 8016f10:	9320      	str	r3, [sp, #128]	; 0x80
 8016f12:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8016f14:	3b01      	subs	r3, #1
 8016f16:	9311      	str	r3, [sp, #68]	; 0x44
 8016f18:	e6db      	b.n	8016cd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8016f1a:	b149      	cbz	r1, 8016f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8016f1c:	5cb2      	ldrb	r2, [r6, r2]
 8016f1e:	4628      	mov	r0, r5
 8016f20:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016f24:	4422      	add	r2, r4
 8016f26:	462f      	mov	r7, r5
 8016f28:	e771      	b.n	8016e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8016f2a:	4628      	mov	r0, r5
 8016f2c:	462a      	mov	r2, r5
 8016f2e:	e76e      	b.n	8016e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8016f30:	4628      	mov	r0, r5
 8016f32:	462a      	mov	r2, r5
 8016f34:	e7f7      	b.n	8016f26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8016f36:	b015      	add	sp, #84	; 0x54
 8016f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016f3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8016f3c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f40:	880f      	ldrh	r7, [r1, #0]
 8016f42:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8016f46:	023c      	lsls	r4, r7, #8
 8016f48:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8016f4c:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8016f50:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8016f54:	017c      	lsls	r4, r7, #5
 8016f56:	00ff      	lsls	r7, r7, #3
 8016f58:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8016f5c:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8016f60:	b2ff      	uxtb	r7, r7
 8016f62:	ea4b 0404 	orr.w	r4, fp, r4
 8016f66:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8016f6a:	4327      	orrs	r7, r4
 8016f6c:	fb05 ca0e 	mla	sl, r5, lr, ip
 8016f70:	2d00      	cmp	r5, #0
 8016f72:	9701      	str	r7, [sp, #4]
 8016f74:	eb02 080a 	add.w	r8, r2, sl
 8016f78:	db7e      	blt.n	8017078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8016f7a:	45a9      	cmp	r9, r5
 8016f7c:	dd7c      	ble.n	8017078 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8016f7e:	f1bc 0f00 	cmp.w	ip, #0
 8016f82:	db77      	blt.n	8017074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8016f84:	45e6      	cmp	lr, ip
 8016f86:	dd75      	ble.n	8017074 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8016f88:	f812 700a 	ldrb.w	r7, [r2, sl]
 8016f8c:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8016f90:	441f      	add	r7, r3
 8016f92:	f11c 0201 	adds.w	r2, ip, #1
 8016f96:	d472      	bmi.n	801707e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8016f98:	4596      	cmp	lr, r2
 8016f9a:	dd70      	ble.n	801707e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8016f9c:	2800      	cmp	r0, #0
 8016f9e:	d06e      	beq.n	801707e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8016fa0:	f898 4001 	ldrb.w	r4, [r8, #1]
 8016fa4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8016fa8:	441c      	add	r4, r3
 8016faa:	3501      	adds	r5, #1
 8016fac:	d46b      	bmi.n	8017086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8016fae:	45a9      	cmp	r9, r5
 8016fb0:	dd69      	ble.n	8017086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8016fb2:	2e00      	cmp	r6, #0
 8016fb4:	d067      	beq.n	8017086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8016fb6:	f1bc 0f00 	cmp.w	ip, #0
 8016fba:	db62      	blt.n	8017082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8016fbc:	45e6      	cmp	lr, ip
 8016fbe:	dd60      	ble.n	8017082 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8016fc0:	f818 500e 	ldrb.w	r5, [r8, lr]
 8016fc4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8016fc8:	441d      	add	r5, r3
 8016fca:	f11c 0201 	adds.w	r2, ip, #1
 8016fce:	d45d      	bmi.n	801708c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8016fd0:	4596      	cmp	lr, r2
 8016fd2:	dd5b      	ble.n	801708c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8016fd4:	2800      	cmp	r0, #0
 8016fd6:	d059      	beq.n	801708c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8016fd8:	44c6      	add	lr, r8
 8016fda:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8016fde:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8016fe2:	4413      	add	r3, r2
 8016fe4:	b280      	uxth	r0, r0
 8016fe6:	f897 e002 	ldrb.w	lr, [r7, #2]
 8016fea:	b2b2      	uxth	r2, r6
 8016fec:	f897 9000 	ldrb.w	r9, [r7]
 8016ff0:	787f      	ldrb	r7, [r7, #1]
 8016ff2:	fb00 f602 	mul.w	r6, r0, r2
 8016ff6:	0100      	lsls	r0, r0, #4
 8016ff8:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8016ffc:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8017000:	1b80      	subs	r0, r0, r6
 8017002:	fa1f fc82 	uxth.w	ip, r2
 8017006:	b282      	uxth	r2, r0
 8017008:	78a0      	ldrb	r0, [r4, #2]
 801700a:	eba8 080c 	sub.w	r8, r8, ip
 801700e:	4350      	muls	r0, r2
 8017010:	fa1f f888 	uxth.w	r8, r8
 8017014:	fb08 0e0e 	mla	lr, r8, lr, r0
 8017018:	78a8      	ldrb	r0, [r5, #2]
 801701a:	fb0c e000 	mla	r0, ip, r0, lr
 801701e:	f893 e002 	ldrb.w	lr, [r3, #2]
 8017022:	fb06 0e0e 	mla	lr, r6, lr, r0
 8017026:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801702a:	f894 e000 	ldrb.w	lr, [r4]
 801702e:	fb02 fe0e 	mul.w	lr, r2, lr
 8017032:	fb08 e909 	mla	r9, r8, r9, lr
 8017036:	f895 e000 	ldrb.w	lr, [r5]
 801703a:	fb0c 990e 	mla	r9, ip, lr, r9
 801703e:	f893 e000 	ldrb.w	lr, [r3]
 8017042:	785b      	ldrb	r3, [r3, #1]
 8017044:	fb06 9e0e 	mla	lr, r6, lr, r9
 8017048:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801704c:	ea4e 0e00 	orr.w	lr, lr, r0
 8017050:	7860      	ldrb	r0, [r4, #1]
 8017052:	4350      	muls	r0, r2
 8017054:	786a      	ldrb	r2, [r5, #1]
 8017056:	fb08 0007 	mla	r0, r8, r7, r0
 801705a:	fb0c 0202 	mla	r2, ip, r2, r0
 801705e:	fb06 2303 	mla	r3, r6, r3, r2
 8017062:	095b      	lsrs	r3, r3, #5
 8017064:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017068:	ea4e 0303 	orr.w	r3, lr, r3
 801706c:	800b      	strh	r3, [r1, #0]
 801706e:	b003      	add	sp, #12
 8017070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017074:	af01      	add	r7, sp, #4
 8017076:	e78c      	b.n	8016f92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8017078:	ac01      	add	r4, sp, #4
 801707a:	4627      	mov	r7, r4
 801707c:	e795      	b.n	8016faa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801707e:	ac01      	add	r4, sp, #4
 8017080:	e793      	b.n	8016faa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8017082:	ad01      	add	r5, sp, #4
 8017084:	e7a1      	b.n	8016fca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8017086:	ab01      	add	r3, sp, #4
 8017088:	461d      	mov	r5, r3
 801708a:	e7ab      	b.n	8016fe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801708c:	ab01      	add	r3, sp, #4
 801708e:	e7a9      	b.n	8016fe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08017090 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017094:	b08f      	sub	sp, #60	; 0x3c
 8017096:	920c      	str	r2, [sp, #48]	; 0x30
 8017098:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801709a:	900d      	str	r0, [sp, #52]	; 0x34
 801709c:	910a      	str	r1, [sp, #40]	; 0x28
 801709e:	6850      	ldr	r0, [r2, #4]
 80170a0:	9306      	str	r3, [sp, #24]
 80170a2:	6812      	ldr	r2, [r2, #0]
 80170a4:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 80170a8:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 80170ac:	fb00 1303 	mla	r3, r0, r3, r1
 80170b0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80170b4:	9307      	str	r3, [sp, #28]
 80170b6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80170b8:	681b      	ldr	r3, [r3, #0]
 80170ba:	9308      	str	r3, [sp, #32]
 80170bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80170be:	685c      	ldr	r4, [r3, #4]
 80170c0:	3404      	adds	r4, #4
 80170c2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80170c4:	2b00      	cmp	r3, #0
 80170c6:	dc03      	bgt.n	80170d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80170c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80170ca:	2b00      	cmp	r3, #0
 80170cc:	f340 81d5 	ble.w	801747a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80170d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80170d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80170d6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80170da:	1e48      	subs	r0, r1, #1
 80170dc:	1e56      	subs	r6, r2, #1
 80170de:	9b06      	ldr	r3, [sp, #24]
 80170e0:	2b00      	cmp	r3, #0
 80170e2:	f340 80b6 	ble.w	8017252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80170e6:	ea5f 472b 	movs.w	r7, fp, asr #16
 80170ea:	ea4f 4325 	mov.w	r3, r5, asr #16
 80170ee:	d406      	bmi.n	80170fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80170f0:	4287      	cmp	r7, r0
 80170f2:	da04      	bge.n	80170fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80170f4:	2b00      	cmp	r3, #0
 80170f6:	db02      	blt.n	80170fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80170f8:	42b3      	cmp	r3, r6
 80170fa:	f2c0 80ab 	blt.w	8017254 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 80170fe:	3701      	adds	r7, #1
 8017100:	f100 809c 	bmi.w	801723c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8017104:	42b9      	cmp	r1, r7
 8017106:	f2c0 8099 	blt.w	801723c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801710a:	3301      	adds	r3, #1
 801710c:	f100 8096 	bmi.w	801723c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8017110:	429a      	cmp	r2, r3
 8017112:	f2c0 8093 	blt.w	801723c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8017116:	9b06      	ldr	r3, [sp, #24]
 8017118:	930b      	str	r3, [sp, #44]	; 0x2c
 801711a:	9b07      	ldr	r3, [sp, #28]
 801711c:	9309      	str	r3, [sp, #36]	; 0x24
 801711e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017120:	2b00      	cmp	r3, #0
 8017122:	f340 80b4 	ble.w	801728e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8017126:	9820      	ldr	r0, [sp, #128]	; 0x80
 8017128:	142e      	asrs	r6, r5, #16
 801712a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801712c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8017130:	68c7      	ldr	r7, [r0, #12]
 8017132:	ea5f 402b 	movs.w	r0, fp, asr #16
 8017136:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801713a:	6892      	ldr	r2, [r2, #8]
 801713c:	f100 80fb 	bmi.w	8017336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017140:	f102 3cff 	add.w	ip, r2, #4294967295
 8017144:	4560      	cmp	r0, ip
 8017146:	f280 80f6 	bge.w	8017336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801714a:	2e00      	cmp	r6, #0
 801714c:	f2c0 80f3 	blt.w	8017336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8017150:	f107 3cff 	add.w	ip, r7, #4294967295
 8017154:	4566      	cmp	r6, ip
 8017156:	f280 80ee 	bge.w	8017336 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801715a:	b212      	sxth	r2, r2
 801715c:	fb06 0002 	mla	r0, r6, r2, r0
 8017160:	9e08      	ldr	r6, [sp, #32]
 8017162:	1837      	adds	r7, r6, r0
 8017164:	5c30      	ldrb	r0, [r6, r0]
 8017166:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801716a:	eb04 0c08 	add.w	ip, r4, r8
 801716e:	2b00      	cmp	r3, #0
 8017170:	f000 80d3 	beq.w	801731a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 8017174:	787e      	ldrb	r6, [r7, #1]
 8017176:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801717a:	4426      	add	r6, r4
 801717c:	2900      	cmp	r1, #0
 801717e:	f000 80d4 	beq.w	801732a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017182:	18b8      	adds	r0, r7, r2
 8017184:	5cba      	ldrb	r2, [r7, r2]
 8017186:	7840      	ldrb	r0, [r0, #1]
 8017188:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801718c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8017190:	4422      	add	r2, r4
 8017192:	4420      	add	r0, r4
 8017194:	b29b      	uxth	r3, r3
 8017196:	78b7      	ldrb	r7, [r6, #2]
 8017198:	b289      	uxth	r1, r1
 801719a:	f89c a002 	ldrb.w	sl, [ip, #2]
 801719e:	f89c c001 	ldrb.w	ip, [ip, #1]
 80171a2:	fb03 f901 	mul.w	r9, r3, r1
 80171a6:	011b      	lsls	r3, r3, #4
 80171a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80171ac:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80171b0:	eba3 0309 	sub.w	r3, r3, r9
 80171b4:	b289      	uxth	r1, r1
 80171b6:	b29b      	uxth	r3, r3
 80171b8:	ebae 0e01 	sub.w	lr, lr, r1
 80171bc:	435f      	muls	r7, r3
 80171be:	fa1f fe8e 	uxth.w	lr, lr
 80171c2:	fb0e 770a 	mla	r7, lr, sl, r7
 80171c6:	f892 a002 	ldrb.w	sl, [r2, #2]
 80171ca:	fb01 770a 	mla	r7, r1, sl, r7
 80171ce:	f890 a002 	ldrb.w	sl, [r0, #2]
 80171d2:	fb09 7a0a 	mla	sl, r9, sl, r7
 80171d6:	f814 7008 	ldrb.w	r7, [r4, r8]
 80171da:	f896 8000 	ldrb.w	r8, [r6]
 80171de:	7876      	ldrb	r6, [r6, #1]
 80171e0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80171e4:	fb03 f808 	mul.w	r8, r3, r8
 80171e8:	4373      	muls	r3, r6
 80171ea:	fb0e 8807 	mla	r8, lr, r7, r8
 80171ee:	7817      	ldrb	r7, [r2, #0]
 80171f0:	fb0e 330c 	mla	r3, lr, ip, r3
 80171f4:	fb01 8807 	mla	r8, r1, r7, r8
 80171f8:	7807      	ldrb	r7, [r0, #0]
 80171fa:	fb09 8707 	mla	r7, r9, r7, r8
 80171fe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017202:	ea47 070a 	orr.w	r7, r7, sl
 8017206:	f892 a001 	ldrb.w	sl, [r2, #1]
 801720a:	fb01 310a 	mla	r1, r1, sl, r3
 801720e:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017212:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017214:	fb09 1a0a 	mla	sl, r9, sl, r1
 8017218:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801721c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017220:	ea47 070a 	orr.w	r7, r7, sl
 8017224:	801f      	strh	r7, [r3, #0]
 8017226:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017228:	3302      	adds	r3, #2
 801722a:	9309      	str	r3, [sp, #36]	; 0x24
 801722c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801722e:	449b      	add	fp, r3
 8017230:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017232:	441d      	add	r5, r3
 8017234:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017236:	3b01      	subs	r3, #1
 8017238:	930b      	str	r3, [sp, #44]	; 0x2c
 801723a:	e770      	b.n	801711e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801723c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801723e:	449b      	add	fp, r3
 8017240:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017242:	441d      	add	r5, r3
 8017244:	9b06      	ldr	r3, [sp, #24]
 8017246:	3b01      	subs	r3, #1
 8017248:	9306      	str	r3, [sp, #24]
 801724a:	9b07      	ldr	r3, [sp, #28]
 801724c:	3302      	adds	r3, #2
 801724e:	9307      	str	r3, [sp, #28]
 8017250:	e745      	b.n	80170de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8017252:	d023      	beq.n	801729c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8017254:	9b06      	ldr	r3, [sp, #24]
 8017256:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8017258:	3b01      	subs	r3, #1
 801725a:	fb00 b003 	mla	r0, r0, r3, fp
 801725e:	1400      	asrs	r0, r0, #16
 8017260:	f53f af59 	bmi.w	8017116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017264:	3901      	subs	r1, #1
 8017266:	4288      	cmp	r0, r1
 8017268:	f6bf af55 	bge.w	8017116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801726c:	991c      	ldr	r1, [sp, #112]	; 0x70
 801726e:	fb01 5303 	mla	r3, r1, r3, r5
 8017272:	141b      	asrs	r3, r3, #16
 8017274:	f53f af4f 	bmi.w	8017116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017278:	3a01      	subs	r2, #1
 801727a:	4293      	cmp	r3, r2
 801727c:	f6bf af4b 	bge.w	8017116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017280:	9b06      	ldr	r3, [sp, #24]
 8017282:	9309      	str	r3, [sp, #36]	; 0x24
 8017284:	9b07      	ldr	r3, [sp, #28]
 8017286:	930b      	str	r3, [sp, #44]	; 0x2c
 8017288:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801728a:	2b00      	cmp	r3, #0
 801728c:	dc70      	bgt.n	8017370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801728e:	9b06      	ldr	r3, [sp, #24]
 8017290:	9a07      	ldr	r2, [sp, #28]
 8017292:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017296:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801729a:	9307      	str	r3, [sp, #28]
 801729c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801729e:	2b00      	cmp	r3, #0
 80172a0:	f340 80eb 	ble.w	801747a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80172a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80172a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80172aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80172ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80172b2:	eef0 6a62 	vmov.f32	s13, s5
 80172b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80172ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80172be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80172c2:	ee16 ba90 	vmov	fp, s13
 80172c6:	eef0 6a43 	vmov.f32	s13, s6
 80172ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80172ce:	ee16 5a90 	vmov	r5, s13
 80172d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80172d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80172da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80172de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80172e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80172e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80172ea:	ee12 2a90 	vmov	r2, s5
 80172ee:	eef0 2a47 	vmov.f32	s5, s14
 80172f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80172f6:	ee13 2a10 	vmov	r2, s6
 80172fa:	931b      	str	r3, [sp, #108]	; 0x6c
 80172fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80172fe:	eeb0 3a67 	vmov.f32	s6, s15
 8017302:	fb92 f3f3 	sdiv	r3, r2, r3
 8017306:	931c      	str	r3, [sp, #112]	; 0x70
 8017308:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801730a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801730c:	3b01      	subs	r3, #1
 801730e:	930a      	str	r3, [sp, #40]	; 0x28
 8017310:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017312:	bf08      	it	eq
 8017314:	4613      	moveq	r3, r2
 8017316:	9306      	str	r3, [sp, #24]
 8017318:	e6d3      	b.n	80170c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801731a:	b149      	cbz	r1, 8017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801731c:	5cba      	ldrb	r2, [r7, r2]
 801731e:	4660      	mov	r0, ip
 8017320:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017324:	4422      	add	r2, r4
 8017326:	4666      	mov	r6, ip
 8017328:	e734      	b.n	8017194 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801732a:	4660      	mov	r0, ip
 801732c:	4662      	mov	r2, ip
 801732e:	e731      	b.n	8017194 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8017330:	4660      	mov	r0, ip
 8017332:	4662      	mov	r2, ip
 8017334:	e7f7      	b.n	8017326 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8017336:	f110 0c01 	adds.w	ip, r0, #1
 801733a:	f53f af74 	bmi.w	8017226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801733e:	4562      	cmp	r2, ip
 8017340:	f6ff af71 	blt.w	8017226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8017344:	f116 0c01 	adds.w	ip, r6, #1
 8017348:	f53f af6d 	bmi.w	8017226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801734c:	4567      	cmp	r7, ip
 801734e:	f6ff af6a 	blt.w	8017226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8017352:	b23f      	sxth	r7, r7
 8017354:	b212      	sxth	r2, r2
 8017356:	9701      	str	r7, [sp, #4]
 8017358:	9200      	str	r2, [sp, #0]
 801735a:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801735e:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8017362:	4623      	mov	r3, r4
 8017364:	980d      	ldr	r0, [sp, #52]	; 0x34
 8017366:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801736a:	f7ff fde7 	bl	8016f3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801736e:	e75a      	b.n	8017226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8017370:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8017372:	ea4f 462b 	mov.w	r6, fp, asr #16
 8017376:	1428      	asrs	r0, r5, #16
 8017378:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801737c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8017380:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8017384:	fb02 6000 	mla	r0, r2, r0, r6
 8017388:	9e08      	ldr	r6, [sp, #32]
 801738a:	f816 8000 	ldrb.w	r8, [r6, r0]
 801738e:	1837      	adds	r7, r6, r0
 8017390:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017394:	eb04 0c08 	add.w	ip, r4, r8
 8017398:	2b00      	cmp	r3, #0
 801739a:	d060      	beq.n	801745e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801739c:	787e      	ldrb	r6, [r7, #1]
 801739e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80173a2:	4426      	add	r6, r4
 80173a4:	2900      	cmp	r1, #0
 80173a6:	d062      	beq.n	801746e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 80173a8:	18b8      	adds	r0, r7, r2
 80173aa:	5cba      	ldrb	r2, [r7, r2]
 80173ac:	7840      	ldrb	r0, [r0, #1]
 80173ae:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80173b2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80173b6:	4422      	add	r2, r4
 80173b8:	4420      	add	r0, r4
 80173ba:	b29b      	uxth	r3, r3
 80173bc:	78b7      	ldrb	r7, [r6, #2]
 80173be:	b289      	uxth	r1, r1
 80173c0:	f89c a002 	ldrb.w	sl, [ip, #2]
 80173c4:	f89c c001 	ldrb.w	ip, [ip, #1]
 80173c8:	fb03 f901 	mul.w	r9, r3, r1
 80173cc:	011b      	lsls	r3, r3, #4
 80173ce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80173d2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80173d6:	eba3 0309 	sub.w	r3, r3, r9
 80173da:	b289      	uxth	r1, r1
 80173dc:	b29b      	uxth	r3, r3
 80173de:	ebae 0e01 	sub.w	lr, lr, r1
 80173e2:	435f      	muls	r7, r3
 80173e4:	fa1f fe8e 	uxth.w	lr, lr
 80173e8:	fb0e 770a 	mla	r7, lr, sl, r7
 80173ec:	f892 a002 	ldrb.w	sl, [r2, #2]
 80173f0:	fb01 770a 	mla	r7, r1, sl, r7
 80173f4:	f890 a002 	ldrb.w	sl, [r0, #2]
 80173f8:	fb09 7a0a 	mla	sl, r9, sl, r7
 80173fc:	f814 7008 	ldrb.w	r7, [r4, r8]
 8017400:	f896 8000 	ldrb.w	r8, [r6]
 8017404:	7876      	ldrb	r6, [r6, #1]
 8017406:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801740a:	fb03 f808 	mul.w	r8, r3, r8
 801740e:	4373      	muls	r3, r6
 8017410:	7856      	ldrb	r6, [r2, #1]
 8017412:	fb0e 8807 	mla	r8, lr, r7, r8
 8017416:	7817      	ldrb	r7, [r2, #0]
 8017418:	fb0e 330c 	mla	r3, lr, ip, r3
 801741c:	fb01 8807 	mla	r8, r1, r7, r8
 8017420:	7807      	ldrb	r7, [r0, #0]
 8017422:	fb01 3306 	mla	r3, r1, r6, r3
 8017426:	fb09 8707 	mla	r7, r9, r7, r8
 801742a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801742e:	ea47 070a 	orr.w	r7, r7, sl
 8017432:	f890 a001 	ldrb.w	sl, [r0, #1]
 8017436:	fb09 3a0a 	mla	sl, r9, sl, r3
 801743a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801743c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017440:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017444:	ea47 070a 	orr.w	r7, r7, sl
 8017448:	f823 7b02 	strh.w	r7, [r3], #2
 801744c:	930b      	str	r3, [sp, #44]	; 0x2c
 801744e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017450:	449b      	add	fp, r3
 8017452:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8017454:	441d      	add	r5, r3
 8017456:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017458:	3b01      	subs	r3, #1
 801745a:	9309      	str	r3, [sp, #36]	; 0x24
 801745c:	e714      	b.n	8017288 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801745e:	b149      	cbz	r1, 8017474 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8017460:	5cba      	ldrb	r2, [r7, r2]
 8017462:	4660      	mov	r0, ip
 8017464:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017468:	4422      	add	r2, r4
 801746a:	4666      	mov	r6, ip
 801746c:	e7a5      	b.n	80173ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801746e:	4660      	mov	r0, ip
 8017470:	4662      	mov	r2, ip
 8017472:	e7a2      	b.n	80173ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 8017474:	4660      	mov	r0, ip
 8017476:	4662      	mov	r2, ip
 8017478:	e7f7      	b.n	801746a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801747a:	b00f      	add	sp, #60	; 0x3c
 801747c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017480 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8017480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017484:	b085      	sub	sp, #20
 8017486:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801748a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801748e:	9102      	str	r1, [sp, #8]
 8017490:	2c00      	cmp	r4, #0
 8017492:	fb04 710c 	mla	r1, r4, ip, r7
 8017496:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801749a:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801749e:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80174a2:	eb02 0e01 	add.w	lr, r2, r1
 80174a6:	f2c0 8122 	blt.w	80176ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80174aa:	45a0      	cmp	r8, r4
 80174ac:	f340 811f 	ble.w	80176ee <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80174b0:	2f00      	cmp	r7, #0
 80174b2:	f2c0 811a 	blt.w	80176ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80174b6:	45bc      	cmp	ip, r7
 80174b8:	f340 8117 	ble.w	80176ea <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80174bc:	5c52      	ldrb	r2, [r2, r1]
 80174be:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80174c2:	1c7a      	adds	r2, r7, #1
 80174c4:	f100 8116 	bmi.w	80176f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80174c8:	4594      	cmp	ip, r2
 80174ca:	f340 8113 	ble.w	80176f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80174ce:	2e00      	cmp	r6, #0
 80174d0:	f000 8112 	beq.w	80176f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 80174d4:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80174d8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80174dc:	3401      	adds	r4, #1
 80174de:	f100 810f 	bmi.w	8017700 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80174e2:	45a0      	cmp	r8, r4
 80174e4:	f340 810c 	ble.w	8017700 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80174e8:	2800      	cmp	r0, #0
 80174ea:	f000 810c 	beq.w	8017706 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80174ee:	2f00      	cmp	r7, #0
 80174f0:	f2c0 8104 	blt.w	80176fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80174f4:	45bc      	cmp	ip, r7
 80174f6:	f340 8101 	ble.w	80176fc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80174fa:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80174fe:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8017502:	3701      	adds	r7, #1
 8017504:	f100 8102 	bmi.w	801770c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8017508:	45bc      	cmp	ip, r7
 801750a:	f340 80ff 	ble.w	801770c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801750e:	2e00      	cmp	r6, #0
 8017510:	f000 80fe 	beq.w	8017710 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8017514:	44f4      	add	ip, lr
 8017516:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801751a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801751e:	b2b6      	uxth	r6, r6
 8017520:	b280      	uxth	r0, r0
 8017522:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8017526:	fb00 fe06 	mul.w	lr, r0, r6
 801752a:	0136      	lsls	r6, r6, #4
 801752c:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8017530:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8017534:	eba6 070e 	sub.w	r7, r6, lr
 8017538:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801753c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017540:	b280      	uxth	r0, r0
 8017542:	b2bf      	uxth	r7, r7
 8017544:	1a1b      	subs	r3, r3, r0
 8017546:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801754a:	fb0a f607 	mul.w	r6, sl, r7
 801754e:	b29b      	uxth	r3, r3
 8017550:	fb0b 6603 	mla	r6, fp, r3, r6
 8017554:	fb00 6609 	mla	r6, r0, r9, r6
 8017558:	fb0e 6608 	mla	r6, lr, r8, r6
 801755c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8017560:	9600      	str	r6, [sp, #0]
 8017562:	2e00      	cmp	r6, #0
 8017564:	f000 80be 	beq.w	80176e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 8017568:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801756c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8017570:	9e02      	ldr	r6, [sp, #8]
 8017572:	fb0b fc0c 	mul.w	ip, fp, ip
 8017576:	fb0b f505 	mul.w	r5, fp, r5
 801757a:	8836      	ldrh	r6, [r6, #0]
 801757c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8017580:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017584:	9501      	str	r5, [sp, #4]
 8017586:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801758a:	44dc      	add	ip, fp
 801758c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017590:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8017594:	9503      	str	r5, [sp, #12]
 8017596:	9d01      	ldr	r5, [sp, #4]
 8017598:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801759c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80175a0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80175a4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80175a8:	fb0a fc0c 	mul.w	ip, sl, ip
 80175ac:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80175b0:	fb0a fa01 	mul.w	sl, sl, r1
 80175b4:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80175b8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80175bc:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80175c0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80175c4:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80175c8:	4465      	add	r5, ip
 80175ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80175ce:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80175d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80175d6:	fb09 fc0c 	mul.w	ip, r9, ip
 80175da:	0a2d      	lsrs	r5, r5, #8
 80175dc:	fb09 f904 	mul.w	r9, r9, r4
 80175e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80175e4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80175e8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80175ec:	f509 7480 	add.w	r4, r9, #256	; 0x100
 80175f0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80175f4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80175f8:	437d      	muls	r5, r7
 80175fa:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80175fe:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8017602:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017606:	4461      	add	r1, ip
 8017608:	fb08 f404 	mul.w	r4, r8, r4
 801760c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017610:	fb08 f802 	mul.w	r8, r8, r2
 8017614:	0a09      	lsrs	r1, r1, #8
 8017616:	0a22      	lsrs	r2, r4, #8
 8017618:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801761c:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8017620:	fb07 f70a 	mul.w	r7, r7, sl
 8017624:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017628:	4414      	add	r4, r2
 801762a:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801762e:	0a24      	lsrs	r4, r4, #8
 8017630:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8017634:	9a03      	ldr	r2, [sp, #12]
 8017636:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801763a:	fb02 5503 	mla	r5, r2, r3, r5
 801763e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8017642:	9a00      	ldr	r2, [sp, #0]
 8017644:	fb04 540e 	mla	r4, r4, lr, r5
 8017648:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801764c:	1235      	asrs	r5, r6, #8
 801764e:	fb01 4100 	mla	r1, r1, r0, r4
 8017652:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017656:	0a09      	lsrs	r1, r1, #8
 8017658:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801765c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8017660:	fb03 7101 	mla	r1, r3, r1, r7
 8017664:	fb0e 1e08 	mla	lr, lr, r8, r1
 8017668:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801766c:	fb00 e101 	mla	r1, r0, r1, lr
 8017670:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8017674:	b287      	uxth	r7, r0
 8017676:	0a09      	lsrs	r1, r1, #8
 8017678:	437a      	muls	r2, r7
 801767a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801767e:	1c53      	adds	r3, r2, #1
 8017680:	4321      	orrs	r1, r4
 8017682:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8017686:	0c0a      	lsrs	r2, r1, #16
 8017688:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801768c:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8017690:	b2c8      	uxtb	r0, r1
 8017692:	fb12 f207 	smulbb	r2, r2, r7
 8017696:	fb14 f407 	smulbb	r4, r4, r7
 801769a:	b2db      	uxtb	r3, r3
 801769c:	fb10 f007 	smulbb	r0, r0, r7
 80176a0:	fb05 2503 	mla	r5, r5, r3, r2
 80176a4:	10f2      	asrs	r2, r6, #3
 80176a6:	00f6      	lsls	r6, r6, #3
 80176a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80176ac:	b2ad      	uxth	r5, r5
 80176ae:	b2f6      	uxtb	r6, r6
 80176b0:	fb02 4203 	mla	r2, r2, r3, r4
 80176b4:	fb06 0303 	mla	r3, r6, r3, r0
 80176b8:	b294      	uxth	r4, r2
 80176ba:	b299      	uxth	r1, r3
 80176bc:	1c6b      	adds	r3, r5, #1
 80176be:	1c62      	adds	r2, r4, #1
 80176c0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80176c4:	1c4b      	adds	r3, r1, #1
 80176c6:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80176ca:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80176ce:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80176d2:	0952      	lsrs	r2, r2, #5
 80176d4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80176d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80176dc:	432b      	orrs	r3, r5
 80176de:	4313      	orrs	r3, r2
 80176e0:	9a02      	ldr	r2, [sp, #8]
 80176e2:	8013      	strh	r3, [r2, #0]
 80176e4:	b005      	add	sp, #20
 80176e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80176ea:	2500      	movs	r5, #0
 80176ec:	e6e9      	b.n	80174c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80176ee:	2100      	movs	r1, #0
 80176f0:	460d      	mov	r5, r1
 80176f2:	e6f3      	b.n	80174dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80176f4:	2100      	movs	r1, #0
 80176f6:	e6f1      	b.n	80174dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80176f8:	4631      	mov	r1, r6
 80176fa:	e6ef      	b.n	80174dc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80176fc:	2400      	movs	r4, #0
 80176fe:	e700      	b.n	8017502 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8017700:	2200      	movs	r2, #0
 8017702:	4614      	mov	r4, r2
 8017704:	e70b      	b.n	801751e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017706:	4602      	mov	r2, r0
 8017708:	4604      	mov	r4, r0
 801770a:	e708      	b.n	801751e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801770c:	2200      	movs	r2, #0
 801770e:	e706      	b.n	801751e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8017710:	4632      	mov	r2, r6
 8017712:	e704      	b.n	801751e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08017714 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017718:	b09f      	sub	sp, #124	; 0x7c
 801771a:	921b      	str	r2, [sp, #108]	; 0x6c
 801771c:	9309      	str	r3, [sp, #36]	; 0x24
 801771e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017720:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017724:	901d      	str	r0, [sp, #116]	; 0x74
 8017726:	931c      	str	r3, [sp, #112]	; 0x70
 8017728:	6850      	ldr	r0, [r2, #4]
 801772a:	9119      	str	r1, [sp, #100]	; 0x64
 801772c:	6812      	ldr	r2, [r2, #0]
 801772e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8017730:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8017734:	fb00 1303 	mla	r3, r0, r3, r1
 8017738:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801773c:	930c      	str	r3, [sp, #48]	; 0x30
 801773e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017740:	681b      	ldr	r3, [r3, #0]
 8017742:	9312      	str	r3, [sp, #72]	; 0x48
 8017744:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017746:	685e      	ldr	r6, [r3, #4]
 8017748:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801774c:	3604      	adds	r6, #4
 801774e:	930d      	str	r3, [sp, #52]	; 0x34
 8017750:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017752:	2b00      	cmp	r3, #0
 8017754:	dc03      	bgt.n	801775e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017756:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8017758:	2b00      	cmp	r3, #0
 801775a:	f340 8387 	ble.w	8017e6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801775e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017760:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017764:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017768:	1e48      	subs	r0, r1, #1
 801776a:	1e57      	subs	r7, r2, #1
 801776c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801776e:	2b00      	cmp	r3, #0
 8017770:	f340 8194 	ble.w	8017a9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 8017774:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8017776:	142b      	asrs	r3, r5, #16
 8017778:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801777c:	d406      	bmi.n	801778c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801777e:	4584      	cmp	ip, r0
 8017780:	da04      	bge.n	801778c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017782:	2b00      	cmp	r3, #0
 8017784:	db02      	blt.n	801778c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8017786:	42bb      	cmp	r3, r7
 8017788:	f2c0 8189 	blt.w	8017a9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801778c:	f11c 0c01 	adds.w	ip, ip, #1
 8017790:	f100 8177 	bmi.w	8017a82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 8017794:	4561      	cmp	r1, ip
 8017796:	f2c0 8174 	blt.w	8017a82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801779a:	3301      	adds	r3, #1
 801779c:	f100 8171 	bmi.w	8017a82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80177a0:	429a      	cmp	r2, r3
 80177a2:	f2c0 816e 	blt.w	8017a82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80177a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80177a8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80177aa:	931a      	str	r3, [sp, #104]	; 0x68
 80177ac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80177ae:	2b00      	cmp	r3, #0
 80177b0:	f340 8193 	ble.w	8017ada <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 80177b4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80177b6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80177ba:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80177be:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80177c2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80177c4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80177c8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80177ca:	141b      	asrs	r3, r3, #16
 80177cc:	f100 81d6 	bmi.w	8017b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80177d0:	f100 38ff 	add.w	r8, r0, #4294967295
 80177d4:	4543      	cmp	r3, r8
 80177d6:	f280 81d1 	bge.w	8017b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80177da:	f1bc 0f00 	cmp.w	ip, #0
 80177de:	f2c0 81cd 	blt.w	8017b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80177e2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80177e6:	45c4      	cmp	ip, r8
 80177e8:	f280 81c8 	bge.w	8017b7c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 80177ec:	b200      	sxth	r0, r0
 80177ee:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80177f0:	fb0c 3300 	mla	r3, ip, r0, r3
 80177f4:	eb04 0803 	add.w	r8, r4, r3
 80177f8:	5ce3      	ldrb	r3, [r4, r3]
 80177fa:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80177fe:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8017802:	2a00      	cmp	r2, #0
 8017804:	f000 81af 	beq.w	8017b66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8017808:	f898 c001 	ldrb.w	ip, [r8, #1]
 801780c:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8017810:	940e      	str	r4, [sp, #56]	; 0x38
 8017812:	0e24      	lsrs	r4, r4, #24
 8017814:	9415      	str	r4, [sp, #84]	; 0x54
 8017816:	b179      	cbz	r1, 8017838 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8017818:	eb08 0c00 	add.w	ip, r8, r0
 801781c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017820:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017824:	900a      	str	r0, [sp, #40]	; 0x28
 8017826:	0e00      	lsrs	r0, r0, #24
 8017828:	9013      	str	r0, [sp, #76]	; 0x4c
 801782a:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801782e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017832:	900f      	str	r0, [sp, #60]	; 0x3c
 8017834:	0e00      	lsrs	r0, r0, #24
 8017836:	9016      	str	r0, [sp, #88]	; 0x58
 8017838:	b292      	uxth	r2, r2
 801783a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801783c:	b289      	uxth	r1, r1
 801783e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017840:	fb02 f901 	mul.w	r9, r2, r1
 8017844:	0112      	lsls	r2, r2, #4
 8017846:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801784a:	eba2 0809 	sub.w	r8, r2, r9
 801784e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017852:	b289      	uxth	r1, r1
 8017854:	fa1f f888 	uxth.w	r8, r8
 8017858:	1a52      	subs	r2, r2, r1
 801785a:	fb08 f000 	mul.w	r0, r8, r0
 801785e:	b292      	uxth	r2, r2
 8017860:	fb02 000e 	mla	r0, r2, lr, r0
 8017864:	fb01 0004 	mla	r0, r1, r4, r0
 8017868:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801786a:	fb09 0004 	mla	r0, r9, r4, r0
 801786e:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017872:	2800      	cmp	r0, #0
 8017874:	f000 80fa 	beq.w	8017a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8017878:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801787c:	d01b      	beq.n	80178b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801787e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017882:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017886:	fb0e fa0a 	mul.w	sl, lr, sl
 801788a:	fb0e fe03 	mul.w	lr, lr, r3
 801788e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017892:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017896:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801789a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801789e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80178a2:	4453      	add	r3, sl
 80178a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80178a8:	0a1b      	lsrs	r3, r3, #8
 80178aa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80178ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80178b2:	ea43 030c 	orr.w	r3, r3, ip
 80178b6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80178b8:	2cff      	cmp	r4, #255	; 0xff
 80178ba:	d021      	beq.n	8017900 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80178bc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80178be:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80178c2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80178c4:	fb04 fb0b 	mul.w	fp, r4, fp
 80178c8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80178ca:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80178ce:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80178d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80178d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80178d8:	fb04 fa0a 	mul.w	sl, r4, sl
 80178dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80178e0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80178e4:	44de      	add	lr, fp
 80178e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80178ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80178ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80178f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80178f6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80178fa:	ea4e 040a 	orr.w	r4, lr, sl
 80178fe:	940e      	str	r4, [sp, #56]	; 0x38
 8017900:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8017902:	2cff      	cmp	r4, #255	; 0xff
 8017904:	d021      	beq.n	801794a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8017906:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017908:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801790c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801790e:	fb04 fb0b 	mul.w	fp, r4, fp
 8017912:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017914:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017918:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801791a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801791e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017922:	fb04 fa0a 	mul.w	sl, r4, sl
 8017926:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801792a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801792e:	44de      	add	lr, fp
 8017930:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017934:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017938:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801793c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017940:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017944:	ea4e 040a 	orr.w	r4, lr, sl
 8017948:	940a      	str	r4, [sp, #40]	; 0x28
 801794a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801794c:	2cff      	cmp	r4, #255	; 0xff
 801794e:	d021      	beq.n	8017994 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 8017950:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017952:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8017956:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017958:	fb04 fb0b 	mul.w	fp, r4, fp
 801795c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801795e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017962:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8017964:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017968:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801796c:	fb04 fa0a 	mul.w	sl, r4, sl
 8017970:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017974:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017978:	44de      	add	lr, fp
 801797a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801797e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017982:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017986:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801798a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801798e:	ea4e 040a 	orr.w	r4, lr, sl
 8017992:	940f      	str	r4, [sp, #60]	; 0x3c
 8017994:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017996:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801799a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801799e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80179a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80179a4:	fb08 fc0c 	mul.w	ip, r8, ip
 80179a8:	fb02 cc0e 	mla	ip, r2, lr, ip
 80179ac:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80179b0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80179b2:	fb01 cc0e 	mla	ip, r1, lr, ip
 80179b6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80179ba:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80179bc:	fb09 cc0e 	mla	ip, r9, lr, ip
 80179c0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80179c4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80179c6:	fb08 f80e 	mul.w	r8, r8, lr
 80179ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80179ce:	fb02 8303 	mla	r3, r2, r3, r8
 80179d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80179d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80179d8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80179dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80179de:	fb01 330a 	mla	r3, r1, sl, r3
 80179e2:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80179e6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80179e8:	fb09 3901 	mla	r9, r9, r1, r3
 80179ec:	883b      	ldrh	r3, [r7, #0]
 80179ee:	4342      	muls	r2, r0
 80179f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80179f4:	1c50      	adds	r0, r2, #1
 80179f6:	1219      	asrs	r1, r3, #8
 80179f8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80179fc:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8017a00:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017a04:	ea4c 0c09 	orr.w	ip, ip, r9
 8017a08:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017a0c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8017a10:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8017a14:	b2c0      	uxtb	r0, r0
 8017a16:	fb12 f204 	smulbb	r2, r2, r4
 8017a1a:	fa5f fc8c 	uxtb.w	ip, ip
 8017a1e:	fb1e fe04 	smulbb	lr, lr, r4
 8017a22:	fb01 2100 	mla	r1, r1, r0, r2
 8017a26:	10da      	asrs	r2, r3, #3
 8017a28:	fb1c fc04 	smulbb	ip, ip, r4
 8017a2c:	00db      	lsls	r3, r3, #3
 8017a2e:	b289      	uxth	r1, r1
 8017a30:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017a34:	b2db      	uxtb	r3, r3
 8017a36:	fb02 e200 	mla	r2, r2, r0, lr
 8017a3a:	fb03 c300 	mla	r3, r3, r0, ip
 8017a3e:	b292      	uxth	r2, r2
 8017a40:	fa1f fc83 	uxth.w	ip, r3
 8017a44:	1c4b      	adds	r3, r1, #1
 8017a46:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017a4a:	f10c 0301 	add.w	r3, ip, #1
 8017a4e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017a52:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8017a56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8017a5a:	430b      	orrs	r3, r1
 8017a5c:	1c51      	adds	r1, r2, #1
 8017a5e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017a62:	0952      	lsrs	r2, r2, #5
 8017a64:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017a68:	4313      	orrs	r3, r2
 8017a6a:	803b      	strh	r3, [r7, #0]
 8017a6c:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017a6e:	3702      	adds	r7, #2
 8017a70:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017a72:	441a      	add	r2, r3
 8017a74:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017a76:	441d      	add	r5, r3
 8017a78:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8017a7a:	9229      	str	r2, [sp, #164]	; 0xa4
 8017a7c:	3b01      	subs	r3, #1
 8017a7e:	931a      	str	r3, [sp, #104]	; 0x68
 8017a80:	e694      	b.n	80177ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8017a82:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017a84:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8017a86:	441c      	add	r4, r3
 8017a88:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017a8a:	441d      	add	r5, r3
 8017a8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017a8e:	9429      	str	r4, [sp, #164]	; 0xa4
 8017a90:	3b01      	subs	r3, #1
 8017a92:	9309      	str	r3, [sp, #36]	; 0x24
 8017a94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017a96:	3302      	adds	r3, #2
 8017a98:	930c      	str	r3, [sp, #48]	; 0x30
 8017a9a:	e667      	b.n	801776c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8017a9c:	d024      	beq.n	8017ae8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8017a9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017aa0:	982b      	ldr	r0, [sp, #172]	; 0xac
 8017aa2:	3b01      	subs	r3, #1
 8017aa4:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8017aa6:	fb00 4003 	mla	r0, r0, r3, r4
 8017aaa:	1400      	asrs	r0, r0, #16
 8017aac:	f53f ae7b 	bmi.w	80177a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017ab0:	3901      	subs	r1, #1
 8017ab2:	4288      	cmp	r0, r1
 8017ab4:	f6bf ae77 	bge.w	80177a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017ab8:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8017aba:	fb01 5303 	mla	r3, r1, r3, r5
 8017abe:	141b      	asrs	r3, r3, #16
 8017ac0:	f53f ae71 	bmi.w	80177a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017ac4:	3a01      	subs	r2, #1
 8017ac6:	4293      	cmp	r3, r2
 8017ac8:	f6bf ae6d 	bge.w	80177a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017acc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8017ad0:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8017ad4:	f1bb 0f00 	cmp.w	fp, #0
 8017ad8:	dc70      	bgt.n	8017bbc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8017ada:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017adc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017ae0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017ae2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8017ae6:	930c      	str	r3, [sp, #48]	; 0x30
 8017ae8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017aea:	2b00      	cmp	r3, #0
 8017aec:	f340 81be 	ble.w	8017e6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8017af0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8017af4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017af6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017afa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017afe:	eef0 6a62 	vmov.f32	s13, s5
 8017b02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017b06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017b0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b0e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8017b12:	eef0 6a43 	vmov.f32	s13, s6
 8017b16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017b1a:	ee16 5a90 	vmov	r5, s13
 8017b1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017b22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017b26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017b2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017b2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017b32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017b36:	ee12 2a90 	vmov	r2, s5
 8017b3a:	eef0 2a47 	vmov.f32	s5, s14
 8017b3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b42:	ee13 2a10 	vmov	r2, s6
 8017b46:	932b      	str	r3, [sp, #172]	; 0xac
 8017b48:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017b4a:	eeb0 3a67 	vmov.f32	s6, s15
 8017b4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017b52:	932c      	str	r3, [sp, #176]	; 0xb0
 8017b54:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8017b56:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8017b58:	3b01      	subs	r3, #1
 8017b5a:	9319      	str	r3, [sp, #100]	; 0x64
 8017b5c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017b5e:	bf08      	it	eq
 8017b60:	4613      	moveq	r3, r2
 8017b62:	9309      	str	r3, [sp, #36]	; 0x24
 8017b64:	e5f4      	b.n	8017750 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017b66:	2900      	cmp	r1, #0
 8017b68:	f43f ae66 	beq.w	8017838 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8017b6c:	f818 0000 	ldrb.w	r0, [r8, r0]
 8017b70:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8017b74:	900a      	str	r0, [sp, #40]	; 0x28
 8017b76:	0e00      	lsrs	r0, r0, #24
 8017b78:	9013      	str	r0, [sp, #76]	; 0x4c
 8017b7a:	e65d      	b.n	8017838 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8017b7c:	f113 0801 	adds.w	r8, r3, #1
 8017b80:	f53f af74 	bmi.w	8017a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8017b84:	4540      	cmp	r0, r8
 8017b86:	f6ff af71 	blt.w	8017a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8017b8a:	f11c 0801 	adds.w	r8, ip, #1
 8017b8e:	f53f af6d 	bmi.w	8017a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8017b92:	45c6      	cmp	lr, r8
 8017b94:	f6ff af6a 	blt.w	8017a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8017b98:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8017b9a:	b200      	sxth	r0, r0
 8017b9c:	9302      	str	r3, [sp, #8]
 8017b9e:	fa0f f38e 	sxth.w	r3, lr
 8017ba2:	9000      	str	r0, [sp, #0]
 8017ba4:	9301      	str	r3, [sp, #4]
 8017ba6:	4633      	mov	r3, r6
 8017ba8:	981d      	ldr	r0, [sp, #116]	; 0x74
 8017baa:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8017bae:	e9cd c203 	strd	ip, r2, [sp, #12]
 8017bb2:	4639      	mov	r1, r7
 8017bb4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8017bb6:	f7ff fc63 	bl	8017480 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8017bba:	e757      	b.n	8017a6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8017bbc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8017bbe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8017bc2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8017bc4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017bc8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017bca:	1427      	asrs	r7, r4, #16
 8017bcc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8017bce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017bd2:	142b      	asrs	r3, r5, #16
 8017bd4:	fb01 7303 	mla	r3, r1, r3, r7
 8017bd8:	18e7      	adds	r7, r4, r3
 8017bda:	5ce3      	ldrb	r3, [r4, r3]
 8017bdc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8017be0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8017be4:	2a00      	cmp	r2, #0
 8017be6:	f000 8137 	beq.w	8017e58 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8017bea:	f897 e001 	ldrb.w	lr, [r7, #1]
 8017bee:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8017bf2:	9410      	str	r4, [sp, #64]	; 0x40
 8017bf4:	0e24      	lsrs	r4, r4, #24
 8017bf6:	9417      	str	r4, [sp, #92]	; 0x5c
 8017bf8:	b170      	cbz	r0, 8017c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8017bfa:	eb07 0e01 	add.w	lr, r7, r1
 8017bfe:	5c79      	ldrb	r1, [r7, r1]
 8017c00:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017c04:	910b      	str	r1, [sp, #44]	; 0x2c
 8017c06:	0e09      	lsrs	r1, r1, #24
 8017c08:	9114      	str	r1, [sp, #80]	; 0x50
 8017c0a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8017c0e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017c12:	9111      	str	r1, [sp, #68]	; 0x44
 8017c14:	0e09      	lsrs	r1, r1, #24
 8017c16:	9118      	str	r1, [sp, #96]	; 0x60
 8017c18:	b292      	uxth	r2, r2
 8017c1a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8017c1c:	b280      	uxth	r0, r0
 8017c1e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017c20:	fb02 f800 	mul.w	r8, r2, r0
 8017c24:	0112      	lsls	r2, r2, #4
 8017c26:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8017c2a:	eba2 0e08 	sub.w	lr, r2, r8
 8017c2e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017c32:	b280      	uxth	r0, r0
 8017c34:	fa1f fe8e 	uxth.w	lr, lr
 8017c38:	1a12      	subs	r2, r2, r0
 8017c3a:	fb0e f101 	mul.w	r1, lr, r1
 8017c3e:	b292      	uxth	r2, r2
 8017c40:	fb02 110c 	mla	r1, r2, ip, r1
 8017c44:	fb00 1104 	mla	r1, r0, r4, r1
 8017c48:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017c4a:	fb08 1104 	mla	r1, r8, r4, r1
 8017c4e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017c52:	2900      	cmp	r1, #0
 8017c54:	f000 80f5 	beq.w	8017e42 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 8017c58:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8017c5c:	d019      	beq.n	8017c92 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 8017c5e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017c62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017c66:	fb0c fa0a 	mul.w	sl, ip, sl
 8017c6a:	fb0c fc03 	mul.w	ip, ip, r3
 8017c6e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8017c72:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017c76:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8017c7a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017c7e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8017c82:	4453      	add	r3, sl
 8017c84:	0a3f      	lsrs	r7, r7, #8
 8017c86:	0a1b      	lsrs	r3, r3, #8
 8017c88:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017c8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017c90:	433b      	orrs	r3, r7
 8017c92:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017c94:	2cff      	cmp	r4, #255	; 0xff
 8017c96:	d020      	beq.n	8017cda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8017c98:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017c9a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017c9e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017ca0:	4367      	muls	r7, r4
 8017ca2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017ca4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017ca8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017cac:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8017cae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017cb2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017cb6:	fb04 fa0a 	mul.w	sl, r4, sl
 8017cba:	44bc      	add	ip, r7
 8017cbc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017cc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017cc4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017cc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017ccc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017cd0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017cd4:	ea4c 040a 	orr.w	r4, ip, sl
 8017cd8:	9410      	str	r4, [sp, #64]	; 0x40
 8017cda:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017cdc:	2cff      	cmp	r4, #255	; 0xff
 8017cde:	d020      	beq.n	8017d22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 8017ce0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017ce2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017ce6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017ce8:	4367      	muls	r7, r4
 8017cea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017cec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017cf0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017cf4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8017cf6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017cfa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017cfe:	fb04 fa0a 	mul.w	sl, r4, sl
 8017d02:	44bc      	add	ip, r7
 8017d04:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017d08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017d0c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017d10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017d14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017d18:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017d1c:	ea4c 040a 	orr.w	r4, ip, sl
 8017d20:	940b      	str	r4, [sp, #44]	; 0x2c
 8017d22:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017d24:	2cff      	cmp	r4, #255	; 0xff
 8017d26:	d020      	beq.n	8017d6a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 8017d28:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017d2a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017d2e:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017d30:	4367      	muls	r7, r4
 8017d32:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017d34:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017d38:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8017d3c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8017d3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017d42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017d46:	fb04 fa0a 	mul.w	sl, r4, sl
 8017d4a:	44bc      	add	ip, r7
 8017d4c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017d50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017d54:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017d58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017d5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017d60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017d64:	ea4c 040a 	orr.w	r4, ip, sl
 8017d68:	9411      	str	r4, [sp, #68]	; 0x44
 8017d6a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017d6c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8017d70:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017d74:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8017d78:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017d7a:	fb0e f707 	mul.w	r7, lr, r7
 8017d7e:	fb02 770c 	mla	r7, r2, ip, r7
 8017d82:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017d86:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8017d88:	fb00 770c 	mla	r7, r0, ip, r7
 8017d8c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8017d90:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8017d92:	fb08 770c 	mla	r7, r8, ip, r7
 8017d96:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8017d9a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017d9c:	fb0e fe0c 	mul.w	lr, lr, ip
 8017da0:	0a3f      	lsrs	r7, r7, #8
 8017da2:	fb02 e303 	mla	r3, r2, r3, lr
 8017da6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017da8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017dac:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8017db0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017db2:	fb00 330a 	mla	r3, r0, sl, r3
 8017db6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8017dba:	f8b9 0000 	ldrh.w	r0, [r9]
 8017dbe:	fb08 3c0c 	mla	ip, r8, ip, r3
 8017dc2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017dc4:	1202      	asrs	r2, r0, #8
 8017dc6:	434b      	muls	r3, r1
 8017dc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017dcc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017dd0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017dd4:	1c59      	adds	r1, r3, #1
 8017dd6:	ea47 070c 	orr.w	r7, r7, ip
 8017dda:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8017dde:	0c3b      	lsrs	r3, r7, #16
 8017de0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017de4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8017de8:	b2ff      	uxtb	r7, r7
 8017dea:	fb13 f304 	smulbb	r3, r3, r4
 8017dee:	b2c9      	uxtb	r1, r1
 8017df0:	fb1c fc04 	smulbb	ip, ip, r4
 8017df4:	fb02 3201 	mla	r2, r2, r1, r3
 8017df8:	10c3      	asrs	r3, r0, #3
 8017dfa:	fb17 f704 	smulbb	r7, r7, r4
 8017dfe:	00c0      	lsls	r0, r0, #3
 8017e00:	b292      	uxth	r2, r2
 8017e02:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017e06:	b2c0      	uxtb	r0, r0
 8017e08:	fb03 c301 	mla	r3, r3, r1, ip
 8017e0c:	f102 0c01 	add.w	ip, r2, #1
 8017e10:	fb00 7001 	mla	r0, r0, r1, r7
 8017e14:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8017e18:	b280      	uxth	r0, r0
 8017e1a:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8017e1e:	b29b      	uxth	r3, r3
 8017e20:	1c42      	adds	r2, r0, #1
 8017e22:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8017e26:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017e2a:	ea42 020c 	orr.w	r2, r2, ip
 8017e2e:	f103 0c01 	add.w	ip, r3, #1
 8017e32:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8017e36:	095b      	lsrs	r3, r3, #5
 8017e38:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017e3c:	431a      	orrs	r2, r3
 8017e3e:	f8a9 2000 	strh.w	r2, [r9]
 8017e42:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017e44:	f109 0902 	add.w	r9, r9, #2
 8017e48:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017e4a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017e4e:	441a      	add	r2, r3
 8017e50:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8017e52:	9229      	str	r2, [sp, #164]	; 0xa4
 8017e54:	441d      	add	r5, r3
 8017e56:	e63d      	b.n	8017ad4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8017e58:	2800      	cmp	r0, #0
 8017e5a:	f43f aedd 	beq.w	8017c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8017e5e:	5c79      	ldrb	r1, [r7, r1]
 8017e60:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8017e64:	910b      	str	r1, [sp, #44]	; 0x2c
 8017e66:	0e09      	lsrs	r1, r1, #24
 8017e68:	9114      	str	r1, [sp, #80]	; 0x50
 8017e6a:	e6d5      	b.n	8017c18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8017e6c:	b01f      	add	sp, #124	; 0x7c
 8017e6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017e72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8017e72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e76:	b089      	sub	sp, #36	; 0x24
 8017e78:	9101      	str	r1, [sp, #4]
 8017e7a:	9801      	ldr	r0, [sp, #4]
 8017e7c:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8017e80:	8800      	ldrh	r0, [r0, #0]
 8017e82:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8017e86:	1206      	asrs	r6, r0, #8
 8017e88:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8017e8c:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8017e90:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017e94:	9602      	str	r6, [sp, #8]
 8017e96:	10c6      	asrs	r6, r0, #3
 8017e98:	00c0      	lsls	r0, r0, #3
 8017e9a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017e9e:	b2c0      	uxtb	r0, r0
 8017ea0:	9603      	str	r6, [sp, #12]
 8017ea2:	9004      	str	r0, [sp, #16]
 8017ea4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8017ea8:	fb07 100c 	mla	r0, r7, ip, r1
 8017eac:	2f00      	cmp	r7, #0
 8017eae:	eb02 0e00 	add.w	lr, r2, r0
 8017eb2:	f2c0 810a 	blt.w	80180ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8017eb6:	45b8      	cmp	r8, r7
 8017eb8:	f340 8107 	ble.w	80180ca <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8017ebc:	2900      	cmp	r1, #0
 8017ebe:	f2c0 8102 	blt.w	80180c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8017ec2:	458c      	cmp	ip, r1
 8017ec4:	f340 80ff 	ble.w	80180c6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8017ec8:	5c12      	ldrb	r2, [r2, r0]
 8017eca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8017ece:	1c4a      	adds	r2, r1, #1
 8017ed0:	f100 80fe 	bmi.w	80180d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8017ed4:	4594      	cmp	ip, r2
 8017ed6:	f340 80fb 	ble.w	80180d0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8017eda:	2d00      	cmp	r5, #0
 8017edc:	f000 80fa 	beq.w	80180d4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8017ee0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8017ee4:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8017ee8:	3701      	adds	r7, #1
 8017eea:	f100 80f7 	bmi.w	80180dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8017eee:	45b8      	cmp	r8, r7
 8017ef0:	f340 80f4 	ble.w	80180dc <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8017ef4:	2c00      	cmp	r4, #0
 8017ef6:	f000 80f4 	beq.w	80180e2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8017efa:	2900      	cmp	r1, #0
 8017efc:	eb0e 020c 	add.w	r2, lr, ip
 8017f00:	f2c0 80ea 	blt.w	80180d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8017f04:	458c      	cmp	ip, r1
 8017f06:	f340 80e7 	ble.w	80180d8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8017f0a:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8017f0e:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8017f12:	3101      	adds	r1, #1
 8017f14:	f100 80e8 	bmi.w	80180e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8017f18:	458c      	cmp	ip, r1
 8017f1a:	f340 80e5 	ble.w	80180e8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8017f1e:	2d00      	cmp	r5, #0
 8017f20:	f000 80e4 	beq.w	80180ec <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8017f24:	7852      	ldrb	r2, [r2, #1]
 8017f26:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8017f2a:	0e0b      	lsrs	r3, r1, #24
 8017f2c:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8017f30:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8017f34:	9300      	str	r3, [sp, #0]
 8017f36:	b2a4      	uxth	r4, r4
 8017f38:	b2ab      	uxth	r3, r5
 8017f3a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8017f3e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8017f42:	fb03 f904 	mul.w	r9, r3, r4
 8017f46:	011b      	lsls	r3, r3, #4
 8017f48:	fb0a f505 	mul.w	r5, sl, r5
 8017f4c:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8017f50:	eba3 0e09 	sub.w	lr, r3, r9
 8017f54:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8017f58:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8017f5c:	0a28      	lsrs	r0, r5, #8
 8017f5e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8017f62:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8017f66:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017f6a:	fb0a f303 	mul.w	r3, sl, r3
 8017f6e:	fb08 f707 	mul.w	r7, r8, r7
 8017f72:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8017f76:	4405      	add	r5, r0
 8017f78:	fb08 fc0c 	mul.w	ip, r8, ip
 8017f7c:	b2a4      	uxth	r4, r4
 8017f7e:	0a2d      	lsrs	r5, r5, #8
 8017f80:	fa1f fe8e 	uxth.w	lr, lr
 8017f84:	1b12      	subs	r2, r2, r4
 8017f86:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8017f8a:	b292      	uxth	r2, r2
 8017f8c:	9005      	str	r0, [sp, #20]
 8017f8e:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8017f92:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8017f96:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8017f9a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8017f9e:	0a1b      	lsrs	r3, r3, #8
 8017fa0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017fa4:	9306      	str	r3, [sp, #24]
 8017fa6:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8017faa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017fae:	4460      	add	r0, ip
 8017fb0:	fb0b f303 	mul.w	r3, fp, r3
 8017fb4:	fb0b f606 	mul.w	r6, fp, r6
 8017fb8:	0a00      	lsrs	r0, r0, #8
 8017fba:	0a1d      	lsrs	r5, r3, #8
 8017fbc:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8017fc0:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8017fc4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017fc8:	441d      	add	r5, r3
 8017fca:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8017fce:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8017fd2:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8017fd6:	0a2d      	lsrs	r5, r5, #8
 8017fd8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8017fdc:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8017fe0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8017fe4:	0a36      	lsrs	r6, r6, #8
 8017fe6:	0a1b      	lsrs	r3, r3, #8
 8017fe8:	fb05 f50e 	mul.w	r5, r5, lr
 8017fec:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017ff0:	9307      	str	r3, [sp, #28]
 8017ff2:	0e0b      	lsrs	r3, r1, #24
 8017ff4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8017ff8:	fb0e f606 	mul.w	r6, lr, r6
 8017ffc:	435f      	muls	r7, r3
 8017ffe:	4359      	muls	r1, r3
 8018000:	9b05      	ldr	r3, [sp, #20]
 8018002:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018006:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801800a:	fb03 5502 	mla	r5, r3, r2, r5
 801800e:	9b06      	ldr	r3, [sp, #24]
 8018010:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018014:	fb0e fe0b 	mul.w	lr, lr, fp
 8018018:	44bc      	add	ip, r7
 801801a:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801801e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018022:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8018026:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801802a:	0a09      	lsrs	r1, r1, #8
 801802c:	fb0c 5509 	mla	r5, ip, r9, r5
 8018030:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8018034:	fb00 5504 	mla	r5, r0, r4, r5
 8018038:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801803c:	9b07      	ldr	r3, [sp, #28]
 801803e:	fb02 6000 	mla	r0, r2, r0, r6
 8018042:	0a2d      	lsrs	r5, r5, #8
 8018044:	fb02 e20a 	mla	r2, r2, sl, lr
 8018048:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801804c:	fb09 0001 	mla	r0, r9, r1, r0
 8018050:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018054:	fb04 0003 	mla	r0, r4, r3, r0
 8018058:	9b00      	ldr	r3, [sp, #0]
 801805a:	fb04 2408 	mla	r4, r4, r8, r2
 801805e:	9a04      	ldr	r2, [sp, #16]
 8018060:	0a00      	lsrs	r0, r0, #8
 8018062:	fb09 4903 	mla	r9, r9, r3, r4
 8018066:	9b02      	ldr	r3, [sp, #8]
 8018068:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801806c:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8018070:	4305      	orrs	r5, r0
 8018072:	fa5f f989 	uxtb.w	r9, r9
 8018076:	fb03 f109 	mul.w	r1, r3, r9
 801807a:	9b03      	ldr	r3, [sp, #12]
 801807c:	fb03 f309 	mul.w	r3, r3, r9
 8018080:	fb02 f909 	mul.w	r9, r2, r9
 8018084:	1c4a      	adds	r2, r1, #1
 8018086:	1c58      	adds	r0, r3, #1
 8018088:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801808c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018090:	0c2a      	lsrs	r2, r5, #16
 8018092:	0a2b      	lsrs	r3, r5, #8
 8018094:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8018098:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801809c:	0212      	lsls	r2, r2, #8
 801809e:	00db      	lsls	r3, r3, #3
 80180a0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80180a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80180a8:	4313      	orrs	r3, r2
 80180aa:	f109 0201 	add.w	r2, r9, #1
 80180ae:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80180b2:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80180b6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80180ba:	431d      	orrs	r5, r3
 80180bc:	9b01      	ldr	r3, [sp, #4]
 80180be:	801d      	strh	r5, [r3, #0]
 80180c0:	b009      	add	sp, #36	; 0x24
 80180c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180c6:	2000      	movs	r0, #0
 80180c8:	e701      	b.n	8017ece <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80180ca:	2600      	movs	r6, #0
 80180cc:	4630      	mov	r0, r6
 80180ce:	e70b      	b.n	8017ee8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80180d0:	2600      	movs	r6, #0
 80180d2:	e709      	b.n	8017ee8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80180d4:	462e      	mov	r6, r5
 80180d6:	e707      	b.n	8017ee8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 80180d8:	2700      	movs	r7, #0
 80180da:	e71a      	b.n	8017f12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 80180dc:	2100      	movs	r1, #0
 80180de:	460f      	mov	r7, r1
 80180e0:	e723      	b.n	8017f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80180e2:	4621      	mov	r1, r4
 80180e4:	4627      	mov	r7, r4
 80180e6:	e720      	b.n	8017f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80180e8:	2100      	movs	r1, #0
 80180ea:	e71e      	b.n	8017f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 80180ec:	4629      	mov	r1, r5
 80180ee:	e71c      	b.n	8017f2a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

080180f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80180f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180f4:	b09b      	sub	sp, #108	; 0x6c
 80180f6:	9218      	str	r2, [sp, #96]	; 0x60
 80180f8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80180fa:	9019      	str	r0, [sp, #100]	; 0x64
 80180fc:	9116      	str	r1, [sp, #88]	; 0x58
 80180fe:	6850      	ldr	r0, [r2, #4]
 8018100:	9307      	str	r3, [sp, #28]
 8018102:	6812      	ldr	r2, [r2, #0]
 8018104:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8018106:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801810a:	fb00 1303 	mla	r3, r0, r3, r1
 801810e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018112:	930a      	str	r3, [sp, #40]	; 0x28
 8018114:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018116:	681b      	ldr	r3, [r3, #0]
 8018118:	930f      	str	r3, [sp, #60]	; 0x3c
 801811a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801811c:	685e      	ldr	r6, [r3, #4]
 801811e:	3604      	adds	r6, #4
 8018120:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018122:	2b00      	cmp	r3, #0
 8018124:	dc03      	bgt.n	801812e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018126:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8018128:	2b00      	cmp	r3, #0
 801812a:	f340 8373 	ble.w	8018814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801812e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018130:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018134:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018138:	1e48      	subs	r0, r1, #1
 801813a:	1e57      	subs	r7, r2, #1
 801813c:	9b07      	ldr	r3, [sp, #28]
 801813e:	2b00      	cmp	r3, #0
 8018140:	f340 818f 	ble.w	8018462 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8018144:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8018146:	142b      	asrs	r3, r5, #16
 8018148:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801814c:	d406      	bmi.n	801815c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801814e:	4584      	cmp	ip, r0
 8018150:	da04      	bge.n	801815c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018152:	2b00      	cmp	r3, #0
 8018154:	db02      	blt.n	801815c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018156:	42bb      	cmp	r3, r7
 8018158:	f2c0 8184 	blt.w	8018464 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801815c:	f11c 0c01 	adds.w	ip, ip, #1
 8018160:	f100 8172 	bmi.w	8018448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018164:	4561      	cmp	r1, ip
 8018166:	f2c0 816f 	blt.w	8018448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801816a:	3301      	adds	r3, #1
 801816c:	f100 816c 	bmi.w	8018448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018170:	429a      	cmp	r2, r3
 8018172:	f2c0 8169 	blt.w	8018448 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8018176:	9b07      	ldr	r3, [sp, #28]
 8018178:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801817a:	9317      	str	r3, [sp, #92]	; 0x5c
 801817c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801817e:	2b00      	cmp	r3, #0
 8018180:	f340 818e 	ble.w	80184a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8018184:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018186:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801818a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801818e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018192:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018194:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8018198:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801819a:	141b      	asrs	r3, r3, #16
 801819c:	f100 81d1 	bmi.w	8018542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80181a0:	f101 38ff 	add.w	r8, r1, #4294967295
 80181a4:	4543      	cmp	r3, r8
 80181a6:	f280 81cc 	bge.w	8018542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80181aa:	f1bc 0f00 	cmp.w	ip, #0
 80181ae:	f2c0 81c8 	blt.w	8018542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80181b2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80181b6:	45c4      	cmp	ip, r8
 80181b8:	f280 81c3 	bge.w	8018542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80181bc:	b209      	sxth	r1, r1
 80181be:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80181c0:	fb0c 3301 	mla	r3, ip, r1, r3
 80181c4:	eb04 0803 	add.w	r8, r4, r3
 80181c8:	5ce3      	ldrb	r3, [r4, r3]
 80181ca:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80181ce:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80181d2:	2a00      	cmp	r2, #0
 80181d4:	f000 81aa 	beq.w	801852c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 80181d8:	f898 c001 	ldrb.w	ip, [r8, #1]
 80181dc:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80181e0:	940b      	str	r4, [sp, #44]	; 0x2c
 80181e2:	0e24      	lsrs	r4, r4, #24
 80181e4:	9412      	str	r4, [sp, #72]	; 0x48
 80181e6:	b178      	cbz	r0, 8018208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80181e8:	eb08 0c01 	add.w	ip, r8, r1
 80181ec:	f818 1001 	ldrb.w	r1, [r8, r1]
 80181f0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80181f4:	9108      	str	r1, [sp, #32]
 80181f6:	0e09      	lsrs	r1, r1, #24
 80181f8:	9110      	str	r1, [sp, #64]	; 0x40
 80181fa:	f89c 1001 	ldrb.w	r1, [ip, #1]
 80181fe:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8018202:	910c      	str	r1, [sp, #48]	; 0x30
 8018204:	0e09      	lsrs	r1, r1, #24
 8018206:	9113      	str	r1, [sp, #76]	; 0x4c
 8018208:	b292      	uxth	r2, r2
 801820a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801820c:	b280      	uxth	r0, r0
 801820e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8018210:	fb02 f900 	mul.w	r9, r2, r0
 8018214:	0112      	lsls	r2, r2, #4
 8018216:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801821a:	eba2 0809 	sub.w	r8, r2, r9
 801821e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8018222:	b280      	uxth	r0, r0
 8018224:	fa1f f888 	uxth.w	r8, r8
 8018228:	1a12      	subs	r2, r2, r0
 801822a:	fb08 f101 	mul.w	r1, r8, r1
 801822e:	b292      	uxth	r2, r2
 8018230:	fb02 110e 	mla	r1, r2, lr, r1
 8018234:	fb00 1104 	mla	r1, r0, r4, r1
 8018238:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801823a:	fb09 1104 	mla	r1, r9, r4, r1
 801823e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018242:	2900      	cmp	r1, #0
 8018244:	f000 80f5 	beq.w	8018432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8018248:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801824c:	d01b      	beq.n	8018286 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801824e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018252:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018256:	fb0e fa0a 	mul.w	sl, lr, sl
 801825a:	fb0e fe03 	mul.w	lr, lr, r3
 801825e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8018262:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8018266:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801826a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801826e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8018272:	4453      	add	r3, sl
 8018274:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018278:	0a1b      	lsrs	r3, r3, #8
 801827a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801827e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018282:	ea43 030c 	orr.w	r3, r3, ip
 8018286:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018288:	2cff      	cmp	r4, #255	; 0xff
 801828a:	d021      	beq.n	80182d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801828c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801828e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018292:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018294:	fb04 fb0b 	mul.w	fp, r4, fp
 8018298:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801829a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801829e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80182a0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80182a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80182a8:	fb04 fa0a 	mul.w	sl, r4, sl
 80182ac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80182b0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80182b4:	44de      	add	lr, fp
 80182b6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80182ba:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80182be:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80182c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80182c6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80182ca:	ea4e 040a 	orr.w	r4, lr, sl
 80182ce:	940b      	str	r4, [sp, #44]	; 0x2c
 80182d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80182d2:	2cff      	cmp	r4, #255	; 0xff
 80182d4:	d021      	beq.n	801831a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80182d6:	9c08      	ldr	r4, [sp, #32]
 80182d8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80182dc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80182de:	fb04 fb0b 	mul.w	fp, r4, fp
 80182e2:	9c08      	ldr	r4, [sp, #32]
 80182e4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80182e8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80182ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80182ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80182f2:	fb04 fa0a 	mul.w	sl, r4, sl
 80182f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80182fa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80182fe:	44de      	add	lr, fp
 8018300:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018304:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018308:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801830c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018310:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018314:	ea4e 040a 	orr.w	r4, lr, sl
 8018318:	9408      	str	r4, [sp, #32]
 801831a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801831c:	2cff      	cmp	r4, #255	; 0xff
 801831e:	d021      	beq.n	8018364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8018320:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018322:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8018326:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018328:	fb04 fb0b 	mul.w	fp, r4, fp
 801832c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801832e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018332:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018334:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8018338:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801833c:	fb04 fa0a 	mul.w	sl, r4, sl
 8018340:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018344:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018348:	44de      	add	lr, fp
 801834a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801834e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018352:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018356:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801835a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801835e:	ea4e 040a 	orr.w	r4, lr, sl
 8018362:	940c      	str	r4, [sp, #48]	; 0x30
 8018364:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018366:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801836a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801836e:	43c9      	mvns	r1, r1
 8018370:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018374:	9c08      	ldr	r4, [sp, #32]
 8018376:	fb08 fc0c 	mul.w	ip, r8, ip
 801837a:	fb02 cc0e 	mla	ip, r2, lr, ip
 801837e:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8018382:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8018384:	fb00 cc0e 	mla	ip, r0, lr, ip
 8018388:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801838c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801838e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8018392:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8018396:	fb08 f80e 	mul.w	r8, r8, lr
 801839a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801839e:	fa5f fe81 	uxtb.w	lr, r1
 80183a2:	fb02 8303 	mla	r3, r2, r3, r8
 80183a6:	9a08      	ldr	r2, [sp, #32]
 80183a8:	f8b7 8000 	ldrh.w	r8, [r7]
 80183ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80183b0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80183b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80183b6:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80183ba:	fb00 330a 	mla	r3, r0, sl, r3
 80183be:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80183c2:	ea4f 2228 	mov.w	r2, r8, asr #8
 80183c6:	fb09 3900 	mla	r9, r9, r0, r3
 80183ca:	ea4f 00e8 	mov.w	r0, r8, asr #3
 80183ce:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80183d2:	b2c9      	uxtb	r1, r1
 80183d4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80183d8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80183dc:	fb02 f20e 	mul.w	r2, r2, lr
 80183e0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80183e4:	fb00 f00e 	mul.w	r0, r0, lr
 80183e8:	1c53      	adds	r3, r2, #1
 80183ea:	fb01 f10e 	mul.w	r1, r1, lr
 80183ee:	ea4c 0c09 	orr.w	ip, ip, r9
 80183f2:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80183f6:	ea4f 431c 	mov.w	r3, ip, lsr #16
 80183fa:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80183fe:	4a60      	ldr	r2, [pc, #384]	; (8018580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8018400:	b2db      	uxtb	r3, r3
 8018402:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8018406:	1c43      	adds	r3, r0, #1
 8018408:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801840c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8018410:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018414:	00db      	lsls	r3, r3, #3
 8018416:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801841a:	4313      	orrs	r3, r2
 801841c:	1c4a      	adds	r2, r1, #1
 801841e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018422:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8018426:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801842a:	ea4c 0c03 	orr.w	ip, ip, r3
 801842e:	f8a7 c000 	strh.w	ip, [r7]
 8018432:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018434:	3702      	adds	r7, #2
 8018436:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8018438:	441a      	add	r2, r3
 801843a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801843c:	441d      	add	r5, r3
 801843e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8018440:	9225      	str	r2, [sp, #148]	; 0x94
 8018442:	3b01      	subs	r3, #1
 8018444:	9317      	str	r3, [sp, #92]	; 0x5c
 8018446:	e699      	b.n	801817c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018448:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801844a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801844c:	441c      	add	r4, r3
 801844e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018450:	441d      	add	r5, r3
 8018452:	9b07      	ldr	r3, [sp, #28]
 8018454:	9425      	str	r4, [sp, #148]	; 0x94
 8018456:	3b01      	subs	r3, #1
 8018458:	9307      	str	r3, [sp, #28]
 801845a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801845c:	3302      	adds	r3, #2
 801845e:	930a      	str	r3, [sp, #40]	; 0x28
 8018460:	e66c      	b.n	801813c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018462:	d024      	beq.n	80184ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 8018464:	9b07      	ldr	r3, [sp, #28]
 8018466:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018468:	3b01      	subs	r3, #1
 801846a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801846c:	fb00 4003 	mla	r0, r0, r3, r4
 8018470:	1400      	asrs	r0, r0, #16
 8018472:	f53f ae80 	bmi.w	8018176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018476:	3901      	subs	r1, #1
 8018478:	4288      	cmp	r0, r1
 801847a:	f6bf ae7c 	bge.w	8018176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801847e:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018480:	fb01 5303 	mla	r3, r1, r3, r5
 8018484:	141b      	asrs	r3, r3, #16
 8018486:	f53f ae76 	bmi.w	8018176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801848a:	3a01      	subs	r2, #1
 801848c:	4293      	cmp	r3, r2
 801848e:	f6bf ae72 	bge.w	8018176 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018492:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018496:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801849a:	f1bb 0f00 	cmp.w	fp, #0
 801849e:	dc71      	bgt.n	8018584 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80184a0:	9b07      	ldr	r3, [sp, #28]
 80184a2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80184a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80184a8:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80184ac:	930a      	str	r3, [sp, #40]	; 0x28
 80184ae:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80184b0:	2b00      	cmp	r3, #0
 80184b2:	f340 81af 	ble.w	8018814 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80184b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80184ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80184bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80184c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80184c4:	eef0 6a62 	vmov.f32	s13, s5
 80184c8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80184cc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80184d0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80184d4:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80184d8:	eef0 6a43 	vmov.f32	s13, s6
 80184dc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80184e0:	ee16 5a90 	vmov	r5, s13
 80184e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80184e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80184ec:	ee77 2a62 	vsub.f32	s5, s14, s5
 80184f0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80184f4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80184f8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80184fc:	ee12 2a90 	vmov	r2, s5
 8018500:	eef0 2a47 	vmov.f32	s5, s14
 8018504:	fb92 f3f3 	sdiv	r3, r2, r3
 8018508:	ee13 2a10 	vmov	r2, s6
 801850c:	9327      	str	r3, [sp, #156]	; 0x9c
 801850e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018510:	eeb0 3a67 	vmov.f32	s6, s15
 8018514:	fb92 f3f3 	sdiv	r3, r2, r3
 8018518:	9328      	str	r3, [sp, #160]	; 0xa0
 801851a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801851c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801851e:	3b01      	subs	r3, #1
 8018520:	9316      	str	r3, [sp, #88]	; 0x58
 8018522:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018524:	bf08      	it	eq
 8018526:	4613      	moveq	r3, r2
 8018528:	9307      	str	r3, [sp, #28]
 801852a:	e5f9      	b.n	8018120 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801852c:	2800      	cmp	r0, #0
 801852e:	f43f ae6b 	beq.w	8018208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8018532:	f818 1001 	ldrb.w	r1, [r8, r1]
 8018536:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801853a:	9108      	str	r1, [sp, #32]
 801853c:	0e09      	lsrs	r1, r1, #24
 801853e:	9110      	str	r1, [sp, #64]	; 0x40
 8018540:	e662      	b.n	8018208 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8018542:	f113 0801 	adds.w	r8, r3, #1
 8018546:	f53f af74 	bmi.w	8018432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801854a:	4541      	cmp	r1, r8
 801854c:	f6ff af71 	blt.w	8018432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8018550:	f11c 0801 	adds.w	r8, ip, #1
 8018554:	f53f af6d 	bmi.w	8018432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8018558:	45c6      	cmp	lr, r8
 801855a:	f6ff af6a 	blt.w	8018432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801855e:	b209      	sxth	r1, r1
 8018560:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8018564:	fa0f f38e 	sxth.w	r3, lr
 8018568:	9100      	str	r1, [sp, #0]
 801856a:	4639      	mov	r1, r7
 801856c:	9301      	str	r3, [sp, #4]
 801856e:	4633      	mov	r3, r6
 8018570:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8018574:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018576:	9819      	ldr	r0, [sp, #100]	; 0x64
 8018578:	f7ff fc7b 	bl	8017e72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801857c:	e759      	b.n	8018432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801857e:	bf00      	nop
 8018580:	fffff800 	.word	0xfffff800
 8018584:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8018586:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801858a:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801858c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8018590:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018592:	1427      	asrs	r7, r4, #16
 8018594:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8018596:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801859a:	142b      	asrs	r3, r5, #16
 801859c:	fb01 7303 	mla	r3, r1, r3, r7
 80185a0:	18e7      	adds	r7, r4, r3
 80185a2:	5ce3      	ldrb	r3, [r4, r3]
 80185a4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80185a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80185ac:	2a00      	cmp	r2, #0
 80185ae:	f000 8127 	beq.w	8018800 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80185b2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80185b6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80185ba:	940d      	str	r4, [sp, #52]	; 0x34
 80185bc:	0e24      	lsrs	r4, r4, #24
 80185be:	9414      	str	r4, [sp, #80]	; 0x50
 80185c0:	b170      	cbz	r0, 80185e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80185c2:	eb07 0e01 	add.w	lr, r7, r1
 80185c6:	5c79      	ldrb	r1, [r7, r1]
 80185c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80185cc:	9109      	str	r1, [sp, #36]	; 0x24
 80185ce:	0e09      	lsrs	r1, r1, #24
 80185d0:	9111      	str	r1, [sp, #68]	; 0x44
 80185d2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80185d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80185da:	910e      	str	r1, [sp, #56]	; 0x38
 80185dc:	0e09      	lsrs	r1, r1, #24
 80185de:	9115      	str	r1, [sp, #84]	; 0x54
 80185e0:	b292      	uxth	r2, r2
 80185e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80185e4:	b280      	uxth	r0, r0
 80185e6:	fb02 f800 	mul.w	r8, r2, r0
 80185ea:	0112      	lsls	r2, r2, #4
 80185ec:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80185f0:	eba2 0e08 	sub.w	lr, r2, r8
 80185f4:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80185f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80185fa:	b280      	uxth	r0, r0
 80185fc:	fa1f fe8e 	uxth.w	lr, lr
 8018600:	1a09      	subs	r1, r1, r0
 8018602:	fb0e f202 	mul.w	r2, lr, r2
 8018606:	b289      	uxth	r1, r1
 8018608:	fb01 220c 	mla	r2, r1, ip, r2
 801860c:	fb00 2204 	mla	r2, r0, r4, r2
 8018610:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018612:	fb08 2204 	mla	r2, r8, r4, r2
 8018616:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801861a:	2a00      	cmp	r2, #0
 801861c:	f000 80e5 	beq.w	80187ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8018620:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018624:	d019      	beq.n	801865a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8018626:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801862a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801862e:	fb0c fa0a 	mul.w	sl, ip, sl
 8018632:	fb0c fc03 	mul.w	ip, ip, r3
 8018636:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801863a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801863e:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8018642:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018646:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801864a:	4453      	add	r3, sl
 801864c:	0a3f      	lsrs	r7, r7, #8
 801864e:	0a1b      	lsrs	r3, r3, #8
 8018650:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018654:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018658:	433b      	orrs	r3, r7
 801865a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801865c:	2cff      	cmp	r4, #255	; 0xff
 801865e:	d020      	beq.n	80186a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8018660:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018662:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018666:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018668:	4367      	muls	r7, r4
 801866a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801866c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018670:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018674:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018676:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801867a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801867e:	fb04 fa0a 	mul.w	sl, r4, sl
 8018682:	44bc      	add	ip, r7
 8018684:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018688:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801868c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018690:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018694:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018698:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801869c:	ea4c 040a 	orr.w	r4, ip, sl
 80186a0:	940d      	str	r4, [sp, #52]	; 0x34
 80186a2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80186a4:	2cff      	cmp	r4, #255	; 0xff
 80186a6:	d020      	beq.n	80186ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80186a8:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80186aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80186ae:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80186b0:	4367      	muls	r7, r4
 80186b2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80186b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80186b8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80186bc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80186be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80186c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80186c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80186ca:	44bc      	add	ip, r7
 80186cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80186d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80186d4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80186d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80186dc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80186e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80186e4:	ea4c 040a 	orr.w	r4, ip, sl
 80186e8:	9409      	str	r4, [sp, #36]	; 0x24
 80186ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80186ec:	2cff      	cmp	r4, #255	; 0xff
 80186ee:	d020      	beq.n	8018732 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80186f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80186f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80186f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80186f8:	4367      	muls	r7, r4
 80186fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80186fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018700:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8018704:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018706:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801870a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801870e:	fb04 fa0a 	mul.w	sl, r4, sl
 8018712:	44bc      	add	ip, r7
 8018714:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018718:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801871c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018720:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018724:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018728:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801872c:	ea4c 040a 	orr.w	r4, ip, sl
 8018730:	940e      	str	r4, [sp, #56]	; 0x38
 8018732:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018734:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018738:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801873c:	43d2      	mvns	r2, r2
 801873e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8018742:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8018744:	b2d2      	uxtb	r2, r2
 8018746:	fb0e f707 	mul.w	r7, lr, r7
 801874a:	fb01 770c 	mla	r7, r1, ip, r7
 801874e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8018752:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018754:	fb00 770c 	mla	r7, r0, ip, r7
 8018758:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801875c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801875e:	fb08 770c 	mla	r7, r8, ip, r7
 8018762:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8018766:	fb0e fe0c 	mul.w	lr, lr, ip
 801876a:	0a3f      	lsrs	r7, r7, #8
 801876c:	fb01 e303 	mla	r3, r1, r3, lr
 8018770:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018772:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018776:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801877a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801877c:	fb00 330a 	mla	r3, r0, sl, r3
 8018780:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8018784:	fb08 3c0c 	mla	ip, r8, ip, r3
 8018788:	f8b9 3000 	ldrh.w	r3, [r9]
 801878c:	1218      	asrs	r0, r3, #8
 801878e:	10d9      	asrs	r1, r3, #3
 8018790:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018794:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018798:	00db      	lsls	r3, r3, #3
 801879a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801879e:	4350      	muls	r0, r2
 80187a0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80187a4:	b2db      	uxtb	r3, r3
 80187a6:	4351      	muls	r1, r2
 80187a8:	ea47 070c 	orr.w	r7, r7, ip
 80187ac:	4353      	muls	r3, r2
 80187ae:	1c42      	adds	r2, r0, #1
 80187b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80187b4:	0c3a      	lsrs	r2, r7, #16
 80187b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80187ba:	4a18      	ldr	r2, [pc, #96]	; (801881c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80187bc:	b2c0      	uxtb	r0, r0
 80187be:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80187c2:	1c4a      	adds	r2, r1, #1
 80187c4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80187c8:	0a3a      	lsrs	r2, r7, #8
 80187ca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80187ce:	00c9      	lsls	r1, r1, #3
 80187d0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80187d4:	4301      	orrs	r1, r0
 80187d6:	1c58      	adds	r0, r3, #1
 80187d8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80187dc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80187e0:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80187e4:	4308      	orrs	r0, r1
 80187e6:	f8a9 0000 	strh.w	r0, [r9]
 80187ea:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80187ec:	f109 0902 	add.w	r9, r9, #2
 80187f0:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80187f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80187f6:	441a      	add	r2, r3
 80187f8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80187fa:	9225      	str	r2, [sp, #148]	; 0x94
 80187fc:	441d      	add	r5, r3
 80187fe:	e64c      	b.n	801849a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018800:	2800      	cmp	r0, #0
 8018802:	f43f aeed 	beq.w	80185e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018806:	5c79      	ldrb	r1, [r7, r1]
 8018808:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801880c:	9109      	str	r1, [sp, #36]	; 0x24
 801880e:	0e09      	lsrs	r1, r1, #24
 8018810:	9111      	str	r1, [sp, #68]	; 0x44
 8018812:	e6e5      	b.n	80185e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8018814:	b01b      	add	sp, #108	; 0x6c
 8018816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801881a:	bf00      	nop
 801881c:	fffff800 	.word	0xfffff800

08018820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8018820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018824:	b085      	sub	sp, #20
 8018826:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801882a:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801882e:	2800      	cmp	r0, #0
 8018830:	9103      	str	r1, [sp, #12]
 8018832:	fb00 7406 	mla	r4, r0, r6, r7
 8018836:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801883a:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801883e:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8018842:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8018846:	eb03 0904 	add.w	r9, r3, r4
 801884a:	9501      	str	r5, [sp, #4]
 801884c:	f2c0 8150 	blt.w	8018af0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018850:	4583      	cmp	fp, r0
 8018852:	f340 814d 	ble.w	8018af0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8018856:	2f00      	cmp	r7, #0
 8018858:	f2c0 8146 	blt.w	8018ae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801885c:	42be      	cmp	r6, r7
 801885e:	f340 8143 	ble.w	8018ae8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8018862:	f813 c004 	ldrb.w	ip, [r3, r4]
 8018866:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801886a:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801886e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018872:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8018876:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801887a:	4355      	muls	r5, r2
 801887c:	fb0c f203 	mul.w	r2, ip, r3
 8018880:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8018884:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8018888:	441d      	add	r5, r3
 801888a:	f102 0320 	add.w	r3, r2, #32
 801888e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018892:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8018896:	0a1b      	lsrs	r3, r3, #8
 8018898:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801889c:	431c      	orrs	r4, r3
 801889e:	1c7b      	adds	r3, r7, #1
 80188a0:	f100 812b 	bmi.w	8018afa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80188a4:	429e      	cmp	r6, r3
 80188a6:	f340 8128 	ble.w	8018afa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80188aa:	2900      	cmp	r1, #0
 80188ac:	f000 8128 	beq.w	8018b00 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80188b0:	9a01      	ldr	r2, [sp, #4]
 80188b2:	f899 3001 	ldrb.w	r3, [r9, #1]
 80188b6:	8855      	ldrh	r5, [r2, #2]
 80188b8:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80188bc:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80188c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80188c4:	fb08 f802 	mul.w	r8, r8, r2
 80188c8:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80188cc:	435d      	muls	r5, r3
 80188ce:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80188d2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80188d6:	44d0      	add	r8, sl
 80188d8:	f105 0a20 	add.w	sl, r5, #32
 80188dc:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80188e0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80188e4:	0a2d      	lsrs	r5, r5, #8
 80188e6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80188ea:	432a      	orrs	r2, r5
 80188ec:	3001      	adds	r0, #1
 80188ee:	f100 810d 	bmi.w	8018b0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80188f2:	4583      	cmp	fp, r0
 80188f4:	f340 810a 	ble.w	8018b0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80188f8:	f1be 0f00 	cmp.w	lr, #0
 80188fc:	f000 810b 	beq.w	8018b16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8018900:	2f00      	cmp	r7, #0
 8018902:	f2c0 8100 	blt.w	8018b06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8018906:	42be      	cmp	r6, r7
 8018908:	f340 80fd 	ble.w	8018b06 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801890c:	9801      	ldr	r0, [sp, #4]
 801890e:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8018912:	f819 5006 	ldrb.w	r5, [r9, r6]
 8018916:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801891a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801891e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8018922:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018926:	fb0a fa00 	mul.w	sl, sl, r0
 801892a:	fb05 f808 	mul.w	r8, r5, r8
 801892e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8018932:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8018936:	4482      	add	sl, r0
 8018938:	f108 0020 	add.w	r0, r8, #32
 801893c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8018940:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8018944:	0a00      	lsrs	r0, r0, #8
 8018946:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801894a:	ea4b 0b00 	orr.w	fp, fp, r0
 801894e:	3701      	adds	r7, #1
 8018950:	f100 80e6 	bmi.w	8018b20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8018954:	42be      	cmp	r6, r7
 8018956:	f340 80e3 	ble.w	8018b20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801895a:	2900      	cmp	r1, #0
 801895c:	f000 80e3 	beq.w	8018b26 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8018960:	3601      	adds	r6, #1
 8018962:	9801      	ldr	r0, [sp, #4]
 8018964:	f819 7006 	ldrb.w	r7, [r9, r6]
 8018968:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801896c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8018970:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8018974:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018978:	fb09 f906 	mul.w	r9, r9, r6
 801897c:	fb07 f800 	mul.w	r8, r7, r0
 8018980:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8018984:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8018988:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801898c:	44d1      	add	r9, sl
 801898e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8018992:	f108 0020 	add.w	r0, r8, #32
 8018996:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801899a:	0a00      	lsrs	r0, r0, #8
 801899c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80189a0:	4330      	orrs	r0, r6
 80189a2:	b28e      	uxth	r6, r1
 80189a4:	fa1f f98e 	uxth.w	r9, lr
 80189a8:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80189ac:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80189b0:	fb06 f809 	mul.w	r8, r6, r9
 80189b4:	0136      	lsls	r6, r6, #4
 80189b6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80189ba:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80189be:	9601      	str	r6, [sp, #4]
 80189c0:	ea4a 0404 	orr.w	r4, sl, r4
 80189c4:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80189c8:	fa1f f689 	uxth.w	r6, r9
 80189cc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80189d0:	fb11 f90e 	smulbb	r9, r1, lr
 80189d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80189d8:	9602      	str	r6, [sp, #8]
 80189da:	4626      	mov	r6, r4
 80189dc:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80189e0:	f1ce 0410 	rsb	r4, lr, #16
 80189e4:	ea4a 0202 	orr.w	r2, sl, r2
 80189e8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80189ec:	1a64      	subs	r4, r4, r1
 80189ee:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80189f2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80189f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80189fa:	434a      	muls	r2, r1
 80189fc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8018a00:	ea4a 0000 	orr.w	r0, sl, r0
 8018a04:	9903      	ldr	r1, [sp, #12]
 8018a06:	fb04 2406 	mla	r4, r4, r6, r2
 8018a0a:	9e02      	ldr	r6, [sp, #8]
 8018a0c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8018a10:	fb09 4200 	mla	r2, r9, r0, r4
 8018a14:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8018a18:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8018a1c:	8808      	ldrh	r0, [r1, #0]
 8018a1e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018a22:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8018a26:	ea44 0b0b 	orr.w	fp, r4, fp
 8018a2a:	9c01      	ldr	r4, [sp, #4]
 8018a2c:	b289      	uxth	r1, r1
 8018a2e:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 8018a32:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8018a36:	1ba4      	subs	r4, r4, r6
 8018a38:	9e01      	ldr	r6, [sp, #4]
 8018a3a:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018a3e:	eba6 0608 	sub.w	r6, r6, r8
 8018a42:	b2a4      	uxth	r4, r4
 8018a44:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018a48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018a4c:	b2b6      	uxth	r6, r6
 8018a4e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018a52:	4373      	muls	r3, r6
 8018a54:	ea42 0e0e 	orr.w	lr, r2, lr
 8018a58:	fb0c 3304 	mla	r3, ip, r4, r3
 8018a5c:	9c02      	ldr	r4, [sp, #8]
 8018a5e:	fa1f f28e 	uxth.w	r2, lr
 8018a62:	fb04 3505 	mla	r5, r4, r5, r3
 8018a66:	10d4      	asrs	r4, r2, #3
 8018a68:	fb08 5707 	mla	r7, r8, r7, r5
 8018a6c:	1215      	asrs	r5, r2, #8
 8018a6e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8018a72:	00d2      	lsls	r2, r2, #3
 8018a74:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8018a78:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018a7c:	b2d2      	uxtb	r2, r2
 8018a7e:	434f      	muls	r7, r1
 8018a80:	1c7b      	adds	r3, r7, #1
 8018a82:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8018a86:	1203      	asrs	r3, r0, #8
 8018a88:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8018a8c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018a90:	b2ff      	uxtb	r7, r7
 8018a92:	fb13 f307 	smulbb	r3, r3, r7
 8018a96:	fb05 3501 	mla	r5, r5, r1, r3
 8018a9a:	10c3      	asrs	r3, r0, #3
 8018a9c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018aa0:	b2ad      	uxth	r5, r5
 8018aa2:	fb13 f307 	smulbb	r3, r3, r7
 8018aa6:	fb04 3401 	mla	r4, r4, r1, r3
 8018aaa:	00c3      	lsls	r3, r0, #3
 8018aac:	b2db      	uxtb	r3, r3
 8018aae:	b2a4      	uxth	r4, r4
 8018ab0:	fb13 f307 	smulbb	r3, r3, r7
 8018ab4:	fb02 3101 	mla	r1, r2, r1, r3
 8018ab8:	1c6b      	adds	r3, r5, #1
 8018aba:	1c62      	adds	r2, r4, #1
 8018abc:	b289      	uxth	r1, r1
 8018abe:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018ac2:	1c4b      	adds	r3, r1, #1
 8018ac4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8018ac8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018acc:	9a03      	ldr	r2, [sp, #12]
 8018ace:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018ad2:	0964      	lsrs	r4, r4, #5
 8018ad4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018ad8:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8018adc:	432b      	orrs	r3, r5
 8018ade:	4323      	orrs	r3, r4
 8018ae0:	8013      	strh	r3, [r2, #0]
 8018ae2:	b005      	add	sp, #20
 8018ae4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ae8:	f04f 0c00 	mov.w	ip, #0
 8018aec:	4664      	mov	r4, ip
 8018aee:	e6d6      	b.n	801889e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8018af0:	2300      	movs	r3, #0
 8018af2:	469c      	mov	ip, r3
 8018af4:	461a      	mov	r2, r3
 8018af6:	461c      	mov	r4, r3
 8018af8:	e6f8      	b.n	80188ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8018afa:	2300      	movs	r3, #0
 8018afc:	461a      	mov	r2, r3
 8018afe:	e6f5      	b.n	80188ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8018b00:	460b      	mov	r3, r1
 8018b02:	460a      	mov	r2, r1
 8018b04:	e6f2      	b.n	80188ec <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8018b06:	2500      	movs	r5, #0
 8018b08:	46ab      	mov	fp, r5
 8018b0a:	e720      	b.n	801894e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8018b0c:	2700      	movs	r7, #0
 8018b0e:	463d      	mov	r5, r7
 8018b10:	4638      	mov	r0, r7
 8018b12:	46bb      	mov	fp, r7
 8018b14:	e745      	b.n	80189a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8018b16:	4677      	mov	r7, lr
 8018b18:	4675      	mov	r5, lr
 8018b1a:	4670      	mov	r0, lr
 8018b1c:	46f3      	mov	fp, lr
 8018b1e:	e740      	b.n	80189a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8018b20:	2700      	movs	r7, #0
 8018b22:	4638      	mov	r0, r7
 8018b24:	e73d      	b.n	80189a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8018b26:	460f      	mov	r7, r1
 8018b28:	4608      	mov	r0, r1
 8018b2a:	e73a      	b.n	80189a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08018b2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b30:	b097      	sub	sp, #92	; 0x5c
 8018b32:	9214      	str	r2, [sp, #80]	; 0x50
 8018b34:	9308      	str	r3, [sp, #32]
 8018b36:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8018b38:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8018b3c:	9015      	str	r0, [sp, #84]	; 0x54
 8018b3e:	9312      	str	r3, [sp, #72]	; 0x48
 8018b40:	6850      	ldr	r0, [r2, #4]
 8018b42:	9111      	str	r1, [sp, #68]	; 0x44
 8018b44:	6812      	ldr	r2, [r2, #0]
 8018b46:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 8018b4a:	fb00 1303 	mla	r3, r0, r3, r1
 8018b4e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018b52:	9309      	str	r3, [sp, #36]	; 0x24
 8018b54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b56:	681b      	ldr	r3, [r3, #0]
 8018b58:	930b      	str	r3, [sp, #44]	; 0x2c
 8018b5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b5c:	685b      	ldr	r3, [r3, #4]
 8018b5e:	930c      	str	r3, [sp, #48]	; 0x30
 8018b60:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018b64:	930a      	str	r3, [sp, #40]	; 0x28
 8018b66:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018b68:	2b00      	cmp	r3, #0
 8018b6a:	dc03      	bgt.n	8018b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018b6c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018b6e:	2b00      	cmp	r3, #0
 8018b70:	f340 83cd 	ble.w	801930e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8018b74:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b76:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018b7a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018b7e:	1e48      	subs	r0, r1, #1
 8018b80:	1e55      	subs	r5, r2, #1
 8018b82:	9b08      	ldr	r3, [sp, #32]
 8018b84:	2b00      	cmp	r3, #0
 8018b86:	f340 81a5 	ble.w	8018ed4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8018b8a:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8018b8c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018b8e:	1436      	asrs	r6, r6, #16
 8018b90:	ea4f 4323 	mov.w	r3, r3, asr #16
 8018b94:	d406      	bmi.n	8018ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018b96:	4286      	cmp	r6, r0
 8018b98:	da04      	bge.n	8018ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018b9a:	2b00      	cmp	r3, #0
 8018b9c:	db02      	blt.n	8018ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018b9e:	42ab      	cmp	r3, r5
 8018ba0:	f2c0 8199 	blt.w	8018ed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8018ba4:	3601      	adds	r6, #1
 8018ba6:	f100 8186 	bmi.w	8018eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018baa:	42b1      	cmp	r1, r6
 8018bac:	f2c0 8183 	blt.w	8018eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018bb0:	3301      	adds	r3, #1
 8018bb2:	f100 8180 	bmi.w	8018eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018bb6:	429a      	cmp	r2, r3
 8018bb8:	f2c0 817d 	blt.w	8018eb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8018bbc:	9b08      	ldr	r3, [sp, #32]
 8018bbe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018bc2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8018bc4:	9313      	str	r3, [sp, #76]	; 0x4c
 8018bc6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018bc8:	2b00      	cmp	r3, #0
 8018bca:	f340 81a6 	ble.w	8018f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8018bce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018bd0:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8018bd2:	1418      	asrs	r0, r3, #16
 8018bd4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8018bd6:	142d      	asrs	r5, r5, #16
 8018bd8:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018bdc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8018bde:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8018be2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018be4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8018be8:	f100 81fa 	bmi.w	8018fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018bec:	f102 3eff 	add.w	lr, r2, #4294967295
 8018bf0:	4575      	cmp	r5, lr
 8018bf2:	f280 81f5 	bge.w	8018fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018bf6:	2800      	cmp	r0, #0
 8018bf8:	f2c0 81f2 	blt.w	8018fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018bfc:	f103 3eff 	add.w	lr, r3, #4294967295
 8018c00:	4570      	cmp	r0, lr
 8018c02:	f280 81ed 	bge.w	8018fe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8018c06:	b212      	sxth	r2, r2
 8018c08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018c0a:	fa1f fe81 	uxth.w	lr, r1
 8018c0e:	fb00 5002 	mla	r0, r0, r2, r5
 8018c12:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8018c16:	eb03 0a00 	add.w	sl, r3, r0
 8018c1a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8018c1e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8018c22:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018c26:	b29b      	uxth	r3, r3
 8018c28:	f1bc 0f00 	cmp.w	ip, #0
 8018c2c:	f000 81bb 	beq.w	8018fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8018c30:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8018c34:	eb0a 0b02 	add.w	fp, sl, r2
 8018c38:	fa1f fa8c 	uxth.w	sl, ip
 8018c3c:	940d      	str	r4, [sp, #52]	; 0x34
 8018c3e:	fb0a fe0e 	mul.w	lr, sl, lr
 8018c42:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8018c46:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8018c4a:	eba5 050e 	sub.w	r5, r5, lr
 8018c4e:	940e      	str	r4, [sp, #56]	; 0x38
 8018c50:	fa1f fa8a 	uxth.w	sl, sl
 8018c54:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018c56:	b2ad      	uxth	r5, r5
 8018c58:	eba3 030a 	sub.w	r3, r3, sl
 8018c5c:	fb08 f505 	mul.w	r5, r8, r5
 8018c60:	b29b      	uxth	r3, r3
 8018c62:	fb09 5303 	mla	r3, r9, r3, r5
 8018c66:	fb0a 3304 	mla	r3, sl, r4, r3
 8018c6a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018c6c:	fb0e 3304 	mla	r3, lr, r4, r3
 8018c70:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018c74:	2b00      	cmp	r3, #0
 8018c76:	f000 8111 	beq.w	8018e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018c7a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8018c7c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018c80:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8018c84:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8018c88:	f000 8192 	beq.w	8018fb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8018c8c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018c90:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8018c94:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018c98:	fb0a fe0e 	mul.w	lr, sl, lr
 8018c9c:	fb09 f000 	mul.w	r0, r9, r0
 8018ca0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8018ca4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018ca8:	f100 0b20 	add.w	fp, r0, #32
 8018cac:	44ce      	add	lr, r9
 8018cae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8018cb2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018cb6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8018cba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018cbe:	ea4e 0909 	orr.w	r9, lr, r9
 8018cc2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018cc6:	8868      	ldrh	r0, [r5, #2]
 8018cc8:	d019      	beq.n	8018cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018cca:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8018cce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8018cd2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018cd6:	fb0a fe0e 	mul.w	lr, sl, lr
 8018cda:	fb08 f800 	mul.w	r8, r8, r0
 8018cde:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8018ce2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8018ce6:	f108 0b20 	add.w	fp, r8, #32
 8018cea:	4486      	add	lr, r0
 8018cec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8018cf0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8018cf4:	0a00      	lsrs	r0, r0, #8
 8018cf6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018cfa:	ea4e 0000 	orr.w	r0, lr, r0
 8018cfe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8018d02:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018d06:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8018d0a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018d0e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018d12:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018d16:	ea4e 0909 	orr.w	r9, lr, r9
 8018d1a:	ea4a 0000 	orr.w	r0, sl, r0
 8018d1e:	f1bc 0f00 	cmp.w	ip, #0
 8018d22:	f000 8147 	beq.w	8018fb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 8018d26:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8018d2a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8018d2c:	3a01      	subs	r2, #1
 8018d2e:	2cff      	cmp	r4, #255	; 0xff
 8018d30:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8018d34:	f102 0202 	add.w	r2, r2, #2
 8018d38:	eb05 0e02 	add.w	lr, r5, r2
 8018d3c:	5aaa      	ldrh	r2, [r5, r2]
 8018d3e:	d018      	beq.n	8018d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8018d40:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8018d44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d48:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018d4c:	fb04 fa02 	mul.w	sl, r4, r2
 8018d50:	fb08 f805 	mul.w	r8, r8, r5
 8018d54:	f10a 0520 	add.w	r5, sl, #32
 8018d58:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8018d5c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018d60:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8018d64:	4442      	add	r2, r8
 8018d66:	0a2d      	lsrs	r5, r5, #8
 8018d68:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8018d6c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018d70:	432a      	orrs	r2, r5
 8018d72:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8018d74:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8018d78:	2cff      	cmp	r4, #255	; 0xff
 8018d7a:	d01a      	beq.n	8018db2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8018d7c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8018d80:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018d84:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8018d88:	fb04 fa05 	mul.w	sl, r4, r5
 8018d8c:	fb08 f80e 	mul.w	r8, r8, lr
 8018d90:	f10a 0e20 	add.w	lr, sl, #32
 8018d94:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8018d98:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8018d9c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8018da0:	4445      	add	r5, r8
 8018da2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018da6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8018daa:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8018dae:	ea45 050e 	orr.w	r5, r5, lr
 8018db2:	fb1c fe01 	smulbb	lr, ip, r1
 8018db6:	f1cc 0810 	rsb	r8, ip, #16
 8018dba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8018dbe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018dc2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8018dc6:	eba8 0801 	sub.w	r8, r8, r1
 8018dca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8018dce:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018dd2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8018dd6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8018dda:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8018dde:	ea4a 0202 	orr.w	r2, sl, r2
 8018de2:	4341      	muls	r1, r0
 8018de4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8018de8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8018dec:	fb09 1108 	mla	r1, r9, r8, r1
 8018df0:	ea4b 0505 	orr.w	r5, fp, r5
 8018df4:	fb0c 1102 	mla	r1, ip, r2, r1
 8018df8:	fb0e 1e05 	mla	lr, lr, r5, r1
 8018dfc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8018e00:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8018e04:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018e08:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8018e0c:	ea42 0e0e 	orr.w	lr, r2, lr
 8018e10:	fa1f f28e 	uxth.w	r2, lr
 8018e14:	2bff      	cmp	r3, #255	; 0xff
 8018e16:	d103      	bne.n	8018e20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8018e18:	9912      	ldr	r1, [sp, #72]	; 0x48
 8018e1a:	29ff      	cmp	r1, #255	; 0xff
 8018e1c:	f000 80de 	beq.w	8018fdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8018e20:	990a      	ldr	r1, [sp, #40]	; 0x28
 8018e22:	1215      	asrs	r5, r2, #8
 8018e24:	8838      	ldrh	r0, [r7, #0]
 8018e26:	434b      	muls	r3, r1
 8018e28:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018e2c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8018e2e:	f103 0c01 	add.w	ip, r3, #1
 8018e32:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8018e36:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8018e3a:	fa5f fc83 	uxtb.w	ip, r3
 8018e3e:	1203      	asrs	r3, r0, #8
 8018e40:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018e44:	fb13 f30c 	smulbb	r3, r3, ip
 8018e48:	fb05 3501 	mla	r5, r5, r1, r3
 8018e4c:	10c3      	asrs	r3, r0, #3
 8018e4e:	10d1      	asrs	r1, r2, #3
 8018e50:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8018e54:	00d2      	lsls	r2, r2, #3
 8018e56:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018e5a:	b2ad      	uxth	r5, r5
 8018e5c:	fb13 f30c 	smulbb	r3, r3, ip
 8018e60:	b2d2      	uxtb	r2, r2
 8018e62:	fb01 3104 	mla	r1, r1, r4, r3
 8018e66:	00c3      	lsls	r3, r0, #3
 8018e68:	b2db      	uxtb	r3, r3
 8018e6a:	b289      	uxth	r1, r1
 8018e6c:	fb13 f30c 	smulbb	r3, r3, ip
 8018e70:	fb02 3304 	mla	r3, r2, r4, r3
 8018e74:	b29a      	uxth	r2, r3
 8018e76:	1c6b      	adds	r3, r5, #1
 8018e78:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8018e7c:	1c53      	adds	r3, r2, #1
 8018e7e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018e82:	1c4a      	adds	r2, r1, #1
 8018e84:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018e88:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8018e8c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018e90:	0949      	lsrs	r1, r1, #5
 8018e92:	432b      	orrs	r3, r5
 8018e94:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018e98:	430b      	orrs	r3, r1
 8018e9a:	803b      	strh	r3, [r7, #0]
 8018e9c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8018e9e:	3702      	adds	r7, #2
 8018ea0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8018ea2:	4413      	add	r3, r2
 8018ea4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8018ea6:	9321      	str	r3, [sp, #132]	; 0x84
 8018ea8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018eaa:	441a      	add	r2, r3
 8018eac:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018eae:	3b01      	subs	r3, #1
 8018eb0:	9222      	str	r2, [sp, #136]	; 0x88
 8018eb2:	9313      	str	r3, [sp, #76]	; 0x4c
 8018eb4:	e687      	b.n	8018bc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018eb6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8018eb8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8018eba:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8018ebc:	4433      	add	r3, r6
 8018ebe:	9321      	str	r3, [sp, #132]	; 0x84
 8018ec0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018ec2:	441c      	add	r4, r3
 8018ec4:	9b08      	ldr	r3, [sp, #32]
 8018ec6:	3b01      	subs	r3, #1
 8018ec8:	9422      	str	r4, [sp, #136]	; 0x88
 8018eca:	9308      	str	r3, [sp, #32]
 8018ecc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018ece:	3302      	adds	r3, #2
 8018ed0:	9309      	str	r3, [sp, #36]	; 0x24
 8018ed2:	e656      	b.n	8018b82 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8018ed4:	d028      	beq.n	8018f28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 8018ed6:	9b08      	ldr	r3, [sp, #32]
 8018ed8:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8018eda:	3b01      	subs	r3, #1
 8018edc:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8018ede:	fb00 5003 	mla	r0, r0, r3, r5
 8018ee2:	1400      	asrs	r0, r0, #16
 8018ee4:	f53f ae6a 	bmi.w	8018bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018ee8:	3901      	subs	r1, #1
 8018eea:	4288      	cmp	r0, r1
 8018eec:	f6bf ae66 	bge.w	8018bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018ef0:	9924      	ldr	r1, [sp, #144]	; 0x90
 8018ef2:	9822      	ldr	r0, [sp, #136]	; 0x88
 8018ef4:	fb01 0303 	mla	r3, r1, r3, r0
 8018ef8:	141b      	asrs	r3, r3, #16
 8018efa:	f53f ae5f 	bmi.w	8018bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018efe:	3a01      	subs	r2, #1
 8018f00:	4293      	cmp	r3, r2
 8018f02:	f6bf ae5b 	bge.w	8018bbc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8018f06:	9b08      	ldr	r3, [sp, #32]
 8018f08:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8018f0c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8018f10:	9313      	str	r3, [sp, #76]	; 0x4c
 8018f12:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018f14:	2b00      	cmp	r3, #0
 8018f16:	f300 8082 	bgt.w	801901e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 8018f1a:	9b08      	ldr	r3, [sp, #32]
 8018f1c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018f20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018f22:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018f26:	9309      	str	r3, [sp, #36]	; 0x24
 8018f28:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f2a:	2b00      	cmp	r3, #0
 8018f2c:	f340 81ef 	ble.w	801930e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8018f30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f34:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018f36:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018f3a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018f3e:	eef0 6a62 	vmov.f32	s13, s5
 8018f42:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018f46:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018f4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f4e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8018f52:	eef0 6a43 	vmov.f32	s13, s6
 8018f56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f5a:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8018f5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018f62:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018f66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018f6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018f6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018f72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018f76:	ee12 2a90 	vmov	r2, s5
 8018f7a:	eef0 2a47 	vmov.f32	s5, s14
 8018f7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f82:	ee13 2a10 	vmov	r2, s6
 8018f86:	9323      	str	r3, [sp, #140]	; 0x8c
 8018f88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018f8a:	eeb0 3a67 	vmov.f32	s6, s15
 8018f8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f92:	9324      	str	r3, [sp, #144]	; 0x90
 8018f94:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018f96:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018f98:	3b01      	subs	r3, #1
 8018f9a:	9311      	str	r3, [sp, #68]	; 0x44
 8018f9c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8018f9e:	bf08      	it	eq
 8018fa0:	4613      	moveq	r3, r2
 8018fa2:	9308      	str	r3, [sp, #32]
 8018fa4:	e5df      	b.n	8018b66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018fa6:	fb08 f505 	mul.w	r5, r8, r5
 8018faa:	fb09 5303 	mla	r3, r9, r3, r5
 8018fae:	e65f      	b.n	8018c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8018fb0:	4681      	mov	r9, r0
 8018fb2:	e686      	b.n	8018cc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8018fb4:	f1c1 0210 	rsb	r2, r1, #16
 8018fb8:	4341      	muls	r1, r0
 8018fba:	fb09 1902 	mla	r9, r9, r2, r1
 8018fbe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8018fc2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8018fc6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018fca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018fce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8018fd2:	ea42 0909 	orr.w	r9, r2, r9
 8018fd6:	fa1f f289 	uxth.w	r2, r9
 8018fda:	e71b      	b.n	8018e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8018fdc:	803a      	strh	r2, [r7, #0]
 8018fde:	e75d      	b.n	8018e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018fe0:	f115 0e01 	adds.w	lr, r5, #1
 8018fe4:	f53f af5a 	bmi.w	8018e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018fe8:	4572      	cmp	r2, lr
 8018fea:	f6ff af57 	blt.w	8018e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018fee:	f110 0e01 	adds.w	lr, r0, #1
 8018ff2:	f53f af53 	bmi.w	8018e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018ff6:	4573      	cmp	r3, lr
 8018ff8:	f6ff af50 	blt.w	8018e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8018ffc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018ffe:	b21b      	sxth	r3, r3
 8019000:	b212      	sxth	r2, r2
 8019002:	9502      	str	r5, [sp, #8]
 8019004:	9301      	str	r3, [sp, #4]
 8019006:	9200      	str	r2, [sp, #0]
 8019008:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801900c:	e9cd c405 	strd	ip, r4, [sp, #20]
 8019010:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8019014:	4639      	mov	r1, r7
 8019016:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019018:	f7ff fc02 	bl	8018820 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801901c:	e73e      	b.n	8018e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801901e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019020:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019024:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019026:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801902a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801902c:	fa1f fc82 	uxth.w	ip, r2
 8019030:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019034:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019036:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801903a:	141f      	asrs	r7, r3, #16
 801903c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801903e:	141b      	asrs	r3, r3, #16
 8019040:	fb01 3707 	mla	r7, r1, r7, r3
 8019044:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019046:	eb03 0a07 	add.w	sl, r3, r7
 801904a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801904e:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019052:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019056:	b29b      	uxth	r3, r3
 8019058:	2d00      	cmp	r5, #0
 801905a:	f000 813d 	beq.w	80192d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801905e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019062:	eb0a 0b01 	add.w	fp, sl, r1
 8019066:	fa1f fa85 	uxth.w	sl, r5
 801906a:	940f      	str	r4, [sp, #60]	; 0x3c
 801906c:	fb0a fc0c 	mul.w	ip, sl, ip
 8019070:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019074:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019078:	eba0 000c 	sub.w	r0, r0, ip
 801907c:	9410      	str	r4, [sp, #64]	; 0x40
 801907e:	fa1f fa8a 	uxth.w	sl, sl
 8019082:	b280      	uxth	r0, r0
 8019084:	eba3 030a 	sub.w	r3, r3, sl
 8019088:	fb08 f000 	mul.w	r0, r8, r0
 801908c:	b29b      	uxth	r3, r3
 801908e:	fb09 0303 	mla	r3, r9, r3, r0
 8019092:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019094:	fb0a 3300 	mla	r3, sl, r0, r3
 8019098:	fb0c 3304 	mla	r3, ip, r4, r3
 801909c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80190a0:	2b00      	cmp	r3, #0
 80190a2:	f000 810b 	beq.w	80192bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 80190a6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80190a8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80190ac:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80190ae:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80190b2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80190b6:	f000 8114 	beq.w	80192e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80190ba:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80190be:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80190c2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80190c6:	fb0a fc0c 	mul.w	ip, sl, ip
 80190ca:	fb09 f707 	mul.w	r7, r9, r7
 80190ce:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80190d2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80190d6:	f107 0b20 	add.w	fp, r7, #32
 80190da:	44cc      	add	ip, r9
 80190dc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80190e0:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80190e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80190e8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80190ec:	ea4c 0909 	orr.w	r9, ip, r9
 80190f0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80190f4:	8847      	ldrh	r7, [r0, #2]
 80190f6:	d019      	beq.n	801912c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 80190f8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80190fc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019100:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019104:	fb0a fc0c 	mul.w	ip, sl, ip
 8019108:	fb08 f807 	mul.w	r8, r8, r7
 801910c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019110:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019114:	f108 0b20 	add.w	fp, r8, #32
 8019118:	44bc      	add	ip, r7
 801911a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801911e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019122:	0a3f      	lsrs	r7, r7, #8
 8019124:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019128:	ea4c 0707 	orr.w	r7, ip, r7
 801912c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019130:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019134:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019138:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801913c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019140:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019144:	ea4c 0909 	orr.w	r9, ip, r9
 8019148:	ea4a 0707 	orr.w	r7, sl, r7
 801914c:	2d00      	cmp	r5, #0
 801914e:	f000 80ca 	beq.w	80192e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 8019152:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019156:	3901      	subs	r1, #1
 8019158:	0049      	lsls	r1, r1, #1
 801915a:	3102      	adds	r1, #2
 801915c:	eb00 0c01 	add.w	ip, r0, r1
 8019160:	5a41      	ldrh	r1, [r0, r1]
 8019162:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8019164:	28ff      	cmp	r0, #255	; 0xff
 8019166:	d019      	beq.n	801919c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 8019168:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801916c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801916e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019172:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019176:	fb04 fa01 	mul.w	sl, r4, r1
 801917a:	fb08 f800 	mul.w	r8, r8, r0
 801917e:	f10a 0020 	add.w	r0, sl, #32
 8019182:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019186:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801918a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801918e:	4441      	add	r1, r8
 8019190:	0a00      	lsrs	r0, r0, #8
 8019192:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019196:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801919a:	4301      	orrs	r1, r0
 801919c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801919e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80191a2:	2cff      	cmp	r4, #255	; 0xff
 80191a4:	d01a      	beq.n	80191dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 80191a6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80191aa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80191ae:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80191b2:	fb04 fa00 	mul.w	sl, r4, r0
 80191b6:	fb08 f80c 	mul.w	r8, r8, ip
 80191ba:	f10a 0c20 	add.w	ip, sl, #32
 80191be:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80191c2:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80191c6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80191ca:	4440      	add	r0, r8
 80191cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80191d0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80191d4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80191d8:	ea40 000c 	orr.w	r0, r0, ip
 80191dc:	fb15 fc02 	smulbb	ip, r5, r2
 80191e0:	f1c5 0810 	rsb	r8, r5, #16
 80191e4:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80191e8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80191ec:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80191f0:	eba8 0802 	sub.w	r8, r8, r2
 80191f4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80191f8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80191fc:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019200:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019204:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8019208:	ea4a 0101 	orr.w	r1, sl, r1
 801920c:	437a      	muls	r2, r7
 801920e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019212:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019216:	fb09 2208 	mla	r2, r9, r8, r2
 801921a:	ea4b 0000 	orr.w	r0, fp, r0
 801921e:	fb05 2201 	mla	r2, r5, r1, r2
 8019222:	fb0c 2200 	mla	r2, ip, r0, r2
 8019226:	0d57      	lsrs	r7, r2, #21
 8019228:	0952      	lsrs	r2, r2, #5
 801922a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801922e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019232:	433a      	orrs	r2, r7
 8019234:	2bff      	cmp	r3, #255	; 0xff
 8019236:	b292      	uxth	r2, r2
 8019238:	d102      	bne.n	8019240 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801923a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801923c:	29ff      	cmp	r1, #255	; 0xff
 801923e:	d063      	beq.n	8019308 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 8019240:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019242:	1215      	asrs	r5, r2, #8
 8019244:	f8be 1000 	ldrh.w	r1, [lr]
 8019248:	4343      	muls	r3, r0
 801924a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801924c:	10cf      	asrs	r7, r1, #3
 801924e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019252:	1c58      	adds	r0, r3, #1
 8019254:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019258:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801925c:	1208      	asrs	r0, r1, #8
 801925e:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8019262:	00c9      	lsls	r1, r1, #3
 8019264:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019268:	b2db      	uxtb	r3, r3
 801926a:	b2c9      	uxtb	r1, r1
 801926c:	fb10 f003 	smulbb	r0, r0, r3
 8019270:	fb11 f103 	smulbb	r1, r1, r3
 8019274:	fb05 0504 	mla	r5, r5, r4, r0
 8019278:	10d0      	asrs	r0, r2, #3
 801927a:	fb17 f703 	smulbb	r7, r7, r3
 801927e:	00d2      	lsls	r2, r2, #3
 8019280:	b2ad      	uxth	r5, r5
 8019282:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019286:	b2d2      	uxtb	r2, r2
 8019288:	fb00 7004 	mla	r0, r0, r4, r7
 801928c:	1c6b      	adds	r3, r5, #1
 801928e:	fb02 1204 	mla	r2, r2, r4, r1
 8019292:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019296:	b292      	uxth	r2, r2
 8019298:	b280      	uxth	r0, r0
 801929a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801929e:	1c57      	adds	r7, r2, #1
 80192a0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80192a4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80192a8:	433d      	orrs	r5, r7
 80192aa:	1c47      	adds	r7, r0, #1
 80192ac:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80192b0:	097f      	lsrs	r7, r7, #5
 80192b2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80192b6:	433d      	orrs	r5, r7
 80192b8:	f8ae 5000 	strh.w	r5, [lr]
 80192bc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80192be:	f10e 0e02 	add.w	lr, lr, #2
 80192c2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 80192c4:	4413      	add	r3, r2
 80192c6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80192c8:	9321      	str	r3, [sp, #132]	; 0x84
 80192ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80192cc:	441a      	add	r2, r3
 80192ce:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80192d0:	3b01      	subs	r3, #1
 80192d2:	9222      	str	r2, [sp, #136]	; 0x88
 80192d4:	9313      	str	r3, [sp, #76]	; 0x4c
 80192d6:	e61c      	b.n	8018f12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80192d8:	fb08 f000 	mul.w	r0, r8, r0
 80192dc:	fb09 0303 	mla	r3, r9, r3, r0
 80192e0:	e6dc      	b.n	801909c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 80192e2:	46b9      	mov	r9, r7
 80192e4:	e704      	b.n	80190f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 80192e6:	f1c2 0110 	rsb	r1, r2, #16
 80192ea:	437a      	muls	r2, r7
 80192ec:	fb09 2901 	mla	r9, r9, r1, r2
 80192f0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80192f4:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80192f8:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80192fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019300:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019304:	4302      	orrs	r2, r0
 8019306:	e795      	b.n	8019234 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 8019308:	f8ae 2000 	strh.w	r2, [lr]
 801930c:	e7d6      	b.n	80192bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801930e:	b017      	add	sp, #92	; 0x5c
 8019310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019318:	b085      	sub	sp, #20
 801931a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801931e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8019322:	2800      	cmp	r0, #0
 8019324:	9103      	str	r1, [sp, #12]
 8019326:	fb00 7406 	mla	r4, r0, r6, r7
 801932a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801932e:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8019332:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8019336:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801933a:	eb02 0904 	add.w	r9, r2, r4
 801933e:	9501      	str	r5, [sp, #4]
 8019340:	f2c0 8141 	blt.w	80195c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8019344:	4583      	cmp	fp, r0
 8019346:	f340 813e 	ble.w	80195c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801934a:	2f00      	cmp	r7, #0
 801934c:	f2c0 8137 	blt.w	80195be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8019350:	42be      	cmp	r6, r7
 8019352:	f340 8134 	ble.w	80195be <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8019356:	f812 c004 	ldrb.w	ip, [r2, r4]
 801935a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801935e:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8019362:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8019366:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801936a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801936e:	4355      	muls	r5, r2
 8019370:	fb0c f203 	mul.w	r2, ip, r3
 8019374:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8019378:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801937c:	441d      	add	r5, r3
 801937e:	f102 0320 	add.w	r3, r2, #32
 8019382:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019386:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801938a:	0a1b      	lsrs	r3, r3, #8
 801938c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019390:	431c      	orrs	r4, r3
 8019392:	1c7b      	adds	r3, r7, #1
 8019394:	f100 811c 	bmi.w	80195d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8019398:	429e      	cmp	r6, r3
 801939a:	f340 8119 	ble.w	80195d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801939e:	2900      	cmp	r1, #0
 80193a0:	f000 8119 	beq.w	80195d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80193a4:	9a01      	ldr	r2, [sp, #4]
 80193a6:	f899 3001 	ldrb.w	r3, [r9, #1]
 80193aa:	8855      	ldrh	r5, [r2, #2]
 80193ac:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80193b0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80193b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80193b8:	fb08 f802 	mul.w	r8, r8, r2
 80193bc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 80193c0:	435d      	muls	r5, r3
 80193c2:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80193c6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80193ca:	44d0      	add	r8, sl
 80193cc:	f105 0a20 	add.w	sl, r5, #32
 80193d0:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80193d4:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80193d8:	0a2d      	lsrs	r5, r5, #8
 80193da:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80193de:	432a      	orrs	r2, r5
 80193e0:	3001      	adds	r0, #1
 80193e2:	f100 80fe 	bmi.w	80195e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80193e6:	4583      	cmp	fp, r0
 80193e8:	f340 80fb 	ble.w	80195e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 80193ec:	f1be 0f00 	cmp.w	lr, #0
 80193f0:	f000 80fc 	beq.w	80195ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 80193f4:	2f00      	cmp	r7, #0
 80193f6:	f2c0 80f1 	blt.w	80195dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 80193fa:	42be      	cmp	r6, r7
 80193fc:	f340 80ee 	ble.w	80195dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8019400:	9801      	ldr	r0, [sp, #4]
 8019402:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8019406:	f819 5006 	ldrb.w	r5, [r9, r6]
 801940a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801940e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019412:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8019416:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801941a:	fb0a fa00 	mul.w	sl, sl, r0
 801941e:	fb05 f808 	mul.w	r8, r5, r8
 8019422:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8019426:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801942a:	4482      	add	sl, r0
 801942c:	f108 0020 	add.w	r0, r8, #32
 8019430:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8019434:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8019438:	0a00      	lsrs	r0, r0, #8
 801943a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801943e:	ea4b 0b00 	orr.w	fp, fp, r0
 8019442:	3701      	adds	r7, #1
 8019444:	f100 80d7 	bmi.w	80195f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8019448:	42be      	cmp	r6, r7
 801944a:	f340 80d4 	ble.w	80195f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801944e:	2900      	cmp	r1, #0
 8019450:	f000 80d4 	beq.w	80195fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8019454:	3601      	adds	r6, #1
 8019456:	9801      	ldr	r0, [sp, #4]
 8019458:	f819 7006 	ldrb.w	r7, [r9, r6]
 801945c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8019460:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8019464:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8019468:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801946c:	fb09 f906 	mul.w	r9, r9, r6
 8019470:	fb07 f800 	mul.w	r8, r7, r0
 8019474:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8019478:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801947c:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8019480:	44d1      	add	r9, sl
 8019482:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8019486:	f108 0020 	add.w	r0, r8, #32
 801948a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801948e:	0a00      	lsrs	r0, r0, #8
 8019490:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019494:	4330      	orrs	r0, r6
 8019496:	b28e      	uxth	r6, r1
 8019498:	fa1f f98e 	uxth.w	r9, lr
 801949c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80194a0:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80194a4:	fb06 f809 	mul.w	r8, r6, r9
 80194a8:	0136      	lsls	r6, r6, #4
 80194aa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80194ae:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80194b2:	9601      	str	r6, [sp, #4]
 80194b4:	ea4a 0404 	orr.w	r4, sl, r4
 80194b8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80194bc:	fa1f f689 	uxth.w	r6, r9
 80194c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80194c4:	fb11 f90e 	smulbb	r9, r1, lr
 80194c8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80194cc:	9602      	str	r6, [sp, #8]
 80194ce:	4626      	mov	r6, r4
 80194d0:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80194d4:	f1ce 0410 	rsb	r4, lr, #16
 80194d8:	ea4a 0202 	orr.w	r2, sl, r2
 80194dc:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80194e0:	1a64      	subs	r4, r4, r1
 80194e2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80194e6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80194ea:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80194ee:	434a      	muls	r2, r1
 80194f0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80194f4:	ea4a 0000 	orr.w	r0, sl, r0
 80194f8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80194fc:	fb04 2406 	mla	r4, r4, r6, r2
 8019500:	9903      	ldr	r1, [sp, #12]
 8019502:	fb09 4200 	mla	r2, r9, r0, r4
 8019506:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801950a:	9801      	ldr	r0, [sp, #4]
 801950c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8019510:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019514:	8809      	ldrh	r1, [r1, #0]
 8019516:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801951a:	ea44 0b0b 	orr.w	fp, r4, fp
 801951e:	9c02      	ldr	r4, [sp, #8]
 8019520:	1b00      	subs	r0, r0, r4
 8019522:	9c01      	ldr	r4, [sp, #4]
 8019524:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8019528:	eba4 0608 	sub.w	r6, r4, r8
 801952c:	b280      	uxth	r0, r0
 801952e:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8019532:	b2b6      	uxth	r6, r6
 8019534:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8019538:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801953c:	4373      	muls	r3, r6
 801953e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019542:	fb0c 3300 	mla	r3, ip, r0, r3
 8019546:	9802      	ldr	r0, [sp, #8]
 8019548:	ea42 0e0e 	orr.w	lr, r2, lr
 801954c:	fb00 3505 	mla	r5, r0, r5, r3
 8019550:	120b      	asrs	r3, r1, #8
 8019552:	10c8      	asrs	r0, r1, #3
 8019554:	fb08 5707 	mla	r7, r8, r7, r5
 8019558:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801955c:	00c9      	lsls	r1, r1, #3
 801955e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019562:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8019566:	fa1f f28e 	uxth.w	r2, lr
 801956a:	b2c9      	uxtb	r1, r1
 801956c:	b2ff      	uxtb	r7, r7
 801956e:	437b      	muls	r3, r7
 8019570:	4378      	muls	r0, r7
 8019572:	434f      	muls	r7, r1
 8019574:	1c59      	adds	r1, r3, #1
 8019576:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801957a:	1213      	asrs	r3, r2, #8
 801957c:	f023 0307 	bic.w	r3, r3, #7
 8019580:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8019584:	1c41      	adds	r1, r0, #1
 8019586:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801958a:	10d1      	asrs	r1, r2, #3
 801958c:	021b      	lsls	r3, r3, #8
 801958e:	f021 0103 	bic.w	r1, r1, #3
 8019592:	00d2      	lsls	r2, r2, #3
 8019594:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8019598:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801959c:	00c9      	lsls	r1, r1, #3
 801959e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80195a2:	430b      	orrs	r3, r1
 80195a4:	1c79      	adds	r1, r7, #1
 80195a6:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80195aa:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80195ae:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80195b2:	431a      	orrs	r2, r3
 80195b4:	9b03      	ldr	r3, [sp, #12]
 80195b6:	801a      	strh	r2, [r3, #0]
 80195b8:	b005      	add	sp, #20
 80195ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80195be:	f04f 0c00 	mov.w	ip, #0
 80195c2:	4664      	mov	r4, ip
 80195c4:	e6e5      	b.n	8019392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80195c6:	2300      	movs	r3, #0
 80195c8:	469c      	mov	ip, r3
 80195ca:	461a      	mov	r2, r3
 80195cc:	461c      	mov	r4, r3
 80195ce:	e707      	b.n	80193e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80195d0:	2300      	movs	r3, #0
 80195d2:	461a      	mov	r2, r3
 80195d4:	e704      	b.n	80193e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80195d6:	460b      	mov	r3, r1
 80195d8:	460a      	mov	r2, r1
 80195da:	e701      	b.n	80193e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 80195dc:	2500      	movs	r5, #0
 80195de:	46ab      	mov	fp, r5
 80195e0:	e72f      	b.n	8019442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 80195e2:	2700      	movs	r7, #0
 80195e4:	463d      	mov	r5, r7
 80195e6:	4638      	mov	r0, r7
 80195e8:	46bb      	mov	fp, r7
 80195ea:	e754      	b.n	8019496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80195ec:	4677      	mov	r7, lr
 80195ee:	4675      	mov	r5, lr
 80195f0:	4670      	mov	r0, lr
 80195f2:	46f3      	mov	fp, lr
 80195f4:	e74f      	b.n	8019496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80195f6:	2700      	movs	r7, #0
 80195f8:	4638      	mov	r0, r7
 80195fa:	e74c      	b.n	8019496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 80195fc:	460f      	mov	r7, r1
 80195fe:	4608      	mov	r0, r1
 8019600:	e749      	b.n	8019496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08019604 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019608:	b093      	sub	sp, #76	; 0x4c
 801960a:	9210      	str	r2, [sp, #64]	; 0x40
 801960c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801960e:	9011      	str	r0, [sp, #68]	; 0x44
 8019610:	910e      	str	r1, [sp, #56]	; 0x38
 8019612:	6850      	ldr	r0, [r2, #4]
 8019614:	9306      	str	r3, [sp, #24]
 8019616:	6812      	ldr	r2, [r2, #0]
 8019618:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801961c:	fb00 1303 	mla	r3, r0, r3, r1
 8019620:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019624:	9307      	str	r3, [sp, #28]
 8019626:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019628:	681b      	ldr	r3, [r3, #0]
 801962a:	9308      	str	r3, [sp, #32]
 801962c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801962e:	685b      	ldr	r3, [r3, #4]
 8019630:	9309      	str	r3, [sp, #36]	; 0x24
 8019632:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019634:	2b00      	cmp	r3, #0
 8019636:	dc03      	bgt.n	8019640 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019638:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801963a:	2b00      	cmp	r3, #0
 801963c:	f340 83b6 	ble.w	8019dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8019640:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019642:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019646:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801964a:	1e48      	subs	r0, r1, #1
 801964c:	1e55      	subs	r5, r2, #1
 801964e:	9b06      	ldr	r3, [sp, #24]
 8019650:	2b00      	cmp	r3, #0
 8019652:	f340 8165 	ble.w	8019920 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019656:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8019658:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801965a:	1436      	asrs	r6, r6, #16
 801965c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019660:	d406      	bmi.n	8019670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019662:	4286      	cmp	r6, r0
 8019664:	da04      	bge.n	8019670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019666:	2b00      	cmp	r3, #0
 8019668:	db02      	blt.n	8019670 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801966a:	42ab      	cmp	r3, r5
 801966c:	f2c0 8159 	blt.w	8019922 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019670:	3601      	adds	r6, #1
 8019672:	f100 8146 	bmi.w	8019902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8019676:	42b1      	cmp	r1, r6
 8019678:	f2c0 8143 	blt.w	8019902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801967c:	3301      	adds	r3, #1
 801967e:	f100 8140 	bmi.w	8019902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8019682:	429a      	cmp	r2, r3
 8019684:	f2c0 813d 	blt.w	8019902 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8019688:	9b06      	ldr	r3, [sp, #24]
 801968a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801968e:	9f07      	ldr	r7, [sp, #28]
 8019690:	930f      	str	r3, [sp, #60]	; 0x3c
 8019692:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019694:	2b00      	cmp	r3, #0
 8019696:	f340 8166 	ble.w	8019966 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801969a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801969c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801969e:	1418      	asrs	r0, r3, #16
 80196a0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80196a2:	142d      	asrs	r5, r5, #16
 80196a4:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80196a8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80196aa:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80196ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80196b0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80196b4:	f100 81f0 	bmi.w	8019a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80196b8:	f102 3eff 	add.w	lr, r2, #4294967295
 80196bc:	4575      	cmp	r5, lr
 80196be:	f280 81eb 	bge.w	8019a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80196c2:	2800      	cmp	r0, #0
 80196c4:	f2c0 81e8 	blt.w	8019a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80196c8:	f103 3eff 	add.w	lr, r3, #4294967295
 80196cc:	4570      	cmp	r0, lr
 80196ce:	f280 81e3 	bge.w	8019a98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80196d2:	b212      	sxth	r2, r2
 80196d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196d6:	fa1f fe81 	uxth.w	lr, r1
 80196da:	fb00 5002 	mla	r0, r0, r2, r5
 80196de:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80196e2:	eb03 0a00 	add.w	sl, r3, r0
 80196e6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80196ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80196ee:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80196f2:	b29b      	uxth	r3, r3
 80196f4:	f1bc 0f00 	cmp.w	ip, #0
 80196f8:	f000 817b 	beq.w	80199f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 80196fc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8019700:	eb0a 0b02 	add.w	fp, sl, r2
 8019704:	fa1f fa8c 	uxth.w	sl, ip
 8019708:	940a      	str	r4, [sp, #40]	; 0x28
 801970a:	fb0a fe0e 	mul.w	lr, sl, lr
 801970e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019712:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8019716:	eba5 050e 	sub.w	r5, r5, lr
 801971a:	940b      	str	r4, [sp, #44]	; 0x2c
 801971c:	fa1f fa8a 	uxth.w	sl, sl
 8019720:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019722:	b2ad      	uxth	r5, r5
 8019724:	eba3 030a 	sub.w	r3, r3, sl
 8019728:	fb08 f505 	mul.w	r5, r8, r5
 801972c:	b29b      	uxth	r3, r3
 801972e:	fb09 5303 	mla	r3, r9, r3, r5
 8019732:	fb0a 3304 	mla	r3, sl, r4, r3
 8019736:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019738:	fb0e 3304 	mla	r3, lr, r4, r3
 801973c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019740:	2b00      	cmp	r3, #0
 8019742:	f000 80d1 	beq.w	80198e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8019746:	9c08      	ldr	r4, [sp, #32]
 8019748:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801974c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8019750:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8019754:	f000 8152 	beq.w	80199fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8019758:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801975c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019760:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019764:	fb0a fe0e 	mul.w	lr, sl, lr
 8019768:	fb09 f000 	mul.w	r0, r9, r0
 801976c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8019770:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8019774:	f100 0b20 	add.w	fp, r0, #32
 8019778:	44ce      	add	lr, r9
 801977a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801977e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8019782:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019786:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801978a:	ea4e 0909 	orr.w	r9, lr, r9
 801978e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019792:	8868      	ldrh	r0, [r5, #2]
 8019794:	d019      	beq.n	80197ca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8019796:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801979a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801979e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80197a2:	fb0a fe0e 	mul.w	lr, sl, lr
 80197a6:	fb08 f800 	mul.w	r8, r8, r0
 80197aa:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80197ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80197b2:	f108 0b20 	add.w	fp, r8, #32
 80197b6:	4486      	add	lr, r0
 80197b8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80197bc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80197c0:	0a00      	lsrs	r0, r0, #8
 80197c2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80197c6:	ea4e 0000 	orr.w	r0, lr, r0
 80197ca:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80197ce:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80197d2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80197d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80197da:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80197de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80197e2:	ea4e 0909 	orr.w	r9, lr, r9
 80197e6:	ea4a 0000 	orr.w	r0, sl, r0
 80197ea:	f1bc 0f00 	cmp.w	ip, #0
 80197ee:	f000 8107 	beq.w	8019a00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 80197f2:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80197f6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80197f8:	3a01      	subs	r2, #1
 80197fa:	2cff      	cmp	r4, #255	; 0xff
 80197fc:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8019800:	f102 0202 	add.w	r2, r2, #2
 8019804:	eb05 0e02 	add.w	lr, r5, r2
 8019808:	5aaa      	ldrh	r2, [r5, r2]
 801980a:	d018      	beq.n	801983e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801980c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8019810:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019814:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019818:	fb04 fa02 	mul.w	sl, r4, r2
 801981c:	fb08 f805 	mul.w	r8, r8, r5
 8019820:	f10a 0520 	add.w	r5, sl, #32
 8019824:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8019828:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801982c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8019830:	4442      	add	r2, r8
 8019832:	0a2d      	lsrs	r5, r5, #8
 8019834:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8019838:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801983c:	432a      	orrs	r2, r5
 801983e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019840:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8019844:	2cff      	cmp	r4, #255	; 0xff
 8019846:	d01a      	beq.n	801987e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019848:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801984c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019850:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019854:	fb04 fa05 	mul.w	sl, r4, r5
 8019858:	fb08 f80e 	mul.w	r8, r8, lr
 801985c:	f10a 0e20 	add.w	lr, sl, #32
 8019860:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8019864:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019868:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801986c:	4445      	add	r5, r8
 801986e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019872:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8019876:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801987a:	ea45 050e 	orr.w	r5, r5, lr
 801987e:	fb1c fe01 	smulbb	lr, ip, r1
 8019882:	f1cc 0810 	rsb	r8, ip, #16
 8019886:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801988a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801988e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8019892:	eba8 0801 	sub.w	r8, r8, r1
 8019896:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801989a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801989e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80198a2:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80198a6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80198aa:	ea4a 0202 	orr.w	r2, sl, r2
 80198ae:	4341      	muls	r1, r0
 80198b0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80198b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80198b8:	fb09 1108 	mla	r1, r9, r8, r1
 80198bc:	ea4b 0505 	orr.w	r5, fp, r5
 80198c0:	fb0c 1102 	mla	r1, ip, r2, r1
 80198c4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80198c8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80198cc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80198d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80198d4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80198d8:	ea42 0e0e 	orr.w	lr, r2, lr
 80198dc:	fa1f f28e 	uxth.w	r2, lr
 80198e0:	2bff      	cmp	r3, #255	; 0xff
 80198e2:	f040 80a1 	bne.w	8019a28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 80198e6:	803a      	strh	r2, [r7, #0]
 80198e8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80198ea:	3702      	adds	r7, #2
 80198ec:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 80198ee:	4413      	add	r3, r2
 80198f0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80198f2:	931d      	str	r3, [sp, #116]	; 0x74
 80198f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80198f6:	441a      	add	r2, r3
 80198f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80198fa:	3b01      	subs	r3, #1
 80198fc:	921e      	str	r2, [sp, #120]	; 0x78
 80198fe:	930f      	str	r3, [sp, #60]	; 0x3c
 8019900:	e6c7      	b.n	8019692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8019902:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019904:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019906:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8019908:	4433      	add	r3, r6
 801990a:	931d      	str	r3, [sp, #116]	; 0x74
 801990c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801990e:	441c      	add	r4, r3
 8019910:	9b06      	ldr	r3, [sp, #24]
 8019912:	3b01      	subs	r3, #1
 8019914:	941e      	str	r4, [sp, #120]	; 0x78
 8019916:	9306      	str	r3, [sp, #24]
 8019918:	9b07      	ldr	r3, [sp, #28]
 801991a:	3302      	adds	r3, #2
 801991c:	9307      	str	r3, [sp, #28]
 801991e:	e696      	b.n	801964e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019920:	d028      	beq.n	8019974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8019922:	9b06      	ldr	r3, [sp, #24]
 8019924:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019926:	3b01      	subs	r3, #1
 8019928:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801992a:	fb00 5003 	mla	r0, r0, r3, r5
 801992e:	1400      	asrs	r0, r0, #16
 8019930:	f53f aeaa 	bmi.w	8019688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019934:	3901      	subs	r1, #1
 8019936:	4288      	cmp	r0, r1
 8019938:	f6bf aea6 	bge.w	8019688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801993c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801993e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8019940:	fb01 0303 	mla	r3, r1, r3, r0
 8019944:	141b      	asrs	r3, r3, #16
 8019946:	f53f ae9f 	bmi.w	8019688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801994a:	3a01      	subs	r2, #1
 801994c:	4293      	cmp	r3, r2
 801994e:	f6bf ae9b 	bge.w	8019688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019952:	9b06      	ldr	r3, [sp, #24]
 8019954:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8019958:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801995c:	930f      	str	r3, [sp, #60]	; 0x3c
 801995e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019960:	2b00      	cmp	r3, #0
 8019962:	f300 80b6 	bgt.w	8019ad2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8019966:	9b06      	ldr	r3, [sp, #24]
 8019968:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801996c:	9b07      	ldr	r3, [sp, #28]
 801996e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019972:	9307      	str	r3, [sp, #28]
 8019974:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019976:	2b00      	cmp	r3, #0
 8019978:	f340 8218 	ble.w	8019dac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801997c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019980:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019982:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019986:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801998a:	eef0 6a62 	vmov.f32	s13, s5
 801998e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019992:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801999a:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801999e:	eef0 6a43 	vmov.f32	s13, s6
 80199a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80199a6:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 80199aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80199ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80199b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80199b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80199ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80199be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80199c2:	ee12 2a90 	vmov	r2, s5
 80199c6:	eef0 2a47 	vmov.f32	s5, s14
 80199ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80199ce:	ee13 2a10 	vmov	r2, s6
 80199d2:	931f      	str	r3, [sp, #124]	; 0x7c
 80199d4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80199d6:	eeb0 3a67 	vmov.f32	s6, s15
 80199da:	fb92 f3f3 	sdiv	r3, r2, r3
 80199de:	9320      	str	r3, [sp, #128]	; 0x80
 80199e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80199e4:	3b01      	subs	r3, #1
 80199e6:	930e      	str	r3, [sp, #56]	; 0x38
 80199e8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80199ea:	bf08      	it	eq
 80199ec:	4613      	moveq	r3, r2
 80199ee:	9306      	str	r3, [sp, #24]
 80199f0:	e61f      	b.n	8019632 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80199f2:	fb08 f505 	mul.w	r5, r8, r5
 80199f6:	fb09 5303 	mla	r3, r9, r3, r5
 80199fa:	e69f      	b.n	801973c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80199fc:	4681      	mov	r9, r0
 80199fe:	e6c6      	b.n	801978e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8019a00:	f1c1 0210 	rsb	r2, r1, #16
 8019a04:	4341      	muls	r1, r0
 8019a06:	fb09 1902 	mla	r9, r9, r2, r1
 8019a0a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019a0e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8019a12:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019a16:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a1a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019a1e:	ea42 0909 	orr.w	r9, r2, r9
 8019a22:	fa1f f289 	uxth.w	r2, r9
 8019a26:	e75b      	b.n	80198e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 8019a28:	f8b7 c000 	ldrh.w	ip, [r7]
 8019a2c:	43db      	mvns	r3, r3
 8019a2e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019a32:	fa5f fe83 	uxtb.w	lr, r3
 8019a36:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019a3a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019a3e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8019a42:	fb00 f00e 	mul.w	r0, r0, lr
 8019a46:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019a4a:	b2db      	uxtb	r3, r3
 8019a4c:	1c41      	adds	r1, r0, #1
 8019a4e:	fb05 f50e 	mul.w	r5, r5, lr
 8019a52:	fb03 f30e 	mul.w	r3, r3, lr
 8019a56:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8019a5a:	1211      	asrs	r1, r2, #8
 8019a5c:	f021 0107 	bic.w	r1, r1, #7
 8019a60:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8019a64:	48d3      	ldr	r0, [pc, #844]	; (8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8019a66:	b2c9      	uxtb	r1, r1
 8019a68:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8019a6c:	1c69      	adds	r1, r5, #1
 8019a6e:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8019a72:	10d1      	asrs	r1, r2, #3
 8019a74:	00d2      	lsls	r2, r2, #3
 8019a76:	f021 0103 	bic.w	r1, r1, #3
 8019a7a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019a7e:	00c9      	lsls	r1, r1, #3
 8019a80:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019a84:	4301      	orrs	r1, r0
 8019a86:	1c58      	adds	r0, r3, #1
 8019a88:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8019a8c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019a90:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019a94:	430a      	orrs	r2, r1
 8019a96:	e726      	b.n	80198e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8019a98:	f115 0e01 	adds.w	lr, r5, #1
 8019a9c:	f53f af24 	bmi.w	80198e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8019aa0:	4572      	cmp	r2, lr
 8019aa2:	f6ff af21 	blt.w	80198e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8019aa6:	f110 0e01 	adds.w	lr, r0, #1
 8019aaa:	f53f af1d 	bmi.w	80198e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8019aae:	4573      	cmp	r3, lr
 8019ab0:	f6ff af1a 	blt.w	80198e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8019ab4:	b21b      	sxth	r3, r3
 8019ab6:	b212      	sxth	r2, r2
 8019ab8:	9301      	str	r3, [sp, #4]
 8019aba:	9200      	str	r2, [sp, #0]
 8019abc:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8019ac0:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8019ac4:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8019ac8:	4639      	mov	r1, r7
 8019aca:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019acc:	f7ff fc22 	bl	8019314 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019ad0:	e70a      	b.n	80198e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8019ad2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019ad4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019ad8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019ada:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8019ade:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ae0:	fa1f fc82 	uxth.w	ip, r2
 8019ae4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019ae8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8019aea:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8019aee:	141f      	asrs	r7, r3, #16
 8019af0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019af2:	141b      	asrs	r3, r3, #16
 8019af4:	fb01 3707 	mla	r7, r1, r7, r3
 8019af8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019afa:	eb03 0a07 	add.w	sl, r3, r7
 8019afe:	f813 9007 	ldrb.w	r9, [r3, r7]
 8019b02:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8019b06:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8019b0a:	b29b      	uxth	r3, r3
 8019b0c:	2d00      	cmp	r5, #0
 8019b0e:	f000 80fe 	beq.w	8019d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8019b12:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8019b16:	eb0a 0b01 	add.w	fp, sl, r1
 8019b1a:	fa1f fa85 	uxth.w	sl, r5
 8019b1e:	940c      	str	r4, [sp, #48]	; 0x30
 8019b20:	fb0a fc0c 	mul.w	ip, sl, ip
 8019b24:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8019b28:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8019b2c:	eba0 000c 	sub.w	r0, r0, ip
 8019b30:	940d      	str	r4, [sp, #52]	; 0x34
 8019b32:	fa1f fa8a 	uxth.w	sl, sl
 8019b36:	b280      	uxth	r0, r0
 8019b38:	eba3 030a 	sub.w	r3, r3, sl
 8019b3c:	fb08 f000 	mul.w	r0, r8, r0
 8019b40:	b29b      	uxth	r3, r3
 8019b42:	fb09 0303 	mla	r3, r9, r3, r0
 8019b46:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019b48:	fb0a 3300 	mla	r3, sl, r0, r3
 8019b4c:	fb0c 3304 	mla	r3, ip, r4, r3
 8019b50:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019b54:	2b00      	cmp	r3, #0
 8019b56:	f000 80cc 	beq.w	8019cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8019b5a:	9808      	ldr	r0, [sp, #32]
 8019b5c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019b60:	9c08      	ldr	r4, [sp, #32]
 8019b62:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8019b66:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8019b6a:	f000 80d5 	beq.w	8019d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8019b6e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019b72:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8019b76:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019b7a:	fb0a fc0c 	mul.w	ip, sl, ip
 8019b7e:	fb09 f707 	mul.w	r7, r9, r7
 8019b82:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8019b86:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019b8a:	f107 0b20 	add.w	fp, r7, #32
 8019b8e:	44cc      	add	ip, r9
 8019b90:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8019b94:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019b98:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019b9c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019ba0:	ea4c 0909 	orr.w	r9, ip, r9
 8019ba4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019ba8:	8847      	ldrh	r7, [r0, #2]
 8019baa:	d019      	beq.n	8019be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 8019bac:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8019bb0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8019bb4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019bb8:	fb0a fc0c 	mul.w	ip, sl, ip
 8019bbc:	fb08 f807 	mul.w	r8, r8, r7
 8019bc0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8019bc4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8019bc8:	f108 0b20 	add.w	fp, r8, #32
 8019bcc:	44bc      	add	ip, r7
 8019bce:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8019bd2:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8019bd6:	0a3f      	lsrs	r7, r7, #8
 8019bd8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019bdc:	ea4c 0707 	orr.w	r7, ip, r7
 8019be0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8019be4:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8019be8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8019bec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019bf0:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019bf4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019bf8:	ea4c 0909 	orr.w	r9, ip, r9
 8019bfc:	ea4a 0707 	orr.w	r7, sl, r7
 8019c00:	2d00      	cmp	r5, #0
 8019c02:	f000 808b 	beq.w	8019d1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 8019c06:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8019c0a:	3901      	subs	r1, #1
 8019c0c:	0049      	lsls	r1, r1, #1
 8019c0e:	3102      	adds	r1, #2
 8019c10:	eb00 0c01 	add.w	ip, r0, r1
 8019c14:	5a41      	ldrh	r1, [r0, r1]
 8019c16:	980c      	ldr	r0, [sp, #48]	; 0x30
 8019c18:	28ff      	cmp	r0, #255	; 0xff
 8019c1a:	d019      	beq.n	8019c50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 8019c1c:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8019c20:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019c22:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019c26:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019c2a:	fb04 fa01 	mul.w	sl, r4, r1
 8019c2e:	fb08 f800 	mul.w	r8, r8, r0
 8019c32:	f10a 0020 	add.w	r0, sl, #32
 8019c36:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8019c3a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019c3e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8019c42:	4441      	add	r1, r8
 8019c44:	0a00      	lsrs	r0, r0, #8
 8019c46:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8019c4a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019c4e:	4301      	orrs	r1, r0
 8019c50:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019c52:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8019c56:	2cff      	cmp	r4, #255	; 0xff
 8019c58:	d01a      	beq.n	8019c90 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 8019c5a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8019c5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019c62:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8019c66:	fb04 fa00 	mul.w	sl, r4, r0
 8019c6a:	fb08 f80c 	mul.w	r8, r8, ip
 8019c6e:	f10a 0c20 	add.w	ip, sl, #32
 8019c72:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8019c76:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8019c7a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8019c7e:	4440      	add	r0, r8
 8019c80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019c84:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8019c88:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8019c8c:	ea40 000c 	orr.w	r0, r0, ip
 8019c90:	fb15 fc02 	smulbb	ip, r5, r2
 8019c94:	f1c5 0810 	rsb	r8, r5, #16
 8019c98:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8019c9c:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019ca0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8019ca4:	eba8 0802 	sub.w	r8, r8, r2
 8019ca8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8019cac:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8019cb0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8019cb4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019cb8:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8019cbc:	ea4a 0101 	orr.w	r1, sl, r1
 8019cc0:	437a      	muls	r2, r7
 8019cc2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8019cc6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019cca:	fb09 2208 	mla	r2, r9, r8, r2
 8019cce:	ea4b 0000 	orr.w	r0, fp, r0
 8019cd2:	fb05 2201 	mla	r2, r5, r1, r2
 8019cd6:	fb0c 2200 	mla	r2, ip, r0, r2
 8019cda:	0d57      	lsrs	r7, r2, #21
 8019cdc:	0952      	lsrs	r2, r2, #5
 8019cde:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8019ce2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019ce6:	433a      	orrs	r2, r7
 8019ce8:	2bff      	cmp	r3, #255	; 0xff
 8019cea:	b292      	uxth	r2, r2
 8019cec:	d127      	bne.n	8019d3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 8019cee:	f8ae 2000 	strh.w	r2, [lr]
 8019cf2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8019cf4:	f10e 0e02 	add.w	lr, lr, #2
 8019cf8:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8019cfa:	4413      	add	r3, r2
 8019cfc:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8019cfe:	931d      	str	r3, [sp, #116]	; 0x74
 8019d00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019d02:	441a      	add	r2, r3
 8019d04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019d06:	3b01      	subs	r3, #1
 8019d08:	921e      	str	r2, [sp, #120]	; 0x78
 8019d0a:	930f      	str	r3, [sp, #60]	; 0x3c
 8019d0c:	e627      	b.n	801995e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8019d0e:	fb08 f000 	mul.w	r0, r8, r0
 8019d12:	fb09 0303 	mla	r3, r9, r3, r0
 8019d16:	e71b      	b.n	8019b50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 8019d18:	46b9      	mov	r9, r7
 8019d1a:	e743      	b.n	8019ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 8019d1c:	f1c2 0110 	rsb	r1, r2, #16
 8019d20:	437a      	muls	r2, r7
 8019d22:	fb09 2901 	mla	r9, r9, r1, r2
 8019d26:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8019d2a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8019d2e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8019d32:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019d36:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019d3a:	4302      	orrs	r2, r0
 8019d3c:	e7d4      	b.n	8019ce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 8019d3e:	f8be 7000 	ldrh.w	r7, [lr]
 8019d42:	43db      	mvns	r3, r3
 8019d44:	4c1b      	ldr	r4, [pc, #108]	; (8019db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8019d46:	1238      	asrs	r0, r7, #8
 8019d48:	fa5f fc83 	uxtb.w	ip, r3
 8019d4c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019d50:	10fd      	asrs	r5, r7, #3
 8019d52:	00fb      	lsls	r3, r7, #3
 8019d54:	fb00 f00c 	mul.w	r0, r0, ip
 8019d58:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019d5c:	b2db      	uxtb	r3, r3
 8019d5e:	fb05 f10c 	mul.w	r1, r5, ip
 8019d62:	1c45      	adds	r5, r0, #1
 8019d64:	fb03 f30c 	mul.w	r3, r3, ip
 8019d68:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019d6c:	1215      	asrs	r5, r2, #8
 8019d6e:	f025 0507 	bic.w	r5, r5, #7
 8019d72:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8019d76:	1c4d      	adds	r5, r1, #1
 8019d78:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8019d7c:	10d1      	asrs	r1, r2, #3
 8019d7e:	b2c0      	uxtb	r0, r0
 8019d80:	f021 0103 	bic.w	r1, r1, #3
 8019d84:	00d2      	lsls	r2, r2, #3
 8019d86:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8019d8a:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8019d8e:	00c9      	lsls	r1, r1, #3
 8019d90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019d94:	4308      	orrs	r0, r1
 8019d96:	1c59      	adds	r1, r3, #1
 8019d98:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019d9c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8019da0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8019da4:	4318      	orrs	r0, r3
 8019da6:	f8ae 0000 	strh.w	r0, [lr]
 8019daa:	e7a2      	b.n	8019cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8019dac:	b013      	add	sp, #76	; 0x4c
 8019dae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019db2:	bf00      	nop
 8019db4:	fffff800 	.word	0xfffff800

08019db8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8019db8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019dbc:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8019dc0:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8019dc4:	fb05 4c03 	mla	ip, r5, r3, r4
 8019dc8:	2d00      	cmp	r5, #0
 8019dca:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8019dce:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8019dd2:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8019dd6:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019dda:	8808      	ldrh	r0, [r1, #0]
 8019ddc:	f2c0 80a7 	blt.w	8019f2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8019de0:	45aa      	cmp	sl, r5
 8019de2:	f340 80a4 	ble.w	8019f2e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8019de6:	2c00      	cmp	r4, #0
 8019de8:	f2c0 809f 	blt.w	8019f2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8019dec:	42a3      	cmp	r3, r4
 8019dee:	f340 809c 	ble.w	8019f2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8019df2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8019df6:	1c62      	adds	r2, r4, #1
 8019df8:	f100 809c 	bmi.w	8019f34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8019dfc:	4293      	cmp	r3, r2
 8019dfe:	f340 8099 	ble.w	8019f34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8019e02:	f1b9 0f00 	cmp.w	r9, #0
 8019e06:	f000 8095 	beq.w	8019f34 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8019e0a:	f8be c002 	ldrh.w	ip, [lr, #2]
 8019e0e:	3501      	adds	r5, #1
 8019e10:	f100 8094 	bmi.w	8019f3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8019e14:	45aa      	cmp	sl, r5
 8019e16:	f340 8091 	ble.w	8019f3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8019e1a:	2f00      	cmp	r7, #0
 8019e1c:	f000 808e 	beq.w	8019f3c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8019e20:	2c00      	cmp	r4, #0
 8019e22:	f2c0 8089 	blt.w	8019f38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8019e26:	42a3      	cmp	r3, r4
 8019e28:	f340 8086 	ble.w	8019f38 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8019e2c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8019e30:	3401      	adds	r4, #1
 8019e32:	f100 8086 	bmi.w	8019f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8019e36:	42a3      	cmp	r3, r4
 8019e38:	f340 8083 	ble.w	8019f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8019e3c:	f1b9 0f00 	cmp.w	r9, #0
 8019e40:	d07f      	beq.n	8019f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8019e42:	3301      	adds	r3, #1
 8019e44:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8019e48:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019e4c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019e50:	fb19 fe07 	smulbb	lr, r9, r7
 8019e54:	f1c7 0210 	rsb	r2, r7, #16
 8019e58:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019e5c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019e60:	eba2 0209 	sub.w	r2, r2, r9
 8019e64:	ea44 0808 	orr.w	r8, r4, r8
 8019e68:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019e6c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019e70:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019e74:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019e78:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019e7c:	ea44 0c0c 	orr.w	ip, r4, ip
 8019e80:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019e84:	fb04 f40c 	mul.w	r4, r4, ip
 8019e88:	fb02 4808 	mla	r8, r2, r8, r4
 8019e8c:	041a      	lsls	r2, r3, #16
 8019e8e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019e92:	b2b4      	uxth	r4, r6
 8019e94:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019e98:	43f6      	mvns	r6, r6
 8019e9a:	4313      	orrs	r3, r2
 8019e9c:	042a      	lsls	r2, r5, #16
 8019e9e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019ea2:	b2f6      	uxtb	r6, r6
 8019ea4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019ea8:	fb0e 8303 	mla	r3, lr, r3, r8
 8019eac:	432a      	orrs	r2, r5
 8019eae:	fb07 3202 	mla	r2, r7, r2, r3
 8019eb2:	10c7      	asrs	r7, r0, #3
 8019eb4:	0d53      	lsrs	r3, r2, #21
 8019eb6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019eba:	0952      	lsrs	r2, r2, #5
 8019ebc:	fb17 f706 	smulbb	r7, r7, r6
 8019ec0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019ec4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019ec8:	431a      	orrs	r2, r3
 8019eca:	b293      	uxth	r3, r2
 8019ecc:	1202      	asrs	r2, r0, #8
 8019ece:	121d      	asrs	r5, r3, #8
 8019ed0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019ed4:	00c0      	lsls	r0, r0, #3
 8019ed6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019eda:	fb12 f206 	smulbb	r2, r2, r6
 8019ede:	b2c0      	uxtb	r0, r0
 8019ee0:	fb05 2504 	mla	r5, r5, r4, r2
 8019ee4:	10da      	asrs	r2, r3, #3
 8019ee6:	fb10 f006 	smulbb	r0, r0, r6
 8019eea:	00db      	lsls	r3, r3, #3
 8019eec:	b2ad      	uxth	r5, r5
 8019eee:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019ef2:	b2db      	uxtb	r3, r3
 8019ef4:	fb02 7204 	mla	r2, r2, r4, r7
 8019ef8:	fb03 0004 	mla	r0, r3, r4, r0
 8019efc:	1c6b      	adds	r3, r5, #1
 8019efe:	b292      	uxth	r2, r2
 8019f00:	b280      	uxth	r0, r0
 8019f02:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019f06:	1c43      	adds	r3, r0, #1
 8019f08:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019f0c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019f10:	1c50      	adds	r0, r2, #1
 8019f12:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019f16:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019f1a:	0952      	lsrs	r2, r2, #5
 8019f1c:	432b      	orrs	r3, r5
 8019f1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019f22:	4313      	orrs	r3, r2
 8019f24:	800b      	strh	r3, [r1, #0]
 8019f26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019f2a:	4680      	mov	r8, r0
 8019f2c:	e763      	b.n	8019df6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8019f2e:	4684      	mov	ip, r0
 8019f30:	4680      	mov	r8, r0
 8019f32:	e76c      	b.n	8019e0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8019f34:	4684      	mov	ip, r0
 8019f36:	e76a      	b.n	8019e0e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8019f38:	4605      	mov	r5, r0
 8019f3a:	e779      	b.n	8019e30 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8019f3c:	4603      	mov	r3, r0
 8019f3e:	4605      	mov	r5, r0
 8019f40:	e782      	b.n	8019e48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8019f42:	4603      	mov	r3, r0
 8019f44:	e780      	b.n	8019e48 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08019f46 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f4a:	b093      	sub	sp, #76	; 0x4c
 8019f4c:	461d      	mov	r5, r3
 8019f4e:	9210      	str	r2, [sp, #64]	; 0x40
 8019f50:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8019f52:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8019f56:	910a      	str	r1, [sp, #40]	; 0x28
 8019f58:	920b      	str	r2, [sp, #44]	; 0x2c
 8019f5a:	6859      	ldr	r1, [r3, #4]
 8019f5c:	681b      	ldr	r3, [r3, #0]
 8019f5e:	9011      	str	r0, [sp, #68]	; 0x44
 8019f60:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8019f64:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019f68:	fb01 2707 	mla	r7, r1, r7, r2
 8019f6c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8019f70:	9307      	str	r3, [sp, #28]
 8019f72:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019f74:	681b      	ldr	r3, [r3, #0]
 8019f76:	9309      	str	r3, [sp, #36]	; 0x24
 8019f78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019f7a:	43db      	mvns	r3, r3
 8019f7c:	b2db      	uxtb	r3, r3
 8019f7e:	9308      	str	r3, [sp, #32]
 8019f80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019f82:	2b00      	cmp	r3, #0
 8019f84:	dc03      	bgt.n	8019f8e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019f86:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019f88:	2b00      	cmp	r3, #0
 8019f8a:	f340 8205 	ble.w	801a398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8019f8e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019f90:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019f94:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019f98:	1e48      	subs	r0, r1, #1
 8019f9a:	f102 3cff 	add.w	ip, r2, #4294967295
 8019f9e:	2d00      	cmp	r5, #0
 8019fa0:	f340 80da 	ble.w	801a158 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8019fa4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019fa8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019fac:	d406      	bmi.n	8019fbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fae:	4586      	cmp	lr, r0
 8019fb0:	da04      	bge.n	8019fbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fb2:	2b00      	cmp	r3, #0
 8019fb4:	db02      	blt.n	8019fbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fb6:	4563      	cmp	r3, ip
 8019fb8:	f2c0 80cf 	blt.w	801a15a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019fbc:	f11e 0e01 	adds.w	lr, lr, #1
 8019fc0:	f100 80c1 	bmi.w	801a146 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019fc4:	4571      	cmp	r1, lr
 8019fc6:	f2c0 80be 	blt.w	801a146 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019fca:	3301      	adds	r3, #1
 8019fcc:	f100 80bb 	bmi.w	801a146 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019fd0:	429a      	cmp	r2, r3
 8019fd2:	f2c0 80b8 	blt.w	801a146 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019fd6:	46a9      	mov	r9, r5
 8019fd8:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8019fdc:	f1b9 0f00 	cmp.w	r9, #0
 8019fe0:	f340 80d8 	ble.w	801a194 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8019fe4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019fe6:	1421      	asrs	r1, r4, #16
 8019fe8:	ea4f 4026 	mov.w	r0, r6, asr #16
 8019fec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019ff0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019ff4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8019ff8:	f100 8112 	bmi.w	801a220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8019ffc:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a000:	4551      	cmp	r1, sl
 801a002:	f280 810d 	bge.w	801a220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801a006:	2800      	cmp	r0, #0
 801a008:	f2c0 810a 	blt.w	801a220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801a00c:	f103 3aff 	add.w	sl, r3, #4294967295
 801a010:	4550      	cmp	r0, sl
 801a012:	f280 8105 	bge.w	801a220 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801a016:	fa0f f38e 	sxth.w	r3, lr
 801a01a:	fb00 1103 	mla	r1, r0, r3, r1
 801a01e:	9809      	ldr	r0, [sp, #36]	; 0x24
 801a020:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801a024:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801a028:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801a02c:	f1bc 0f00 	cmp.w	ip, #0
 801a030:	d007      	beq.n	801a042 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801a032:	005b      	lsls	r3, r3, #1
 801a034:	eb0a 0003 	add.w	r0, sl, r3
 801a038:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801a03c:	930c      	str	r3, [sp, #48]	; 0x30
 801a03e:	8843      	ldrh	r3, [r0, #2]
 801a040:	930d      	str	r3, [sp, #52]	; 0x34
 801a042:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801a046:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a04a:	fb12 f30c 	smulbb	r3, r2, ip
 801a04e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801a052:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a056:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a05a:	10db      	asrs	r3, r3, #3
 801a05c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801a060:	ea40 000e 	orr.w	r0, r0, lr
 801a064:	f1cc 0e10 	rsb	lr, ip, #16
 801a068:	ea4a 0101 	orr.w	r1, sl, r1
 801a06c:	9f08      	ldr	r7, [sp, #32]
 801a06e:	ebae 0e02 	sub.w	lr, lr, r2
 801a072:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a076:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a07a:	4351      	muls	r1, r2
 801a07c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a07e:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a082:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a084:	0410      	lsls	r0, r2, #16
 801a086:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a08a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a08e:	4310      	orrs	r0, r2
 801a090:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a092:	0412      	lsls	r2, r2, #16
 801a094:	fb03 e000 	mla	r0, r3, r0, lr
 801a098:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a09c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a0a0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a0a4:	ea42 020e 	orr.w	r2, r2, lr
 801a0a8:	fb03 0302 	mla	r3, r3, r2, r0
 801a0ac:	f8b8 0000 	ldrh.w	r0, [r8]
 801a0b0:	0d5a      	lsrs	r2, r3, #21
 801a0b2:	095b      	lsrs	r3, r3, #5
 801a0b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a0b8:	1201      	asrs	r1, r0, #8
 801a0ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a0be:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a0c2:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a0c6:	00c0      	lsls	r0, r0, #3
 801a0c8:	4313      	orrs	r3, r2
 801a0ca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801a0ce:	fb11 f107 	smulbb	r1, r1, r7
 801a0d2:	b2c0      	uxtb	r0, r0
 801a0d4:	b29b      	uxth	r3, r3
 801a0d6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a0da:	fb10 f007 	smulbb	r0, r0, r7
 801a0de:	fb1e fe07 	smulbb	lr, lr, r7
 801a0e2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a0e6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a0ea:	fb0c 1c02 	mla	ip, ip, r2, r1
 801a0ee:	10d9      	asrs	r1, r3, #3
 801a0f0:	00db      	lsls	r3, r3, #3
 801a0f2:	fa1f fc8c 	uxth.w	ip, ip
 801a0f6:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a0fa:	b2db      	uxtb	r3, r3
 801a0fc:	fb01 e102 	mla	r1, r1, r2, lr
 801a100:	fb03 0302 	mla	r3, r3, r2, r0
 801a104:	b289      	uxth	r1, r1
 801a106:	b29a      	uxth	r2, r3
 801a108:	f10c 0301 	add.w	r3, ip, #1
 801a10c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a110:	1c53      	adds	r3, r2, #1
 801a112:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a116:	1c4a      	adds	r2, r1, #1
 801a118:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a11c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a120:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a124:	0949      	lsrs	r1, r1, #5
 801a126:	ea43 030c 	orr.w	r3, r3, ip
 801a12a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a12e:	430b      	orrs	r3, r1
 801a130:	f8a8 3000 	strh.w	r3, [r8]
 801a134:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a136:	f108 0802 	add.w	r8, r8, #2
 801a13a:	f109 39ff 	add.w	r9, r9, #4294967295
 801a13e:	441c      	add	r4, r3
 801a140:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a142:	441e      	add	r6, r3
 801a144:	e74a      	b.n	8019fdc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a146:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a148:	3d01      	subs	r5, #1
 801a14a:	441c      	add	r4, r3
 801a14c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a14e:	441e      	add	r6, r3
 801a150:	9b07      	ldr	r3, [sp, #28]
 801a152:	3302      	adds	r3, #2
 801a154:	9307      	str	r3, [sp, #28]
 801a156:	e722      	b.n	8019f9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a158:	d022      	beq.n	801a1a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801a15a:	1e6b      	subs	r3, r5, #1
 801a15c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a15e:	fb00 4003 	mla	r0, r0, r3, r4
 801a162:	1400      	asrs	r0, r0, #16
 801a164:	f53f af37 	bmi.w	8019fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a168:	3901      	subs	r1, #1
 801a16a:	4288      	cmp	r0, r1
 801a16c:	f6bf af33 	bge.w	8019fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a170:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a172:	fb01 6303 	mla	r3, r1, r3, r6
 801a176:	141b      	asrs	r3, r3, #16
 801a178:	f53f af2d 	bmi.w	8019fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a17c:	3a01      	subs	r2, #1
 801a17e:	4293      	cmp	r3, r2
 801a180:	f6bf af29 	bge.w	8019fd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a184:	46a8      	mov	r8, r5
 801a186:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801a18a:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801a18e:	f1b8 0f00 	cmp.w	r8, #0
 801a192:	dc60      	bgt.n	801a256 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801a194:	9b07      	ldr	r3, [sp, #28]
 801a196:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a19a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801a19e:	9307      	str	r3, [sp, #28]
 801a1a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a1a2:	2b00      	cmp	r3, #0
 801a1a4:	f340 80f8 	ble.w	801a398 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801a1a8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a1ac:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a1ae:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1b2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1b6:	eef0 6a62 	vmov.f32	s13, s5
 801a1ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a1be:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1c6:	ee16 4a90 	vmov	r4, s13
 801a1ca:	eef0 6a43 	vmov.f32	s13, s6
 801a1ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1d2:	ee16 6a90 	vmov	r6, s13
 801a1d6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1da:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a1de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a1e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a1e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a1ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1ee:	ee12 2a90 	vmov	r2, s5
 801a1f2:	eef0 2a47 	vmov.f32	s5, s14
 801a1f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1fa:	ee13 2a10 	vmov	r2, s6
 801a1fe:	931f      	str	r3, [sp, #124]	; 0x7c
 801a200:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a202:	eeb0 3a67 	vmov.f32	s6, s15
 801a206:	fb92 f3f3 	sdiv	r3, r2, r3
 801a20a:	9320      	str	r3, [sp, #128]	; 0x80
 801a20c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a20e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a210:	3b01      	subs	r3, #1
 801a212:	930a      	str	r3, [sp, #40]	; 0x28
 801a214:	bf08      	it	eq
 801a216:	4615      	moveq	r5, r2
 801a218:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a21a:	bf18      	it	ne
 801a21c:	461d      	movne	r5, r3
 801a21e:	e6af      	b.n	8019f80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801a220:	f111 0a01 	adds.w	sl, r1, #1
 801a224:	d486      	bmi.n	801a134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a226:	45d6      	cmp	lr, sl
 801a228:	db84      	blt.n	801a134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a22a:	f110 0a01 	adds.w	sl, r0, #1
 801a22e:	d481      	bmi.n	801a134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a230:	4553      	cmp	r3, sl
 801a232:	f6ff af7f 	blt.w	801a134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a236:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801a238:	b21b      	sxth	r3, r3
 801a23a:	9101      	str	r1, [sp, #4]
 801a23c:	4641      	mov	r1, r8
 801a23e:	9300      	str	r3, [sp, #0]
 801a240:	fa0f f38e 	sxth.w	r3, lr
 801a244:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801a248:	e9cd c704 	strd	ip, r7, [sp, #16]
 801a24c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a24e:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a250:	f7ff fdb2 	bl	8019db8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801a254:	e76e      	b.n	801a134 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801a256:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a258:	1430      	asrs	r0, r6, #16
 801a25a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801a25c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a260:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a264:	1423      	asrs	r3, r4, #16
 801a266:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a26a:	fb01 3000 	mla	r0, r1, r0, r3
 801a26e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a270:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801a274:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801a278:	8858      	ldrh	r0, [r3, #2]
 801a27a:	f1be 0f00 	cmp.w	lr, #0
 801a27e:	d00b      	beq.n	801a298 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801a280:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801a284:	3901      	subs	r1, #1
 801a286:	0049      	lsls	r1, r1, #1
 801a288:	3102      	adds	r1, #2
 801a28a:	eb03 0b01 	add.w	fp, r3, r1
 801a28e:	5a5b      	ldrh	r3, [r3, r1]
 801a290:	930e      	str	r3, [sp, #56]	; 0x38
 801a292:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a296:	930f      	str	r3, [sp, #60]	; 0x3c
 801a298:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801a29c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a2a0:	fb12 f30e 	smulbb	r3, r2, lr
 801a2a4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801a2a8:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801a2ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a2b0:	10db      	asrs	r3, r3, #3
 801a2b2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a2b6:	ea41 010c 	orr.w	r1, r1, ip
 801a2ba:	f1ce 0c10 	rsb	ip, lr, #16
 801a2be:	ea4b 0000 	orr.w	r0, fp, r0
 801a2c2:	9f08      	ldr	r7, [sp, #32]
 801a2c4:	ebac 0c02 	sub.w	ip, ip, r2
 801a2c8:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a2cc:	f108 38ff 	add.w	r8, r8, #4294967295
 801a2d0:	4350      	muls	r0, r2
 801a2d2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a2d6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a2d8:	fb0c 0c01 	mla	ip, ip, r1, r0
 801a2dc:	980e      	ldr	r0, [sp, #56]	; 0x38
 801a2de:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a2e2:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801a2e6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a2e8:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a2ec:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a2f0:	0412      	lsls	r2, r2, #16
 801a2f2:	ea4b 0101 	orr.w	r1, fp, r1
 801a2f6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a2fa:	fb03 c101 	mla	r1, r3, r1, ip
 801a2fe:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a302:	4302      	orrs	r2, r0
 801a304:	fb03 1202 	mla	r2, r3, r2, r1
 801a308:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801a30c:	0952      	lsrs	r2, r2, #5
 801a30e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801a312:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801a316:	f8b9 2000 	ldrh.w	r2, [r9]
 801a31a:	ea4b 0303 	orr.w	r3, fp, r3
 801a31e:	1211      	asrs	r1, r2, #8
 801a320:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801a324:	b29b      	uxth	r3, r3
 801a326:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a32a:	00d2      	lsls	r2, r2, #3
 801a32c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a330:	fb11 f107 	smulbb	r1, r1, r7
 801a334:	1218      	asrs	r0, r3, #8
 801a336:	fb1c fc07 	smulbb	ip, ip, r7
 801a33a:	b2d2      	uxtb	r2, r2
 801a33c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a340:	fb12 f207 	smulbb	r2, r2, r7
 801a344:	fb00 100a 	mla	r0, r0, sl, r1
 801a348:	10d9      	asrs	r1, r3, #3
 801a34a:	00db      	lsls	r3, r3, #3
 801a34c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a350:	b280      	uxth	r0, r0
 801a352:	b2db      	uxtb	r3, r3
 801a354:	fb01 c10a 	mla	r1, r1, sl, ip
 801a358:	fb03 230a 	mla	r3, r3, sl, r2
 801a35c:	1c42      	adds	r2, r0, #1
 801a35e:	b289      	uxth	r1, r1
 801a360:	b29b      	uxth	r3, r3
 801a362:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a366:	f101 0c01 	add.w	ip, r1, #1
 801a36a:	1c5a      	adds	r2, r3, #1
 801a36c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801a370:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a374:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a378:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a37a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a37e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a382:	441c      	add	r4, r3
 801a384:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a388:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a38a:	4310      	orrs	r0, r2
 801a38c:	441e      	add	r6, r3
 801a38e:	ea40 000c 	orr.w	r0, r0, ip
 801a392:	f829 0b02 	strh.w	r0, [r9], #2
 801a396:	e6fa      	b.n	801a18e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801a398:	b013      	add	sp, #76	; 0x4c
 801a39a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a39e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801a39e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a3a2:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801a3a6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801a3aa:	fb0e 4703 	mla	r7, lr, r3, r4
 801a3ae:	f1be 0f00 	cmp.w	lr, #0
 801a3b2:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801a3b6:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801a3ba:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801a3be:	8808      	ldrh	r0, [r1, #0]
 801a3c0:	db60      	blt.n	801a484 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801a3c2:	45f1      	cmp	r9, lr
 801a3c4:	dd5e      	ble.n	801a484 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801a3c6:	2c00      	cmp	r4, #0
 801a3c8:	db5a      	blt.n	801a480 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801a3ca:	42a3      	cmp	r3, r4
 801a3cc:	dd58      	ble.n	801a480 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801a3ce:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801a3d2:	1c62      	adds	r2, r4, #1
 801a3d4:	d459      	bmi.n	801a48a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a3d6:	4293      	cmp	r3, r2
 801a3d8:	dd57      	ble.n	801a48a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a3da:	2d00      	cmp	r5, #0
 801a3dc:	d055      	beq.n	801a48a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801a3de:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801a3e2:	f11e 0e01 	adds.w	lr, lr, #1
 801a3e6:	d454      	bmi.n	801a492 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a3e8:	45f1      	cmp	r9, lr
 801a3ea:	dd52      	ble.n	801a492 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a3ec:	2e00      	cmp	r6, #0
 801a3ee:	d050      	beq.n	801a492 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801a3f0:	2c00      	cmp	r4, #0
 801a3f2:	db4c      	blt.n	801a48e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801a3f4:	42a3      	cmp	r3, r4
 801a3f6:	dd4a      	ble.n	801a48e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801a3f8:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801a3fc:	3401      	adds	r4, #1
 801a3fe:	d405      	bmi.n	801a40c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a400:	42a3      	cmp	r3, r4
 801a402:	dd03      	ble.n	801a40c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a404:	b115      	cbz	r5, 801a40c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801a406:	3301      	adds	r3, #1
 801a408:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801a40c:	fb15 f406 	smulbb	r4, r5, r6
 801a410:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a414:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a418:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a41c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a420:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a424:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a428:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a42c:	ea43 0c0c 	orr.w	ip, r3, ip
 801a430:	f1c6 0310 	rsb	r3, r6, #16
 801a434:	ea4e 0707 	orr.w	r7, lr, r7
 801a438:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a43c:	1b5b      	subs	r3, r3, r5
 801a43e:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a442:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a446:	437d      	muls	r5, r7
 801a448:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a44c:	0403      	lsls	r3, r0, #16
 801a44e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a452:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a456:	4318      	orrs	r0, r3
 801a458:	0413      	lsls	r3, r2, #16
 801a45a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a45e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a462:	fb04 c000 	mla	r0, r4, r0, ip
 801a466:	4313      	orrs	r3, r2
 801a468:	fb06 0003 	mla	r0, r6, r3, r0
 801a46c:	0d43      	lsrs	r3, r0, #21
 801a46e:	0940      	lsrs	r0, r0, #5
 801a470:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a474:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a478:	4318      	orrs	r0, r3
 801a47a:	8008      	strh	r0, [r1, #0]
 801a47c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a480:	4684      	mov	ip, r0
 801a482:	e7a6      	b.n	801a3d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801a484:	4607      	mov	r7, r0
 801a486:	4684      	mov	ip, r0
 801a488:	e7ab      	b.n	801a3e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801a48a:	4607      	mov	r7, r0
 801a48c:	e7a9      	b.n	801a3e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801a48e:	4602      	mov	r2, r0
 801a490:	e7b4      	b.n	801a3fc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801a492:	4602      	mov	r2, r0
 801a494:	e7ba      	b.n	801a40c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801a496 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a496:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a49a:	b08f      	sub	sp, #60	; 0x3c
 801a49c:	461d      	mov	r5, r3
 801a49e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801a4a0:	9107      	str	r1, [sp, #28]
 801a4a2:	920c      	str	r2, [sp, #48]	; 0x30
 801a4a4:	6859      	ldr	r1, [r3, #4]
 801a4a6:	681b      	ldr	r3, [r3, #0]
 801a4a8:	900d      	str	r0, [sp, #52]	; 0x34
 801a4aa:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801a4ae:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801a4b2:	fb01 2707 	mla	r7, r1, r7, r2
 801a4b6:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801a4ba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a4bc:	f8d3 8000 	ldr.w	r8, [r3]
 801a4c0:	9b07      	ldr	r3, [sp, #28]
 801a4c2:	2b00      	cmp	r3, #0
 801a4c4:	dc03      	bgt.n	801a4ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a4c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a4c8:	2b00      	cmp	r3, #0
 801a4ca:	f340 8182 	ble.w	801a7d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801a4ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a4d0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a4d4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a4d8:	1e48      	subs	r0, r1, #1
 801a4da:	f102 3cff 	add.w	ip, r2, #4294967295
 801a4de:	2d00      	cmp	r5, #0
 801a4e0:	f340 809b 	ble.w	801a61a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801a4e4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a4e8:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a4ec:	d406      	bmi.n	801a4fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a4ee:	4586      	cmp	lr, r0
 801a4f0:	da04      	bge.n	801a4fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a4f2:	2b00      	cmp	r3, #0
 801a4f4:	db02      	blt.n	801a4fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a4f6:	4563      	cmp	r3, ip
 801a4f8:	f2c0 8090 	blt.w	801a61c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a4fc:	f11e 0e01 	adds.w	lr, lr, #1
 801a500:	f100 8084 	bmi.w	801a60c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a504:	4571      	cmp	r1, lr
 801a506:	f2c0 8081 	blt.w	801a60c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a50a:	3301      	adds	r3, #1
 801a50c:	d47e      	bmi.n	801a60c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a50e:	429a      	cmp	r2, r3
 801a510:	db7c      	blt.n	801a60c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801a512:	46aa      	mov	sl, r5
 801a514:	46b9      	mov	r9, r7
 801a516:	f1ba 0f00 	cmp.w	sl, #0
 801a51a:	f340 8099 	ble.w	801a650 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801a51e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a520:	1421      	asrs	r1, r4, #16
 801a522:	ea4f 4026 	mov.w	r0, r6, asr #16
 801a526:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a52a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a52e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801a532:	f100 80d1 	bmi.w	801a6d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a536:	f10e 3bff 	add.w	fp, lr, #4294967295
 801a53a:	4559      	cmp	r1, fp
 801a53c:	f280 80cc 	bge.w	801a6d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a540:	2800      	cmp	r0, #0
 801a542:	f2c0 80c9 	blt.w	801a6d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a546:	f103 3bff 	add.w	fp, r3, #4294967295
 801a54a:	4558      	cmp	r0, fp
 801a54c:	f280 80c4 	bge.w	801a6d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a550:	fa0f fe8e 	sxth.w	lr, lr
 801a554:	fb00 110e 	mla	r1, r0, lr, r1
 801a558:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a55c:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801a560:	8841      	ldrh	r1, [r0, #2]
 801a562:	f1bc 0f00 	cmp.w	ip, #0
 801a566:	d00b      	beq.n	801a580 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801a568:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801a56c:	3b01      	subs	r3, #1
 801a56e:	005b      	lsls	r3, r3, #1
 801a570:	3302      	adds	r3, #2
 801a572:	eb00 0e03 	add.w	lr, r0, r3
 801a576:	5ac3      	ldrh	r3, [r0, r3]
 801a578:	9308      	str	r3, [sp, #32]
 801a57a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801a57e:	9309      	str	r3, [sp, #36]	; 0x24
 801a580:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801a584:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801a588:	fb12 f30c 	smulbb	r3, r2, ip
 801a58c:	f1cc 0e10 	rsb	lr, ip, #16
 801a590:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a594:	10db      	asrs	r3, r3, #3
 801a596:	ebae 0e02 	sub.w	lr, lr, r2
 801a59a:	ea40 000b 	orr.w	r0, r0, fp
 801a59e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a5a2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a5a6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a5aa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a5ae:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801a5b2:	ea4b 0101 	orr.w	r1, fp, r1
 801a5b6:	4351      	muls	r1, r2
 801a5b8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801a5ba:	fb0e 1e00 	mla	lr, lr, r0, r1
 801a5be:	0410      	lsls	r0, r2, #16
 801a5c0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a5c4:	9908      	ldr	r1, [sp, #32]
 801a5c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a5ca:	4310      	orrs	r0, r2
 801a5cc:	9a08      	ldr	r2, [sp, #32]
 801a5ce:	0412      	lsls	r2, r2, #16
 801a5d0:	fb03 e000 	mla	r0, r3, r0, lr
 801a5d4:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801a5d8:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801a5dc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a5e0:	ea42 020e 	orr.w	r2, r2, lr
 801a5e4:	fb03 0302 	mla	r3, r3, r2, r0
 801a5e8:	0d5a      	lsrs	r2, r3, #21
 801a5ea:	095b      	lsrs	r3, r3, #5
 801a5ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a5f0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a5f4:	4313      	orrs	r3, r2
 801a5f6:	f8a9 3000 	strh.w	r3, [r9]
 801a5fa:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a5fc:	f109 0902 	add.w	r9, r9, #2
 801a600:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a604:	441c      	add	r4, r3
 801a606:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a608:	441e      	add	r6, r3
 801a60a:	e784      	b.n	801a516 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a60c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a60e:	3d01      	subs	r5, #1
 801a610:	3702      	adds	r7, #2
 801a612:	441c      	add	r4, r3
 801a614:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a616:	441e      	add	r6, r3
 801a618:	e761      	b.n	801a4de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801a61a:	d01d      	beq.n	801a658 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801a61c:	1e6b      	subs	r3, r5, #1
 801a61e:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a620:	fb00 4003 	mla	r0, r0, r3, r4
 801a624:	1400      	asrs	r0, r0, #16
 801a626:	f53f af74 	bmi.w	801a512 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a62a:	3901      	subs	r1, #1
 801a62c:	4288      	cmp	r0, r1
 801a62e:	f6bf af70 	bge.w	801a512 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a632:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a634:	fb01 6303 	mla	r3, r1, r3, r6
 801a638:	141b      	asrs	r3, r3, #16
 801a63a:	f53f af6a 	bmi.w	801a512 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a63e:	3a01      	subs	r2, #1
 801a640:	4293      	cmp	r3, r2
 801a642:	f6bf af66 	bge.w	801a512 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a646:	46a9      	mov	r9, r5
 801a648:	46ba      	mov	sl, r7
 801a64a:	f1b9 0f00 	cmp.w	r9, #0
 801a64e:	dc5b      	bgt.n	801a708 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a650:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801a654:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801a658:	9b07      	ldr	r3, [sp, #28]
 801a65a:	2b00      	cmp	r3, #0
 801a65c:	f340 80b9 	ble.w	801a7d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801a660:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a664:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a666:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a66a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a66e:	eef0 6a62 	vmov.f32	s13, s5
 801a672:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a676:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a67a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a67e:	ee16 4a90 	vmov	r4, s13
 801a682:	eef0 6a43 	vmov.f32	s13, s6
 801a686:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a68a:	ee16 6a90 	vmov	r6, s13
 801a68e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a692:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a696:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a69a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a69e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a6a2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a6a6:	ee12 2a90 	vmov	r2, s5
 801a6aa:	eef0 2a47 	vmov.f32	s5, s14
 801a6ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6b2:	ee13 2a10 	vmov	r2, s6
 801a6b6:	931b      	str	r3, [sp, #108]	; 0x6c
 801a6b8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a6ba:	eeb0 3a67 	vmov.f32	s6, s15
 801a6be:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6c2:	931c      	str	r3, [sp, #112]	; 0x70
 801a6c4:	9b07      	ldr	r3, [sp, #28]
 801a6c6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a6c8:	3b01      	subs	r3, #1
 801a6ca:	9307      	str	r3, [sp, #28]
 801a6cc:	bf08      	it	eq
 801a6ce:	4615      	moveq	r5, r2
 801a6d0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a6d2:	bf18      	it	ne
 801a6d4:	461d      	movne	r5, r3
 801a6d6:	e6f3      	b.n	801a4c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a6d8:	f111 0b01 	adds.w	fp, r1, #1
 801a6dc:	d48d      	bmi.n	801a5fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a6de:	45de      	cmp	lr, fp
 801a6e0:	db8b      	blt.n	801a5fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a6e2:	f110 0b01 	adds.w	fp, r0, #1
 801a6e6:	d488      	bmi.n	801a5fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a6e8:	455b      	cmp	r3, fp
 801a6ea:	db86      	blt.n	801a5fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a6ec:	b21b      	sxth	r3, r3
 801a6ee:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801a6f2:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801a6f6:	9300      	str	r3, [sp, #0]
 801a6f8:	4642      	mov	r2, r8
 801a6fa:	fa0f f38e 	sxth.w	r3, lr
 801a6fe:	4649      	mov	r1, r9
 801a700:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a702:	f7ff fe4c 	bl	801a39e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801a706:	e778      	b.n	801a5fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a708:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a70a:	1420      	asrs	r0, r4, #16
 801a70c:	1431      	asrs	r1, r6, #16
 801a70e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801a712:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a716:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a71a:	fb03 0101 	mla	r1, r3, r1, r0
 801a71e:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801a722:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801a726:	8841      	ldrh	r1, [r0, #2]
 801a728:	f1be 0f00 	cmp.w	lr, #0
 801a72c:	d00b      	beq.n	801a746 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801a72e:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801a732:	3b01      	subs	r3, #1
 801a734:	005b      	lsls	r3, r3, #1
 801a736:	3302      	adds	r3, #2
 801a738:	eb00 0b03 	add.w	fp, r0, r3
 801a73c:	5ac3      	ldrh	r3, [r0, r3]
 801a73e:	930a      	str	r3, [sp, #40]	; 0x28
 801a740:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801a744:	930b      	str	r3, [sp, #44]	; 0x2c
 801a746:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801a74a:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a74e:	fb12 f30e 	smulbb	r3, r2, lr
 801a752:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a756:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a75a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a75e:	10db      	asrs	r3, r3, #3
 801a760:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a764:	ea40 000c 	orr.w	r0, r0, ip
 801a768:	f1ce 0c10 	rsb	ip, lr, #16
 801a76c:	ea4b 0101 	orr.w	r1, fp, r1
 801a770:	f109 39ff 	add.w	r9, r9, #4294967295
 801a774:	ebac 0c02 	sub.w	ip, ip, r2
 801a778:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801a77c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801a780:	4351      	muls	r1, r2
 801a782:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a784:	fb0c 1c00 	mla	ip, ip, r0, r1
 801a788:	990a      	ldr	r1, [sp, #40]	; 0x28
 801a78a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801a78e:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801a792:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a794:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a798:	0412      	lsls	r2, r2, #16
 801a79a:	ea4b 0000 	orr.w	r0, fp, r0
 801a79e:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801a7a2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801a7a6:	fb03 c000 	mla	r0, r3, r0, ip
 801a7aa:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801a7ae:	ea42 0b0b 	orr.w	fp, r2, fp
 801a7b2:	fb03 000b 	mla	r0, r3, fp, r0
 801a7b6:	0d43      	lsrs	r3, r0, #21
 801a7b8:	0940      	lsrs	r0, r0, #5
 801a7ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a7be:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a7c2:	4318      	orrs	r0, r3
 801a7c4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a7c6:	441c      	add	r4, r3
 801a7c8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a7ca:	f82a 0b02 	strh.w	r0, [sl], #2
 801a7ce:	441e      	add	r6, r3
 801a7d0:	e73b      	b.n	801a64a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801a7d2:	b00f      	add	sp, #60	; 0x3c
 801a7d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a7d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801a7d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7dc:	b085      	sub	sp, #20
 801a7de:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801a7e2:	9102      	str	r1, [sp, #8]
 801a7e4:	2c00      	cmp	r4, #0
 801a7e6:	fb04 7103 	mla	r1, r4, r3, r7
 801a7ea:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801a7ee:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a7f2:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801a7f6:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801a7fa:	f2c0 811b 	blt.w	801aa34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801a7fe:	45a6      	cmp	lr, r4
 801a800:	f340 8118 	ble.w	801aa34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801a804:	2f00      	cmp	r7, #0
 801a806:	f2c0 8113 	blt.w	801aa30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801a80a:	42bb      	cmp	r3, r7
 801a80c:	f340 8110 	ble.w	801aa30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801a810:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801a814:	1c7a      	adds	r2, r7, #1
 801a816:	f100 8110 	bmi.w	801aa3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801a81a:	4293      	cmp	r3, r2
 801a81c:	f340 810d 	ble.w	801aa3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801a820:	2e00      	cmp	r6, #0
 801a822:	f000 810c 	beq.w	801aa3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801a826:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801a82a:	3401      	adds	r4, #1
 801a82c:	f100 810b 	bmi.w	801aa46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801a830:	45a6      	cmp	lr, r4
 801a832:	f340 8108 	ble.w	801aa46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801a836:	2800      	cmp	r0, #0
 801a838:	f000 8108 	beq.w	801aa4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801a83c:	2f00      	cmp	r7, #0
 801a83e:	f2c0 8100 	blt.w	801aa42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801a842:	42bb      	cmp	r3, r7
 801a844:	f340 80fd 	ble.w	801aa42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801a848:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801a84c:	3701      	adds	r7, #1
 801a84e:	f100 8100 	bmi.w	801aa52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801a852:	42bb      	cmp	r3, r7
 801a854:	f340 80fd 	ble.w	801aa52 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801a858:	2e00      	cmp	r6, #0
 801a85a:	f000 80fc 	beq.w	801aa56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801a85e:	3301      	adds	r3, #1
 801a860:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801a864:	b2b6      	uxth	r6, r6
 801a866:	b280      	uxth	r0, r0
 801a868:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801a86c:	fb00 fe06 	mul.w	lr, r0, r6
 801a870:	0136      	lsls	r6, r6, #4
 801a872:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801a876:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801a87a:	eba6 070e 	sub.w	r7, r6, lr
 801a87e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801a882:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801a886:	b280      	uxth	r0, r0
 801a888:	b2bf      	uxth	r7, r7
 801a88a:	1a1b      	subs	r3, r3, r0
 801a88c:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801a890:	fb0a f607 	mul.w	r6, sl, r7
 801a894:	b29b      	uxth	r3, r3
 801a896:	fb0b 6603 	mla	r6, fp, r3, r6
 801a89a:	fb00 6609 	mla	r6, r0, r9, r6
 801a89e:	fb0e 6608 	mla	r6, lr, r8, r6
 801a8a2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a8a6:	9600      	str	r6, [sp, #0]
 801a8a8:	2e00      	cmp	r6, #0
 801a8aa:	f000 80be 	beq.w	801aa2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801a8ae:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801a8b2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801a8b6:	9e02      	ldr	r6, [sp, #8]
 801a8b8:	fb0b fc0c 	mul.w	ip, fp, ip
 801a8bc:	fb0b f505 	mul.w	r5, fp, r5
 801a8c0:	8836      	ldrh	r6, [r6, #0]
 801a8c2:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801a8c6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a8ca:	9501      	str	r5, [sp, #4]
 801a8cc:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801a8d0:	44dc      	add	ip, fp
 801a8d2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801a8d6:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801a8da:	9503      	str	r5, [sp, #12]
 801a8dc:	9d01      	ldr	r5, [sp, #4]
 801a8de:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801a8e2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801a8e6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801a8ea:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a8ee:	fb0a fc0c 	mul.w	ip, sl, ip
 801a8f2:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801a8f6:	fb0a fa01 	mul.w	sl, sl, r1
 801a8fa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801a8fe:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a902:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801a906:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a90a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801a90e:	4465      	add	r5, ip
 801a910:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801a914:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801a918:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801a91c:	fb09 fc0c 	mul.w	ip, r9, ip
 801a920:	0a2d      	lsrs	r5, r5, #8
 801a922:	fb09 f904 	mul.w	r9, r9, r4
 801a926:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801a92a:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801a92e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801a932:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801a936:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801a93a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a93e:	437d      	muls	r5, r7
 801a940:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801a944:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801a948:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801a94c:	4461      	add	r1, ip
 801a94e:	fb08 f404 	mul.w	r4, r8, r4
 801a952:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801a956:	fb08 f802 	mul.w	r8, r8, r2
 801a95a:	0a09      	lsrs	r1, r1, #8
 801a95c:	0a22      	lsrs	r2, r4, #8
 801a95e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801a962:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801a966:	fb07 f70a 	mul.w	r7, r7, sl
 801a96a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801a96e:	4414      	add	r4, r2
 801a970:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801a974:	0a24      	lsrs	r4, r4, #8
 801a976:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801a97a:	9a03      	ldr	r2, [sp, #12]
 801a97c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801a980:	fb02 5503 	mla	r5, r2, r3, r5
 801a984:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801a988:	9a00      	ldr	r2, [sp, #0]
 801a98a:	fb04 540e 	mla	r4, r4, lr, r5
 801a98e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801a992:	1235      	asrs	r5, r6, #8
 801a994:	fb01 4100 	mla	r1, r1, r0, r4
 801a998:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a99c:	0a09      	lsrs	r1, r1, #8
 801a99e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801a9a2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801a9a6:	fb03 7101 	mla	r1, r3, r1, r7
 801a9aa:	fb0e 1e08 	mla	lr, lr, r8, r1
 801a9ae:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801a9b2:	fb00 e101 	mla	r1, r0, r1, lr
 801a9b6:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a9ba:	b287      	uxth	r7, r0
 801a9bc:	0a09      	lsrs	r1, r1, #8
 801a9be:	437a      	muls	r2, r7
 801a9c0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801a9c4:	1c53      	adds	r3, r2, #1
 801a9c6:	4321      	orrs	r1, r4
 801a9c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a9cc:	0c0a      	lsrs	r2, r1, #16
 801a9ce:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801a9d2:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801a9d6:	b2c8      	uxtb	r0, r1
 801a9d8:	fb12 f207 	smulbb	r2, r2, r7
 801a9dc:	fb14 f407 	smulbb	r4, r4, r7
 801a9e0:	b2db      	uxtb	r3, r3
 801a9e2:	fb10 f007 	smulbb	r0, r0, r7
 801a9e6:	fb05 2503 	mla	r5, r5, r3, r2
 801a9ea:	10f2      	asrs	r2, r6, #3
 801a9ec:	00f6      	lsls	r6, r6, #3
 801a9ee:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801a9f2:	b2ad      	uxth	r5, r5
 801a9f4:	b2f6      	uxtb	r6, r6
 801a9f6:	fb02 4203 	mla	r2, r2, r3, r4
 801a9fa:	fb06 0303 	mla	r3, r6, r3, r0
 801a9fe:	b294      	uxth	r4, r2
 801aa00:	b299      	uxth	r1, r3
 801aa02:	1c6b      	adds	r3, r5, #1
 801aa04:	1c62      	adds	r2, r4, #1
 801aa06:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801aa0a:	1c4b      	adds	r3, r1, #1
 801aa0c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801aa10:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801aa14:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801aa18:	0952      	lsrs	r2, r2, #5
 801aa1a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801aa1e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aa22:	432b      	orrs	r3, r5
 801aa24:	4313      	orrs	r3, r2
 801aa26:	9a02      	ldr	r2, [sp, #8]
 801aa28:	8013      	strh	r3, [r2, #0]
 801aa2a:	b005      	add	sp, #20
 801aa2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa30:	2500      	movs	r5, #0
 801aa32:	e6ef      	b.n	801a814 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801aa34:	2100      	movs	r1, #0
 801aa36:	460d      	mov	r5, r1
 801aa38:	e6f7      	b.n	801a82a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801aa3a:	2100      	movs	r1, #0
 801aa3c:	e6f5      	b.n	801a82a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801aa3e:	4631      	mov	r1, r6
 801aa40:	e6f3      	b.n	801a82a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801aa42:	2400      	movs	r4, #0
 801aa44:	e702      	b.n	801a84c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801aa46:	2200      	movs	r2, #0
 801aa48:	4614      	mov	r4, r2
 801aa4a:	e70b      	b.n	801a864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801aa4c:	4602      	mov	r2, r0
 801aa4e:	4604      	mov	r4, r0
 801aa50:	e708      	b.n	801a864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801aa52:	2200      	movs	r2, #0
 801aa54:	e706      	b.n	801a864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801aa56:	4632      	mov	r2, r6
 801aa58:	e704      	b.n	801a864 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801aa5a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa5a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa5e:	b09d      	sub	sp, #116	; 0x74
 801aa60:	9219      	str	r2, [sp, #100]	; 0x64
 801aa62:	9307      	str	r3, [sp, #28]
 801aa64:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801aa66:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801aa6a:	901b      	str	r0, [sp, #108]	; 0x6c
 801aa6c:	931a      	str	r3, [sp, #104]	; 0x68
 801aa6e:	6850      	ldr	r0, [r2, #4]
 801aa70:	9117      	str	r1, [sp, #92]	; 0x5c
 801aa72:	6812      	ldr	r2, [r2, #0]
 801aa74:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801aa78:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801aa7c:	fb00 1303 	mla	r3, r0, r3, r1
 801aa80:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aa84:	930a      	str	r3, [sp, #40]	; 0x28
 801aa86:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801aa88:	681b      	ldr	r3, [r3, #0]
 801aa8a:	9310      	str	r3, [sp, #64]	; 0x40
 801aa8c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801aa90:	930b      	str	r3, [sp, #44]	; 0x2c
 801aa92:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801aa94:	2b00      	cmp	r3, #0
 801aa96:	dc03      	bgt.n	801aaa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801aa98:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801aa9a:	2b00      	cmp	r3, #0
 801aa9c:	f340 8375 	ble.w	801b18a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801aaa0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801aaa2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aaa6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aaaa:	1e48      	subs	r0, r1, #1
 801aaac:	1e57      	subs	r7, r2, #1
 801aaae:	9b07      	ldr	r3, [sp, #28]
 801aab0:	2b00      	cmp	r3, #0
 801aab2:	f340 818e 	ble.w	801add2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801aab6:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801aaba:	ea4f 4326 	mov.w	r3, r6, asr #16
 801aabe:	d406      	bmi.n	801aace <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801aac0:	4584      	cmp	ip, r0
 801aac2:	da04      	bge.n	801aace <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801aac4:	2b00      	cmp	r3, #0
 801aac6:	db02      	blt.n	801aace <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801aac8:	42bb      	cmp	r3, r7
 801aaca:	f2c0 8183 	blt.w	801add4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801aace:	f11c 0c01 	adds.w	ip, ip, #1
 801aad2:	f100 8173 	bmi.w	801adbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801aad6:	4561      	cmp	r1, ip
 801aad8:	f2c0 8170 	blt.w	801adbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801aadc:	3301      	adds	r3, #1
 801aade:	f100 816d 	bmi.w	801adbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801aae2:	429a      	cmp	r2, r3
 801aae4:	f2c0 816a 	blt.w	801adbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801aae8:	9b07      	ldr	r3, [sp, #28]
 801aaea:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801aaec:	9318      	str	r3, [sp, #96]	; 0x60
 801aaee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801aaf0:	2b00      	cmp	r3, #0
 801aaf2:	f340 818c 	ble.w	801ae0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801aaf6:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801aaf8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801aafc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801aafe:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ab02:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ab06:	1422      	asrs	r2, r4, #16
 801ab08:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ab0c:	689b      	ldr	r3, [r3, #8]
 801ab0e:	f100 81cd 	bmi.w	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ab12:	f103 38ff 	add.w	r8, r3, #4294967295
 801ab16:	4542      	cmp	r2, r8
 801ab18:	f280 81c8 	bge.w	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ab1c:	f1bc 0f00 	cmp.w	ip, #0
 801ab20:	f2c0 81c4 	blt.w	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ab24:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ab28:	45c4      	cmp	ip, r8
 801ab2a:	f280 81bf 	bge.w	801aeac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ab2e:	b21b      	sxth	r3, r3
 801ab30:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ab32:	fb0c 2203 	mla	r2, ip, r3, r2
 801ab36:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801ab3a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801ab3e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801ab42:	2800      	cmp	r0, #0
 801ab44:	f000 81a9 	beq.w	801ae9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801ab48:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ab4c:	950c      	str	r5, [sp, #48]	; 0x30
 801ab4e:	0e2d      	lsrs	r5, r5, #24
 801ab50:	9513      	str	r5, [sp, #76]	; 0x4c
 801ab52:	b181      	cbz	r1, 801ab76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ab54:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ab58:	3b01      	subs	r3, #1
 801ab5a:	009b      	lsls	r3, r3, #2
 801ab5c:	3304      	adds	r3, #4
 801ab5e:	eb08 0c03 	add.w	ip, r8, r3
 801ab62:	f858 3003 	ldr.w	r3, [r8, r3]
 801ab66:	9308      	str	r3, [sp, #32]
 801ab68:	0e1b      	lsrs	r3, r3, #24
 801ab6a:	9311      	str	r3, [sp, #68]	; 0x44
 801ab6c:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ab70:	930d      	str	r3, [sp, #52]	; 0x34
 801ab72:	0e1b      	lsrs	r3, r3, #24
 801ab74:	9314      	str	r3, [sp, #80]	; 0x50
 801ab76:	b280      	uxth	r0, r0
 801ab78:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ab7a:	b289      	uxth	r1, r1
 801ab7c:	fb00 f901 	mul.w	r9, r0, r1
 801ab80:	0100      	lsls	r0, r0, #4
 801ab82:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ab86:	eba0 0809 	sub.w	r8, r0, r9
 801ab8a:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ab8e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ab90:	b289      	uxth	r1, r1
 801ab92:	fa1f f888 	uxth.w	r8, r8
 801ab96:	1a5b      	subs	r3, r3, r1
 801ab98:	fb08 f000 	mul.w	r0, r8, r0
 801ab9c:	b29b      	uxth	r3, r3
 801ab9e:	fb03 000e 	mla	r0, r3, lr, r0
 801aba2:	fb01 0005 	mla	r0, r1, r5, r0
 801aba6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aba8:	fb09 0005 	mla	r0, r9, r5, r0
 801abac:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801abb0:	2800      	cmp	r0, #0
 801abb2:	f000 80fa 	beq.w	801adaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801abb6:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801abba:	d01b      	beq.n	801abf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801abbc:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801abc0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801abc4:	fb0e fa0a 	mul.w	sl, lr, sl
 801abc8:	fb0e fe02 	mul.w	lr, lr, r2
 801abcc:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801abd0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801abd4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801abd8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801abdc:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801abe0:	4452      	add	r2, sl
 801abe2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abe6:	0a12      	lsrs	r2, r2, #8
 801abe8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801abec:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801abf0:	ea42 020c 	orr.w	r2, r2, ip
 801abf4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801abf6:	2dff      	cmp	r5, #255	; 0xff
 801abf8:	d021      	beq.n	801ac3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801abfa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801abfc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ac00:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ac02:	fb05 fb0b 	mul.w	fp, r5, fp
 801ac06:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ac08:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ac0c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ac0e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ac12:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac16:	fb05 fa0a 	mul.w	sl, r5, sl
 801ac1a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac1e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac22:	44de      	add	lr, fp
 801ac24:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac28:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ac2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac30:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac38:	ea4e 050a 	orr.w	r5, lr, sl
 801ac3c:	950c      	str	r5, [sp, #48]	; 0x30
 801ac3e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac40:	2dff      	cmp	r5, #255	; 0xff
 801ac42:	d021      	beq.n	801ac88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801ac44:	9d08      	ldr	r5, [sp, #32]
 801ac46:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ac4a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac4c:	fb05 fb0b 	mul.w	fp, r5, fp
 801ac50:	9d08      	ldr	r5, [sp, #32]
 801ac52:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ac56:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ac58:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ac5c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ac60:	fb05 fa0a 	mul.w	sl, r5, sl
 801ac64:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac68:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ac6c:	44de      	add	lr, fp
 801ac6e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ac72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ac76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ac7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ac82:	ea4e 050a 	orr.w	r5, lr, sl
 801ac86:	9508      	str	r5, [sp, #32]
 801ac88:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ac8a:	2dff      	cmp	r5, #255	; 0xff
 801ac8c:	d021      	beq.n	801acd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801ac8e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ac90:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ac94:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ac96:	fb05 fb0b 	mul.w	fp, r5, fp
 801ac9a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ac9c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801aca0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aca2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801aca6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801acaa:	fb05 fa0a 	mul.w	sl, r5, sl
 801acae:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801acb2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801acb6:	44de      	add	lr, fp
 801acb8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801acbc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801acc0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801acc4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801acc8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801accc:	ea4e 050a 	orr.w	r5, lr, sl
 801acd0:	950d      	str	r5, [sp, #52]	; 0x34
 801acd2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801acd4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801acd8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801acdc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ace0:	9d08      	ldr	r5, [sp, #32]
 801ace2:	fb08 fc0c 	mul.w	ip, r8, ip
 801ace6:	fb03 cc0e 	mla	ip, r3, lr, ip
 801acea:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801acee:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801acf0:	fb01 cc0e 	mla	ip, r1, lr, ip
 801acf4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801acf8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801acfa:	fb09 cc0e 	mla	ip, r9, lr, ip
 801acfe:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ad02:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ad04:	fb08 f80e 	mul.w	r8, r8, lr
 801ad08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ad0c:	fb03 8202 	mla	r2, r3, r2, r8
 801ad10:	9b08      	ldr	r3, [sp, #32]
 801ad12:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ad16:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801ad1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ad1c:	fb01 220a 	mla	r2, r1, sl, r2
 801ad20:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801ad24:	883b      	ldrh	r3, [r7, #0]
 801ad26:	fb09 2901 	mla	r9, r9, r1, r2
 801ad2a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ad2c:	1219      	asrs	r1, r3, #8
 801ad2e:	4342      	muls	r2, r0
 801ad30:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ad34:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ad38:	1c50      	adds	r0, r2, #1
 801ad3a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ad3e:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ad42:	ea4c 0c09 	orr.w	ip, ip, r9
 801ad46:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ad4a:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ad4e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ad52:	fa5f fc8c 	uxtb.w	ip, ip
 801ad56:	fb12 f205 	smulbb	r2, r2, r5
 801ad5a:	b2c0      	uxtb	r0, r0
 801ad5c:	fb1c fc05 	smulbb	ip, ip, r5
 801ad60:	fb01 2100 	mla	r1, r1, r0, r2
 801ad64:	10da      	asrs	r2, r3, #3
 801ad66:	fb1e fe05 	smulbb	lr, lr, r5
 801ad6a:	00db      	lsls	r3, r3, #3
 801ad6c:	b289      	uxth	r1, r1
 801ad6e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ad72:	b2db      	uxtb	r3, r3
 801ad74:	fb02 e200 	mla	r2, r2, r0, lr
 801ad78:	fb03 c300 	mla	r3, r3, r0, ip
 801ad7c:	b292      	uxth	r2, r2
 801ad7e:	fa1f fc83 	uxth.w	ip, r3
 801ad82:	1c4b      	adds	r3, r1, #1
 801ad84:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ad88:	f10c 0301 	add.w	r3, ip, #1
 801ad8c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ad90:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ad94:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad98:	430b      	orrs	r3, r1
 801ad9a:	1c51      	adds	r1, r2, #1
 801ad9c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ada0:	0952      	lsrs	r2, r2, #5
 801ada2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ada6:	4313      	orrs	r3, r2
 801ada8:	803b      	strh	r3, [r7, #0]
 801adaa:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801adac:	3702      	adds	r7, #2
 801adae:	441c      	add	r4, r3
 801adb0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801adb2:	441e      	add	r6, r3
 801adb4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801adb6:	3b01      	subs	r3, #1
 801adb8:	9318      	str	r3, [sp, #96]	; 0x60
 801adba:	e698      	b.n	801aaee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801adbc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801adbe:	441c      	add	r4, r3
 801adc0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801adc2:	441e      	add	r6, r3
 801adc4:	9b07      	ldr	r3, [sp, #28]
 801adc6:	3b01      	subs	r3, #1
 801adc8:	9307      	str	r3, [sp, #28]
 801adca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801adcc:	3302      	adds	r3, #2
 801adce:	930a      	str	r3, [sp, #40]	; 0x28
 801add0:	e66d      	b.n	801aaae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801add2:	d023      	beq.n	801ae1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801add4:	9b07      	ldr	r3, [sp, #28]
 801add6:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801add8:	3b01      	subs	r3, #1
 801adda:	fb00 4003 	mla	r0, r0, r3, r4
 801adde:	1400      	asrs	r0, r0, #16
 801ade0:	f53f ae82 	bmi.w	801aae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ade4:	3901      	subs	r1, #1
 801ade6:	4288      	cmp	r0, r1
 801ade8:	f6bf ae7e 	bge.w	801aae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801adec:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801adee:	fb01 6303 	mla	r3, r1, r3, r6
 801adf2:	141b      	asrs	r3, r3, #16
 801adf4:	f53f ae78 	bmi.w	801aae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801adf8:	3a01      	subs	r2, #1
 801adfa:	4293      	cmp	r3, r2
 801adfc:	f6bf ae74 	bge.w	801aae8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ae00:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ae04:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801ae08:	f1bb 0f00 	cmp.w	fp, #0
 801ae0c:	dc6c      	bgt.n	801aee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ae0e:	9b07      	ldr	r3, [sp, #28]
 801ae10:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ae14:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ae16:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ae1a:	930a      	str	r3, [sp, #40]	; 0x28
 801ae1c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ae1e:	2b00      	cmp	r3, #0
 801ae20:	f340 81b3 	ble.w	801b18a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ae24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ae28:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ae2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ae2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ae32:	eef0 6a62 	vmov.f32	s13, s5
 801ae36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ae3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ae3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae42:	ee16 4a90 	vmov	r4, s13
 801ae46:	eef0 6a43 	vmov.f32	s13, s6
 801ae4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae4e:	ee16 6a90 	vmov	r6, s13
 801ae52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ae56:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ae5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae6a:	ee12 2a90 	vmov	r2, s5
 801ae6e:	eef0 2a47 	vmov.f32	s5, s14
 801ae72:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae76:	ee13 2a10 	vmov	r2, s6
 801ae7a:	9329      	str	r3, [sp, #164]	; 0xa4
 801ae7c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ae7e:	eeb0 3a67 	vmov.f32	s6, s15
 801ae82:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae86:	932a      	str	r3, [sp, #168]	; 0xa8
 801ae88:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ae8a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801ae8c:	3b01      	subs	r3, #1
 801ae8e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ae90:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ae92:	bf08      	it	eq
 801ae94:	4613      	moveq	r3, r2
 801ae96:	9307      	str	r3, [sp, #28]
 801ae98:	e5fb      	b.n	801aa92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801ae9a:	2900      	cmp	r1, #0
 801ae9c:	f43f ae6b 	beq.w	801ab76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801aea0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801aea4:	9308      	str	r3, [sp, #32]
 801aea6:	0e1b      	lsrs	r3, r3, #24
 801aea8:	9311      	str	r3, [sp, #68]	; 0x44
 801aeaa:	e664      	b.n	801ab76 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801aeac:	f112 0801 	adds.w	r8, r2, #1
 801aeb0:	f53f af7b 	bmi.w	801adaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aeb4:	4543      	cmp	r3, r8
 801aeb6:	f6ff af78 	blt.w	801adaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aeba:	f11c 0801 	adds.w	r8, ip, #1
 801aebe:	f53f af74 	bmi.w	801adaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aec2:	45c6      	cmp	lr, r8
 801aec4:	f6ff af71 	blt.w	801adaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aec8:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801aeca:	b21b      	sxth	r3, r3
 801aecc:	9201      	str	r2, [sp, #4]
 801aece:	fa0f f28e 	sxth.w	r2, lr
 801aed2:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801aed6:	e9cd c002 	strd	ip, r0, [sp, #8]
 801aeda:	9200      	str	r2, [sp, #0]
 801aedc:	4639      	mov	r1, r7
 801aede:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801aee0:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801aee2:	f7ff fc79 	bl	801a7d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801aee6:	e760      	b.n	801adaa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801aee8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801aeea:	1427      	asrs	r7, r4, #16
 801aeec:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801aeee:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801aef2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aef6:	1433      	asrs	r3, r6, #16
 801aef8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801aefc:	fb01 7303 	mla	r3, r1, r3, r7
 801af00:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801af04:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801af08:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801af0c:	2a00      	cmp	r2, #0
 801af0e:	f000 8133 	beq.w	801b178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801af12:	687d      	ldr	r5, [r7, #4]
 801af14:	950e      	str	r5, [sp, #56]	; 0x38
 801af16:	0e2d      	lsrs	r5, r5, #24
 801af18:	9515      	str	r5, [sp, #84]	; 0x54
 801af1a:	b178      	cbz	r0, 801af3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801af1c:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801af20:	3901      	subs	r1, #1
 801af22:	0089      	lsls	r1, r1, #2
 801af24:	3104      	adds	r1, #4
 801af26:	eb07 0e01 	add.w	lr, r7, r1
 801af2a:	5879      	ldr	r1, [r7, r1]
 801af2c:	9109      	str	r1, [sp, #36]	; 0x24
 801af2e:	0e09      	lsrs	r1, r1, #24
 801af30:	9112      	str	r1, [sp, #72]	; 0x48
 801af32:	f8de 1004 	ldr.w	r1, [lr, #4]
 801af36:	910f      	str	r1, [sp, #60]	; 0x3c
 801af38:	0e09      	lsrs	r1, r1, #24
 801af3a:	9116      	str	r1, [sp, #88]	; 0x58
 801af3c:	b292      	uxth	r2, r2
 801af3e:	9915      	ldr	r1, [sp, #84]	; 0x54
 801af40:	b280      	uxth	r0, r0
 801af42:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801af44:	fb02 f800 	mul.w	r8, r2, r0
 801af48:	0112      	lsls	r2, r2, #4
 801af4a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801af4e:	eba2 0e08 	sub.w	lr, r2, r8
 801af52:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801af56:	b280      	uxth	r0, r0
 801af58:	fa1f fe8e 	uxth.w	lr, lr
 801af5c:	1a12      	subs	r2, r2, r0
 801af5e:	fb0e f101 	mul.w	r1, lr, r1
 801af62:	b292      	uxth	r2, r2
 801af64:	fb02 110c 	mla	r1, r2, ip, r1
 801af68:	fb00 1105 	mla	r1, r0, r5, r1
 801af6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801af6e:	fb08 1105 	mla	r1, r8, r5, r1
 801af72:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801af76:	2900      	cmp	r1, #0
 801af78:	f000 80f5 	beq.w	801b166 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801af7c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801af80:	d019      	beq.n	801afb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801af82:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801af86:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801af8a:	fb0c fa0a 	mul.w	sl, ip, sl
 801af8e:	fb0c fc03 	mul.w	ip, ip, r3
 801af92:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801af96:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801af9a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801af9e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801afa2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801afa6:	4453      	add	r3, sl
 801afa8:	0a3f      	lsrs	r7, r7, #8
 801afaa:	0a1b      	lsrs	r3, r3, #8
 801afac:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801afb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801afb4:	433b      	orrs	r3, r7
 801afb6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801afb8:	2dff      	cmp	r5, #255	; 0xff
 801afba:	d020      	beq.n	801affe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801afbc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801afbe:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801afc2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801afc4:	436f      	muls	r7, r5
 801afc6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801afc8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801afcc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801afd0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801afd2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801afd6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801afda:	fb05 fa0a 	mul.w	sl, r5, sl
 801afde:	44bc      	add	ip, r7
 801afe0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801afe4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801afe8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801afec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801aff0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aff4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aff8:	ea4c 050a 	orr.w	r5, ip, sl
 801affc:	950e      	str	r5, [sp, #56]	; 0x38
 801affe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b000:	2dff      	cmp	r5, #255	; 0xff
 801b002:	d020      	beq.n	801b046 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801b004:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b006:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b00a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b00c:	436f      	muls	r7, r5
 801b00e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b010:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b014:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b018:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b01a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b01e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b022:	fb05 fa0a 	mul.w	sl, r5, sl
 801b026:	44bc      	add	ip, r7
 801b028:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b02c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b030:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b034:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b038:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b03c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b040:	ea4c 050a 	orr.w	r5, ip, sl
 801b044:	9509      	str	r5, [sp, #36]	; 0x24
 801b046:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b048:	2dff      	cmp	r5, #255	; 0xff
 801b04a:	d020      	beq.n	801b08e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801b04c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b04e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b052:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b054:	436f      	muls	r7, r5
 801b056:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b058:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b05c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b060:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801b062:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b066:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b06a:	fb05 fa0a 	mul.w	sl, r5, sl
 801b06e:	44bc      	add	ip, r7
 801b070:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b074:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b078:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b07c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b080:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b084:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b088:	ea4c 050a 	orr.w	r5, ip, sl
 801b08c:	950f      	str	r5, [sp, #60]	; 0x3c
 801b08e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b090:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b094:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b098:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b09c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b09e:	fb0e f707 	mul.w	r7, lr, r7
 801b0a2:	fb02 770c 	mla	r7, r2, ip, r7
 801b0a6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b0aa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b0ac:	fb00 770c 	mla	r7, r0, ip, r7
 801b0b0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b0b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b0b6:	fb08 770c 	mla	r7, r8, ip, r7
 801b0ba:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b0be:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b0c0:	fb0e fe0c 	mul.w	lr, lr, ip
 801b0c4:	0a3f      	lsrs	r7, r7, #8
 801b0c6:	fb02 e303 	mla	r3, r2, r3, lr
 801b0ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b0cc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b0d0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b0d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b0d6:	fb00 330a 	mla	r3, r0, sl, r3
 801b0da:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b0de:	f8b9 0000 	ldrh.w	r0, [r9]
 801b0e2:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b0e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b0e8:	1202      	asrs	r2, r0, #8
 801b0ea:	4359      	muls	r1, r3
 801b0ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0f0:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b0f4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b0f8:	1c4b      	adds	r3, r1, #1
 801b0fa:	ea47 070c 	orr.w	r7, r7, ip
 801b0fe:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b102:	0c3b      	lsrs	r3, r7, #16
 801b104:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b108:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b10c:	b2ff      	uxtb	r7, r7
 801b10e:	fb13 f305 	smulbb	r3, r3, r5
 801b112:	b2c9      	uxtb	r1, r1
 801b114:	fb17 f705 	smulbb	r7, r7, r5
 801b118:	fb02 3201 	mla	r2, r2, r1, r3
 801b11c:	10c3      	asrs	r3, r0, #3
 801b11e:	fb1c fc05 	smulbb	ip, ip, r5
 801b122:	00c0      	lsls	r0, r0, #3
 801b124:	b292      	uxth	r2, r2
 801b126:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b12a:	b2c0      	uxtb	r0, r0
 801b12c:	fb03 c301 	mla	r3, r3, r1, ip
 801b130:	fb00 7001 	mla	r0, r0, r1, r7
 801b134:	1c51      	adds	r1, r2, #1
 801b136:	b29b      	uxth	r3, r3
 801b138:	b280      	uxth	r0, r0
 801b13a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b13e:	f100 0c01 	add.w	ip, r0, #1
 801b142:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b146:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801b14a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b14e:	ea4c 0202 	orr.w	r2, ip, r2
 801b152:	f103 0c01 	add.w	ip, r3, #1
 801b156:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b15a:	095b      	lsrs	r3, r3, #5
 801b15c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b160:	431a      	orrs	r2, r3
 801b162:	f8a9 2000 	strh.w	r2, [r9]
 801b166:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b168:	f109 0902 	add.w	r9, r9, #2
 801b16c:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b170:	441c      	add	r4, r3
 801b172:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801b174:	441e      	add	r6, r3
 801b176:	e647      	b.n	801ae08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801b178:	2800      	cmp	r0, #0
 801b17a:	f43f aedf 	beq.w	801af3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b17e:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801b182:	9109      	str	r1, [sp, #36]	; 0x24
 801b184:	0e09      	lsrs	r1, r1, #24
 801b186:	9112      	str	r1, [sp, #72]	; 0x48
 801b188:	e6d8      	b.n	801af3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801b18a:	b01d      	add	sp, #116	; 0x74
 801b18c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b190 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801b190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b194:	b085      	sub	sp, #20
 801b196:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801b19a:	9102      	str	r1, [sp, #8]
 801b19c:	2c00      	cmp	r4, #0
 801b19e:	fb04 7103 	mla	r1, r4, r3, r7
 801b1a2:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801b1a6:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801b1aa:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801b1ae:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801b1b2:	f2c0 810c 	blt.w	801b3ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b1b6:	45a6      	cmp	lr, r4
 801b1b8:	f340 8109 	ble.w	801b3ce <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801b1bc:	2f00      	cmp	r7, #0
 801b1be:	f2c0 8104 	blt.w	801b3ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b1c2:	42bb      	cmp	r3, r7
 801b1c4:	f340 8101 	ble.w	801b3ca <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801b1c8:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801b1cc:	1c7a      	adds	r2, r7, #1
 801b1ce:	f100 8101 	bmi.w	801b3d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b1d2:	4293      	cmp	r3, r2
 801b1d4:	f340 80fe 	ble.w	801b3d4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801b1d8:	2e00      	cmp	r6, #0
 801b1da:	f000 80fd 	beq.w	801b3d8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801b1de:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801b1e2:	3401      	adds	r4, #1
 801b1e4:	f100 80fc 	bmi.w	801b3e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b1e8:	45a6      	cmp	lr, r4
 801b1ea:	f340 80f9 	ble.w	801b3e0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801b1ee:	2800      	cmp	r0, #0
 801b1f0:	f000 80f9 	beq.w	801b3e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801b1f4:	2f00      	cmp	r7, #0
 801b1f6:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801b1fa:	f2c0 80ef 	blt.w	801b3dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b1fe:	42bb      	cmp	r3, r7
 801b200:	f340 80ec 	ble.w	801b3dc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801b204:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801b208:	3701      	adds	r7, #1
 801b20a:	f100 80ef 	bmi.w	801b3ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b20e:	42bb      	cmp	r3, r7
 801b210:	f340 80ec 	ble.w	801b3ec <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801b214:	2e00      	cmp	r6, #0
 801b216:	f000 80eb 	beq.w	801b3f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801b21a:	6852      	ldr	r2, [r2, #4]
 801b21c:	b2b6      	uxth	r6, r6
 801b21e:	b280      	uxth	r0, r0
 801b220:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b224:	fb00 fe06 	mul.w	lr, r0, r6
 801b228:	0136      	lsls	r6, r6, #4
 801b22a:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b22e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b232:	eba6 070e 	sub.w	r7, r6, lr
 801b236:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801b23a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b23e:	b280      	uxth	r0, r0
 801b240:	b2bf      	uxth	r7, r7
 801b242:	1a1b      	subs	r3, r3, r0
 801b244:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b248:	fb07 f60a 	mul.w	r6, r7, sl
 801b24c:	b29b      	uxth	r3, r3
 801b24e:	fb0b 6603 	mla	r6, fp, r3, r6
 801b252:	fb00 6609 	mla	r6, r0, r9, r6
 801b256:	fb0e 6608 	mla	r6, lr, r8, r6
 801b25a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b25e:	9600      	str	r6, [sp, #0]
 801b260:	2e00      	cmp	r6, #0
 801b262:	f000 80af 	beq.w	801b3c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801b266:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b26a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801b26e:	9e02      	ldr	r6, [sp, #8]
 801b270:	fb0b fc0c 	mul.w	ip, fp, ip
 801b274:	fb0b f505 	mul.w	r5, fp, r5
 801b278:	8836      	ldrh	r6, [r6, #0]
 801b27a:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b27e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b282:	9501      	str	r5, [sp, #4]
 801b284:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801b288:	44dc      	add	ip, fp
 801b28a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b28e:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801b292:	9503      	str	r5, [sp, #12]
 801b294:	9d01      	ldr	r5, [sp, #4]
 801b296:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801b29a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b29e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801b2a2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b2a6:	fb0a fc0c 	mul.w	ip, sl, ip
 801b2aa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b2ae:	fb0a fa01 	mul.w	sl, sl, r1
 801b2b2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b2b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b2ba:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801b2be:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b2c2:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b2c6:	4465      	add	r5, ip
 801b2c8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b2cc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b2d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b2d4:	fb09 fc0c 	mul.w	ip, r9, ip
 801b2d8:	0a2d      	lsrs	r5, r5, #8
 801b2da:	fb09 f904 	mul.w	r9, r9, r4
 801b2de:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b2e2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b2e6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b2ea:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801b2ee:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b2f2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b2f6:	437d      	muls	r5, r7
 801b2f8:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b2fc:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801b300:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b304:	4461      	add	r1, ip
 801b306:	fb08 f404 	mul.w	r4, r8, r4
 801b30a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b30e:	fb08 f802 	mul.w	r8, r8, r2
 801b312:	0a09      	lsrs	r1, r1, #8
 801b314:	0a22      	lsrs	r2, r4, #8
 801b316:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801b31a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b31e:	fb07 f70a 	mul.w	r7, r7, sl
 801b322:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b326:	4414      	add	r4, r2
 801b328:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801b32c:	0a24      	lsrs	r4, r4, #8
 801b32e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b332:	9a03      	ldr	r2, [sp, #12]
 801b334:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b338:	fb02 5503 	mla	r5, r2, r3, r5
 801b33c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b340:	fb04 540e 	mla	r4, r4, lr, r5
 801b344:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b348:	fb01 4100 	mla	r1, r1, r0, r4
 801b34c:	0a09      	lsrs	r1, r1, #8
 801b34e:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801b352:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801b356:	fb03 7101 	mla	r1, r3, r1, r7
 801b35a:	9b00      	ldr	r3, [sp, #0]
 801b35c:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b360:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801b364:	43da      	mvns	r2, r3
 801b366:	1233      	asrs	r3, r6, #8
 801b368:	fb00 e101 	mla	r1, r0, r1, lr
 801b36c:	10f0      	asrs	r0, r6, #3
 801b36e:	b2d2      	uxtb	r2, r2
 801b370:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801b374:	0a09      	lsrs	r1, r1, #8
 801b376:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b37a:	00f6      	lsls	r6, r6, #3
 801b37c:	4353      	muls	r3, r2
 801b37e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b382:	4350      	muls	r0, r2
 801b384:	b2f6      	uxtb	r6, r6
 801b386:	4321      	orrs	r1, r4
 801b388:	4356      	muls	r6, r2
 801b38a:	1c5a      	adds	r2, r3, #1
 801b38c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801b390:	0c0b      	lsrs	r3, r1, #16
 801b392:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b396:	1c42      	adds	r2, r0, #1
 801b398:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801b39c:	0a0a      	lsrs	r2, r1, #8
 801b39e:	021b      	lsls	r3, r3, #8
 801b3a0:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b3a4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801b3a8:	00d2      	lsls	r2, r2, #3
 801b3aa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b3ae:	4313      	orrs	r3, r2
 801b3b0:	1c72      	adds	r2, r6, #1
 801b3b2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801b3b6:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801b3ba:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801b3be:	4319      	orrs	r1, r3
 801b3c0:	9b02      	ldr	r3, [sp, #8]
 801b3c2:	8019      	strh	r1, [r3, #0]
 801b3c4:	b005      	add	sp, #20
 801b3c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3ca:	2500      	movs	r5, #0
 801b3cc:	e6fe      	b.n	801b1cc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801b3ce:	2100      	movs	r1, #0
 801b3d0:	460d      	mov	r5, r1
 801b3d2:	e706      	b.n	801b1e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b3d4:	2100      	movs	r1, #0
 801b3d6:	e704      	b.n	801b1e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b3d8:	4631      	mov	r1, r6
 801b3da:	e702      	b.n	801b1e2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801b3dc:	2400      	movs	r4, #0
 801b3de:	e713      	b.n	801b208 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801b3e0:	2200      	movs	r2, #0
 801b3e2:	4614      	mov	r4, r2
 801b3e4:	e71a      	b.n	801b21c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b3e6:	4602      	mov	r2, r0
 801b3e8:	4604      	mov	r4, r0
 801b3ea:	e717      	b.n	801b21c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b3ec:	2200      	movs	r2, #0
 801b3ee:	e715      	b.n	801b21c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801b3f0:	4632      	mov	r2, r6
 801b3f2:	e713      	b.n	801b21c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801b3f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b3f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3f8:	b09b      	sub	sp, #108	; 0x6c
 801b3fa:	9218      	str	r2, [sp, #96]	; 0x60
 801b3fc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b3fe:	9019      	str	r0, [sp, #100]	; 0x64
 801b400:	9116      	str	r1, [sp, #88]	; 0x58
 801b402:	6850      	ldr	r0, [r2, #4]
 801b404:	9307      	str	r3, [sp, #28]
 801b406:	6812      	ldr	r2, [r2, #0]
 801b408:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b40c:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801b410:	fb00 1303 	mla	r3, r0, r3, r1
 801b414:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b418:	930a      	str	r3, [sp, #40]	; 0x28
 801b41a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b41c:	681b      	ldr	r3, [r3, #0]
 801b41e:	930f      	str	r3, [sp, #60]	; 0x3c
 801b420:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b422:	2b00      	cmp	r3, #0
 801b424:	dc03      	bgt.n	801b42e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b426:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b428:	2b00      	cmp	r3, #0
 801b42a:	f340 8387 	ble.w	801bb3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801b42e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b430:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b434:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b438:	1e48      	subs	r0, r1, #1
 801b43a:	1e57      	subs	r7, r2, #1
 801b43c:	9b07      	ldr	r3, [sp, #28]
 801b43e:	2b00      	cmp	r3, #0
 801b440:	f340 8166 	ble.w	801b710 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801b444:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b448:	ea4f 4326 	mov.w	r3, r6, asr #16
 801b44c:	d406      	bmi.n	801b45c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b44e:	4584      	cmp	ip, r0
 801b450:	da04      	bge.n	801b45c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b452:	2b00      	cmp	r3, #0
 801b454:	db02      	blt.n	801b45c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801b456:	42bb      	cmp	r3, r7
 801b458:	f2c0 815b 	blt.w	801b712 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801b45c:	f11c 0c01 	adds.w	ip, ip, #1
 801b460:	f100 814b 	bmi.w	801b6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b464:	4561      	cmp	r1, ip
 801b466:	f2c0 8148 	blt.w	801b6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b46a:	3301      	adds	r3, #1
 801b46c:	f100 8145 	bmi.w	801b6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b470:	429a      	cmp	r2, r3
 801b472:	f2c0 8142 	blt.w	801b6fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801b476:	9b07      	ldr	r3, [sp, #28]
 801b478:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b47a:	9317      	str	r3, [sp, #92]	; 0x5c
 801b47c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b47e:	2b00      	cmp	r3, #0
 801b480:	f340 8165 	ble.w	801b74e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b484:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801b486:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801b48a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b48c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801b490:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801b494:	1422      	asrs	r2, r4, #16
 801b496:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b49a:	689b      	ldr	r3, [r3, #8]
 801b49c:	f100 81d5 	bmi.w	801b84a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b4a0:	f103 38ff 	add.w	r8, r3, #4294967295
 801b4a4:	4542      	cmp	r2, r8
 801b4a6:	f280 81d0 	bge.w	801b84a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b4aa:	f1bc 0f00 	cmp.w	ip, #0
 801b4ae:	f2c0 81cc 	blt.w	801b84a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b4b2:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b4b6:	45c4      	cmp	ip, r8
 801b4b8:	f280 81c7 	bge.w	801b84a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801b4bc:	b21b      	sxth	r3, r3
 801b4be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b4c0:	fb0c 2203 	mla	r2, ip, r3, r2
 801b4c4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801b4c8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801b4cc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801b4d0:	2900      	cmp	r1, #0
 801b4d2:	f000 8182 	beq.w	801b7da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b4d6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801b4da:	950b      	str	r5, [sp, #44]	; 0x2c
 801b4dc:	0e2d      	lsrs	r5, r5, #24
 801b4de:	9512      	str	r5, [sp, #72]	; 0x48
 801b4e0:	b180      	cbz	r0, 801b504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801b4e2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801b4e6:	3b01      	subs	r3, #1
 801b4e8:	009b      	lsls	r3, r3, #2
 801b4ea:	3304      	adds	r3, #4
 801b4ec:	eb08 0c03 	add.w	ip, r8, r3
 801b4f0:	f858 3003 	ldr.w	r3, [r8, r3]
 801b4f4:	9308      	str	r3, [sp, #32]
 801b4f6:	0e1b      	lsrs	r3, r3, #24
 801b4f8:	9310      	str	r3, [sp, #64]	; 0x40
 801b4fa:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801b4fe:	930c      	str	r3, [sp, #48]	; 0x30
 801b500:	0e1b      	lsrs	r3, r3, #24
 801b502:	9313      	str	r3, [sp, #76]	; 0x4c
 801b504:	b289      	uxth	r1, r1
 801b506:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801b508:	b280      	uxth	r0, r0
 801b50a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b50c:	fb01 f900 	mul.w	r9, r1, r0
 801b510:	0109      	lsls	r1, r1, #4
 801b512:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b516:	eba1 0809 	sub.w	r8, r1, r9
 801b51a:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801b51e:	b280      	uxth	r0, r0
 801b520:	fa1f f888 	uxth.w	r8, r8
 801b524:	1a09      	subs	r1, r1, r0
 801b526:	fb08 f303 	mul.w	r3, r8, r3
 801b52a:	b289      	uxth	r1, r1
 801b52c:	fb01 330e 	mla	r3, r1, lr, r3
 801b530:	fb00 3305 	mla	r3, r0, r5, r3
 801b534:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b536:	fb09 3305 	mla	r3, r9, r5, r3
 801b53a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801b53e:	2b00      	cmp	r3, #0
 801b540:	f000 80d2 	beq.w	801b6e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b544:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b548:	d01b      	beq.n	801b582 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801b54a:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801b54e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b552:	fb0e fa0a 	mul.w	sl, lr, sl
 801b556:	fb0e fe02 	mul.w	lr, lr, r2
 801b55a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801b55e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b562:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b566:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b56a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b56e:	4452      	add	r2, sl
 801b570:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b574:	0a12      	lsrs	r2, r2, #8
 801b576:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b57a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b57e:	ea42 020c 	orr.w	r2, r2, ip
 801b582:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b584:	2dff      	cmp	r5, #255	; 0xff
 801b586:	d021      	beq.n	801b5cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801b588:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b58a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b58e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b590:	fb05 fb0b 	mul.w	fp, r5, fp
 801b594:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b596:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b59a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801b59c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5a0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b5a4:	fb05 fa0a 	mul.w	sl, r5, sl
 801b5a8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b5ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b5b0:	44de      	add	lr, fp
 801b5b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b5b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b5ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b5c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b5c6:	ea4e 050a 	orr.w	r5, lr, sl
 801b5ca:	950b      	str	r5, [sp, #44]	; 0x2c
 801b5cc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b5ce:	2dff      	cmp	r5, #255	; 0xff
 801b5d0:	d021      	beq.n	801b616 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801b5d2:	9d08      	ldr	r5, [sp, #32]
 801b5d4:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b5d8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b5da:	fb05 fb0b 	mul.w	fp, r5, fp
 801b5de:	9d08      	ldr	r5, [sp, #32]
 801b5e0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b5e4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b5e6:	fb05 fa0e 	mul.w	sl, r5, lr
 801b5ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b5ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b5f2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b5f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b5fa:	44de      	add	lr, fp
 801b5fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b600:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b604:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b608:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b60c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b610:	ea4e 050a 	orr.w	r5, lr, sl
 801b614:	9508      	str	r5, [sp, #32]
 801b616:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b618:	2dff      	cmp	r5, #255	; 0xff
 801b61a:	d021      	beq.n	801b660 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801b61c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b61e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801b622:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b624:	fb05 fb0b 	mul.w	fp, r5, fp
 801b628:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b62a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b62e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801b630:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b634:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b638:	fb05 fa0a 	mul.w	sl, r5, sl
 801b63c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b640:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b644:	44de      	add	lr, fp
 801b646:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b64a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b64e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b652:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b656:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b65a:	ea4e 050a 	orr.w	r5, lr, sl
 801b65e:	950c      	str	r5, [sp, #48]	; 0x30
 801b660:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b662:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801b666:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b66a:	2bff      	cmp	r3, #255	; 0xff
 801b66c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b670:	9d08      	ldr	r5, [sp, #32]
 801b672:	fb08 fc0c 	mul.w	ip, r8, ip
 801b676:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b67a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b67e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801b680:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b684:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801b688:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801b68a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b68e:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801b692:	fb08 f80e 	mul.w	r8, r8, lr
 801b696:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b69a:	fb01 8202 	mla	r2, r1, r2, r8
 801b69e:	9908      	ldr	r1, [sp, #32]
 801b6a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b6a4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801b6a8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b6aa:	fb00 220a 	mla	r2, r0, sl, r2
 801b6ae:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801b6b2:	fb09 2900 	mla	r9, r9, r0, r2
 801b6b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b6ba:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b6be:	ea4c 0c09 	orr.w	ip, ip, r9
 801b6c2:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801b6c6:	f040 8091 	bne.w	801b7ec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801b6ca:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801b6ce:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801b6d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b6d6:	f022 0207 	bic.w	r2, r2, #7
 801b6da:	431a      	orrs	r2, r3
 801b6dc:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b6e0:	ea4c 0c02 	orr.w	ip, ip, r2
 801b6e4:	f8a7 c000 	strh.w	ip, [r7]
 801b6e8:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b6ea:	3702      	adds	r7, #2
 801b6ec:	441c      	add	r4, r3
 801b6ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b6f0:	441e      	add	r6, r3
 801b6f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b6f4:	3b01      	subs	r3, #1
 801b6f6:	9317      	str	r3, [sp, #92]	; 0x5c
 801b6f8:	e6c0      	b.n	801b47c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b6fa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b6fc:	441c      	add	r4, r3
 801b6fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b700:	441e      	add	r6, r3
 801b702:	9b07      	ldr	r3, [sp, #28]
 801b704:	3b01      	subs	r3, #1
 801b706:	9307      	str	r3, [sp, #28]
 801b708:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b70a:	3302      	adds	r3, #2
 801b70c:	930a      	str	r3, [sp, #40]	; 0x28
 801b70e:	e695      	b.n	801b43c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b710:	d024      	beq.n	801b75c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801b712:	9b07      	ldr	r3, [sp, #28]
 801b714:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b716:	3b01      	subs	r3, #1
 801b718:	fb00 4003 	mla	r0, r0, r3, r4
 801b71c:	1400      	asrs	r0, r0, #16
 801b71e:	f53f aeaa 	bmi.w	801b476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b722:	3901      	subs	r1, #1
 801b724:	4288      	cmp	r0, r1
 801b726:	f6bf aea6 	bge.w	801b476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b72a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b72c:	fb01 6303 	mla	r3, r1, r3, r6
 801b730:	141b      	asrs	r3, r3, #16
 801b732:	f53f aea0 	bmi.w	801b476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b736:	3a01      	subs	r2, #1
 801b738:	4293      	cmp	r3, r2
 801b73a:	f6bf ae9c 	bge.w	801b476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b73e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b742:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801b746:	f1bb 0f00 	cmp.w	fp, #0
 801b74a:	f300 809a 	bgt.w	801b882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801b74e:	9b07      	ldr	r3, [sp, #28]
 801b750:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801b754:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b756:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801b75a:	930a      	str	r3, [sp, #40]	; 0x28
 801b75c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b75e:	2b00      	cmp	r3, #0
 801b760:	f340 81ec 	ble.w	801bb3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801b764:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b768:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b76a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b76e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b772:	eef0 6a62 	vmov.f32	s13, s5
 801b776:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b77a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b77e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b782:	ee16 4a90 	vmov	r4, s13
 801b786:	eef0 6a43 	vmov.f32	s13, s6
 801b78a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b78e:	ee16 6a90 	vmov	r6, s13
 801b792:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b796:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b79a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b79e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b7a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b7a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b7aa:	ee12 2a90 	vmov	r2, s5
 801b7ae:	eef0 2a47 	vmov.f32	s5, s14
 801b7b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7b6:	ee13 2a10 	vmov	r2, s6
 801b7ba:	9327      	str	r3, [sp, #156]	; 0x9c
 801b7bc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b7be:	eeb0 3a67 	vmov.f32	s6, s15
 801b7c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b7c6:	9328      	str	r3, [sp, #160]	; 0xa0
 801b7c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b7ca:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b7cc:	3b01      	subs	r3, #1
 801b7ce:	9316      	str	r3, [sp, #88]	; 0x58
 801b7d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b7d2:	bf08      	it	eq
 801b7d4:	4613      	moveq	r3, r2
 801b7d6:	9307      	str	r3, [sp, #28]
 801b7d8:	e622      	b.n	801b420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801b7da:	2800      	cmp	r0, #0
 801b7dc:	f43f ae92 	beq.w	801b504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801b7e0:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801b7e4:	9308      	str	r3, [sp, #32]
 801b7e6:	0e1b      	lsrs	r3, r3, #24
 801b7e8:	9310      	str	r3, [sp, #64]	; 0x40
 801b7ea:	e68b      	b.n	801b504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801b7ec:	8839      	ldrh	r1, [r7, #0]
 801b7ee:	43db      	mvns	r3, r3
 801b7f0:	4dd4      	ldr	r5, [pc, #848]	; (801bb44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801b7f2:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801b7f6:	fa5f f883 	uxtb.w	r8, r3
 801b7fa:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b7fe:	10c8      	asrs	r0, r1, #3
 801b800:	00cb      	lsls	r3, r1, #3
 801b802:	fb0e fe08 	mul.w	lr, lr, r8
 801b806:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b80a:	b2db      	uxtb	r3, r3
 801b80c:	f10e 0101 	add.w	r1, lr, #1
 801b810:	fb00 f008 	mul.w	r0, r0, r8
 801b814:	fb03 f308 	mul.w	r3, r3, r8
 801b818:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801b81c:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801b820:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801b824:	f100 0e01 	add.w	lr, r0, #1
 801b828:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801b82c:	b2c9      	uxtb	r1, r1
 801b82e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b832:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801b836:	00d2      	lsls	r2, r2, #3
 801b838:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b83c:	430a      	orrs	r2, r1
 801b83e:	1c59      	adds	r1, r3, #1
 801b840:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801b844:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b848:	e748      	b.n	801b6dc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801b84a:	f112 0801 	adds.w	r8, r2, #1
 801b84e:	f53f af4b 	bmi.w	801b6e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b852:	4543      	cmp	r3, r8
 801b854:	f6ff af48 	blt.w	801b6e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b858:	f11c 0801 	adds.w	r8, ip, #1
 801b85c:	f53f af44 	bmi.w	801b6e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b860:	45c6      	cmp	lr, r8
 801b862:	f6ff af41 	blt.w	801b6e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b866:	b21b      	sxth	r3, r3
 801b868:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801b86c:	fa0f f28e 	sxth.w	r2, lr
 801b870:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801b874:	9200      	str	r2, [sp, #0]
 801b876:	4639      	mov	r1, r7
 801b878:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b87a:	9819      	ldr	r0, [sp, #100]	; 0x64
 801b87c:	f7ff fc88 	bl	801b190 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801b880:	e732      	b.n	801b6e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801b882:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b884:	1421      	asrs	r1, r4, #16
 801b886:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801b888:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801b88c:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801b890:	1433      	asrs	r3, r6, #16
 801b892:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801b896:	fb07 1303 	mla	r3, r7, r3, r1
 801b89a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b89c:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801b8a0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801b8a4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b8a8:	2a00      	cmp	r2, #0
 801b8aa:	f000 8108 	beq.w	801babe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801b8ae:	684d      	ldr	r5, [r1, #4]
 801b8b0:	950d      	str	r5, [sp, #52]	; 0x34
 801b8b2:	0e2d      	lsrs	r5, r5, #24
 801b8b4:	9514      	str	r5, [sp, #80]	; 0x50
 801b8b6:	b178      	cbz	r0, 801b8d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801b8b8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801b8bc:	3f01      	subs	r7, #1
 801b8be:	00bf      	lsls	r7, r7, #2
 801b8c0:	3704      	adds	r7, #4
 801b8c2:	eb01 0e07 	add.w	lr, r1, r7
 801b8c6:	59c9      	ldr	r1, [r1, r7]
 801b8c8:	9109      	str	r1, [sp, #36]	; 0x24
 801b8ca:	0e09      	lsrs	r1, r1, #24
 801b8cc:	9111      	str	r1, [sp, #68]	; 0x44
 801b8ce:	f8de 1004 	ldr.w	r1, [lr, #4]
 801b8d2:	910e      	str	r1, [sp, #56]	; 0x38
 801b8d4:	0e09      	lsrs	r1, r1, #24
 801b8d6:	9115      	str	r1, [sp, #84]	; 0x54
 801b8d8:	b292      	uxth	r2, r2
 801b8da:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b8dc:	b280      	uxth	r0, r0
 801b8de:	fb02 f900 	mul.w	r9, r2, r0
 801b8e2:	0112      	lsls	r2, r2, #4
 801b8e4:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b8e8:	eba2 0e09 	sub.w	lr, r2, r9
 801b8ec:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801b8f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b8f2:	b280      	uxth	r0, r0
 801b8f4:	fa1f fe8e 	uxth.w	lr, lr
 801b8f8:	1a09      	subs	r1, r1, r0
 801b8fa:	fb0e f202 	mul.w	r2, lr, r2
 801b8fe:	b289      	uxth	r1, r1
 801b900:	fb01 220c 	mla	r2, r1, ip, r2
 801b904:	fb00 2205 	mla	r2, r0, r5, r2
 801b908:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b90a:	fb09 2205 	mla	r2, r9, r5, r2
 801b90e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801b912:	2a00      	cmp	r2, #0
 801b914:	f000 80ca 	beq.w	801baac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801b918:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b91c:	d019      	beq.n	801b952 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801b91e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b922:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b926:	fb0c fa0a 	mul.w	sl, ip, sl
 801b92a:	fb0c fc03 	mul.w	ip, ip, r3
 801b92e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b932:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b936:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b93a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b93e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b942:	4453      	add	r3, sl
 801b944:	0a3f      	lsrs	r7, r7, #8
 801b946:	0a1b      	lsrs	r3, r3, #8
 801b948:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b94c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b950:	433b      	orrs	r3, r7
 801b952:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b954:	2dff      	cmp	r5, #255	; 0xff
 801b956:	d020      	beq.n	801b99a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801b958:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b95a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b95e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b960:	436f      	muls	r7, r5
 801b962:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801b964:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b968:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b96c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801b96e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b972:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b976:	fb05 fa0a 	mul.w	sl, r5, sl
 801b97a:	44bc      	add	ip, r7
 801b97c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b980:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b984:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b988:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b98c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b990:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b994:	ea4c 050a 	orr.w	r5, ip, sl
 801b998:	950d      	str	r5, [sp, #52]	; 0x34
 801b99a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b99c:	2dff      	cmp	r5, #255	; 0xff
 801b99e:	d020      	beq.n	801b9e2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801b9a0:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b9a2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b9a6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b9a8:	436f      	muls	r7, r5
 801b9aa:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801b9ac:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801b9b0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801b9b2:	fb05 fa0c 	mul.w	sl, r5, ip
 801b9b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9ba:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b9be:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9c2:	44bc      	add	ip, r7
 801b9c4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b9c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b9cc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b9d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9d4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b9d8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9dc:	ea4c 050a 	orr.w	r5, ip, sl
 801b9e0:	9509      	str	r5, [sp, #36]	; 0x24
 801b9e2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b9e4:	2dff      	cmp	r5, #255	; 0xff
 801b9e6:	d020      	beq.n	801ba2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801b9e8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b9ea:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801b9ee:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b9f0:	436f      	muls	r7, r5
 801b9f2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801b9f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b9f8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801b9fc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801b9fe:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ba02:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba06:	fb05 fa0a 	mul.w	sl, r5, sl
 801ba0a:	44bc      	add	ip, r7
 801ba0c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ba10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba14:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ba18:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ba20:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ba24:	ea4c 050a 	orr.w	r5, ip, sl
 801ba28:	950e      	str	r5, [sp, #56]	; 0x38
 801ba2a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ba2c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ba30:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ba34:	2aff      	cmp	r2, #255	; 0xff
 801ba36:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ba3a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ba3c:	fb0e f707 	mul.w	r7, lr, r7
 801ba40:	fb01 770c 	mla	r7, r1, ip, r7
 801ba44:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ba48:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ba4a:	fb00 770c 	mla	r7, r0, ip, r7
 801ba4e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ba52:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ba54:	fb09 770c 	mla	r7, r9, ip, r7
 801ba58:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ba5c:	fb0e fe0c 	mul.w	lr, lr, ip
 801ba60:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801ba64:	fb01 e303 	mla	r3, r1, r3, lr
 801ba68:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ba6a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ba6e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ba72:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba74:	fb00 330a 	mla	r3, r0, sl, r3
 801ba78:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ba7c:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ba80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba84:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ba88:	ea47 070c 	orr.w	r7, r7, ip
 801ba8c:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801ba90:	d11e      	bne.n	801bad0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801ba92:	097a      	lsrs	r2, r7, #5
 801ba94:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801ba98:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801ba9c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801baa0:	f023 0307 	bic.w	r3, r3, #7
 801baa4:	4313      	orrs	r3, r2
 801baa6:	431f      	orrs	r7, r3
 801baa8:	f8a8 7000 	strh.w	r7, [r8]
 801baac:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801baae:	f108 0802 	add.w	r8, r8, #2
 801bab2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bab6:	441c      	add	r4, r3
 801bab8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801baba:	441e      	add	r6, r3
 801babc:	e643      	b.n	801b746 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801babe:	2800      	cmp	r0, #0
 801bac0:	f43f af0a 	beq.w	801b8d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bac4:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801bac8:	9109      	str	r1, [sp, #36]	; 0x24
 801baca:	0e09      	lsrs	r1, r1, #24
 801bacc:	9111      	str	r1, [sp, #68]	; 0x44
 801bace:	e703      	b.n	801b8d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801bad0:	f8b8 1000 	ldrh.w	r1, [r8]
 801bad4:	43d2      	mvns	r2, r2
 801bad6:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801bada:	fa5f fe82 	uxtb.w	lr, r2
 801bade:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801bae2:	10c8      	asrs	r0, r1, #3
 801bae4:	00ca      	lsls	r2, r1, #3
 801bae6:	fb0c fc0e 	mul.w	ip, ip, lr
 801baea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801baee:	b2d2      	uxtb	r2, r2
 801baf0:	f10c 0101 	add.w	r1, ip, #1
 801baf4:	fb00 f00e 	mul.w	r0, r0, lr
 801baf8:	fb02 f20e 	mul.w	r2, r2, lr
 801bafc:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801bb00:	0c39      	lsrs	r1, r7, #16
 801bb02:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801bb06:	490f      	ldr	r1, [pc, #60]	; (801bb44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801bb08:	fa5f fc8c 	uxtb.w	ip, ip
 801bb0c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801bb10:	1c41      	adds	r1, r0, #1
 801bb12:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801bb16:	1c51      	adds	r1, r2, #1
 801bb18:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bb1c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bb20:	00c0      	lsls	r0, r0, #3
 801bb22:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801bb26:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bb2a:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801bb2e:	ea4c 0c00 	orr.w	ip, ip, r0
 801bb32:	ea47 0c0c 	orr.w	ip, r7, ip
 801bb36:	f8a8 c000 	strh.w	ip, [r8]
 801bb3a:	e7b7      	b.n	801baac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801bb3c:	b01b      	add	sp, #108	; 0x6c
 801bb3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb42:	bf00      	nop
 801bb44:	fffff800 	.word	0xfffff800

0801bb48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801bb48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bb4c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801bb50:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801bb54:	2d00      	cmp	r5, #0
 801bb56:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801bb5a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801bb5e:	fb05 0e03 	mla	lr, r5, r3, r0
 801bb62:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801bb66:	f2c0 808c 	blt.w	801bc82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801bb6a:	45a9      	cmp	r9, r5
 801bb6c:	f340 8089 	ble.w	801bc82 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801bb70:	2800      	cmp	r0, #0
 801bb72:	f2c0 8084 	blt.w	801bc7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801bb76:	4580      	cmp	r8, r0
 801bb78:	f340 8081 	ble.w	801bc7e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801bb7c:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801bb80:	f01e 0f01 	tst.w	lr, #1
 801bb84:	5d16      	ldrb	r6, [r2, r4]
 801bb86:	bf0c      	ite	eq
 801bb88:	f006 060f 	andeq.w	r6, r6, #15
 801bb8c:	1136      	asrne	r6, r6, #4
 801bb8e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801bb92:	b2f6      	uxtb	r6, r6
 801bb94:	1c44      	adds	r4, r0, #1
 801bb96:	d477      	bmi.n	801bc88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801bb98:	45a0      	cmp	r8, r4
 801bb9a:	dd75      	ble.n	801bc88 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801bb9c:	2f00      	cmp	r7, #0
 801bb9e:	d075      	beq.n	801bc8c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801bba0:	f10e 0a01 	add.w	sl, lr, #1
 801bba4:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801bba8:	f01a 0f01 	tst.w	sl, #1
 801bbac:	5d14      	ldrb	r4, [r2, r4]
 801bbae:	bf0c      	ite	eq
 801bbb0:	f004 040f 	andeq.w	r4, r4, #15
 801bbb4:	1124      	asrne	r4, r4, #4
 801bbb6:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801bbba:	b2e4      	uxtb	r4, r4
 801bbbc:	3501      	adds	r5, #1
 801bbbe:	d469      	bmi.n	801bc94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801bbc0:	45a9      	cmp	r9, r5
 801bbc2:	dd67      	ble.n	801bc94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801bbc4:	f1bc 0f00 	cmp.w	ip, #0
 801bbc8:	d067      	beq.n	801bc9a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801bbca:	2800      	cmp	r0, #0
 801bbcc:	db60      	blt.n	801bc90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801bbce:	4580      	cmp	r8, r0
 801bbd0:	dd5e      	ble.n	801bc90 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801bbd2:	eb03 090e 	add.w	r9, r3, lr
 801bbd6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801bbda:	f019 0f01 	tst.w	r9, #1
 801bbde:	5d55      	ldrb	r5, [r2, r5]
 801bbe0:	bf0c      	ite	eq
 801bbe2:	f005 050f 	andeq.w	r5, r5, #15
 801bbe6:	112d      	asrne	r5, r5, #4
 801bbe8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801bbec:	b2ed      	uxtb	r5, r5
 801bbee:	3001      	adds	r0, #1
 801bbf0:	d456      	bmi.n	801bca0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801bbf2:	4580      	cmp	r8, r0
 801bbf4:	dd54      	ble.n	801bca0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801bbf6:	2f00      	cmp	r7, #0
 801bbf8:	d054      	beq.n	801bca4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801bbfa:	3301      	adds	r3, #1
 801bbfc:	449e      	add	lr, r3
 801bbfe:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801bc02:	f01e 0f01 	tst.w	lr, #1
 801bc06:	5cd0      	ldrb	r0, [r2, r3]
 801bc08:	bf0c      	ite	eq
 801bc0a:	f000 000f 	andeq.w	r0, r0, #15
 801bc0e:	1100      	asrne	r0, r0, #4
 801bc10:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801bc14:	b2c3      	uxtb	r3, r0
 801bc16:	b2ba      	uxth	r2, r7
 801bc18:	fa1f fc8c 	uxth.w	ip, ip
 801bc1c:	fb02 f00c 	mul.w	r0, r2, ip
 801bc20:	0112      	lsls	r2, r2, #4
 801bc22:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801bc26:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801bc2a:	1a12      	subs	r2, r2, r0
 801bc2c:	fa1f fc8c 	uxth.w	ip, ip
 801bc30:	b292      	uxth	r2, r2
 801bc32:	eba7 070c 	sub.w	r7, r7, ip
 801bc36:	4362      	muls	r2, r4
 801bc38:	b2bf      	uxth	r7, r7
 801bc3a:	fb06 2207 	mla	r2, r6, r7, r2
 801bc3e:	fb0c 2505 	mla	r5, ip, r5, r2
 801bc42:	fb00 5303 	mla	r3, r0, r3, r5
 801bc46:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bc4a:	b1b3      	cbz	r3, 801bc7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801bc4c:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801bc50:	435a      	muls	r2, r3
 801bc52:	1c53      	adds	r3, r2, #1
 801bc54:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bc58:	4a2d      	ldr	r2, [pc, #180]	; (801bd10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801bc5a:	121b      	asrs	r3, r3, #8
 801bc5c:	6812      	ldr	r2, [r2, #0]
 801bc5e:	2bff      	cmp	r3, #255	; 0xff
 801bc60:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bc64:	d120      	bne.n	801bca8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801bc66:	0950      	lsrs	r0, r2, #5
 801bc68:	4b2a      	ldr	r3, [pc, #168]	; (801bd14 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801bc6a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bc6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bc72:	4033      	ands	r3, r6
 801bc74:	4318      	orrs	r0, r3
 801bc76:	4302      	orrs	r2, r0
 801bc78:	800a      	strh	r2, [r1, #0]
 801bc7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bc7e:	2600      	movs	r6, #0
 801bc80:	e788      	b.n	801bb94 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801bc82:	2400      	movs	r4, #0
 801bc84:	4626      	mov	r6, r4
 801bc86:	e799      	b.n	801bbbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801bc88:	2400      	movs	r4, #0
 801bc8a:	e797      	b.n	801bbbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801bc8c:	463c      	mov	r4, r7
 801bc8e:	e795      	b.n	801bbbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801bc90:	2500      	movs	r5, #0
 801bc92:	e7ac      	b.n	801bbee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801bc94:	2300      	movs	r3, #0
 801bc96:	461d      	mov	r5, r3
 801bc98:	e7bd      	b.n	801bc16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801bc9a:	4663      	mov	r3, ip
 801bc9c:	4665      	mov	r5, ip
 801bc9e:	e7ba      	b.n	801bc16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801bca0:	2300      	movs	r3, #0
 801bca2:	e7b8      	b.n	801bc16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801bca4:	463b      	mov	r3, r7
 801bca6:	e7b6      	b.n	801bc16 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801bca8:	880d      	ldrh	r5, [r1, #0]
 801bcaa:	b29f      	uxth	r7, r3
 801bcac:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801bcb0:	43db      	mvns	r3, r3
 801bcb2:	122c      	asrs	r4, r5, #8
 801bcb4:	fb10 f007 	smulbb	r0, r0, r7
 801bcb8:	b2db      	uxtb	r3, r3
 801bcba:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801bcbe:	b2f6      	uxtb	r6, r6
 801bcc0:	b2d2      	uxtb	r2, r2
 801bcc2:	fb04 0403 	mla	r4, r4, r3, r0
 801bcc6:	10e8      	asrs	r0, r5, #3
 801bcc8:	fb12 f207 	smulbb	r2, r2, r7
 801bccc:	00ed      	lsls	r5, r5, #3
 801bcce:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bcd2:	b2a4      	uxth	r4, r4
 801bcd4:	fb16 f607 	smulbb	r6, r6, r7
 801bcd8:	b2ed      	uxtb	r5, r5
 801bcda:	fb00 6603 	mla	r6, r0, r3, r6
 801bcde:	fb05 2303 	mla	r3, r5, r3, r2
 801bce2:	b2b0      	uxth	r0, r6
 801bce4:	b29a      	uxth	r2, r3
 801bce6:	1c63      	adds	r3, r4, #1
 801bce8:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801bcec:	1c53      	adds	r3, r2, #1
 801bcee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bcf2:	1c42      	adds	r2, r0, #1
 801bcf4:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801bcf8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bcfc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801bd00:	0940      	lsrs	r0, r0, #5
 801bd02:	4323      	orrs	r3, r4
 801bd04:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bd08:	4303      	orrs	r3, r0
 801bd0a:	800b      	strh	r3, [r1, #0]
 801bd0c:	e7b5      	b.n	801bc7a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801bd0e:	bf00      	nop
 801bd10:	2400b068 	.word	0x2400b068
 801bd14:	00fff800 	.word	0x00fff800

0801bd18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bd18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd1c:	b097      	sub	sp, #92	; 0x5c
 801bd1e:	9214      	str	r2, [sp, #80]	; 0x50
 801bd20:	9309      	str	r3, [sp, #36]	; 0x24
 801bd22:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bd24:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801bd28:	9015      	str	r0, [sp, #84]	; 0x54
 801bd2a:	910d      	str	r1, [sp, #52]	; 0x34
 801bd2c:	6850      	ldr	r0, [r2, #4]
 801bd2e:	930f      	str	r3, [sp, #60]	; 0x3c
 801bd30:	6812      	ldr	r2, [r2, #0]
 801bd32:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801bd36:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801bd3a:	fb00 1303 	mla	r3, r0, r3, r1
 801bd3e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801bd42:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd44:	689b      	ldr	r3, [r3, #8]
 801bd46:	3301      	adds	r3, #1
 801bd48:	f023 0301 	bic.w	r3, r3, #1
 801bd4c:	930a      	str	r3, [sp, #40]	; 0x28
 801bd4e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd50:	681f      	ldr	r7, [r3, #0]
 801bd52:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bd54:	2b00      	cmp	r3, #0
 801bd56:	dc03      	bgt.n	801bd60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801bd58:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801bd5a:	2b00      	cmp	r3, #0
 801bd5c:	f340 8289 	ble.w	801c272 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801bd60:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bd66:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bd6a:	1e48      	subs	r0, r1, #1
 801bd6c:	f102 3cff 	add.w	ip, r2, #4294967295
 801bd70:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd72:	2b00      	cmp	r3, #0
 801bd74:	f340 80c5 	ble.w	801bf02 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801bd78:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801bd7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801bd80:	d406      	bmi.n	801bd90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bd82:	4586      	cmp	lr, r0
 801bd84:	da04      	bge.n	801bd90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bd86:	2b00      	cmp	r3, #0
 801bd88:	db02      	blt.n	801bd90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801bd8a:	4563      	cmp	r3, ip
 801bd8c:	f2c0 80ba 	blt.w	801bf04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801bd90:	f11e 0e01 	adds.w	lr, lr, #1
 801bd94:	f100 80ab 	bmi.w	801beee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801bd98:	4571      	cmp	r1, lr
 801bd9a:	f2c0 80a8 	blt.w	801beee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801bd9e:	3301      	adds	r3, #1
 801bda0:	f100 80a5 	bmi.w	801beee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801bda4:	429a      	cmp	r2, r3
 801bda6:	f2c0 80a2 	blt.w	801beee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801bdaa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bdac:	46c8      	mov	r8, r9
 801bdae:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801bdb2:	930e      	str	r3, [sp, #56]	; 0x38
 801bdb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bdb6:	2b00      	cmp	r3, #0
 801bdb8:	f340 80c4 	ble.w	801bf44 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801bdbc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bdbe:	1430      	asrs	r0, r6, #16
 801bdc0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801bdc4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801bdc8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801bdcc:	1423      	asrs	r3, r4, #16
 801bdce:	f100 814f 	bmi.w	801c070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bdd2:	f10c 3bff 	add.w	fp, ip, #4294967295
 801bdd6:	455b      	cmp	r3, fp
 801bdd8:	f280 814a 	bge.w	801c070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bddc:	2800      	cmp	r0, #0
 801bdde:	f2c0 8147 	blt.w	801c070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bde2:	f10e 3bff 	add.w	fp, lr, #4294967295
 801bde6:	4558      	cmp	r0, fp
 801bde8:	f280 8142 	bge.w	801c070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801bdec:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801bdee:	fb00 3305 	mla	r3, r0, r5, r3
 801bdf2:	0858      	lsrs	r0, r3, #1
 801bdf4:	07dd      	lsls	r5, r3, #31
 801bdf6:	f817 c000 	ldrb.w	ip, [r7, r0]
 801bdfa:	bf54      	ite	pl
 801bdfc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801be00:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801be04:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801be08:	fa5f fc8c 	uxtb.w	ip, ip
 801be0c:	2a00      	cmp	r2, #0
 801be0e:	f000 80dd 	beq.w	801bfcc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801be12:	1c58      	adds	r0, r3, #1
 801be14:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801be18:	07c0      	lsls	r0, r0, #31
 801be1a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801be1e:	bf54      	ite	pl
 801be20:	f00e 0e0f 	andpl.w	lr, lr, #15
 801be24:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801be28:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801be2c:	fa5f f08e 	uxtb.w	r0, lr
 801be30:	9010      	str	r0, [sp, #64]	; 0x40
 801be32:	b1d9      	cbz	r1, 801be6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801be34:	4453      	add	r3, sl
 801be36:	0858      	lsrs	r0, r3, #1
 801be38:	07dd      	lsls	r5, r3, #31
 801be3a:	f103 0301 	add.w	r3, r3, #1
 801be3e:	5c38      	ldrb	r0, [r7, r0]
 801be40:	bf54      	ite	pl
 801be42:	f000 000f 	andpl.w	r0, r0, #15
 801be46:	1100      	asrmi	r0, r0, #4
 801be48:	07dd      	lsls	r5, r3, #31
 801be4a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801be4e:	b2c0      	uxtb	r0, r0
 801be50:	900b      	str	r0, [sp, #44]	; 0x2c
 801be52:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801be56:	f817 e000 	ldrb.w	lr, [r7, r0]
 801be5a:	bf54      	ite	pl
 801be5c:	f00e 030f 	andpl.w	r3, lr, #15
 801be60:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801be64:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801be68:	b2db      	uxtb	r3, r3
 801be6a:	9311      	str	r3, [sp, #68]	; 0x44
 801be6c:	b292      	uxth	r2, r2
 801be6e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801be70:	b289      	uxth	r1, r1
 801be72:	fb02 f301 	mul.w	r3, r2, r1
 801be76:	0112      	lsls	r2, r2, #4
 801be78:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801be7c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801be80:	1ad2      	subs	r2, r2, r3
 801be82:	b289      	uxth	r1, r1
 801be84:	b292      	uxth	r2, r2
 801be86:	1a40      	subs	r0, r0, r1
 801be88:	436a      	muls	r2, r5
 801be8a:	b280      	uxth	r0, r0
 801be8c:	fb0c 2c00 	mla	ip, ip, r0, r2
 801be90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801be92:	fb01 c102 	mla	r1, r1, r2, ip
 801be96:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801be98:	fb03 1302 	mla	r3, r3, r2, r1
 801be9c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801bea0:	b1db      	cbz	r3, 801beda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801bea2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bea4:	4353      	muls	r3, r2
 801bea6:	1c5a      	adds	r2, r3, #1
 801bea8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801beac:	4ac6      	ldr	r2, [pc, #792]	; (801c1c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801beae:	121b      	asrs	r3, r3, #8
 801beb0:	6812      	ldr	r2, [r2, #0]
 801beb2:	2bff      	cmp	r3, #255	; 0xff
 801beb4:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801beb8:	f040 8099 	bne.w	801bfee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801bebc:	0953      	lsrs	r3, r2, #5
 801bebe:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801bec2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bec6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801beca:	f02c 0c07 	bic.w	ip, ip, #7
 801bece:	ea43 0c0c 	orr.w	ip, r3, ip
 801bed2:	ea4c 0202 	orr.w	r2, ip, r2
 801bed6:	f8a8 2000 	strh.w	r2, [r8]
 801beda:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801bedc:	f108 0802 	add.w	r8, r8, #2
 801bee0:	441c      	add	r4, r3
 801bee2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bee4:	441e      	add	r6, r3
 801bee6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801bee8:	3b01      	subs	r3, #1
 801beea:	930e      	str	r3, [sp, #56]	; 0x38
 801beec:	e762      	b.n	801bdb4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801beee:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801bef0:	f109 0902 	add.w	r9, r9, #2
 801bef4:	441c      	add	r4, r3
 801bef6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bef8:	441e      	add	r6, r3
 801befa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801befc:	3b01      	subs	r3, #1
 801befe:	9309      	str	r3, [sp, #36]	; 0x24
 801bf00:	e736      	b.n	801bd70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801bf02:	d024      	beq.n	801bf4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801bf04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf06:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801bf08:	3b01      	subs	r3, #1
 801bf0a:	fb00 4003 	mla	r0, r0, r3, r4
 801bf0e:	1400      	asrs	r0, r0, #16
 801bf10:	f53f af4b 	bmi.w	801bdaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bf14:	3901      	subs	r1, #1
 801bf16:	4288      	cmp	r0, r1
 801bf18:	f6bf af47 	bge.w	801bdaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bf1c:	9924      	ldr	r1, [sp, #144]	; 0x90
 801bf1e:	fb01 6303 	mla	r3, r1, r3, r6
 801bf22:	141b      	asrs	r3, r3, #16
 801bf24:	f53f af41 	bmi.w	801bdaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bf28:	3a01      	subs	r2, #1
 801bf2a:	4293      	cmp	r3, r2
 801bf2c:	f6bf af3d 	bge.w	801bdaa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801bf30:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801bf34:	46c8      	mov	r8, r9
 801bf36:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801bf3a:	930e      	str	r3, [sp, #56]	; 0x38
 801bf3c:	f1bb 0f00 	cmp.w	fp, #0
 801bf40:	f300 80b7 	bgt.w	801c0b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801bf44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bf46:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801bf4a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801bf4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bf50:	2b00      	cmp	r3, #0
 801bf52:	f340 818e 	ble.w	801c272 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801bf56:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bf5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bf5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bf60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bf64:	eef0 6a62 	vmov.f32	s13, s5
 801bf68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bf6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bf70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf74:	ee16 4a90 	vmov	r4, s13
 801bf78:	eef0 6a43 	vmov.f32	s13, s6
 801bf7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bf80:	ee16 6a90 	vmov	r6, s13
 801bf84:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bf88:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bf8c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bf90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bf94:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bf98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bf9c:	ee12 2a90 	vmov	r2, s5
 801bfa0:	eef0 2a47 	vmov.f32	s5, s14
 801bfa4:	fb92 f3f3 	sdiv	r3, r2, r3
 801bfa8:	ee13 2a10 	vmov	r2, s6
 801bfac:	9323      	str	r3, [sp, #140]	; 0x8c
 801bfae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bfb0:	eeb0 3a67 	vmov.f32	s6, s15
 801bfb4:	fb92 f3f3 	sdiv	r3, r2, r3
 801bfb8:	9324      	str	r3, [sp, #144]	; 0x90
 801bfba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bfbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bfbe:	3b01      	subs	r3, #1
 801bfc0:	930d      	str	r3, [sp, #52]	; 0x34
 801bfc2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801bfc4:	bf08      	it	eq
 801bfc6:	4613      	moveq	r3, r2
 801bfc8:	9309      	str	r3, [sp, #36]	; 0x24
 801bfca:	e6c2      	b.n	801bd52 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801bfcc:	2900      	cmp	r1, #0
 801bfce:	f43f af4d 	beq.w	801be6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801bfd2:	eb0a 0003 	add.w	r0, sl, r3
 801bfd6:	0843      	lsrs	r3, r0, #1
 801bfd8:	07c0      	lsls	r0, r0, #31
 801bfda:	5cfb      	ldrb	r3, [r7, r3]
 801bfdc:	bf54      	ite	pl
 801bfde:	f003 030f 	andpl.w	r3, r3, #15
 801bfe2:	111b      	asrmi	r3, r3, #4
 801bfe4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801bfe8:	b2db      	uxtb	r3, r3
 801bfea:	930b      	str	r3, [sp, #44]	; 0x2c
 801bfec:	e73e      	b.n	801be6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801bfee:	f8b8 e000 	ldrh.w	lr, [r8]
 801bff2:	fa1f fb83 	uxth.w	fp, r3
 801bff6:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bffa:	43db      	mvns	r3, r3
 801bffc:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c000:	fb11 f10b 	smulbb	r1, r1, fp
 801c004:	b2db      	uxtb	r3, r3
 801c006:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c00a:	fa5f fc8c 	uxtb.w	ip, ip
 801c00e:	b2d2      	uxtb	r2, r2
 801c010:	fb00 1003 	mla	r0, r0, r3, r1
 801c014:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c018:	fb1c fc0b 	smulbb	ip, ip, fp
 801c01c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c020:	b280      	uxth	r0, r0
 801c022:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c026:	fb12 fb0b 	smulbb	fp, r2, fp
 801c02a:	fa5f fe8e 	uxtb.w	lr, lr
 801c02e:	fb01 cc03 	mla	ip, r1, r3, ip
 801c032:	fb0e bb03 	mla	fp, lr, r3, fp
 801c036:	1c43      	adds	r3, r0, #1
 801c038:	fa1f fc8c 	uxth.w	ip, ip
 801c03c:	fa1f fb8b 	uxth.w	fp, fp
 801c040:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c044:	f10c 0101 	add.w	r1, ip, #1
 801c048:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801c04c:	f10b 0001 	add.w	r0, fp, #1
 801c050:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c054:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801c058:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c05c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801c060:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c064:	4318      	orrs	r0, r3
 801c066:	ea40 000c 	orr.w	r0, r0, ip
 801c06a:	f8a8 0000 	strh.w	r0, [r8]
 801c06e:	e734      	b.n	801beda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c070:	f113 0b01 	adds.w	fp, r3, #1
 801c074:	f53f af31 	bmi.w	801beda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c078:	45dc      	cmp	ip, fp
 801c07a:	f6ff af2e 	blt.w	801beda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c07e:	f110 0b01 	adds.w	fp, r0, #1
 801c082:	f53f af2a 	bmi.w	801beda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c086:	45de      	cmp	lr, fp
 801c088:	f6ff af27 	blt.w	801beda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c08c:	9302      	str	r3, [sp, #8]
 801c08e:	fa0f f38e 	sxth.w	r3, lr
 801c092:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c094:	9301      	str	r3, [sp, #4]
 801c096:	fa0f f38c 	sxth.w	r3, ip
 801c09a:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c09e:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801c0a2:	9300      	str	r3, [sp, #0]
 801c0a4:	463a      	mov	r2, r7
 801c0a6:	4653      	mov	r3, sl
 801c0a8:	4641      	mov	r1, r8
 801c0aa:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c0ac:	f7ff fd4c 	bl	801bb48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801c0b0:	e713      	b.n	801beda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801c0b2:	1422      	asrs	r2, r4, #16
 801c0b4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c0b6:	1433      	asrs	r3, r6, #16
 801c0b8:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801c0bc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801c0c0:	fb05 2303 	mla	r3, r5, r3, r2
 801c0c4:	085a      	lsrs	r2, r3, #1
 801c0c6:	07dd      	lsls	r5, r3, #31
 801c0c8:	5cba      	ldrb	r2, [r7, r2]
 801c0ca:	bf54      	ite	pl
 801c0cc:	f002 020f 	andpl.w	r2, r2, #15
 801c0d0:	1112      	asrmi	r2, r2, #4
 801c0d2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c0d6:	b2d2      	uxtb	r2, r2
 801c0d8:	2900      	cmp	r1, #0
 801c0da:	d077      	beq.n	801c1cc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c0dc:	f103 0e01 	add.w	lr, r3, #1
 801c0e0:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801c0e4:	f01e 0f01 	tst.w	lr, #1
 801c0e8:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c0ec:	bf0c      	ite	eq
 801c0ee:	f00c 0c0f 	andeq.w	ip, ip, #15
 801c0f2:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801c0f6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c0fa:	fa5f f58c 	uxtb.w	r5, ip
 801c0fe:	9512      	str	r5, [sp, #72]	; 0x48
 801c100:	b308      	cbz	r0, 801c146 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801c102:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c104:	442b      	add	r3, r5
 801c106:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c10a:	07dd      	lsls	r5, r3, #31
 801c10c:	f103 0301 	add.w	r3, r3, #1
 801c110:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c114:	bf54      	ite	pl
 801c116:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c11a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c11e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c122:	fa5f f58c 	uxtb.w	r5, ip
 801c126:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c12a:	950c      	str	r5, [sp, #48]	; 0x30
 801c12c:	07dd      	lsls	r5, r3, #31
 801c12e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c132:	bf54      	ite	pl
 801c134:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c138:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c13c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c140:	fa5f f38c 	uxtb.w	r3, ip
 801c144:	9313      	str	r3, [sp, #76]	; 0x4c
 801c146:	b289      	uxth	r1, r1
 801c148:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801c14a:	b280      	uxth	r0, r0
 801c14c:	fb01 f300 	mul.w	r3, r1, r0
 801c150:	0109      	lsls	r1, r1, #4
 801c152:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801c156:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801c15a:	1ac9      	subs	r1, r1, r3
 801c15c:	b280      	uxth	r0, r0
 801c15e:	b289      	uxth	r1, r1
 801c160:	ebac 0c00 	sub.w	ip, ip, r0
 801c164:	4369      	muls	r1, r5
 801c166:	fa1f fc8c 	uxth.w	ip, ip
 801c16a:	fb02 120c 	mla	r2, r2, ip, r1
 801c16e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c170:	fb00 2001 	mla	r0, r0, r1, r2
 801c174:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c176:	fb03 0302 	mla	r3, r3, r2, r0
 801c17a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c17e:	b1d3      	cbz	r3, 801c1b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801c180:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c182:	4353      	muls	r3, r2
 801c184:	1c5a      	adds	r2, r3, #1
 801c186:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801c18a:	4a0f      	ldr	r2, [pc, #60]	; (801c1c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801c18c:	121b      	asrs	r3, r3, #8
 801c18e:	6812      	ldr	r2, [r2, #0]
 801c190:	2bff      	cmp	r3, #255	; 0xff
 801c192:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801c196:	d12d      	bne.n	801c1f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801c198:	0953      	lsrs	r3, r2, #5
 801c19a:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801c19e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c1a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c1a6:	f02c 0c07 	bic.w	ip, ip, #7
 801c1aa:	ea43 0c0c 	orr.w	ip, r3, ip
 801c1ae:	ea4c 0202 	orr.w	r2, ip, r2
 801c1b2:	f8a8 2000 	strh.w	r2, [r8]
 801c1b6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801c1b8:	f108 0802 	add.w	r8, r8, #2
 801c1bc:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c1c0:	441c      	add	r4, r3
 801c1c2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c1c4:	441e      	add	r6, r3
 801c1c6:	e6b9      	b.n	801bf3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801c1c8:	2400b068 	.word	0x2400b068
 801c1cc:	2800      	cmp	r0, #0
 801c1ce:	d0ba      	beq.n	801c146 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801c1d0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801c1d2:	442b      	add	r3, r5
 801c1d4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801c1d8:	07db      	lsls	r3, r3, #31
 801c1da:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801c1de:	bf54      	ite	pl
 801c1e0:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c1e4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c1e8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c1ec:	fa5f f38c 	uxtb.w	r3, ip
 801c1f0:	930c      	str	r3, [sp, #48]	; 0x30
 801c1f2:	e7a8      	b.n	801c146 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801c1f4:	f8b8 e000 	ldrh.w	lr, [r8]
 801c1f8:	fa1f fa83 	uxth.w	sl, r3
 801c1fc:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801c200:	43db      	mvns	r3, r3
 801c202:	ea4f 202e 	mov.w	r0, lr, asr #8
 801c206:	fb11 f10a 	smulbb	r1, r1, sl
 801c20a:	b2db      	uxtb	r3, r3
 801c20c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c210:	b2d2      	uxtb	r2, r2
 801c212:	fa5f fc8c 	uxtb.w	ip, ip
 801c216:	fb00 1003 	mla	r0, r0, r3, r1
 801c21a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801c21e:	fb12 f20a 	smulbb	r2, r2, sl
 801c222:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801c226:	b280      	uxth	r0, r0
 801c228:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c22c:	fb1c fc0a 	smulbb	ip, ip, sl
 801c230:	fa5f fe8e 	uxtb.w	lr, lr
 801c234:	fb0e 2203 	mla	r2, lr, r3, r2
 801c238:	fb01 cc03 	mla	ip, r1, r3, ip
 801c23c:	1c43      	adds	r3, r0, #1
 801c23e:	b292      	uxth	r2, r2
 801c240:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c244:	1c51      	adds	r1, r2, #1
 801c246:	fa1f fc8c 	uxth.w	ip, ip
 801c24a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801c24e:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801c252:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c256:	4308      	orrs	r0, r1
 801c258:	f10c 0101 	add.w	r1, ip, #1
 801c25c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801c260:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801c264:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c268:	ea40 000c 	orr.w	r0, r0, ip
 801c26c:	f8a8 0000 	strh.w	r0, [r8]
 801c270:	e7a1      	b.n	801c1b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801c272:	b017      	add	sp, #92	; 0x5c
 801c274:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801c278:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c27c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801c280:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801c284:	2d00      	cmp	r5, #0
 801c286:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801c28a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801c28e:	fb05 0e03 	mla	lr, r5, r3, r0
 801c292:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801c296:	f2c0 80b0 	blt.w	801c3fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801c29a:	45a9      	cmp	r9, r5
 801c29c:	f340 80ad 	ble.w	801c3fa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801c2a0:	2800      	cmp	r0, #0
 801c2a2:	f2c0 80a8 	blt.w	801c3f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801c2a6:	4580      	cmp	r8, r0
 801c2a8:	f340 80a5 	ble.w	801c3f6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801c2ac:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801c2b0:	f01e 0f01 	tst.w	lr, #1
 801c2b4:	5d16      	ldrb	r6, [r2, r4]
 801c2b6:	bf0c      	ite	eq
 801c2b8:	f006 060f 	andeq.w	r6, r6, #15
 801c2bc:	1136      	asrne	r6, r6, #4
 801c2be:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801c2c2:	b2f6      	uxtb	r6, r6
 801c2c4:	1c44      	adds	r4, r0, #1
 801c2c6:	f100 809b 	bmi.w	801c400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801c2ca:	45a0      	cmp	r8, r4
 801c2cc:	f340 8098 	ble.w	801c400 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801c2d0:	2f00      	cmp	r7, #0
 801c2d2:	f000 8097 	beq.w	801c404 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801c2d6:	f10e 0a01 	add.w	sl, lr, #1
 801c2da:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801c2de:	f01a 0f01 	tst.w	sl, #1
 801c2e2:	5d14      	ldrb	r4, [r2, r4]
 801c2e4:	bf0c      	ite	eq
 801c2e6:	f004 040f 	andeq.w	r4, r4, #15
 801c2ea:	1124      	asrne	r4, r4, #4
 801c2ec:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801c2f0:	b2e4      	uxtb	r4, r4
 801c2f2:	3501      	adds	r5, #1
 801c2f4:	f100 808a 	bmi.w	801c40c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801c2f8:	45a9      	cmp	r9, r5
 801c2fa:	f340 8087 	ble.w	801c40c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801c2fe:	f1bc 0f00 	cmp.w	ip, #0
 801c302:	f000 8086 	beq.w	801c412 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801c306:	2800      	cmp	r0, #0
 801c308:	db7e      	blt.n	801c408 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801c30a:	4580      	cmp	r8, r0
 801c30c:	dd7c      	ble.n	801c408 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801c30e:	eb03 090e 	add.w	r9, r3, lr
 801c312:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801c316:	f019 0f01 	tst.w	r9, #1
 801c31a:	5d55      	ldrb	r5, [r2, r5]
 801c31c:	bf0c      	ite	eq
 801c31e:	f005 050f 	andeq.w	r5, r5, #15
 801c322:	112d      	asrne	r5, r5, #4
 801c324:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801c328:	b2ed      	uxtb	r5, r5
 801c32a:	3001      	adds	r0, #1
 801c32c:	d474      	bmi.n	801c418 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c32e:	4580      	cmp	r8, r0
 801c330:	dd72      	ble.n	801c418 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801c332:	2f00      	cmp	r7, #0
 801c334:	d072      	beq.n	801c41c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801c336:	3301      	adds	r3, #1
 801c338:	449e      	add	lr, r3
 801c33a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801c33e:	f01e 0f01 	tst.w	lr, #1
 801c342:	5cd0      	ldrb	r0, [r2, r3]
 801c344:	bf0c      	ite	eq
 801c346:	f000 000f 	andeq.w	r0, r0, #15
 801c34a:	1100      	asrne	r0, r0, #4
 801c34c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c350:	b2c3      	uxtb	r3, r0
 801c352:	b2ba      	uxth	r2, r7
 801c354:	fa1f fc8c 	uxth.w	ip, ip
 801c358:	fb02 f00c 	mul.w	r0, r2, ip
 801c35c:	0112      	lsls	r2, r2, #4
 801c35e:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801c362:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801c366:	1a12      	subs	r2, r2, r0
 801c368:	fa1f fc8c 	uxth.w	ip, ip
 801c36c:	b292      	uxth	r2, r2
 801c36e:	eba7 070c 	sub.w	r7, r7, ip
 801c372:	4362      	muls	r2, r4
 801c374:	b2bf      	uxth	r7, r7
 801c376:	fb06 2207 	mla	r2, r6, r7, r2
 801c37a:	fb0c 2505 	mla	r5, ip, r5, r2
 801c37e:	fb00 5303 	mla	r3, r0, r3, r5
 801c382:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c386:	b3a3      	cbz	r3, 801c3f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801c388:	4a25      	ldr	r2, [pc, #148]	; (801c420 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801c38a:	880e      	ldrh	r6, [r1, #0]
 801c38c:	6815      	ldr	r5, [r2, #0]
 801c38e:	b29a      	uxth	r2, r3
 801c390:	1234      	asrs	r4, r6, #8
 801c392:	43db      	mvns	r3, r3
 801c394:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801c398:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801c39c:	b2db      	uxtb	r3, r3
 801c39e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c3a2:	fb10 f002 	smulbb	r0, r0, r2
 801c3a6:	b2ed      	uxtb	r5, r5
 801c3a8:	fb17 f702 	smulbb	r7, r7, r2
 801c3ac:	fb04 0403 	mla	r4, r4, r3, r0
 801c3b0:	10f0      	asrs	r0, r6, #3
 801c3b2:	fb15 f202 	smulbb	r2, r5, r2
 801c3b6:	00f6      	lsls	r6, r6, #3
 801c3b8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c3bc:	b2a4      	uxth	r4, r4
 801c3be:	b2f6      	uxtb	r6, r6
 801c3c0:	fb00 7003 	mla	r0, r0, r3, r7
 801c3c4:	fb06 2303 	mla	r3, r6, r3, r2
 801c3c8:	b280      	uxth	r0, r0
 801c3ca:	b29a      	uxth	r2, r3
 801c3cc:	1c63      	adds	r3, r4, #1
 801c3ce:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801c3d2:	1c53      	adds	r3, r2, #1
 801c3d4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c3d8:	1c42      	adds	r2, r0, #1
 801c3da:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c3de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c3e2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c3e6:	0940      	lsrs	r0, r0, #5
 801c3e8:	4323      	orrs	r3, r4
 801c3ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c3ee:	4303      	orrs	r3, r0
 801c3f0:	800b      	strh	r3, [r1, #0]
 801c3f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c3f6:	2600      	movs	r6, #0
 801c3f8:	e764      	b.n	801c2c4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801c3fa:	2400      	movs	r4, #0
 801c3fc:	4626      	mov	r6, r4
 801c3fe:	e778      	b.n	801c2f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c400:	2400      	movs	r4, #0
 801c402:	e776      	b.n	801c2f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c404:	463c      	mov	r4, r7
 801c406:	e774      	b.n	801c2f2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801c408:	2500      	movs	r5, #0
 801c40a:	e78e      	b.n	801c32a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801c40c:	2300      	movs	r3, #0
 801c40e:	461d      	mov	r5, r3
 801c410:	e79f      	b.n	801c352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c412:	4663      	mov	r3, ip
 801c414:	4665      	mov	r5, ip
 801c416:	e79c      	b.n	801c352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c418:	2300      	movs	r3, #0
 801c41a:	e79a      	b.n	801c352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c41c:	463b      	mov	r3, r7
 801c41e:	e798      	b.n	801c352 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801c420:	2400b068 	.word	0x2400b068

0801c424 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c428:	b093      	sub	sp, #76	; 0x4c
 801c42a:	461d      	mov	r5, r3
 801c42c:	920c      	str	r2, [sp, #48]	; 0x30
 801c42e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801c430:	9011      	str	r0, [sp, #68]	; 0x44
 801c432:	9107      	str	r1, [sp, #28]
 801c434:	6850      	ldr	r0, [r2, #4]
 801c436:	6812      	ldr	r2, [r2, #0]
 801c438:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801c43c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801c440:	fb00 1303 	mla	r3, r0, r3, r1
 801c444:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801c448:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c44a:	689b      	ldr	r3, [r3, #8]
 801c44c:	3301      	adds	r3, #1
 801c44e:	f023 0301 	bic.w	r3, r3, #1
 801c452:	9306      	str	r3, [sp, #24]
 801c454:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c456:	681f      	ldr	r7, [r3, #0]
 801c458:	9b07      	ldr	r3, [sp, #28]
 801c45a:	2b00      	cmp	r3, #0
 801c45c:	dc03      	bgt.n	801c466 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801c45e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c460:	2b00      	cmp	r3, #0
 801c462:	f340 8267 	ble.w	801c934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801c466:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c468:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c46c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c470:	1e48      	subs	r0, r1, #1
 801c472:	f102 3cff 	add.w	ip, r2, #4294967295
 801c476:	2d00      	cmp	r5, #0
 801c478:	f340 80b7 	ble.w	801c5ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801c47c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801c480:	ea4f 4326 	mov.w	r3, r6, asr #16
 801c484:	d406      	bmi.n	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c486:	4586      	cmp	lr, r0
 801c488:	da04      	bge.n	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c48a:	2b00      	cmp	r3, #0
 801c48c:	db02      	blt.n	801c494 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801c48e:	4563      	cmp	r3, ip
 801c490:	f2c0 80ac 	blt.w	801c5ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801c494:	f11e 0e01 	adds.w	lr, lr, #1
 801c498:	f100 809f 	bmi.w	801c5da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801c49c:	4571      	cmp	r1, lr
 801c49e:	f2c0 809c 	blt.w	801c5da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801c4a2:	3301      	adds	r3, #1
 801c4a4:	f100 8099 	bmi.w	801c5da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801c4a8:	429a      	cmp	r2, r3
 801c4aa:	f2c0 8096 	blt.w	801c5da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801c4ae:	46c8      	mov	r8, r9
 801c4b0:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801c4b4:	9509      	str	r5, [sp, #36]	; 0x24
 801c4b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c4b8:	2b00      	cmp	r3, #0
 801c4ba:	f340 80b5 	ble.w	801c628 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801c4be:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801c4c2:	1430      	asrs	r0, r6, #16
 801c4c4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801c4c8:	9308      	str	r3, [sp, #32]
 801c4ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c4cc:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801c4d0:	1423      	asrs	r3, r4, #16
 801c4d2:	f100 813f 	bmi.w	801c754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c4d6:	f10c 3bff 	add.w	fp, ip, #4294967295
 801c4da:	455b      	cmp	r3, fp
 801c4dc:	f280 813a 	bge.w	801c754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c4e0:	2800      	cmp	r0, #0
 801c4e2:	f2c0 8137 	blt.w	801c754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c4e6:	f10e 3bff 	add.w	fp, lr, #4294967295
 801c4ea:	4558      	cmp	r0, fp
 801c4ec:	f280 8132 	bge.w	801c754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801c4f0:	9a06      	ldr	r2, [sp, #24]
 801c4f2:	fb00 3302 	mla	r3, r0, r2, r3
 801c4f6:	0858      	lsrs	r0, r3, #1
 801c4f8:	07da      	lsls	r2, r3, #31
 801c4fa:	9a08      	ldr	r2, [sp, #32]
 801c4fc:	f817 c000 	ldrb.w	ip, [r7, r0]
 801c500:	bf54      	ite	pl
 801c502:	f00c 0c0f 	andpl.w	ip, ip, #15
 801c506:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801c50a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801c50e:	fa5f fc8c 	uxtb.w	ip, ip
 801c512:	2a00      	cmp	r2, #0
 801c514:	f000 80cc 	beq.w	801c6b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801c518:	1c58      	adds	r0, r3, #1
 801c51a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801c51e:	07c0      	lsls	r0, r0, #31
 801c520:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c524:	bf54      	ite	pl
 801c526:	f00e 0e0f 	andpl.w	lr, lr, #15
 801c52a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801c52e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801c532:	fa5f fe8e 	uxtb.w	lr, lr
 801c536:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801c53a:	b1b9      	cbz	r1, 801c56c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801c53c:	4453      	add	r3, sl
 801c53e:	0858      	lsrs	r0, r3, #1
 801c540:	07da      	lsls	r2, r3, #31
 801c542:	5c38      	ldrb	r0, [r7, r0]
 801c544:	bf54      	ite	pl
 801c546:	f000 000f 	andpl.w	r0, r0, #15
 801c54a:	1100      	asrmi	r0, r0, #4
 801c54c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801c550:	b2c0      	uxtb	r0, r0
 801c552:	900a      	str	r0, [sp, #40]	; 0x28
 801c554:	1c58      	adds	r0, r3, #1
 801c556:	0843      	lsrs	r3, r0, #1
 801c558:	07c2      	lsls	r2, r0, #31
 801c55a:	5cfb      	ldrb	r3, [r7, r3]
 801c55c:	bf54      	ite	pl
 801c55e:	f003 030f 	andpl.w	r3, r3, #15
 801c562:	111b      	asrmi	r3, r3, #4
 801c564:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c568:	b2db      	uxtb	r3, r3
 801c56a:	930e      	str	r3, [sp, #56]	; 0x38
 801c56c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801c570:	b289      	uxth	r1, r1
 801c572:	fb02 f301 	mul.w	r3, r2, r1
 801c576:	0112      	lsls	r2, r2, #4
 801c578:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801c57c:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801c580:	1ad2      	subs	r2, r2, r3
 801c582:	b289      	uxth	r1, r1
 801c584:	b292      	uxth	r2, r2
 801c586:	1a40      	subs	r0, r0, r1
 801c588:	fa1f fe80 	uxth.w	lr, r0
 801c58c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801c58e:	4342      	muls	r2, r0
 801c590:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801c594:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c596:	fb01 c102 	mla	r1, r1, r2, ip
 801c59a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c59c:	fb03 1302 	mla	r3, r3, r2, r1
 801c5a0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c5a4:	2bff      	cmp	r3, #255	; 0xff
 801c5a6:	f040 8094 	bne.w	801c6d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801c5aa:	4bbf      	ldr	r3, [pc, #764]	; (801c8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801c5ac:	681a      	ldr	r2, [r3, #0]
 801c5ae:	4bbf      	ldr	r3, [pc, #764]	; (801c8ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801c5b0:	0951      	lsrs	r1, r2, #5
 801c5b2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c5b6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c5ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c5be:	430b      	orrs	r3, r1
 801c5c0:	4313      	orrs	r3, r2
 801c5c2:	f8a8 3000 	strh.w	r3, [r8]
 801c5c6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c5c8:	f108 0802 	add.w	r8, r8, #2
 801c5cc:	441c      	add	r4, r3
 801c5ce:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5d0:	441e      	add	r6, r3
 801c5d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c5d4:	3b01      	subs	r3, #1
 801c5d6:	9309      	str	r3, [sp, #36]	; 0x24
 801c5d8:	e76d      	b.n	801c4b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801c5da:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c5dc:	3d01      	subs	r5, #1
 801c5de:	f109 0902 	add.w	r9, r9, #2
 801c5e2:	441c      	add	r4, r3
 801c5e4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5e6:	441e      	add	r6, r3
 801c5e8:	e745      	b.n	801c476 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801c5ea:	d021      	beq.n	801c630 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801c5ec:	1e6b      	subs	r3, r5, #1
 801c5ee:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801c5f0:	fb00 4003 	mla	r0, r0, r3, r4
 801c5f4:	1400      	asrs	r0, r0, #16
 801c5f6:	f53f af5a 	bmi.w	801c4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c5fa:	3901      	subs	r1, #1
 801c5fc:	4288      	cmp	r0, r1
 801c5fe:	f6bf af56 	bge.w	801c4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c602:	9920      	ldr	r1, [sp, #128]	; 0x80
 801c604:	fb01 6303 	mla	r3, r1, r3, r6
 801c608:	141b      	asrs	r3, r3, #16
 801c60a:	f53f af50 	bmi.w	801c4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c60e:	3a01      	subs	r2, #1
 801c610:	4293      	cmp	r3, r2
 801c612:	f6bf af4c 	bge.w	801c4ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801c616:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801c61a:	46a8      	mov	r8, r5
 801c61c:	46ce      	mov	lr, r9
 801c61e:	9308      	str	r3, [sp, #32]
 801c620:	f1b8 0f00 	cmp.w	r8, #0
 801c624:	f300 80b6 	bgt.w	801c794 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c628:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801c62c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801c630:	9b07      	ldr	r3, [sp, #28]
 801c632:	2b00      	cmp	r3, #0
 801c634:	f340 817e 	ble.w	801c934 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801c638:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c63c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c63e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c642:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c646:	eef0 6a62 	vmov.f32	s13, s5
 801c64a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c64e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c652:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c656:	ee16 4a90 	vmov	r4, s13
 801c65a:	eef0 6a43 	vmov.f32	s13, s6
 801c65e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c662:	ee16 6a90 	vmov	r6, s13
 801c666:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c66a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c66e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c672:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c676:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c67a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c67e:	ee12 2a90 	vmov	r2, s5
 801c682:	eef0 2a47 	vmov.f32	s5, s14
 801c686:	fb92 f3f3 	sdiv	r3, r2, r3
 801c68a:	ee13 2a10 	vmov	r2, s6
 801c68e:	931f      	str	r3, [sp, #124]	; 0x7c
 801c690:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c692:	eeb0 3a67 	vmov.f32	s6, s15
 801c696:	fb92 f3f3 	sdiv	r3, r2, r3
 801c69a:	9320      	str	r3, [sp, #128]	; 0x80
 801c69c:	9b07      	ldr	r3, [sp, #28]
 801c69e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c6a0:	3b01      	subs	r3, #1
 801c6a2:	9307      	str	r3, [sp, #28]
 801c6a4:	bf08      	it	eq
 801c6a6:	4615      	moveq	r5, r2
 801c6a8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801c6aa:	bf18      	it	ne
 801c6ac:	461d      	movne	r5, r3
 801c6ae:	e6d3      	b.n	801c458 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801c6b0:	2900      	cmp	r1, #0
 801c6b2:	f43f af5b 	beq.w	801c56c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801c6b6:	eb0a 0003 	add.w	r0, sl, r3
 801c6ba:	0843      	lsrs	r3, r0, #1
 801c6bc:	07c0      	lsls	r0, r0, #31
 801c6be:	5cfb      	ldrb	r3, [r7, r3]
 801c6c0:	bf54      	ite	pl
 801c6c2:	f003 030f 	andpl.w	r3, r3, #15
 801c6c6:	111b      	asrmi	r3, r3, #4
 801c6c8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801c6cc:	b2db      	uxtb	r3, r3
 801c6ce:	930a      	str	r3, [sp, #40]	; 0x28
 801c6d0:	e74c      	b.n	801c56c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801c6d2:	2b00      	cmp	r3, #0
 801c6d4:	f43f af77 	beq.w	801c5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801c6d8:	4a73      	ldr	r2, [pc, #460]	; (801c8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801c6da:	fa1f fe83 	uxth.w	lr, r3
 801c6de:	f8b8 c000 	ldrh.w	ip, [r8]
 801c6e2:	43db      	mvns	r3, r3
 801c6e4:	6810      	ldr	r0, [r2, #0]
 801c6e6:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c6ea:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c6ee:	b2db      	uxtb	r3, r3
 801c6f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c6f4:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c6f8:	fb12 f20e 	smulbb	r2, r2, lr
 801c6fc:	b2c0      	uxtb	r0, r0
 801c6fe:	fb1b fb0e 	smulbb	fp, fp, lr
 801c702:	fb01 2103 	mla	r1, r1, r3, r2
 801c706:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c70a:	fb10 fe0e 	smulbb	lr, r0, lr
 801c70e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c712:	b289      	uxth	r1, r1
 801c714:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c718:	fa5f fc8c 	uxtb.w	ip, ip
 801c71c:	fb02 b203 	mla	r2, r2, r3, fp
 801c720:	1c48      	adds	r0, r1, #1
 801c722:	fb0c e303 	mla	r3, ip, r3, lr
 801c726:	b292      	uxth	r2, r2
 801c728:	b29b      	uxth	r3, r3
 801c72a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801c72e:	f102 0b01 	add.w	fp, r2, #1
 801c732:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801c736:	1c59      	adds	r1, r3, #1
 801c738:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c73c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801c740:	0952      	lsrs	r2, r2, #5
 801c742:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801c746:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c74a:	4301      	orrs	r1, r0
 801c74c:	4311      	orrs	r1, r2
 801c74e:	f8a8 1000 	strh.w	r1, [r8]
 801c752:	e738      	b.n	801c5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801c754:	f113 0b01 	adds.w	fp, r3, #1
 801c758:	f53f af35 	bmi.w	801c5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801c75c:	45dc      	cmp	ip, fp
 801c75e:	f6ff af32 	blt.w	801c5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801c762:	f110 0b01 	adds.w	fp, r0, #1
 801c766:	f53f af2e 	bmi.w	801c5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801c76a:	45de      	cmp	lr, fp
 801c76c:	f6ff af2b 	blt.w	801c5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801c770:	9302      	str	r3, [sp, #8]
 801c772:	fa0f f38e 	sxth.w	r3, lr
 801c776:	9a08      	ldr	r2, [sp, #32]
 801c778:	9301      	str	r3, [sp, #4]
 801c77a:	fa0f f38c 	sxth.w	r3, ip
 801c77e:	9105      	str	r1, [sp, #20]
 801c780:	4641      	mov	r1, r8
 801c782:	9300      	str	r3, [sp, #0]
 801c784:	4653      	mov	r3, sl
 801c786:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801c78a:	463a      	mov	r2, r7
 801c78c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c78e:	f7ff fd73 	bl	801c278 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801c792:	e718      	b.n	801c5c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801c794:	1422      	asrs	r2, r4, #16
 801c796:	9906      	ldr	r1, [sp, #24]
 801c798:	1433      	asrs	r3, r6, #16
 801c79a:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801c79e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801c7a2:	fb01 2303 	mla	r3, r1, r3, r2
 801c7a6:	085a      	lsrs	r2, r3, #1
 801c7a8:	07d9      	lsls	r1, r3, #31
 801c7aa:	5cba      	ldrb	r2, [r7, r2]
 801c7ac:	bf54      	ite	pl
 801c7ae:	f002 020f 	andpl.w	r2, r2, #15
 801c7b2:	1112      	asrmi	r2, r2, #4
 801c7b4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801c7b8:	b2d2      	uxtb	r2, r2
 801c7ba:	2800      	cmp	r0, #0
 801c7bc:	d063      	beq.n	801c886 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801c7be:	f103 0a01 	add.w	sl, r3, #1
 801c7c2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801c7c6:	f01a 0f01 	tst.w	sl, #1
 801c7ca:	5c79      	ldrb	r1, [r7, r1]
 801c7cc:	bf0c      	ite	eq
 801c7ce:	f001 010f 	andeq.w	r1, r1, #15
 801c7d2:	1109      	asrne	r1, r1, #4
 801c7d4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c7d8:	b2c9      	uxtb	r1, r1
 801c7da:	910f      	str	r1, [sp, #60]	; 0x3c
 801c7dc:	f1bc 0f00 	cmp.w	ip, #0
 801c7e0:	d01a      	beq.n	801c818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801c7e2:	9908      	ldr	r1, [sp, #32]
 801c7e4:	440b      	add	r3, r1
 801c7e6:	0859      	lsrs	r1, r3, #1
 801c7e8:	f013 0f01 	tst.w	r3, #1
 801c7ec:	f103 0301 	add.w	r3, r3, #1
 801c7f0:	5c79      	ldrb	r1, [r7, r1]
 801c7f2:	bf0c      	ite	eq
 801c7f4:	f001 010f 	andeq.w	r1, r1, #15
 801c7f8:	1109      	asrne	r1, r1, #4
 801c7fa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c7fe:	b2c9      	uxtb	r1, r1
 801c800:	910b      	str	r1, [sp, #44]	; 0x2c
 801c802:	0859      	lsrs	r1, r3, #1
 801c804:	07db      	lsls	r3, r3, #31
 801c806:	5c79      	ldrb	r1, [r7, r1]
 801c808:	bf54      	ite	pl
 801c80a:	f001 010f 	andpl.w	r1, r1, #15
 801c80e:	1109      	asrmi	r1, r1, #4
 801c810:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c814:	b2c9      	uxtb	r1, r1
 801c816:	9110      	str	r1, [sp, #64]	; 0x40
 801c818:	b280      	uxth	r0, r0
 801c81a:	fa1f fc8c 	uxth.w	ip, ip
 801c81e:	fb00 f30c 	mul.w	r3, r0, ip
 801c822:	0100      	lsls	r0, r0, #4
 801c824:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801c828:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801c82c:	1ac0      	subs	r0, r0, r3
 801c82e:	fa1f fc8c 	uxth.w	ip, ip
 801c832:	b280      	uxth	r0, r0
 801c834:	eba1 010c 	sub.w	r1, r1, ip
 801c838:	fa1f fa81 	uxth.w	sl, r1
 801c83c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801c83e:	4348      	muls	r0, r1
 801c840:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801c842:	fb02 020a 	mla	r2, r2, sl, r0
 801c846:	fb0c 2c01 	mla	ip, ip, r1, r2
 801c84a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c84c:	fb03 c302 	mla	r3, r3, r2, ip
 801c850:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c854:	2bff      	cmp	r3, #255	; 0xff
 801c856:	d12b      	bne.n	801c8b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801c858:	4b13      	ldr	r3, [pc, #76]	; (801c8a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801c85a:	681a      	ldr	r2, [r3, #0]
 801c85c:	4b13      	ldr	r3, [pc, #76]	; (801c8ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801c85e:	0951      	lsrs	r1, r2, #5
 801c860:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801c864:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801c868:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c86c:	430b      	orrs	r3, r1
 801c86e:	4313      	orrs	r3, r2
 801c870:	f8ae 3000 	strh.w	r3, [lr]
 801c874:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801c876:	f10e 0e02 	add.w	lr, lr, #2
 801c87a:	f108 38ff 	add.w	r8, r8, #4294967295
 801c87e:	441c      	add	r4, r3
 801c880:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c882:	441e      	add	r6, r3
 801c884:	e6cc      	b.n	801c620 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801c886:	f1bc 0f00 	cmp.w	ip, #0
 801c88a:	d0c5      	beq.n	801c818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801c88c:	9908      	ldr	r1, [sp, #32]
 801c88e:	440b      	add	r3, r1
 801c890:	0859      	lsrs	r1, r3, #1
 801c892:	07db      	lsls	r3, r3, #31
 801c894:	5c79      	ldrb	r1, [r7, r1]
 801c896:	bf54      	ite	pl
 801c898:	f001 010f 	andpl.w	r1, r1, #15
 801c89c:	1109      	asrmi	r1, r1, #4
 801c89e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801c8a2:	b2c9      	uxtb	r1, r1
 801c8a4:	910b      	str	r1, [sp, #44]	; 0x2c
 801c8a6:	e7b7      	b.n	801c818 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801c8a8:	2400b068 	.word	0x2400b068
 801c8ac:	fffff800 	.word	0xfffff800
 801c8b0:	2b00      	cmp	r3, #0
 801c8b2:	d0df      	beq.n	801c874 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801c8b4:	4a21      	ldr	r2, [pc, #132]	; (801c93c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801c8b6:	fa1f fa83 	uxth.w	sl, r3
 801c8ba:	f8be c000 	ldrh.w	ip, [lr]
 801c8be:	43db      	mvns	r3, r3
 801c8c0:	6810      	ldr	r0, [r2, #0]
 801c8c2:	ea4f 212c 	mov.w	r1, ip, asr #8
 801c8c6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801c8ca:	b2db      	uxtb	r3, r3
 801c8cc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801c8d0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801c8d4:	fb12 f20a 	smulbb	r2, r2, sl
 801c8d8:	b2c0      	uxtb	r0, r0
 801c8da:	fb1b fb0a 	smulbb	fp, fp, sl
 801c8de:	fb01 2103 	mla	r1, r1, r3, r2
 801c8e2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c8e6:	fb10 f00a 	smulbb	r0, r0, sl
 801c8ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c8ee:	b289      	uxth	r1, r1
 801c8f0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801c8f4:	fa5f fc8c 	uxtb.w	ip, ip
 801c8f8:	fb02 b203 	mla	r2, r2, r3, fp
 801c8fc:	fb0c 0003 	mla	r0, ip, r3, r0
 801c900:	1c4b      	adds	r3, r1, #1
 801c902:	b292      	uxth	r2, r2
 801c904:	b280      	uxth	r0, r0
 801c906:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801c90a:	f100 0b01 	add.w	fp, r0, #1
 801c90e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801c912:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801c916:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801c91a:	ea4b 0101 	orr.w	r1, fp, r1
 801c91e:	f102 0b01 	add.w	fp, r2, #1
 801c922:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801c926:	0952      	lsrs	r2, r2, #5
 801c928:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c92c:	4311      	orrs	r1, r2
 801c92e:	f8ae 1000 	strh.w	r1, [lr]
 801c932:	e79f      	b.n	801c874 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 801c934:	b013      	add	sp, #76	; 0x4c
 801c936:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c93a:	bf00      	nop
 801c93c:	2400b068 	.word	0x2400b068

0801c940 <CRC_Lock>:
 801c940:	4a20      	ldr	r2, [pc, #128]	; (801c9c4 <CRC_Lock+0x84>)
 801c942:	b530      	push	{r4, r5, lr}
 801c944:	6813      	ldr	r3, [r2, #0]
 801c946:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801c94a:	f24c 2540 	movw	r5, #49728	; 0xc240
 801c94e:	f023 0301 	bic.w	r3, r3, #1
 801c952:	6013      	str	r3, [r2, #0]
 801c954:	4b1c      	ldr	r3, [pc, #112]	; (801c9c8 <CRC_Lock+0x88>)
 801c956:	681a      	ldr	r2, [r3, #0]
 801c958:	4022      	ands	r2, r4
 801c95a:	42aa      	cmp	r2, r5
 801c95c:	d005      	beq.n	801c96a <CRC_Lock+0x2a>
 801c95e:	681b      	ldr	r3, [r3, #0]
 801c960:	f24c 2270 	movw	r2, #49776	; 0xc270
 801c964:	4023      	ands	r3, r4
 801c966:	4293      	cmp	r3, r2
 801c968:	d124      	bne.n	801c9b4 <CRC_Lock+0x74>
 801c96a:	4b18      	ldr	r3, [pc, #96]	; (801c9cc <CRC_Lock+0x8c>)
 801c96c:	681b      	ldr	r3, [r3, #0]
 801c96e:	bb0b      	cbnz	r3, 801c9b4 <CRC_Lock+0x74>
 801c970:	4b17      	ldr	r3, [pc, #92]	; (801c9d0 <CRC_Lock+0x90>)
 801c972:	681a      	ldr	r2, [r3, #0]
 801c974:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801c978:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801c97c:	d00d      	beq.n	801c99a <CRC_Lock+0x5a>
 801c97e:	681a      	ldr	r2, [r3, #0]
 801c980:	f240 4483 	movw	r4, #1155	; 0x483
 801c984:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801c988:	42a2      	cmp	r2, r4
 801c98a:	d006      	beq.n	801c99a <CRC_Lock+0x5a>
 801c98c:	681b      	ldr	r3, [r3, #0]
 801c98e:	f240 4285 	movw	r2, #1157	; 0x485
 801c992:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c996:	4293      	cmp	r3, r2
 801c998:	d10c      	bne.n	801c9b4 <CRC_Lock+0x74>
 801c99a:	4b0e      	ldr	r3, [pc, #56]	; (801c9d4 <CRC_Lock+0x94>)
 801c99c:	2201      	movs	r2, #1
 801c99e:	601a      	str	r2, [r3, #0]
 801c9a0:	681a      	ldr	r2, [r3, #0]
 801c9a2:	2a00      	cmp	r2, #0
 801c9a4:	d1fc      	bne.n	801c9a0 <CRC_Lock+0x60>
 801c9a6:	4b0c      	ldr	r3, [pc, #48]	; (801c9d8 <CRC_Lock+0x98>)
 801c9a8:	6018      	str	r0, [r3, #0]
 801c9aa:	6818      	ldr	r0, [r3, #0]
 801c9ac:	1a43      	subs	r3, r0, r1
 801c9ae:	4258      	negs	r0, r3
 801c9b0:	4158      	adcs	r0, r3
 801c9b2:	bd30      	pop	{r4, r5, pc}
 801c9b4:	4b09      	ldr	r3, [pc, #36]	; (801c9dc <CRC_Lock+0x9c>)
 801c9b6:	2201      	movs	r2, #1
 801c9b8:	601a      	str	r2, [r3, #0]
 801c9ba:	681a      	ldr	r2, [r3, #0]
 801c9bc:	2a00      	cmp	r2, #0
 801c9be:	d1fc      	bne.n	801c9ba <CRC_Lock+0x7a>
 801c9c0:	4b07      	ldr	r3, [pc, #28]	; (801c9e0 <CRC_Lock+0xa0>)
 801c9c2:	e7f1      	b.n	801c9a8 <CRC_Lock+0x68>
 801c9c4:	e0002000 	.word	0xe0002000
 801c9c8:	e000ed00 	.word	0xe000ed00
 801c9cc:	e0042000 	.word	0xe0042000
 801c9d0:	5c001000 	.word	0x5c001000
 801c9d4:	58024c08 	.word	0x58024c08
 801c9d8:	58024c00 	.word	0x58024c00
 801c9dc:	40023008 	.word	0x40023008
 801c9e0:	40023000 	.word	0x40023000

0801c9e4 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801c9e4:	6101      	str	r1, [r0, #16]
 801c9e6:	4770      	bx	lr

0801c9e8 <_ZN8touchgfx8Gestures4tickEv>:
 801c9e8:	7b83      	ldrb	r3, [r0, #14]
 801c9ea:	b14b      	cbz	r3, 801ca00 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801c9ec:	8903      	ldrh	r3, [r0, #8]
 801c9ee:	3301      	adds	r3, #1
 801c9f0:	b29b      	uxth	r3, r3
 801c9f2:	2b07      	cmp	r3, #7
 801c9f4:	8103      	strh	r3, [r0, #8]
 801c9f6:	bf81      	itttt	hi
 801c9f8:	2300      	movhi	r3, #0
 801c9fa:	8143      	strhhi	r3, [r0, #10]
 801c9fc:	8183      	strhhi	r3, [r0, #12]
 801c9fe:	7383      	strbhi	r3, [r0, #14]
 801ca00:	4770      	bx	lr
	...

0801ca04 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801ca04:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801ca08:	4698      	mov	r8, r3
 801ca0a:	8883      	ldrh	r3, [r0, #4]
 801ca0c:	4604      	mov	r4, r0
 801ca0e:	4617      	mov	r7, r2
 801ca10:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ca14:	eba8 0303 	sub.w	r3, r8, r3
 801ca18:	4a19      	ldr	r2, [pc, #100]	; (801ca80 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801ca1a:	460e      	mov	r6, r1
 801ca1c:	b21b      	sxth	r3, r3
 801ca1e:	88c1      	ldrh	r1, [r0, #6]
 801ca20:	9200      	str	r2, [sp, #0]
 801ca22:	2000      	movs	r0, #0
 801ca24:	2b00      	cmp	r3, #0
 801ca26:	8aa2      	ldrh	r2, [r4, #20]
 801ca28:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801ca2c:	bfb8      	it	lt
 801ca2e:	425b      	neglt	r3, r3
 801ca30:	f88d 0004 	strb.w	r0, [sp, #4]
 801ca34:	f8ad 1008 	strh.w	r1, [sp, #8]
 801ca38:	b21b      	sxth	r3, r3
 801ca3a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ca3e:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ca42:	4293      	cmp	r3, r2
 801ca44:	dc07      	bgt.n	801ca56 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 801ca46:	1a69      	subs	r1, r5, r1
 801ca48:	b209      	sxth	r1, r1
 801ca4a:	2900      	cmp	r1, #0
 801ca4c:	bfb8      	it	lt
 801ca4e:	4249      	neglt	r1, r1
 801ca50:	b209      	sxth	r1, r1
 801ca52:	428a      	cmp	r2, r1
 801ca54:	da10      	bge.n	801ca78 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 801ca56:	6920      	ldr	r0, [r4, #16]
 801ca58:	4669      	mov	r1, sp
 801ca5a:	eba8 0606 	sub.w	r6, r8, r6
 801ca5e:	1bef      	subs	r7, r5, r7
 801ca60:	6803      	ldr	r3, [r0, #0]
 801ca62:	685b      	ldr	r3, [r3, #4]
 801ca64:	4798      	blx	r3
 801ca66:	2300      	movs	r3, #0
 801ca68:	2001      	movs	r0, #1
 801ca6a:	8166      	strh	r6, [r4, #10]
 801ca6c:	8123      	strh	r3, [r4, #8]
 801ca6e:	81a7      	strh	r7, [r4, #12]
 801ca70:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ca74:	80e5      	strh	r5, [r4, #6]
 801ca76:	73a0      	strb	r0, [r4, #14]
 801ca78:	b004      	add	sp, #16
 801ca7a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ca7e:	bf00      	nop
 801ca80:	0801eff4 	.word	0x0801eff4

0801ca84 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ca84:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ca86:	461e      	mov	r6, r3
 801ca88:	1e4b      	subs	r3, r1, #1
 801ca8a:	b085      	sub	sp, #20
 801ca8c:	4604      	mov	r4, r0
 801ca8e:	2b01      	cmp	r3, #1
 801ca90:	460d      	mov	r5, r1
 801ca92:	4617      	mov	r7, r2
 801ca94:	d84b      	bhi.n	801cb2e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ca96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ca9a:	1cd3      	adds	r3, r2, #3
 801ca9c:	b29b      	uxth	r3, r3
 801ca9e:	2b06      	cmp	r3, #6
 801caa0:	d916      	bls.n	801cad0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801caa2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 801cb44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801caa6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801caaa:	f8cd c004 	str.w	ip, [sp, #4]
 801caae:	f04f 0c00 	mov.w	ip, #0
 801cab2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801cab6:	6900      	ldr	r0, [r0, #16]
 801cab8:	f8ad 100c 	strh.w	r1, [sp, #12]
 801cabc:	a901      	add	r1, sp, #4
 801cabe:	f88d c008 	strb.w	ip, [sp, #8]
 801cac2:	f8ad 200a 	strh.w	r2, [sp, #10]
 801cac6:	f8ad 300e 	strh.w	r3, [sp, #14]
 801caca:	6803      	ldr	r3, [r0, #0]
 801cacc:	689b      	ldr	r3, [r3, #8]
 801cace:	4798      	blx	r3
 801cad0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801cad4:	1cd3      	adds	r3, r2, #3
 801cad6:	b29b      	uxth	r3, r3
 801cad8:	2b06      	cmp	r3, #6
 801cada:	d916      	bls.n	801cb0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cadc:	f8df c064 	ldr.w	ip, [pc, #100]	; 801cb44 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801cae0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801cae4:	f8cd c004 	str.w	ip, [sp, #4]
 801cae8:	f04f 0c01 	mov.w	ip, #1
 801caec:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801caf0:	6920      	ldr	r0, [r4, #16]
 801caf2:	f8ad 100c 	strh.w	r1, [sp, #12]
 801caf6:	a901      	add	r1, sp, #4
 801caf8:	f88d c008 	strb.w	ip, [sp, #8]
 801cafc:	f8ad 200a 	strh.w	r2, [sp, #10]
 801cb00:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cb04:	6803      	ldr	r3, [r0, #0]
 801cb06:	689b      	ldr	r3, [r3, #8]
 801cb08:	4798      	blx	r3
 801cb0a:	4b0d      	ldr	r3, [pc, #52]	; (801cb40 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801cb0c:	a901      	add	r1, sp, #4
 801cb0e:	6920      	ldr	r0, [r4, #16]
 801cb10:	9301      	str	r3, [sp, #4]
 801cb12:	2300      	movs	r3, #0
 801cb14:	f88d 5008 	strb.w	r5, [sp, #8]
 801cb18:	f8ad 700a 	strh.w	r7, [sp, #10]
 801cb1c:	f8ad 600c 	strh.w	r6, [sp, #12]
 801cb20:	f8ad 300e 	strh.w	r3, [sp, #14]
 801cb24:	6803      	ldr	r3, [r0, #0]
 801cb26:	681b      	ldr	r3, [r3, #0]
 801cb28:	4798      	blx	r3
 801cb2a:	b005      	add	sp, #20
 801cb2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801cb2e:	2900      	cmp	r1, #0
 801cb30:	d1eb      	bne.n	801cb0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cb32:	80a2      	strh	r2, [r4, #4]
 801cb34:	80c6      	strh	r6, [r0, #6]
 801cb36:	60a1      	str	r1, [r4, #8]
 801cb38:	81a1      	strh	r1, [r4, #12]
 801cb3a:	73a1      	strb	r1, [r4, #14]
 801cb3c:	e7e5      	b.n	801cb0a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801cb3e:	bf00      	nop
 801cb40:	0801efe0 	.word	0x0801efe0
 801cb44:	0801f008 	.word	0x0801f008

0801cb48 <__aeabi_atexit>:
 801cb48:	460b      	mov	r3, r1
 801cb4a:	4601      	mov	r1, r0
 801cb4c:	4618      	mov	r0, r3
 801cb4e:	f000 b90f 	b.w	801cd70 <__cxa_atexit>

0801cb52 <_ZdlPvj>:
 801cb52:	f000 b812 	b.w	801cb7a <_ZdlPv>

0801cb56 <__cxa_guard_acquire>:
 801cb56:	6803      	ldr	r3, [r0, #0]
 801cb58:	07db      	lsls	r3, r3, #31
 801cb5a:	d406      	bmi.n	801cb6a <__cxa_guard_acquire+0x14>
 801cb5c:	7843      	ldrb	r3, [r0, #1]
 801cb5e:	b103      	cbz	r3, 801cb62 <__cxa_guard_acquire+0xc>
 801cb60:	deff      	udf	#255	; 0xff
 801cb62:	2301      	movs	r3, #1
 801cb64:	7043      	strb	r3, [r0, #1]
 801cb66:	4618      	mov	r0, r3
 801cb68:	4770      	bx	lr
 801cb6a:	2000      	movs	r0, #0
 801cb6c:	4770      	bx	lr

0801cb6e <__cxa_guard_release>:
 801cb6e:	2301      	movs	r3, #1
 801cb70:	6003      	str	r3, [r0, #0]
 801cb72:	4770      	bx	lr

0801cb74 <__cxa_pure_virtual>:
 801cb74:	b508      	push	{r3, lr}
 801cb76:	f000 f80f 	bl	801cb98 <_ZSt9terminatev>

0801cb7a <_ZdlPv>:
 801cb7a:	f000 b845 	b.w	801cc08 <free>

0801cb7e <_ZN10__cxxabiv111__terminateEPFvvE>:
 801cb7e:	b508      	push	{r3, lr}
 801cb80:	4780      	blx	r0
 801cb82:	f000 f80e 	bl	801cba2 <abort>
	...

0801cb88 <_ZSt13get_terminatev>:
 801cb88:	4b02      	ldr	r3, [pc, #8]	; (801cb94 <_ZSt13get_terminatev+0xc>)
 801cb8a:	6818      	ldr	r0, [r3, #0]
 801cb8c:	f3bf 8f5b 	dmb	ish
 801cb90:	4770      	bx	lr
 801cb92:	bf00      	nop
 801cb94:	240000c4 	.word	0x240000c4

0801cb98 <_ZSt9terminatev>:
 801cb98:	b508      	push	{r3, lr}
 801cb9a:	f7ff fff5 	bl	801cb88 <_ZSt13get_terminatev>
 801cb9e:	f7ff ffee 	bl	801cb7e <_ZN10__cxxabiv111__terminateEPFvvE>

0801cba2 <abort>:
 801cba2:	b508      	push	{r3, lr}
 801cba4:	2006      	movs	r0, #6
 801cba6:	f000 fa39 	bl	801d01c <raise>
 801cbaa:	2001      	movs	r0, #1
 801cbac:	f7e4 fa62 	bl	8001074 <_exit>

0801cbb0 <__assert_func>:
 801cbb0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801cbb2:	4614      	mov	r4, r2
 801cbb4:	461a      	mov	r2, r3
 801cbb6:	4b09      	ldr	r3, [pc, #36]	; (801cbdc <__assert_func+0x2c>)
 801cbb8:	681b      	ldr	r3, [r3, #0]
 801cbba:	4605      	mov	r5, r0
 801cbbc:	68d8      	ldr	r0, [r3, #12]
 801cbbe:	b14c      	cbz	r4, 801cbd4 <__assert_func+0x24>
 801cbc0:	4b07      	ldr	r3, [pc, #28]	; (801cbe0 <__assert_func+0x30>)
 801cbc2:	9100      	str	r1, [sp, #0]
 801cbc4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801cbc8:	4906      	ldr	r1, [pc, #24]	; (801cbe4 <__assert_func+0x34>)
 801cbca:	462b      	mov	r3, r5
 801cbcc:	f000 f982 	bl	801ced4 <fiprintf>
 801cbd0:	f7ff ffe7 	bl	801cba2 <abort>
 801cbd4:	4b04      	ldr	r3, [pc, #16]	; (801cbe8 <__assert_func+0x38>)
 801cbd6:	461c      	mov	r4, r3
 801cbd8:	e7f3      	b.n	801cbc2 <__assert_func+0x12>
 801cbda:	bf00      	nop
 801cbdc:	24000120 	.word	0x24000120
 801cbe0:	0801f2d0 	.word	0x0801f2d0
 801cbe4:	0801f2dd 	.word	0x0801f2dd
 801cbe8:	0801f30b 	.word	0x0801f30b

0801cbec <atexit>:
 801cbec:	2300      	movs	r3, #0
 801cbee:	4601      	mov	r1, r0
 801cbf0:	461a      	mov	r2, r3
 801cbf2:	4618      	mov	r0, r3
 801cbf4:	f000 bac0 	b.w	801d178 <__register_exitproc>

0801cbf8 <malloc>:
 801cbf8:	4b02      	ldr	r3, [pc, #8]	; (801cc04 <malloc+0xc>)
 801cbfa:	4601      	mov	r1, r0
 801cbfc:	6818      	ldr	r0, [r3, #0]
 801cbfe:	f000 b82b 	b.w	801cc58 <_malloc_r>
 801cc02:	bf00      	nop
 801cc04:	24000120 	.word	0x24000120

0801cc08 <free>:
 801cc08:	4b02      	ldr	r3, [pc, #8]	; (801cc14 <free+0xc>)
 801cc0a:	4601      	mov	r1, r0
 801cc0c:	6818      	ldr	r0, [r3, #0]
 801cc0e:	f000 bb11 	b.w	801d234 <_free_r>
 801cc12:	bf00      	nop
 801cc14:	24000120 	.word	0x24000120

0801cc18 <sbrk_aligned>:
 801cc18:	b570      	push	{r4, r5, r6, lr}
 801cc1a:	4e0e      	ldr	r6, [pc, #56]	; (801cc54 <sbrk_aligned+0x3c>)
 801cc1c:	460c      	mov	r4, r1
 801cc1e:	6831      	ldr	r1, [r6, #0]
 801cc20:	4605      	mov	r5, r0
 801cc22:	b911      	cbnz	r1, 801cc2a <sbrk_aligned+0x12>
 801cc24:	f000 fa4a 	bl	801d0bc <_sbrk_r>
 801cc28:	6030      	str	r0, [r6, #0]
 801cc2a:	4621      	mov	r1, r4
 801cc2c:	4628      	mov	r0, r5
 801cc2e:	f000 fa45 	bl	801d0bc <_sbrk_r>
 801cc32:	1c43      	adds	r3, r0, #1
 801cc34:	d00a      	beq.n	801cc4c <sbrk_aligned+0x34>
 801cc36:	1cc4      	adds	r4, r0, #3
 801cc38:	f024 0403 	bic.w	r4, r4, #3
 801cc3c:	42a0      	cmp	r0, r4
 801cc3e:	d007      	beq.n	801cc50 <sbrk_aligned+0x38>
 801cc40:	1a21      	subs	r1, r4, r0
 801cc42:	4628      	mov	r0, r5
 801cc44:	f000 fa3a 	bl	801d0bc <_sbrk_r>
 801cc48:	3001      	adds	r0, #1
 801cc4a:	d101      	bne.n	801cc50 <sbrk_aligned+0x38>
 801cc4c:	f04f 34ff 	mov.w	r4, #4294967295
 801cc50:	4620      	mov	r0, r4
 801cc52:	bd70      	pop	{r4, r5, r6, pc}
 801cc54:	2400b160 	.word	0x2400b160

0801cc58 <_malloc_r>:
 801cc58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801cc5c:	1ccd      	adds	r5, r1, #3
 801cc5e:	f025 0503 	bic.w	r5, r5, #3
 801cc62:	3508      	adds	r5, #8
 801cc64:	2d0c      	cmp	r5, #12
 801cc66:	bf38      	it	cc
 801cc68:	250c      	movcc	r5, #12
 801cc6a:	2d00      	cmp	r5, #0
 801cc6c:	4607      	mov	r7, r0
 801cc6e:	db01      	blt.n	801cc74 <_malloc_r+0x1c>
 801cc70:	42a9      	cmp	r1, r5
 801cc72:	d905      	bls.n	801cc80 <_malloc_r+0x28>
 801cc74:	230c      	movs	r3, #12
 801cc76:	603b      	str	r3, [r7, #0]
 801cc78:	2600      	movs	r6, #0
 801cc7a:	4630      	mov	r0, r6
 801cc7c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801cc80:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 801cd54 <_malloc_r+0xfc>
 801cc84:	f000 f868 	bl	801cd58 <__malloc_lock>
 801cc88:	f8d8 3000 	ldr.w	r3, [r8]
 801cc8c:	461c      	mov	r4, r3
 801cc8e:	bb5c      	cbnz	r4, 801cce8 <_malloc_r+0x90>
 801cc90:	4629      	mov	r1, r5
 801cc92:	4638      	mov	r0, r7
 801cc94:	f7ff ffc0 	bl	801cc18 <sbrk_aligned>
 801cc98:	1c43      	adds	r3, r0, #1
 801cc9a:	4604      	mov	r4, r0
 801cc9c:	d155      	bne.n	801cd4a <_malloc_r+0xf2>
 801cc9e:	f8d8 4000 	ldr.w	r4, [r8]
 801cca2:	4626      	mov	r6, r4
 801cca4:	2e00      	cmp	r6, #0
 801cca6:	d145      	bne.n	801cd34 <_malloc_r+0xdc>
 801cca8:	2c00      	cmp	r4, #0
 801ccaa:	d048      	beq.n	801cd3e <_malloc_r+0xe6>
 801ccac:	6823      	ldr	r3, [r4, #0]
 801ccae:	4631      	mov	r1, r6
 801ccb0:	4638      	mov	r0, r7
 801ccb2:	eb04 0903 	add.w	r9, r4, r3
 801ccb6:	f000 fa01 	bl	801d0bc <_sbrk_r>
 801ccba:	4581      	cmp	r9, r0
 801ccbc:	d13f      	bne.n	801cd3e <_malloc_r+0xe6>
 801ccbe:	6821      	ldr	r1, [r4, #0]
 801ccc0:	1a6d      	subs	r5, r5, r1
 801ccc2:	4629      	mov	r1, r5
 801ccc4:	4638      	mov	r0, r7
 801ccc6:	f7ff ffa7 	bl	801cc18 <sbrk_aligned>
 801ccca:	3001      	adds	r0, #1
 801cccc:	d037      	beq.n	801cd3e <_malloc_r+0xe6>
 801ccce:	6823      	ldr	r3, [r4, #0]
 801ccd0:	442b      	add	r3, r5
 801ccd2:	6023      	str	r3, [r4, #0]
 801ccd4:	f8d8 3000 	ldr.w	r3, [r8]
 801ccd8:	2b00      	cmp	r3, #0
 801ccda:	d038      	beq.n	801cd4e <_malloc_r+0xf6>
 801ccdc:	685a      	ldr	r2, [r3, #4]
 801ccde:	42a2      	cmp	r2, r4
 801cce0:	d12b      	bne.n	801cd3a <_malloc_r+0xe2>
 801cce2:	2200      	movs	r2, #0
 801cce4:	605a      	str	r2, [r3, #4]
 801cce6:	e00f      	b.n	801cd08 <_malloc_r+0xb0>
 801cce8:	6822      	ldr	r2, [r4, #0]
 801ccea:	1b52      	subs	r2, r2, r5
 801ccec:	d41f      	bmi.n	801cd2e <_malloc_r+0xd6>
 801ccee:	2a0b      	cmp	r2, #11
 801ccf0:	d917      	bls.n	801cd22 <_malloc_r+0xca>
 801ccf2:	1961      	adds	r1, r4, r5
 801ccf4:	42a3      	cmp	r3, r4
 801ccf6:	6025      	str	r5, [r4, #0]
 801ccf8:	bf18      	it	ne
 801ccfa:	6059      	strne	r1, [r3, #4]
 801ccfc:	6863      	ldr	r3, [r4, #4]
 801ccfe:	bf08      	it	eq
 801cd00:	f8c8 1000 	streq.w	r1, [r8]
 801cd04:	5162      	str	r2, [r4, r5]
 801cd06:	604b      	str	r3, [r1, #4]
 801cd08:	4638      	mov	r0, r7
 801cd0a:	f104 060b 	add.w	r6, r4, #11
 801cd0e:	f000 f829 	bl	801cd64 <__malloc_unlock>
 801cd12:	f026 0607 	bic.w	r6, r6, #7
 801cd16:	1d23      	adds	r3, r4, #4
 801cd18:	1af2      	subs	r2, r6, r3
 801cd1a:	d0ae      	beq.n	801cc7a <_malloc_r+0x22>
 801cd1c:	1b9b      	subs	r3, r3, r6
 801cd1e:	50a3      	str	r3, [r4, r2]
 801cd20:	e7ab      	b.n	801cc7a <_malloc_r+0x22>
 801cd22:	42a3      	cmp	r3, r4
 801cd24:	6862      	ldr	r2, [r4, #4]
 801cd26:	d1dd      	bne.n	801cce4 <_malloc_r+0x8c>
 801cd28:	f8c8 2000 	str.w	r2, [r8]
 801cd2c:	e7ec      	b.n	801cd08 <_malloc_r+0xb0>
 801cd2e:	4623      	mov	r3, r4
 801cd30:	6864      	ldr	r4, [r4, #4]
 801cd32:	e7ac      	b.n	801cc8e <_malloc_r+0x36>
 801cd34:	4634      	mov	r4, r6
 801cd36:	6876      	ldr	r6, [r6, #4]
 801cd38:	e7b4      	b.n	801cca4 <_malloc_r+0x4c>
 801cd3a:	4613      	mov	r3, r2
 801cd3c:	e7cc      	b.n	801ccd8 <_malloc_r+0x80>
 801cd3e:	230c      	movs	r3, #12
 801cd40:	603b      	str	r3, [r7, #0]
 801cd42:	4638      	mov	r0, r7
 801cd44:	f000 f80e 	bl	801cd64 <__malloc_unlock>
 801cd48:	e797      	b.n	801cc7a <_malloc_r+0x22>
 801cd4a:	6025      	str	r5, [r4, #0]
 801cd4c:	e7dc      	b.n	801cd08 <_malloc_r+0xb0>
 801cd4e:	605b      	str	r3, [r3, #4]
 801cd50:	deff      	udf	#255	; 0xff
 801cd52:	bf00      	nop
 801cd54:	2400b15c 	.word	0x2400b15c

0801cd58 <__malloc_lock>:
 801cd58:	4801      	ldr	r0, [pc, #4]	; (801cd60 <__malloc_lock+0x8>)
 801cd5a:	f000 b9fc 	b.w	801d156 <__retarget_lock_acquire_recursive>
 801cd5e:	bf00      	nop
 801cd60:	2400b2a5 	.word	0x2400b2a5

0801cd64 <__malloc_unlock>:
 801cd64:	4801      	ldr	r0, [pc, #4]	; (801cd6c <__malloc_unlock+0x8>)
 801cd66:	f000 b9f7 	b.w	801d158 <__retarget_lock_release_recursive>
 801cd6a:	bf00      	nop
 801cd6c:	2400b2a5 	.word	0x2400b2a5

0801cd70 <__cxa_atexit>:
 801cd70:	b510      	push	{r4, lr}
 801cd72:	4c05      	ldr	r4, [pc, #20]	; (801cd88 <__cxa_atexit+0x18>)
 801cd74:	4613      	mov	r3, r2
 801cd76:	b12c      	cbz	r4, 801cd84 <__cxa_atexit+0x14>
 801cd78:	460a      	mov	r2, r1
 801cd7a:	4601      	mov	r1, r0
 801cd7c:	2002      	movs	r0, #2
 801cd7e:	f000 f9fb 	bl	801d178 <__register_exitproc>
 801cd82:	bd10      	pop	{r4, pc}
 801cd84:	4620      	mov	r0, r4
 801cd86:	e7fc      	b.n	801cd82 <__cxa_atexit+0x12>
 801cd88:	0801d179 	.word	0x0801d179

0801cd8c <std>:
 801cd8c:	2300      	movs	r3, #0
 801cd8e:	b510      	push	{r4, lr}
 801cd90:	4604      	mov	r4, r0
 801cd92:	e9c0 3300 	strd	r3, r3, [r0]
 801cd96:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801cd9a:	6083      	str	r3, [r0, #8]
 801cd9c:	8181      	strh	r1, [r0, #12]
 801cd9e:	6643      	str	r3, [r0, #100]	; 0x64
 801cda0:	81c2      	strh	r2, [r0, #14]
 801cda2:	6183      	str	r3, [r0, #24]
 801cda4:	4619      	mov	r1, r3
 801cda6:	2208      	movs	r2, #8
 801cda8:	305c      	adds	r0, #92	; 0x5c
 801cdaa:	f000 f906 	bl	801cfba <memset>
 801cdae:	4b0d      	ldr	r3, [pc, #52]	; (801cde4 <std+0x58>)
 801cdb0:	6263      	str	r3, [r4, #36]	; 0x24
 801cdb2:	4b0d      	ldr	r3, [pc, #52]	; (801cde8 <std+0x5c>)
 801cdb4:	62a3      	str	r3, [r4, #40]	; 0x28
 801cdb6:	4b0d      	ldr	r3, [pc, #52]	; (801cdec <std+0x60>)
 801cdb8:	62e3      	str	r3, [r4, #44]	; 0x2c
 801cdba:	4b0d      	ldr	r3, [pc, #52]	; (801cdf0 <std+0x64>)
 801cdbc:	6323      	str	r3, [r4, #48]	; 0x30
 801cdbe:	4b0d      	ldr	r3, [pc, #52]	; (801cdf4 <std+0x68>)
 801cdc0:	6224      	str	r4, [r4, #32]
 801cdc2:	429c      	cmp	r4, r3
 801cdc4:	d006      	beq.n	801cdd4 <std+0x48>
 801cdc6:	f103 0268 	add.w	r2, r3, #104	; 0x68
 801cdca:	4294      	cmp	r4, r2
 801cdcc:	d002      	beq.n	801cdd4 <std+0x48>
 801cdce:	33d0      	adds	r3, #208	; 0xd0
 801cdd0:	429c      	cmp	r4, r3
 801cdd2:	d105      	bne.n	801cde0 <std+0x54>
 801cdd4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801cdd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801cddc:	f000 b9ba 	b.w	801d154 <__retarget_lock_init_recursive>
 801cde0:	bd10      	pop	{r4, pc}
 801cde2:	bf00      	nop
 801cde4:	0801cf35 	.word	0x0801cf35
 801cde8:	0801cf57 	.word	0x0801cf57
 801cdec:	0801cf8f 	.word	0x0801cf8f
 801cdf0:	0801cfb3 	.word	0x0801cfb3
 801cdf4:	2400b164 	.word	0x2400b164

0801cdf8 <stdio_exit_handler>:
 801cdf8:	4a02      	ldr	r2, [pc, #8]	; (801ce04 <stdio_exit_handler+0xc>)
 801cdfa:	4903      	ldr	r1, [pc, #12]	; (801ce08 <stdio_exit_handler+0x10>)
 801cdfc:	4803      	ldr	r0, [pc, #12]	; (801ce0c <stdio_exit_handler+0x14>)
 801cdfe:	f000 b87b 	b.w	801cef8 <_fwalk_sglue>
 801ce02:	bf00      	nop
 801ce04:	240000c8 	.word	0x240000c8
 801ce08:	0801d981 	.word	0x0801d981
 801ce0c:	240000d4 	.word	0x240000d4

0801ce10 <cleanup_stdio>:
 801ce10:	6841      	ldr	r1, [r0, #4]
 801ce12:	4b0c      	ldr	r3, [pc, #48]	; (801ce44 <cleanup_stdio+0x34>)
 801ce14:	4299      	cmp	r1, r3
 801ce16:	b510      	push	{r4, lr}
 801ce18:	4604      	mov	r4, r0
 801ce1a:	d001      	beq.n	801ce20 <cleanup_stdio+0x10>
 801ce1c:	f000 fdb0 	bl	801d980 <_fflush_r>
 801ce20:	68a1      	ldr	r1, [r4, #8]
 801ce22:	4b09      	ldr	r3, [pc, #36]	; (801ce48 <cleanup_stdio+0x38>)
 801ce24:	4299      	cmp	r1, r3
 801ce26:	d002      	beq.n	801ce2e <cleanup_stdio+0x1e>
 801ce28:	4620      	mov	r0, r4
 801ce2a:	f000 fda9 	bl	801d980 <_fflush_r>
 801ce2e:	68e1      	ldr	r1, [r4, #12]
 801ce30:	4b06      	ldr	r3, [pc, #24]	; (801ce4c <cleanup_stdio+0x3c>)
 801ce32:	4299      	cmp	r1, r3
 801ce34:	d004      	beq.n	801ce40 <cleanup_stdio+0x30>
 801ce36:	4620      	mov	r0, r4
 801ce38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ce3c:	f000 bda0 	b.w	801d980 <_fflush_r>
 801ce40:	bd10      	pop	{r4, pc}
 801ce42:	bf00      	nop
 801ce44:	2400b164 	.word	0x2400b164
 801ce48:	2400b1cc 	.word	0x2400b1cc
 801ce4c:	2400b234 	.word	0x2400b234

0801ce50 <global_stdio_init.part.0>:
 801ce50:	b510      	push	{r4, lr}
 801ce52:	4b0b      	ldr	r3, [pc, #44]	; (801ce80 <global_stdio_init.part.0+0x30>)
 801ce54:	4c0b      	ldr	r4, [pc, #44]	; (801ce84 <global_stdio_init.part.0+0x34>)
 801ce56:	4a0c      	ldr	r2, [pc, #48]	; (801ce88 <global_stdio_init.part.0+0x38>)
 801ce58:	601a      	str	r2, [r3, #0]
 801ce5a:	4620      	mov	r0, r4
 801ce5c:	2200      	movs	r2, #0
 801ce5e:	2104      	movs	r1, #4
 801ce60:	f7ff ff94 	bl	801cd8c <std>
 801ce64:	f104 0068 	add.w	r0, r4, #104	; 0x68
 801ce68:	2201      	movs	r2, #1
 801ce6a:	2109      	movs	r1, #9
 801ce6c:	f7ff ff8e 	bl	801cd8c <std>
 801ce70:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 801ce74:	2202      	movs	r2, #2
 801ce76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ce7a:	2112      	movs	r1, #18
 801ce7c:	f7ff bf86 	b.w	801cd8c <std>
 801ce80:	2400b29c 	.word	0x2400b29c
 801ce84:	2400b164 	.word	0x2400b164
 801ce88:	0801cdf9 	.word	0x0801cdf9

0801ce8c <__sfp_lock_acquire>:
 801ce8c:	4801      	ldr	r0, [pc, #4]	; (801ce94 <__sfp_lock_acquire+0x8>)
 801ce8e:	f000 b962 	b.w	801d156 <__retarget_lock_acquire_recursive>
 801ce92:	bf00      	nop
 801ce94:	2400b2a6 	.word	0x2400b2a6

0801ce98 <__sfp_lock_release>:
 801ce98:	4801      	ldr	r0, [pc, #4]	; (801cea0 <__sfp_lock_release+0x8>)
 801ce9a:	f000 b95d 	b.w	801d158 <__retarget_lock_release_recursive>
 801ce9e:	bf00      	nop
 801cea0:	2400b2a6 	.word	0x2400b2a6

0801cea4 <__sinit>:
 801cea4:	b510      	push	{r4, lr}
 801cea6:	4604      	mov	r4, r0
 801cea8:	f7ff fff0 	bl	801ce8c <__sfp_lock_acquire>
 801ceac:	6a23      	ldr	r3, [r4, #32]
 801ceae:	b11b      	cbz	r3, 801ceb8 <__sinit+0x14>
 801ceb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801ceb4:	f7ff bff0 	b.w	801ce98 <__sfp_lock_release>
 801ceb8:	4b04      	ldr	r3, [pc, #16]	; (801cecc <__sinit+0x28>)
 801ceba:	6223      	str	r3, [r4, #32]
 801cebc:	4b04      	ldr	r3, [pc, #16]	; (801ced0 <__sinit+0x2c>)
 801cebe:	681b      	ldr	r3, [r3, #0]
 801cec0:	2b00      	cmp	r3, #0
 801cec2:	d1f5      	bne.n	801ceb0 <__sinit+0xc>
 801cec4:	f7ff ffc4 	bl	801ce50 <global_stdio_init.part.0>
 801cec8:	e7f2      	b.n	801ceb0 <__sinit+0xc>
 801ceca:	bf00      	nop
 801cecc:	0801ce11 	.word	0x0801ce11
 801ced0:	2400b29c 	.word	0x2400b29c

0801ced4 <fiprintf>:
 801ced4:	b40e      	push	{r1, r2, r3}
 801ced6:	b503      	push	{r0, r1, lr}
 801ced8:	4601      	mov	r1, r0
 801ceda:	ab03      	add	r3, sp, #12
 801cedc:	4805      	ldr	r0, [pc, #20]	; (801cef4 <fiprintf+0x20>)
 801cede:	f853 2b04 	ldr.w	r2, [r3], #4
 801cee2:	6800      	ldr	r0, [r0, #0]
 801cee4:	9301      	str	r3, [sp, #4]
 801cee6:	f000 fa1b 	bl	801d320 <_vfiprintf_r>
 801ceea:	b002      	add	sp, #8
 801ceec:	f85d eb04 	ldr.w	lr, [sp], #4
 801cef0:	b003      	add	sp, #12
 801cef2:	4770      	bx	lr
 801cef4:	24000120 	.word	0x24000120

0801cef8 <_fwalk_sglue>:
 801cef8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801cefc:	4607      	mov	r7, r0
 801cefe:	4688      	mov	r8, r1
 801cf00:	4614      	mov	r4, r2
 801cf02:	2600      	movs	r6, #0
 801cf04:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 801cf08:	f1b9 0901 	subs.w	r9, r9, #1
 801cf0c:	d505      	bpl.n	801cf1a <_fwalk_sglue+0x22>
 801cf0e:	6824      	ldr	r4, [r4, #0]
 801cf10:	2c00      	cmp	r4, #0
 801cf12:	d1f7      	bne.n	801cf04 <_fwalk_sglue+0xc>
 801cf14:	4630      	mov	r0, r6
 801cf16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801cf1a:	89ab      	ldrh	r3, [r5, #12]
 801cf1c:	2b01      	cmp	r3, #1
 801cf1e:	d907      	bls.n	801cf30 <_fwalk_sglue+0x38>
 801cf20:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801cf24:	3301      	adds	r3, #1
 801cf26:	d003      	beq.n	801cf30 <_fwalk_sglue+0x38>
 801cf28:	4629      	mov	r1, r5
 801cf2a:	4638      	mov	r0, r7
 801cf2c:	47c0      	blx	r8
 801cf2e:	4306      	orrs	r6, r0
 801cf30:	3568      	adds	r5, #104	; 0x68
 801cf32:	e7e9      	b.n	801cf08 <_fwalk_sglue+0x10>

0801cf34 <__sread>:
 801cf34:	b510      	push	{r4, lr}
 801cf36:	460c      	mov	r4, r1
 801cf38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cf3c:	f000 f898 	bl	801d070 <_read_r>
 801cf40:	2800      	cmp	r0, #0
 801cf42:	bfab      	itete	ge
 801cf44:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801cf46:	89a3      	ldrhlt	r3, [r4, #12]
 801cf48:	181b      	addge	r3, r3, r0
 801cf4a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801cf4e:	bfac      	ite	ge
 801cf50:	6563      	strge	r3, [r4, #84]	; 0x54
 801cf52:	81a3      	strhlt	r3, [r4, #12]
 801cf54:	bd10      	pop	{r4, pc}

0801cf56 <__swrite>:
 801cf56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801cf5a:	461f      	mov	r7, r3
 801cf5c:	898b      	ldrh	r3, [r1, #12]
 801cf5e:	05db      	lsls	r3, r3, #23
 801cf60:	4605      	mov	r5, r0
 801cf62:	460c      	mov	r4, r1
 801cf64:	4616      	mov	r6, r2
 801cf66:	d505      	bpl.n	801cf74 <__swrite+0x1e>
 801cf68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cf6c:	2302      	movs	r3, #2
 801cf6e:	2200      	movs	r2, #0
 801cf70:	f000 f86c 	bl	801d04c <_lseek_r>
 801cf74:	89a3      	ldrh	r3, [r4, #12]
 801cf76:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801cf7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801cf7e:	81a3      	strh	r3, [r4, #12]
 801cf80:	4632      	mov	r2, r6
 801cf82:	463b      	mov	r3, r7
 801cf84:	4628      	mov	r0, r5
 801cf86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801cf8a:	f000 b8a7 	b.w	801d0dc <_write_r>

0801cf8e <__sseek>:
 801cf8e:	b510      	push	{r4, lr}
 801cf90:	460c      	mov	r4, r1
 801cf92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cf96:	f000 f859 	bl	801d04c <_lseek_r>
 801cf9a:	1c43      	adds	r3, r0, #1
 801cf9c:	89a3      	ldrh	r3, [r4, #12]
 801cf9e:	bf15      	itete	ne
 801cfa0:	6560      	strne	r0, [r4, #84]	; 0x54
 801cfa2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801cfa6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801cfaa:	81a3      	strheq	r3, [r4, #12]
 801cfac:	bf18      	it	ne
 801cfae:	81a3      	strhne	r3, [r4, #12]
 801cfb0:	bd10      	pop	{r4, pc}

0801cfb2 <__sclose>:
 801cfb2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801cfb6:	f000 b839 	b.w	801d02c <_close_r>

0801cfba <memset>:
 801cfba:	4402      	add	r2, r0
 801cfbc:	4603      	mov	r3, r0
 801cfbe:	4293      	cmp	r3, r2
 801cfc0:	d100      	bne.n	801cfc4 <memset+0xa>
 801cfc2:	4770      	bx	lr
 801cfc4:	f803 1b01 	strb.w	r1, [r3], #1
 801cfc8:	e7f9      	b.n	801cfbe <memset+0x4>

0801cfca <_raise_r>:
 801cfca:	291f      	cmp	r1, #31
 801cfcc:	b538      	push	{r3, r4, r5, lr}
 801cfce:	4604      	mov	r4, r0
 801cfd0:	460d      	mov	r5, r1
 801cfd2:	d904      	bls.n	801cfde <_raise_r+0x14>
 801cfd4:	2316      	movs	r3, #22
 801cfd6:	6003      	str	r3, [r0, #0]
 801cfd8:	f04f 30ff 	mov.w	r0, #4294967295
 801cfdc:	bd38      	pop	{r3, r4, r5, pc}
 801cfde:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 801cfe0:	b112      	cbz	r2, 801cfe8 <_raise_r+0x1e>
 801cfe2:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801cfe6:	b94b      	cbnz	r3, 801cffc <_raise_r+0x32>
 801cfe8:	4620      	mov	r0, r4
 801cfea:	f000 f865 	bl	801d0b8 <_getpid_r>
 801cfee:	462a      	mov	r2, r5
 801cff0:	4601      	mov	r1, r0
 801cff2:	4620      	mov	r0, r4
 801cff4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801cff8:	f000 b84c 	b.w	801d094 <_kill_r>
 801cffc:	2b01      	cmp	r3, #1
 801cffe:	d00a      	beq.n	801d016 <_raise_r+0x4c>
 801d000:	1c59      	adds	r1, r3, #1
 801d002:	d103      	bne.n	801d00c <_raise_r+0x42>
 801d004:	2316      	movs	r3, #22
 801d006:	6003      	str	r3, [r0, #0]
 801d008:	2001      	movs	r0, #1
 801d00a:	e7e7      	b.n	801cfdc <_raise_r+0x12>
 801d00c:	2400      	movs	r4, #0
 801d00e:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801d012:	4628      	mov	r0, r5
 801d014:	4798      	blx	r3
 801d016:	2000      	movs	r0, #0
 801d018:	e7e0      	b.n	801cfdc <_raise_r+0x12>
	...

0801d01c <raise>:
 801d01c:	4b02      	ldr	r3, [pc, #8]	; (801d028 <raise+0xc>)
 801d01e:	4601      	mov	r1, r0
 801d020:	6818      	ldr	r0, [r3, #0]
 801d022:	f7ff bfd2 	b.w	801cfca <_raise_r>
 801d026:	bf00      	nop
 801d028:	24000120 	.word	0x24000120

0801d02c <_close_r>:
 801d02c:	b538      	push	{r3, r4, r5, lr}
 801d02e:	4d06      	ldr	r5, [pc, #24]	; (801d048 <_close_r+0x1c>)
 801d030:	2300      	movs	r3, #0
 801d032:	4604      	mov	r4, r0
 801d034:	4608      	mov	r0, r1
 801d036:	602b      	str	r3, [r5, #0]
 801d038:	f7e4 f83e 	bl	80010b8 <_close>
 801d03c:	1c43      	adds	r3, r0, #1
 801d03e:	d102      	bne.n	801d046 <_close_r+0x1a>
 801d040:	682b      	ldr	r3, [r5, #0]
 801d042:	b103      	cbz	r3, 801d046 <_close_r+0x1a>
 801d044:	6023      	str	r3, [r4, #0]
 801d046:	bd38      	pop	{r3, r4, r5, pc}
 801d048:	2400b2a0 	.word	0x2400b2a0

0801d04c <_lseek_r>:
 801d04c:	b538      	push	{r3, r4, r5, lr}
 801d04e:	4d07      	ldr	r5, [pc, #28]	; (801d06c <_lseek_r+0x20>)
 801d050:	4604      	mov	r4, r0
 801d052:	4608      	mov	r0, r1
 801d054:	4611      	mov	r1, r2
 801d056:	2200      	movs	r2, #0
 801d058:	602a      	str	r2, [r5, #0]
 801d05a:	461a      	mov	r2, r3
 801d05c:	f7e4 f836 	bl	80010cc <_lseek>
 801d060:	1c43      	adds	r3, r0, #1
 801d062:	d102      	bne.n	801d06a <_lseek_r+0x1e>
 801d064:	682b      	ldr	r3, [r5, #0]
 801d066:	b103      	cbz	r3, 801d06a <_lseek_r+0x1e>
 801d068:	6023      	str	r3, [r4, #0]
 801d06a:	bd38      	pop	{r3, r4, r5, pc}
 801d06c:	2400b2a0 	.word	0x2400b2a0

0801d070 <_read_r>:
 801d070:	b538      	push	{r3, r4, r5, lr}
 801d072:	4d07      	ldr	r5, [pc, #28]	; (801d090 <_read_r+0x20>)
 801d074:	4604      	mov	r4, r0
 801d076:	4608      	mov	r0, r1
 801d078:	4611      	mov	r1, r2
 801d07a:	2200      	movs	r2, #0
 801d07c:	602a      	str	r2, [r5, #0]
 801d07e:	461a      	mov	r2, r3
 801d080:	f7e3 fffe 	bl	8001080 <_read>
 801d084:	1c43      	adds	r3, r0, #1
 801d086:	d102      	bne.n	801d08e <_read_r+0x1e>
 801d088:	682b      	ldr	r3, [r5, #0]
 801d08a:	b103      	cbz	r3, 801d08e <_read_r+0x1e>
 801d08c:	6023      	str	r3, [r4, #0]
 801d08e:	bd38      	pop	{r3, r4, r5, pc}
 801d090:	2400b2a0 	.word	0x2400b2a0

0801d094 <_kill_r>:
 801d094:	b538      	push	{r3, r4, r5, lr}
 801d096:	4d07      	ldr	r5, [pc, #28]	; (801d0b4 <_kill_r+0x20>)
 801d098:	2300      	movs	r3, #0
 801d09a:	4604      	mov	r4, r0
 801d09c:	4608      	mov	r0, r1
 801d09e:	4611      	mov	r1, r2
 801d0a0:	602b      	str	r3, [r5, #0]
 801d0a2:	f7e3 ffdf 	bl	8001064 <_kill>
 801d0a6:	1c43      	adds	r3, r0, #1
 801d0a8:	d102      	bne.n	801d0b0 <_kill_r+0x1c>
 801d0aa:	682b      	ldr	r3, [r5, #0]
 801d0ac:	b103      	cbz	r3, 801d0b0 <_kill_r+0x1c>
 801d0ae:	6023      	str	r3, [r4, #0]
 801d0b0:	bd38      	pop	{r3, r4, r5, pc}
 801d0b2:	bf00      	nop
 801d0b4:	2400b2a0 	.word	0x2400b2a0

0801d0b8 <_getpid_r>:
 801d0b8:	f7e3 bfd2 	b.w	8001060 <_getpid>

0801d0bc <_sbrk_r>:
 801d0bc:	b538      	push	{r3, r4, r5, lr}
 801d0be:	4d06      	ldr	r5, [pc, #24]	; (801d0d8 <_sbrk_r+0x1c>)
 801d0c0:	2300      	movs	r3, #0
 801d0c2:	4604      	mov	r4, r0
 801d0c4:	4608      	mov	r0, r1
 801d0c6:	602b      	str	r3, [r5, #0]
 801d0c8:	f7e4 f802 	bl	80010d0 <_sbrk>
 801d0cc:	1c43      	adds	r3, r0, #1
 801d0ce:	d102      	bne.n	801d0d6 <_sbrk_r+0x1a>
 801d0d0:	682b      	ldr	r3, [r5, #0]
 801d0d2:	b103      	cbz	r3, 801d0d6 <_sbrk_r+0x1a>
 801d0d4:	6023      	str	r3, [r4, #0]
 801d0d6:	bd38      	pop	{r3, r4, r5, pc}
 801d0d8:	2400b2a0 	.word	0x2400b2a0

0801d0dc <_write_r>:
 801d0dc:	b538      	push	{r3, r4, r5, lr}
 801d0de:	4d07      	ldr	r5, [pc, #28]	; (801d0fc <_write_r+0x20>)
 801d0e0:	4604      	mov	r4, r0
 801d0e2:	4608      	mov	r0, r1
 801d0e4:	4611      	mov	r1, r2
 801d0e6:	2200      	movs	r2, #0
 801d0e8:	602a      	str	r2, [r5, #0]
 801d0ea:	461a      	mov	r2, r3
 801d0ec:	f7e3 ffd6 	bl	800109c <_write>
 801d0f0:	1c43      	adds	r3, r0, #1
 801d0f2:	d102      	bne.n	801d0fa <_write_r+0x1e>
 801d0f4:	682b      	ldr	r3, [r5, #0]
 801d0f6:	b103      	cbz	r3, 801d0fa <_write_r+0x1e>
 801d0f8:	6023      	str	r3, [r4, #0]
 801d0fa:	bd38      	pop	{r3, r4, r5, pc}
 801d0fc:	2400b2a0 	.word	0x2400b2a0

0801d100 <__errno>:
 801d100:	4b01      	ldr	r3, [pc, #4]	; (801d108 <__errno+0x8>)
 801d102:	6818      	ldr	r0, [r3, #0]
 801d104:	4770      	bx	lr
 801d106:	bf00      	nop
 801d108:	24000120 	.word	0x24000120

0801d10c <__libc_init_array>:
 801d10c:	b570      	push	{r4, r5, r6, lr}
 801d10e:	4d0d      	ldr	r5, [pc, #52]	; (801d144 <__libc_init_array+0x38>)
 801d110:	4c0d      	ldr	r4, [pc, #52]	; (801d148 <__libc_init_array+0x3c>)
 801d112:	1b64      	subs	r4, r4, r5
 801d114:	10a4      	asrs	r4, r4, #2
 801d116:	2600      	movs	r6, #0
 801d118:	42a6      	cmp	r6, r4
 801d11a:	d109      	bne.n	801d130 <__libc_init_array+0x24>
 801d11c:	4d0b      	ldr	r5, [pc, #44]	; (801d14c <__libc_init_array+0x40>)
 801d11e:	4c0c      	ldr	r4, [pc, #48]	; (801d150 <__libc_init_array+0x44>)
 801d120:	f000 fd70 	bl	801dc04 <_init>
 801d124:	1b64      	subs	r4, r4, r5
 801d126:	10a4      	asrs	r4, r4, #2
 801d128:	2600      	movs	r6, #0
 801d12a:	42a6      	cmp	r6, r4
 801d12c:	d105      	bne.n	801d13a <__libc_init_array+0x2e>
 801d12e:	bd70      	pop	{r4, r5, r6, pc}
 801d130:	f855 3b04 	ldr.w	r3, [r5], #4
 801d134:	4798      	blx	r3
 801d136:	3601      	adds	r6, #1
 801d138:	e7ee      	b.n	801d118 <__libc_init_array+0xc>
 801d13a:	f855 3b04 	ldr.w	r3, [r5], #4
 801d13e:	4798      	blx	r3
 801d140:	3601      	adds	r6, #1
 801d142:	e7f2      	b.n	801d12a <__libc_init_array+0x1e>
 801d144:	0801f35c 	.word	0x0801f35c
 801d148:	0801f35c 	.word	0x0801f35c
 801d14c:	0801f35c 	.word	0x0801f35c
 801d150:	0801f370 	.word	0x0801f370

0801d154 <__retarget_lock_init_recursive>:
 801d154:	4770      	bx	lr

0801d156 <__retarget_lock_acquire_recursive>:
 801d156:	4770      	bx	lr

0801d158 <__retarget_lock_release_recursive>:
 801d158:	4770      	bx	lr

0801d15a <memcpy>:
 801d15a:	440a      	add	r2, r1
 801d15c:	4291      	cmp	r1, r2
 801d15e:	f100 33ff 	add.w	r3, r0, #4294967295
 801d162:	d100      	bne.n	801d166 <memcpy+0xc>
 801d164:	4770      	bx	lr
 801d166:	b510      	push	{r4, lr}
 801d168:	f811 4b01 	ldrb.w	r4, [r1], #1
 801d16c:	f803 4f01 	strb.w	r4, [r3, #1]!
 801d170:	4291      	cmp	r1, r2
 801d172:	d1f9      	bne.n	801d168 <memcpy+0xe>
 801d174:	bd10      	pop	{r4, pc}
	...

0801d178 <__register_exitproc>:
 801d178:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801d17c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 801d230 <__register_exitproc+0xb8>
 801d180:	4606      	mov	r6, r0
 801d182:	f8d8 0000 	ldr.w	r0, [r8]
 801d186:	461f      	mov	r7, r3
 801d188:	460d      	mov	r5, r1
 801d18a:	4691      	mov	r9, r2
 801d18c:	f7ff ffe3 	bl	801d156 <__retarget_lock_acquire_recursive>
 801d190:	4b23      	ldr	r3, [pc, #140]	; (801d220 <__register_exitproc+0xa8>)
 801d192:	681c      	ldr	r4, [r3, #0]
 801d194:	b934      	cbnz	r4, 801d1a4 <__register_exitproc+0x2c>
 801d196:	4c23      	ldr	r4, [pc, #140]	; (801d224 <__register_exitproc+0xac>)
 801d198:	601c      	str	r4, [r3, #0]
 801d19a:	4b23      	ldr	r3, [pc, #140]	; (801d228 <__register_exitproc+0xb0>)
 801d19c:	b113      	cbz	r3, 801d1a4 <__register_exitproc+0x2c>
 801d19e:	681b      	ldr	r3, [r3, #0]
 801d1a0:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801d1a4:	6863      	ldr	r3, [r4, #4]
 801d1a6:	2b1f      	cmp	r3, #31
 801d1a8:	dd07      	ble.n	801d1ba <__register_exitproc+0x42>
 801d1aa:	f8d8 0000 	ldr.w	r0, [r8]
 801d1ae:	f7ff ffd3 	bl	801d158 <__retarget_lock_release_recursive>
 801d1b2:	f04f 30ff 	mov.w	r0, #4294967295
 801d1b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801d1ba:	b32e      	cbz	r6, 801d208 <__register_exitproc+0x90>
 801d1bc:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801d1c0:	b968      	cbnz	r0, 801d1de <__register_exitproc+0x66>
 801d1c2:	4b1a      	ldr	r3, [pc, #104]	; (801d22c <__register_exitproc+0xb4>)
 801d1c4:	2b00      	cmp	r3, #0
 801d1c6:	d0f0      	beq.n	801d1aa <__register_exitproc+0x32>
 801d1c8:	f44f 7084 	mov.w	r0, #264	; 0x108
 801d1cc:	f7ff fd14 	bl	801cbf8 <malloc>
 801d1d0:	2800      	cmp	r0, #0
 801d1d2:	d0ea      	beq.n	801d1aa <__register_exitproc+0x32>
 801d1d4:	2300      	movs	r3, #0
 801d1d6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801d1da:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801d1de:	6863      	ldr	r3, [r4, #4]
 801d1e0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801d1e4:	2201      	movs	r2, #1
 801d1e6:	409a      	lsls	r2, r3
 801d1e8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801d1ec:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801d1f0:	4313      	orrs	r3, r2
 801d1f2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801d1f6:	2e02      	cmp	r6, #2
 801d1f8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801d1fc:	bf02      	ittt	eq
 801d1fe:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801d202:	4313      	orreq	r3, r2
 801d204:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801d208:	6863      	ldr	r3, [r4, #4]
 801d20a:	f8d8 0000 	ldr.w	r0, [r8]
 801d20e:	1c5a      	adds	r2, r3, #1
 801d210:	3302      	adds	r3, #2
 801d212:	6062      	str	r2, [r4, #4]
 801d214:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801d218:	f7ff ff9e 	bl	801d158 <__retarget_lock_release_recursive>
 801d21c:	2000      	movs	r0, #0
 801d21e:	e7ca      	b.n	801d1b6 <__register_exitproc+0x3e>
 801d220:	2400b334 	.word	0x2400b334
 801d224:	2400b2a8 	.word	0x2400b2a8
 801d228:	0801f30c 	.word	0x0801f30c
 801d22c:	0801cbf9 	.word	0x0801cbf9
 801d230:	24000124 	.word	0x24000124

0801d234 <_free_r>:
 801d234:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801d236:	2900      	cmp	r1, #0
 801d238:	d044      	beq.n	801d2c4 <_free_r+0x90>
 801d23a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801d23e:	9001      	str	r0, [sp, #4]
 801d240:	2b00      	cmp	r3, #0
 801d242:	f1a1 0404 	sub.w	r4, r1, #4
 801d246:	bfb8      	it	lt
 801d248:	18e4      	addlt	r4, r4, r3
 801d24a:	f7ff fd85 	bl	801cd58 <__malloc_lock>
 801d24e:	4a1e      	ldr	r2, [pc, #120]	; (801d2c8 <_free_r+0x94>)
 801d250:	9801      	ldr	r0, [sp, #4]
 801d252:	6813      	ldr	r3, [r2, #0]
 801d254:	b933      	cbnz	r3, 801d264 <_free_r+0x30>
 801d256:	6063      	str	r3, [r4, #4]
 801d258:	6014      	str	r4, [r2, #0]
 801d25a:	b003      	add	sp, #12
 801d25c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801d260:	f7ff bd80 	b.w	801cd64 <__malloc_unlock>
 801d264:	42a3      	cmp	r3, r4
 801d266:	d908      	bls.n	801d27a <_free_r+0x46>
 801d268:	6825      	ldr	r5, [r4, #0]
 801d26a:	1961      	adds	r1, r4, r5
 801d26c:	428b      	cmp	r3, r1
 801d26e:	bf01      	itttt	eq
 801d270:	6819      	ldreq	r1, [r3, #0]
 801d272:	685b      	ldreq	r3, [r3, #4]
 801d274:	1949      	addeq	r1, r1, r5
 801d276:	6021      	streq	r1, [r4, #0]
 801d278:	e7ed      	b.n	801d256 <_free_r+0x22>
 801d27a:	461a      	mov	r2, r3
 801d27c:	685b      	ldr	r3, [r3, #4]
 801d27e:	b10b      	cbz	r3, 801d284 <_free_r+0x50>
 801d280:	42a3      	cmp	r3, r4
 801d282:	d9fa      	bls.n	801d27a <_free_r+0x46>
 801d284:	6811      	ldr	r1, [r2, #0]
 801d286:	1855      	adds	r5, r2, r1
 801d288:	42a5      	cmp	r5, r4
 801d28a:	d10b      	bne.n	801d2a4 <_free_r+0x70>
 801d28c:	6824      	ldr	r4, [r4, #0]
 801d28e:	4421      	add	r1, r4
 801d290:	1854      	adds	r4, r2, r1
 801d292:	42a3      	cmp	r3, r4
 801d294:	6011      	str	r1, [r2, #0]
 801d296:	d1e0      	bne.n	801d25a <_free_r+0x26>
 801d298:	681c      	ldr	r4, [r3, #0]
 801d29a:	685b      	ldr	r3, [r3, #4]
 801d29c:	6053      	str	r3, [r2, #4]
 801d29e:	440c      	add	r4, r1
 801d2a0:	6014      	str	r4, [r2, #0]
 801d2a2:	e7da      	b.n	801d25a <_free_r+0x26>
 801d2a4:	d902      	bls.n	801d2ac <_free_r+0x78>
 801d2a6:	230c      	movs	r3, #12
 801d2a8:	6003      	str	r3, [r0, #0]
 801d2aa:	e7d6      	b.n	801d25a <_free_r+0x26>
 801d2ac:	6825      	ldr	r5, [r4, #0]
 801d2ae:	1961      	adds	r1, r4, r5
 801d2b0:	428b      	cmp	r3, r1
 801d2b2:	bf04      	itt	eq
 801d2b4:	6819      	ldreq	r1, [r3, #0]
 801d2b6:	685b      	ldreq	r3, [r3, #4]
 801d2b8:	6063      	str	r3, [r4, #4]
 801d2ba:	bf04      	itt	eq
 801d2bc:	1949      	addeq	r1, r1, r5
 801d2be:	6021      	streq	r1, [r4, #0]
 801d2c0:	6054      	str	r4, [r2, #4]
 801d2c2:	e7ca      	b.n	801d25a <_free_r+0x26>
 801d2c4:	b003      	add	sp, #12
 801d2c6:	bd30      	pop	{r4, r5, pc}
 801d2c8:	2400b15c 	.word	0x2400b15c

0801d2cc <__sfputc_r>:
 801d2cc:	6893      	ldr	r3, [r2, #8]
 801d2ce:	3b01      	subs	r3, #1
 801d2d0:	2b00      	cmp	r3, #0
 801d2d2:	b410      	push	{r4}
 801d2d4:	6093      	str	r3, [r2, #8]
 801d2d6:	da08      	bge.n	801d2ea <__sfputc_r+0x1e>
 801d2d8:	6994      	ldr	r4, [r2, #24]
 801d2da:	42a3      	cmp	r3, r4
 801d2dc:	db01      	blt.n	801d2e2 <__sfputc_r+0x16>
 801d2de:	290a      	cmp	r1, #10
 801d2e0:	d103      	bne.n	801d2ea <__sfputc_r+0x1e>
 801d2e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d2e6:	f000 bb73 	b.w	801d9d0 <__swbuf_r>
 801d2ea:	6813      	ldr	r3, [r2, #0]
 801d2ec:	1c58      	adds	r0, r3, #1
 801d2ee:	6010      	str	r0, [r2, #0]
 801d2f0:	7019      	strb	r1, [r3, #0]
 801d2f2:	4608      	mov	r0, r1
 801d2f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 801d2f8:	4770      	bx	lr

0801d2fa <__sfputs_r>:
 801d2fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d2fc:	4606      	mov	r6, r0
 801d2fe:	460f      	mov	r7, r1
 801d300:	4614      	mov	r4, r2
 801d302:	18d5      	adds	r5, r2, r3
 801d304:	42ac      	cmp	r4, r5
 801d306:	d101      	bne.n	801d30c <__sfputs_r+0x12>
 801d308:	2000      	movs	r0, #0
 801d30a:	e007      	b.n	801d31c <__sfputs_r+0x22>
 801d30c:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d310:	463a      	mov	r2, r7
 801d312:	4630      	mov	r0, r6
 801d314:	f7ff ffda 	bl	801d2cc <__sfputc_r>
 801d318:	1c43      	adds	r3, r0, #1
 801d31a:	d1f3      	bne.n	801d304 <__sfputs_r+0xa>
 801d31c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801d320 <_vfiprintf_r>:
 801d320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d324:	460d      	mov	r5, r1
 801d326:	b09d      	sub	sp, #116	; 0x74
 801d328:	4614      	mov	r4, r2
 801d32a:	4698      	mov	r8, r3
 801d32c:	4606      	mov	r6, r0
 801d32e:	b118      	cbz	r0, 801d338 <_vfiprintf_r+0x18>
 801d330:	6a03      	ldr	r3, [r0, #32]
 801d332:	b90b      	cbnz	r3, 801d338 <_vfiprintf_r+0x18>
 801d334:	f7ff fdb6 	bl	801cea4 <__sinit>
 801d338:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d33a:	07d9      	lsls	r1, r3, #31
 801d33c:	d405      	bmi.n	801d34a <_vfiprintf_r+0x2a>
 801d33e:	89ab      	ldrh	r3, [r5, #12]
 801d340:	059a      	lsls	r2, r3, #22
 801d342:	d402      	bmi.n	801d34a <_vfiprintf_r+0x2a>
 801d344:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d346:	f7ff ff06 	bl	801d156 <__retarget_lock_acquire_recursive>
 801d34a:	89ab      	ldrh	r3, [r5, #12]
 801d34c:	071b      	lsls	r3, r3, #28
 801d34e:	d501      	bpl.n	801d354 <_vfiprintf_r+0x34>
 801d350:	692b      	ldr	r3, [r5, #16]
 801d352:	b99b      	cbnz	r3, 801d37c <_vfiprintf_r+0x5c>
 801d354:	4629      	mov	r1, r5
 801d356:	4630      	mov	r0, r6
 801d358:	f000 fb78 	bl	801da4c <__swsetup_r>
 801d35c:	b170      	cbz	r0, 801d37c <_vfiprintf_r+0x5c>
 801d35e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d360:	07dc      	lsls	r4, r3, #31
 801d362:	d504      	bpl.n	801d36e <_vfiprintf_r+0x4e>
 801d364:	f04f 30ff 	mov.w	r0, #4294967295
 801d368:	b01d      	add	sp, #116	; 0x74
 801d36a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d36e:	89ab      	ldrh	r3, [r5, #12]
 801d370:	0598      	lsls	r0, r3, #22
 801d372:	d4f7      	bmi.n	801d364 <_vfiprintf_r+0x44>
 801d374:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d376:	f7ff feef 	bl	801d158 <__retarget_lock_release_recursive>
 801d37a:	e7f3      	b.n	801d364 <_vfiprintf_r+0x44>
 801d37c:	2300      	movs	r3, #0
 801d37e:	9309      	str	r3, [sp, #36]	; 0x24
 801d380:	2320      	movs	r3, #32
 801d382:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801d386:	f8cd 800c 	str.w	r8, [sp, #12]
 801d38a:	2330      	movs	r3, #48	; 0x30
 801d38c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 801d540 <_vfiprintf_r+0x220>
 801d390:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801d394:	f04f 0901 	mov.w	r9, #1
 801d398:	4623      	mov	r3, r4
 801d39a:	469a      	mov	sl, r3
 801d39c:	f813 2b01 	ldrb.w	r2, [r3], #1
 801d3a0:	b10a      	cbz	r2, 801d3a6 <_vfiprintf_r+0x86>
 801d3a2:	2a25      	cmp	r2, #37	; 0x25
 801d3a4:	d1f9      	bne.n	801d39a <_vfiprintf_r+0x7a>
 801d3a6:	ebba 0b04 	subs.w	fp, sl, r4
 801d3aa:	d00b      	beq.n	801d3c4 <_vfiprintf_r+0xa4>
 801d3ac:	465b      	mov	r3, fp
 801d3ae:	4622      	mov	r2, r4
 801d3b0:	4629      	mov	r1, r5
 801d3b2:	4630      	mov	r0, r6
 801d3b4:	f7ff ffa1 	bl	801d2fa <__sfputs_r>
 801d3b8:	3001      	adds	r0, #1
 801d3ba:	f000 80a9 	beq.w	801d510 <_vfiprintf_r+0x1f0>
 801d3be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d3c0:	445a      	add	r2, fp
 801d3c2:	9209      	str	r2, [sp, #36]	; 0x24
 801d3c4:	f89a 3000 	ldrb.w	r3, [sl]
 801d3c8:	2b00      	cmp	r3, #0
 801d3ca:	f000 80a1 	beq.w	801d510 <_vfiprintf_r+0x1f0>
 801d3ce:	2300      	movs	r3, #0
 801d3d0:	f04f 32ff 	mov.w	r2, #4294967295
 801d3d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801d3d8:	f10a 0a01 	add.w	sl, sl, #1
 801d3dc:	9304      	str	r3, [sp, #16]
 801d3de:	9307      	str	r3, [sp, #28]
 801d3e0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801d3e4:	931a      	str	r3, [sp, #104]	; 0x68
 801d3e6:	4654      	mov	r4, sl
 801d3e8:	2205      	movs	r2, #5
 801d3ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d3ee:	4854      	ldr	r0, [pc, #336]	; (801d540 <_vfiprintf_r+0x220>)
 801d3f0:	f7e2 ff7e 	bl	80002f0 <memchr>
 801d3f4:	9a04      	ldr	r2, [sp, #16]
 801d3f6:	b9d8      	cbnz	r0, 801d430 <_vfiprintf_r+0x110>
 801d3f8:	06d1      	lsls	r1, r2, #27
 801d3fa:	bf44      	itt	mi
 801d3fc:	2320      	movmi	r3, #32
 801d3fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801d402:	0713      	lsls	r3, r2, #28
 801d404:	bf44      	itt	mi
 801d406:	232b      	movmi	r3, #43	; 0x2b
 801d408:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801d40c:	f89a 3000 	ldrb.w	r3, [sl]
 801d410:	2b2a      	cmp	r3, #42	; 0x2a
 801d412:	d015      	beq.n	801d440 <_vfiprintf_r+0x120>
 801d414:	9a07      	ldr	r2, [sp, #28]
 801d416:	4654      	mov	r4, sl
 801d418:	2000      	movs	r0, #0
 801d41a:	f04f 0c0a 	mov.w	ip, #10
 801d41e:	4621      	mov	r1, r4
 801d420:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d424:	3b30      	subs	r3, #48	; 0x30
 801d426:	2b09      	cmp	r3, #9
 801d428:	d94d      	bls.n	801d4c6 <_vfiprintf_r+0x1a6>
 801d42a:	b1b0      	cbz	r0, 801d45a <_vfiprintf_r+0x13a>
 801d42c:	9207      	str	r2, [sp, #28]
 801d42e:	e014      	b.n	801d45a <_vfiprintf_r+0x13a>
 801d430:	eba0 0308 	sub.w	r3, r0, r8
 801d434:	fa09 f303 	lsl.w	r3, r9, r3
 801d438:	4313      	orrs	r3, r2
 801d43a:	9304      	str	r3, [sp, #16]
 801d43c:	46a2      	mov	sl, r4
 801d43e:	e7d2      	b.n	801d3e6 <_vfiprintf_r+0xc6>
 801d440:	9b03      	ldr	r3, [sp, #12]
 801d442:	1d19      	adds	r1, r3, #4
 801d444:	681b      	ldr	r3, [r3, #0]
 801d446:	9103      	str	r1, [sp, #12]
 801d448:	2b00      	cmp	r3, #0
 801d44a:	bfbb      	ittet	lt
 801d44c:	425b      	neglt	r3, r3
 801d44e:	f042 0202 	orrlt.w	r2, r2, #2
 801d452:	9307      	strge	r3, [sp, #28]
 801d454:	9307      	strlt	r3, [sp, #28]
 801d456:	bfb8      	it	lt
 801d458:	9204      	strlt	r2, [sp, #16]
 801d45a:	7823      	ldrb	r3, [r4, #0]
 801d45c:	2b2e      	cmp	r3, #46	; 0x2e
 801d45e:	d10c      	bne.n	801d47a <_vfiprintf_r+0x15a>
 801d460:	7863      	ldrb	r3, [r4, #1]
 801d462:	2b2a      	cmp	r3, #42	; 0x2a
 801d464:	d134      	bne.n	801d4d0 <_vfiprintf_r+0x1b0>
 801d466:	9b03      	ldr	r3, [sp, #12]
 801d468:	1d1a      	adds	r2, r3, #4
 801d46a:	681b      	ldr	r3, [r3, #0]
 801d46c:	9203      	str	r2, [sp, #12]
 801d46e:	2b00      	cmp	r3, #0
 801d470:	bfb8      	it	lt
 801d472:	f04f 33ff 	movlt.w	r3, #4294967295
 801d476:	3402      	adds	r4, #2
 801d478:	9305      	str	r3, [sp, #20]
 801d47a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 801d550 <_vfiprintf_r+0x230>
 801d47e:	7821      	ldrb	r1, [r4, #0]
 801d480:	2203      	movs	r2, #3
 801d482:	4650      	mov	r0, sl
 801d484:	f7e2 ff34 	bl	80002f0 <memchr>
 801d488:	b138      	cbz	r0, 801d49a <_vfiprintf_r+0x17a>
 801d48a:	9b04      	ldr	r3, [sp, #16]
 801d48c:	eba0 000a 	sub.w	r0, r0, sl
 801d490:	2240      	movs	r2, #64	; 0x40
 801d492:	4082      	lsls	r2, r0
 801d494:	4313      	orrs	r3, r2
 801d496:	3401      	adds	r4, #1
 801d498:	9304      	str	r3, [sp, #16]
 801d49a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801d49e:	4829      	ldr	r0, [pc, #164]	; (801d544 <_vfiprintf_r+0x224>)
 801d4a0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801d4a4:	2206      	movs	r2, #6
 801d4a6:	f7e2 ff23 	bl	80002f0 <memchr>
 801d4aa:	2800      	cmp	r0, #0
 801d4ac:	d03f      	beq.n	801d52e <_vfiprintf_r+0x20e>
 801d4ae:	4b26      	ldr	r3, [pc, #152]	; (801d548 <_vfiprintf_r+0x228>)
 801d4b0:	bb1b      	cbnz	r3, 801d4fa <_vfiprintf_r+0x1da>
 801d4b2:	9b03      	ldr	r3, [sp, #12]
 801d4b4:	3307      	adds	r3, #7
 801d4b6:	f023 0307 	bic.w	r3, r3, #7
 801d4ba:	3308      	adds	r3, #8
 801d4bc:	9303      	str	r3, [sp, #12]
 801d4be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d4c0:	443b      	add	r3, r7
 801d4c2:	9309      	str	r3, [sp, #36]	; 0x24
 801d4c4:	e768      	b.n	801d398 <_vfiprintf_r+0x78>
 801d4c6:	fb0c 3202 	mla	r2, ip, r2, r3
 801d4ca:	460c      	mov	r4, r1
 801d4cc:	2001      	movs	r0, #1
 801d4ce:	e7a6      	b.n	801d41e <_vfiprintf_r+0xfe>
 801d4d0:	2300      	movs	r3, #0
 801d4d2:	3401      	adds	r4, #1
 801d4d4:	9305      	str	r3, [sp, #20]
 801d4d6:	4619      	mov	r1, r3
 801d4d8:	f04f 0c0a 	mov.w	ip, #10
 801d4dc:	4620      	mov	r0, r4
 801d4de:	f810 2b01 	ldrb.w	r2, [r0], #1
 801d4e2:	3a30      	subs	r2, #48	; 0x30
 801d4e4:	2a09      	cmp	r2, #9
 801d4e6:	d903      	bls.n	801d4f0 <_vfiprintf_r+0x1d0>
 801d4e8:	2b00      	cmp	r3, #0
 801d4ea:	d0c6      	beq.n	801d47a <_vfiprintf_r+0x15a>
 801d4ec:	9105      	str	r1, [sp, #20]
 801d4ee:	e7c4      	b.n	801d47a <_vfiprintf_r+0x15a>
 801d4f0:	fb0c 2101 	mla	r1, ip, r1, r2
 801d4f4:	4604      	mov	r4, r0
 801d4f6:	2301      	movs	r3, #1
 801d4f8:	e7f0      	b.n	801d4dc <_vfiprintf_r+0x1bc>
 801d4fa:	ab03      	add	r3, sp, #12
 801d4fc:	9300      	str	r3, [sp, #0]
 801d4fe:	462a      	mov	r2, r5
 801d500:	4b12      	ldr	r3, [pc, #72]	; (801d54c <_vfiprintf_r+0x22c>)
 801d502:	a904      	add	r1, sp, #16
 801d504:	4630      	mov	r0, r6
 801d506:	f3af 8000 	nop.w
 801d50a:	4607      	mov	r7, r0
 801d50c:	1c78      	adds	r0, r7, #1
 801d50e:	d1d6      	bne.n	801d4be <_vfiprintf_r+0x19e>
 801d510:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801d512:	07d9      	lsls	r1, r3, #31
 801d514:	d405      	bmi.n	801d522 <_vfiprintf_r+0x202>
 801d516:	89ab      	ldrh	r3, [r5, #12]
 801d518:	059a      	lsls	r2, r3, #22
 801d51a:	d402      	bmi.n	801d522 <_vfiprintf_r+0x202>
 801d51c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 801d51e:	f7ff fe1b 	bl	801d158 <__retarget_lock_release_recursive>
 801d522:	89ab      	ldrh	r3, [r5, #12]
 801d524:	065b      	lsls	r3, r3, #25
 801d526:	f53f af1d 	bmi.w	801d364 <_vfiprintf_r+0x44>
 801d52a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d52c:	e71c      	b.n	801d368 <_vfiprintf_r+0x48>
 801d52e:	ab03      	add	r3, sp, #12
 801d530:	9300      	str	r3, [sp, #0]
 801d532:	462a      	mov	r2, r5
 801d534:	4b05      	ldr	r3, [pc, #20]	; (801d54c <_vfiprintf_r+0x22c>)
 801d536:	a904      	add	r1, sp, #16
 801d538:	4630      	mov	r0, r6
 801d53a:	f000 f879 	bl	801d630 <_printf_i>
 801d53e:	e7e4      	b.n	801d50a <_vfiprintf_r+0x1ea>
 801d540:	0801f310 	.word	0x0801f310
 801d544:	0801f31a 	.word	0x0801f31a
 801d548:	00000000 	.word	0x00000000
 801d54c:	0801d2fb 	.word	0x0801d2fb
 801d550:	0801f316 	.word	0x0801f316

0801d554 <_printf_common>:
 801d554:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d558:	4616      	mov	r6, r2
 801d55a:	4699      	mov	r9, r3
 801d55c:	688a      	ldr	r2, [r1, #8]
 801d55e:	690b      	ldr	r3, [r1, #16]
 801d560:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801d564:	4293      	cmp	r3, r2
 801d566:	bfb8      	it	lt
 801d568:	4613      	movlt	r3, r2
 801d56a:	6033      	str	r3, [r6, #0]
 801d56c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801d570:	4607      	mov	r7, r0
 801d572:	460c      	mov	r4, r1
 801d574:	b10a      	cbz	r2, 801d57a <_printf_common+0x26>
 801d576:	3301      	adds	r3, #1
 801d578:	6033      	str	r3, [r6, #0]
 801d57a:	6823      	ldr	r3, [r4, #0]
 801d57c:	0699      	lsls	r1, r3, #26
 801d57e:	bf42      	ittt	mi
 801d580:	6833      	ldrmi	r3, [r6, #0]
 801d582:	3302      	addmi	r3, #2
 801d584:	6033      	strmi	r3, [r6, #0]
 801d586:	6825      	ldr	r5, [r4, #0]
 801d588:	f015 0506 	ands.w	r5, r5, #6
 801d58c:	d106      	bne.n	801d59c <_printf_common+0x48>
 801d58e:	f104 0a19 	add.w	sl, r4, #25
 801d592:	68e3      	ldr	r3, [r4, #12]
 801d594:	6832      	ldr	r2, [r6, #0]
 801d596:	1a9b      	subs	r3, r3, r2
 801d598:	42ab      	cmp	r3, r5
 801d59a:	dc26      	bgt.n	801d5ea <_printf_common+0x96>
 801d59c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 801d5a0:	1e13      	subs	r3, r2, #0
 801d5a2:	6822      	ldr	r2, [r4, #0]
 801d5a4:	bf18      	it	ne
 801d5a6:	2301      	movne	r3, #1
 801d5a8:	0692      	lsls	r2, r2, #26
 801d5aa:	d42b      	bmi.n	801d604 <_printf_common+0xb0>
 801d5ac:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801d5b0:	4649      	mov	r1, r9
 801d5b2:	4638      	mov	r0, r7
 801d5b4:	47c0      	blx	r8
 801d5b6:	3001      	adds	r0, #1
 801d5b8:	d01e      	beq.n	801d5f8 <_printf_common+0xa4>
 801d5ba:	6823      	ldr	r3, [r4, #0]
 801d5bc:	6922      	ldr	r2, [r4, #16]
 801d5be:	f003 0306 	and.w	r3, r3, #6
 801d5c2:	2b04      	cmp	r3, #4
 801d5c4:	bf02      	ittt	eq
 801d5c6:	68e5      	ldreq	r5, [r4, #12]
 801d5c8:	6833      	ldreq	r3, [r6, #0]
 801d5ca:	1aed      	subeq	r5, r5, r3
 801d5cc:	68a3      	ldr	r3, [r4, #8]
 801d5ce:	bf0c      	ite	eq
 801d5d0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801d5d4:	2500      	movne	r5, #0
 801d5d6:	4293      	cmp	r3, r2
 801d5d8:	bfc4      	itt	gt
 801d5da:	1a9b      	subgt	r3, r3, r2
 801d5dc:	18ed      	addgt	r5, r5, r3
 801d5de:	2600      	movs	r6, #0
 801d5e0:	341a      	adds	r4, #26
 801d5e2:	42b5      	cmp	r5, r6
 801d5e4:	d11a      	bne.n	801d61c <_printf_common+0xc8>
 801d5e6:	2000      	movs	r0, #0
 801d5e8:	e008      	b.n	801d5fc <_printf_common+0xa8>
 801d5ea:	2301      	movs	r3, #1
 801d5ec:	4652      	mov	r2, sl
 801d5ee:	4649      	mov	r1, r9
 801d5f0:	4638      	mov	r0, r7
 801d5f2:	47c0      	blx	r8
 801d5f4:	3001      	adds	r0, #1
 801d5f6:	d103      	bne.n	801d600 <_printf_common+0xac>
 801d5f8:	f04f 30ff 	mov.w	r0, #4294967295
 801d5fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d600:	3501      	adds	r5, #1
 801d602:	e7c6      	b.n	801d592 <_printf_common+0x3e>
 801d604:	18e1      	adds	r1, r4, r3
 801d606:	1c5a      	adds	r2, r3, #1
 801d608:	2030      	movs	r0, #48	; 0x30
 801d60a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801d60e:	4422      	add	r2, r4
 801d610:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801d614:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801d618:	3302      	adds	r3, #2
 801d61a:	e7c7      	b.n	801d5ac <_printf_common+0x58>
 801d61c:	2301      	movs	r3, #1
 801d61e:	4622      	mov	r2, r4
 801d620:	4649      	mov	r1, r9
 801d622:	4638      	mov	r0, r7
 801d624:	47c0      	blx	r8
 801d626:	3001      	adds	r0, #1
 801d628:	d0e6      	beq.n	801d5f8 <_printf_common+0xa4>
 801d62a:	3601      	adds	r6, #1
 801d62c:	e7d9      	b.n	801d5e2 <_printf_common+0x8e>
	...

0801d630 <_printf_i>:
 801d630:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801d634:	7e0f      	ldrb	r7, [r1, #24]
 801d636:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801d638:	2f78      	cmp	r7, #120	; 0x78
 801d63a:	4691      	mov	r9, r2
 801d63c:	4680      	mov	r8, r0
 801d63e:	460c      	mov	r4, r1
 801d640:	469a      	mov	sl, r3
 801d642:	f101 0243 	add.w	r2, r1, #67	; 0x43
 801d646:	d807      	bhi.n	801d658 <_printf_i+0x28>
 801d648:	2f62      	cmp	r7, #98	; 0x62
 801d64a:	d80a      	bhi.n	801d662 <_printf_i+0x32>
 801d64c:	2f00      	cmp	r7, #0
 801d64e:	f000 80d4 	beq.w	801d7fa <_printf_i+0x1ca>
 801d652:	2f58      	cmp	r7, #88	; 0x58
 801d654:	f000 80c0 	beq.w	801d7d8 <_printf_i+0x1a8>
 801d658:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801d65c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 801d660:	e03a      	b.n	801d6d8 <_printf_i+0xa8>
 801d662:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 801d666:	2b15      	cmp	r3, #21
 801d668:	d8f6      	bhi.n	801d658 <_printf_i+0x28>
 801d66a:	a101      	add	r1, pc, #4	; (adr r1, 801d670 <_printf_i+0x40>)
 801d66c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 801d670:	0801d6c9 	.word	0x0801d6c9
 801d674:	0801d6dd 	.word	0x0801d6dd
 801d678:	0801d659 	.word	0x0801d659
 801d67c:	0801d659 	.word	0x0801d659
 801d680:	0801d659 	.word	0x0801d659
 801d684:	0801d659 	.word	0x0801d659
 801d688:	0801d6dd 	.word	0x0801d6dd
 801d68c:	0801d659 	.word	0x0801d659
 801d690:	0801d659 	.word	0x0801d659
 801d694:	0801d659 	.word	0x0801d659
 801d698:	0801d659 	.word	0x0801d659
 801d69c:	0801d7e1 	.word	0x0801d7e1
 801d6a0:	0801d709 	.word	0x0801d709
 801d6a4:	0801d79b 	.word	0x0801d79b
 801d6a8:	0801d659 	.word	0x0801d659
 801d6ac:	0801d659 	.word	0x0801d659
 801d6b0:	0801d803 	.word	0x0801d803
 801d6b4:	0801d659 	.word	0x0801d659
 801d6b8:	0801d709 	.word	0x0801d709
 801d6bc:	0801d659 	.word	0x0801d659
 801d6c0:	0801d659 	.word	0x0801d659
 801d6c4:	0801d7a3 	.word	0x0801d7a3
 801d6c8:	682b      	ldr	r3, [r5, #0]
 801d6ca:	1d1a      	adds	r2, r3, #4
 801d6cc:	681b      	ldr	r3, [r3, #0]
 801d6ce:	602a      	str	r2, [r5, #0]
 801d6d0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801d6d4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801d6d8:	2301      	movs	r3, #1
 801d6da:	e09f      	b.n	801d81c <_printf_i+0x1ec>
 801d6dc:	6820      	ldr	r0, [r4, #0]
 801d6de:	682b      	ldr	r3, [r5, #0]
 801d6e0:	0607      	lsls	r7, r0, #24
 801d6e2:	f103 0104 	add.w	r1, r3, #4
 801d6e6:	6029      	str	r1, [r5, #0]
 801d6e8:	d501      	bpl.n	801d6ee <_printf_i+0xbe>
 801d6ea:	681e      	ldr	r6, [r3, #0]
 801d6ec:	e003      	b.n	801d6f6 <_printf_i+0xc6>
 801d6ee:	0646      	lsls	r6, r0, #25
 801d6f0:	d5fb      	bpl.n	801d6ea <_printf_i+0xba>
 801d6f2:	f9b3 6000 	ldrsh.w	r6, [r3]
 801d6f6:	2e00      	cmp	r6, #0
 801d6f8:	da03      	bge.n	801d702 <_printf_i+0xd2>
 801d6fa:	232d      	movs	r3, #45	; 0x2d
 801d6fc:	4276      	negs	r6, r6
 801d6fe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d702:	485a      	ldr	r0, [pc, #360]	; (801d86c <_printf_i+0x23c>)
 801d704:	230a      	movs	r3, #10
 801d706:	e012      	b.n	801d72e <_printf_i+0xfe>
 801d708:	682b      	ldr	r3, [r5, #0]
 801d70a:	6820      	ldr	r0, [r4, #0]
 801d70c:	1d19      	adds	r1, r3, #4
 801d70e:	6029      	str	r1, [r5, #0]
 801d710:	0605      	lsls	r5, r0, #24
 801d712:	d501      	bpl.n	801d718 <_printf_i+0xe8>
 801d714:	681e      	ldr	r6, [r3, #0]
 801d716:	e002      	b.n	801d71e <_printf_i+0xee>
 801d718:	0641      	lsls	r1, r0, #25
 801d71a:	d5fb      	bpl.n	801d714 <_printf_i+0xe4>
 801d71c:	881e      	ldrh	r6, [r3, #0]
 801d71e:	4853      	ldr	r0, [pc, #332]	; (801d86c <_printf_i+0x23c>)
 801d720:	2f6f      	cmp	r7, #111	; 0x6f
 801d722:	bf0c      	ite	eq
 801d724:	2308      	moveq	r3, #8
 801d726:	230a      	movne	r3, #10
 801d728:	2100      	movs	r1, #0
 801d72a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801d72e:	6865      	ldr	r5, [r4, #4]
 801d730:	60a5      	str	r5, [r4, #8]
 801d732:	2d00      	cmp	r5, #0
 801d734:	bfa2      	ittt	ge
 801d736:	6821      	ldrge	r1, [r4, #0]
 801d738:	f021 0104 	bicge.w	r1, r1, #4
 801d73c:	6021      	strge	r1, [r4, #0]
 801d73e:	b90e      	cbnz	r6, 801d744 <_printf_i+0x114>
 801d740:	2d00      	cmp	r5, #0
 801d742:	d04b      	beq.n	801d7dc <_printf_i+0x1ac>
 801d744:	4615      	mov	r5, r2
 801d746:	fbb6 f1f3 	udiv	r1, r6, r3
 801d74a:	fb03 6711 	mls	r7, r3, r1, r6
 801d74e:	5dc7      	ldrb	r7, [r0, r7]
 801d750:	f805 7d01 	strb.w	r7, [r5, #-1]!
 801d754:	4637      	mov	r7, r6
 801d756:	42bb      	cmp	r3, r7
 801d758:	460e      	mov	r6, r1
 801d75a:	d9f4      	bls.n	801d746 <_printf_i+0x116>
 801d75c:	2b08      	cmp	r3, #8
 801d75e:	d10b      	bne.n	801d778 <_printf_i+0x148>
 801d760:	6823      	ldr	r3, [r4, #0]
 801d762:	07de      	lsls	r6, r3, #31
 801d764:	d508      	bpl.n	801d778 <_printf_i+0x148>
 801d766:	6923      	ldr	r3, [r4, #16]
 801d768:	6861      	ldr	r1, [r4, #4]
 801d76a:	4299      	cmp	r1, r3
 801d76c:	bfde      	ittt	le
 801d76e:	2330      	movle	r3, #48	; 0x30
 801d770:	f805 3c01 	strble.w	r3, [r5, #-1]
 801d774:	f105 35ff 	addle.w	r5, r5, #4294967295
 801d778:	1b52      	subs	r2, r2, r5
 801d77a:	6122      	str	r2, [r4, #16]
 801d77c:	f8cd a000 	str.w	sl, [sp]
 801d780:	464b      	mov	r3, r9
 801d782:	aa03      	add	r2, sp, #12
 801d784:	4621      	mov	r1, r4
 801d786:	4640      	mov	r0, r8
 801d788:	f7ff fee4 	bl	801d554 <_printf_common>
 801d78c:	3001      	adds	r0, #1
 801d78e:	d14a      	bne.n	801d826 <_printf_i+0x1f6>
 801d790:	f04f 30ff 	mov.w	r0, #4294967295
 801d794:	b004      	add	sp, #16
 801d796:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d79a:	6823      	ldr	r3, [r4, #0]
 801d79c:	f043 0320 	orr.w	r3, r3, #32
 801d7a0:	6023      	str	r3, [r4, #0]
 801d7a2:	4833      	ldr	r0, [pc, #204]	; (801d870 <_printf_i+0x240>)
 801d7a4:	2778      	movs	r7, #120	; 0x78
 801d7a6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 801d7aa:	6823      	ldr	r3, [r4, #0]
 801d7ac:	6829      	ldr	r1, [r5, #0]
 801d7ae:	061f      	lsls	r7, r3, #24
 801d7b0:	f851 6b04 	ldr.w	r6, [r1], #4
 801d7b4:	d402      	bmi.n	801d7bc <_printf_i+0x18c>
 801d7b6:	065f      	lsls	r7, r3, #25
 801d7b8:	bf48      	it	mi
 801d7ba:	b2b6      	uxthmi	r6, r6
 801d7bc:	07df      	lsls	r7, r3, #31
 801d7be:	bf48      	it	mi
 801d7c0:	f043 0320 	orrmi.w	r3, r3, #32
 801d7c4:	6029      	str	r1, [r5, #0]
 801d7c6:	bf48      	it	mi
 801d7c8:	6023      	strmi	r3, [r4, #0]
 801d7ca:	b91e      	cbnz	r6, 801d7d4 <_printf_i+0x1a4>
 801d7cc:	6823      	ldr	r3, [r4, #0]
 801d7ce:	f023 0320 	bic.w	r3, r3, #32
 801d7d2:	6023      	str	r3, [r4, #0]
 801d7d4:	2310      	movs	r3, #16
 801d7d6:	e7a7      	b.n	801d728 <_printf_i+0xf8>
 801d7d8:	4824      	ldr	r0, [pc, #144]	; (801d86c <_printf_i+0x23c>)
 801d7da:	e7e4      	b.n	801d7a6 <_printf_i+0x176>
 801d7dc:	4615      	mov	r5, r2
 801d7de:	e7bd      	b.n	801d75c <_printf_i+0x12c>
 801d7e0:	682b      	ldr	r3, [r5, #0]
 801d7e2:	6826      	ldr	r6, [r4, #0]
 801d7e4:	6961      	ldr	r1, [r4, #20]
 801d7e6:	1d18      	adds	r0, r3, #4
 801d7e8:	6028      	str	r0, [r5, #0]
 801d7ea:	0635      	lsls	r5, r6, #24
 801d7ec:	681b      	ldr	r3, [r3, #0]
 801d7ee:	d501      	bpl.n	801d7f4 <_printf_i+0x1c4>
 801d7f0:	6019      	str	r1, [r3, #0]
 801d7f2:	e002      	b.n	801d7fa <_printf_i+0x1ca>
 801d7f4:	0670      	lsls	r0, r6, #25
 801d7f6:	d5fb      	bpl.n	801d7f0 <_printf_i+0x1c0>
 801d7f8:	8019      	strh	r1, [r3, #0]
 801d7fa:	2300      	movs	r3, #0
 801d7fc:	6123      	str	r3, [r4, #16]
 801d7fe:	4615      	mov	r5, r2
 801d800:	e7bc      	b.n	801d77c <_printf_i+0x14c>
 801d802:	682b      	ldr	r3, [r5, #0]
 801d804:	1d1a      	adds	r2, r3, #4
 801d806:	602a      	str	r2, [r5, #0]
 801d808:	681d      	ldr	r5, [r3, #0]
 801d80a:	6862      	ldr	r2, [r4, #4]
 801d80c:	2100      	movs	r1, #0
 801d80e:	4628      	mov	r0, r5
 801d810:	f7e2 fd6e 	bl	80002f0 <memchr>
 801d814:	b108      	cbz	r0, 801d81a <_printf_i+0x1ea>
 801d816:	1b40      	subs	r0, r0, r5
 801d818:	6060      	str	r0, [r4, #4]
 801d81a:	6863      	ldr	r3, [r4, #4]
 801d81c:	6123      	str	r3, [r4, #16]
 801d81e:	2300      	movs	r3, #0
 801d820:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801d824:	e7aa      	b.n	801d77c <_printf_i+0x14c>
 801d826:	6923      	ldr	r3, [r4, #16]
 801d828:	462a      	mov	r2, r5
 801d82a:	4649      	mov	r1, r9
 801d82c:	4640      	mov	r0, r8
 801d82e:	47d0      	blx	sl
 801d830:	3001      	adds	r0, #1
 801d832:	d0ad      	beq.n	801d790 <_printf_i+0x160>
 801d834:	6823      	ldr	r3, [r4, #0]
 801d836:	079b      	lsls	r3, r3, #30
 801d838:	d413      	bmi.n	801d862 <_printf_i+0x232>
 801d83a:	68e0      	ldr	r0, [r4, #12]
 801d83c:	9b03      	ldr	r3, [sp, #12]
 801d83e:	4298      	cmp	r0, r3
 801d840:	bfb8      	it	lt
 801d842:	4618      	movlt	r0, r3
 801d844:	e7a6      	b.n	801d794 <_printf_i+0x164>
 801d846:	2301      	movs	r3, #1
 801d848:	4632      	mov	r2, r6
 801d84a:	4649      	mov	r1, r9
 801d84c:	4640      	mov	r0, r8
 801d84e:	47d0      	blx	sl
 801d850:	3001      	adds	r0, #1
 801d852:	d09d      	beq.n	801d790 <_printf_i+0x160>
 801d854:	3501      	adds	r5, #1
 801d856:	68e3      	ldr	r3, [r4, #12]
 801d858:	9903      	ldr	r1, [sp, #12]
 801d85a:	1a5b      	subs	r3, r3, r1
 801d85c:	42ab      	cmp	r3, r5
 801d85e:	dcf2      	bgt.n	801d846 <_printf_i+0x216>
 801d860:	e7eb      	b.n	801d83a <_printf_i+0x20a>
 801d862:	2500      	movs	r5, #0
 801d864:	f104 0619 	add.w	r6, r4, #25
 801d868:	e7f5      	b.n	801d856 <_printf_i+0x226>
 801d86a:	bf00      	nop
 801d86c:	0801f321 	.word	0x0801f321
 801d870:	0801f332 	.word	0x0801f332

0801d874 <__sflush_r>:
 801d874:	898a      	ldrh	r2, [r1, #12]
 801d876:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801d87a:	4605      	mov	r5, r0
 801d87c:	0710      	lsls	r0, r2, #28
 801d87e:	460c      	mov	r4, r1
 801d880:	d458      	bmi.n	801d934 <__sflush_r+0xc0>
 801d882:	684b      	ldr	r3, [r1, #4]
 801d884:	2b00      	cmp	r3, #0
 801d886:	dc05      	bgt.n	801d894 <__sflush_r+0x20>
 801d888:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801d88a:	2b00      	cmp	r3, #0
 801d88c:	dc02      	bgt.n	801d894 <__sflush_r+0x20>
 801d88e:	2000      	movs	r0, #0
 801d890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801d894:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d896:	2e00      	cmp	r6, #0
 801d898:	d0f9      	beq.n	801d88e <__sflush_r+0x1a>
 801d89a:	2300      	movs	r3, #0
 801d89c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801d8a0:	682f      	ldr	r7, [r5, #0]
 801d8a2:	6a21      	ldr	r1, [r4, #32]
 801d8a4:	602b      	str	r3, [r5, #0]
 801d8a6:	d032      	beq.n	801d90e <__sflush_r+0x9a>
 801d8a8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801d8aa:	89a3      	ldrh	r3, [r4, #12]
 801d8ac:	075a      	lsls	r2, r3, #29
 801d8ae:	d505      	bpl.n	801d8bc <__sflush_r+0x48>
 801d8b0:	6863      	ldr	r3, [r4, #4]
 801d8b2:	1ac0      	subs	r0, r0, r3
 801d8b4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801d8b6:	b10b      	cbz	r3, 801d8bc <__sflush_r+0x48>
 801d8b8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801d8ba:	1ac0      	subs	r0, r0, r3
 801d8bc:	2300      	movs	r3, #0
 801d8be:	4602      	mov	r2, r0
 801d8c0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801d8c2:	6a21      	ldr	r1, [r4, #32]
 801d8c4:	4628      	mov	r0, r5
 801d8c6:	47b0      	blx	r6
 801d8c8:	1c43      	adds	r3, r0, #1
 801d8ca:	89a3      	ldrh	r3, [r4, #12]
 801d8cc:	d106      	bne.n	801d8dc <__sflush_r+0x68>
 801d8ce:	6829      	ldr	r1, [r5, #0]
 801d8d0:	291d      	cmp	r1, #29
 801d8d2:	d82b      	bhi.n	801d92c <__sflush_r+0xb8>
 801d8d4:	4a29      	ldr	r2, [pc, #164]	; (801d97c <__sflush_r+0x108>)
 801d8d6:	410a      	asrs	r2, r1
 801d8d8:	07d6      	lsls	r6, r2, #31
 801d8da:	d427      	bmi.n	801d92c <__sflush_r+0xb8>
 801d8dc:	2200      	movs	r2, #0
 801d8de:	6062      	str	r2, [r4, #4]
 801d8e0:	04d9      	lsls	r1, r3, #19
 801d8e2:	6922      	ldr	r2, [r4, #16]
 801d8e4:	6022      	str	r2, [r4, #0]
 801d8e6:	d504      	bpl.n	801d8f2 <__sflush_r+0x7e>
 801d8e8:	1c42      	adds	r2, r0, #1
 801d8ea:	d101      	bne.n	801d8f0 <__sflush_r+0x7c>
 801d8ec:	682b      	ldr	r3, [r5, #0]
 801d8ee:	b903      	cbnz	r3, 801d8f2 <__sflush_r+0x7e>
 801d8f0:	6560      	str	r0, [r4, #84]	; 0x54
 801d8f2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801d8f4:	602f      	str	r7, [r5, #0]
 801d8f6:	2900      	cmp	r1, #0
 801d8f8:	d0c9      	beq.n	801d88e <__sflush_r+0x1a>
 801d8fa:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801d8fe:	4299      	cmp	r1, r3
 801d900:	d002      	beq.n	801d908 <__sflush_r+0x94>
 801d902:	4628      	mov	r0, r5
 801d904:	f7ff fc96 	bl	801d234 <_free_r>
 801d908:	2000      	movs	r0, #0
 801d90a:	6360      	str	r0, [r4, #52]	; 0x34
 801d90c:	e7c0      	b.n	801d890 <__sflush_r+0x1c>
 801d90e:	2301      	movs	r3, #1
 801d910:	4628      	mov	r0, r5
 801d912:	47b0      	blx	r6
 801d914:	1c41      	adds	r1, r0, #1
 801d916:	d1c8      	bne.n	801d8aa <__sflush_r+0x36>
 801d918:	682b      	ldr	r3, [r5, #0]
 801d91a:	2b00      	cmp	r3, #0
 801d91c:	d0c5      	beq.n	801d8aa <__sflush_r+0x36>
 801d91e:	2b1d      	cmp	r3, #29
 801d920:	d001      	beq.n	801d926 <__sflush_r+0xb2>
 801d922:	2b16      	cmp	r3, #22
 801d924:	d101      	bne.n	801d92a <__sflush_r+0xb6>
 801d926:	602f      	str	r7, [r5, #0]
 801d928:	e7b1      	b.n	801d88e <__sflush_r+0x1a>
 801d92a:	89a3      	ldrh	r3, [r4, #12]
 801d92c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d930:	81a3      	strh	r3, [r4, #12]
 801d932:	e7ad      	b.n	801d890 <__sflush_r+0x1c>
 801d934:	690f      	ldr	r7, [r1, #16]
 801d936:	2f00      	cmp	r7, #0
 801d938:	d0a9      	beq.n	801d88e <__sflush_r+0x1a>
 801d93a:	0793      	lsls	r3, r2, #30
 801d93c:	680e      	ldr	r6, [r1, #0]
 801d93e:	bf08      	it	eq
 801d940:	694b      	ldreq	r3, [r1, #20]
 801d942:	600f      	str	r7, [r1, #0]
 801d944:	bf18      	it	ne
 801d946:	2300      	movne	r3, #0
 801d948:	eba6 0807 	sub.w	r8, r6, r7
 801d94c:	608b      	str	r3, [r1, #8]
 801d94e:	f1b8 0f00 	cmp.w	r8, #0
 801d952:	dd9c      	ble.n	801d88e <__sflush_r+0x1a>
 801d954:	6a21      	ldr	r1, [r4, #32]
 801d956:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801d958:	4643      	mov	r3, r8
 801d95a:	463a      	mov	r2, r7
 801d95c:	4628      	mov	r0, r5
 801d95e:	47b0      	blx	r6
 801d960:	2800      	cmp	r0, #0
 801d962:	dc06      	bgt.n	801d972 <__sflush_r+0xfe>
 801d964:	89a3      	ldrh	r3, [r4, #12]
 801d966:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801d96a:	81a3      	strh	r3, [r4, #12]
 801d96c:	f04f 30ff 	mov.w	r0, #4294967295
 801d970:	e78e      	b.n	801d890 <__sflush_r+0x1c>
 801d972:	4407      	add	r7, r0
 801d974:	eba8 0800 	sub.w	r8, r8, r0
 801d978:	e7e9      	b.n	801d94e <__sflush_r+0xda>
 801d97a:	bf00      	nop
 801d97c:	dfbffffe 	.word	0xdfbffffe

0801d980 <_fflush_r>:
 801d980:	b538      	push	{r3, r4, r5, lr}
 801d982:	690b      	ldr	r3, [r1, #16]
 801d984:	4605      	mov	r5, r0
 801d986:	460c      	mov	r4, r1
 801d988:	b913      	cbnz	r3, 801d990 <_fflush_r+0x10>
 801d98a:	2500      	movs	r5, #0
 801d98c:	4628      	mov	r0, r5
 801d98e:	bd38      	pop	{r3, r4, r5, pc}
 801d990:	b118      	cbz	r0, 801d99a <_fflush_r+0x1a>
 801d992:	6a03      	ldr	r3, [r0, #32]
 801d994:	b90b      	cbnz	r3, 801d99a <_fflush_r+0x1a>
 801d996:	f7ff fa85 	bl	801cea4 <__sinit>
 801d99a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801d99e:	2b00      	cmp	r3, #0
 801d9a0:	d0f3      	beq.n	801d98a <_fflush_r+0xa>
 801d9a2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801d9a4:	07d0      	lsls	r0, r2, #31
 801d9a6:	d404      	bmi.n	801d9b2 <_fflush_r+0x32>
 801d9a8:	0599      	lsls	r1, r3, #22
 801d9aa:	d402      	bmi.n	801d9b2 <_fflush_r+0x32>
 801d9ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801d9ae:	f7ff fbd2 	bl	801d156 <__retarget_lock_acquire_recursive>
 801d9b2:	4628      	mov	r0, r5
 801d9b4:	4621      	mov	r1, r4
 801d9b6:	f7ff ff5d 	bl	801d874 <__sflush_r>
 801d9ba:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801d9bc:	07da      	lsls	r2, r3, #31
 801d9be:	4605      	mov	r5, r0
 801d9c0:	d4e4      	bmi.n	801d98c <_fflush_r+0xc>
 801d9c2:	89a3      	ldrh	r3, [r4, #12]
 801d9c4:	059b      	lsls	r3, r3, #22
 801d9c6:	d4e1      	bmi.n	801d98c <_fflush_r+0xc>
 801d9c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801d9ca:	f7ff fbc5 	bl	801d158 <__retarget_lock_release_recursive>
 801d9ce:	e7dd      	b.n	801d98c <_fflush_r+0xc>

0801d9d0 <__swbuf_r>:
 801d9d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801d9d2:	460e      	mov	r6, r1
 801d9d4:	4614      	mov	r4, r2
 801d9d6:	4605      	mov	r5, r0
 801d9d8:	b118      	cbz	r0, 801d9e2 <__swbuf_r+0x12>
 801d9da:	6a03      	ldr	r3, [r0, #32]
 801d9dc:	b90b      	cbnz	r3, 801d9e2 <__swbuf_r+0x12>
 801d9de:	f7ff fa61 	bl	801cea4 <__sinit>
 801d9e2:	69a3      	ldr	r3, [r4, #24]
 801d9e4:	60a3      	str	r3, [r4, #8]
 801d9e6:	89a3      	ldrh	r3, [r4, #12]
 801d9e8:	071a      	lsls	r2, r3, #28
 801d9ea:	d525      	bpl.n	801da38 <__swbuf_r+0x68>
 801d9ec:	6923      	ldr	r3, [r4, #16]
 801d9ee:	b31b      	cbz	r3, 801da38 <__swbuf_r+0x68>
 801d9f0:	6823      	ldr	r3, [r4, #0]
 801d9f2:	6922      	ldr	r2, [r4, #16]
 801d9f4:	1a98      	subs	r0, r3, r2
 801d9f6:	6963      	ldr	r3, [r4, #20]
 801d9f8:	b2f6      	uxtb	r6, r6
 801d9fa:	4283      	cmp	r3, r0
 801d9fc:	4637      	mov	r7, r6
 801d9fe:	dc04      	bgt.n	801da0a <__swbuf_r+0x3a>
 801da00:	4621      	mov	r1, r4
 801da02:	4628      	mov	r0, r5
 801da04:	f7ff ffbc 	bl	801d980 <_fflush_r>
 801da08:	b9e0      	cbnz	r0, 801da44 <__swbuf_r+0x74>
 801da0a:	68a3      	ldr	r3, [r4, #8]
 801da0c:	3b01      	subs	r3, #1
 801da0e:	60a3      	str	r3, [r4, #8]
 801da10:	6823      	ldr	r3, [r4, #0]
 801da12:	1c5a      	adds	r2, r3, #1
 801da14:	6022      	str	r2, [r4, #0]
 801da16:	701e      	strb	r6, [r3, #0]
 801da18:	6962      	ldr	r2, [r4, #20]
 801da1a:	1c43      	adds	r3, r0, #1
 801da1c:	429a      	cmp	r2, r3
 801da1e:	d004      	beq.n	801da2a <__swbuf_r+0x5a>
 801da20:	89a3      	ldrh	r3, [r4, #12]
 801da22:	07db      	lsls	r3, r3, #31
 801da24:	d506      	bpl.n	801da34 <__swbuf_r+0x64>
 801da26:	2e0a      	cmp	r6, #10
 801da28:	d104      	bne.n	801da34 <__swbuf_r+0x64>
 801da2a:	4621      	mov	r1, r4
 801da2c:	4628      	mov	r0, r5
 801da2e:	f7ff ffa7 	bl	801d980 <_fflush_r>
 801da32:	b938      	cbnz	r0, 801da44 <__swbuf_r+0x74>
 801da34:	4638      	mov	r0, r7
 801da36:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801da38:	4621      	mov	r1, r4
 801da3a:	4628      	mov	r0, r5
 801da3c:	f000 f806 	bl	801da4c <__swsetup_r>
 801da40:	2800      	cmp	r0, #0
 801da42:	d0d5      	beq.n	801d9f0 <__swbuf_r+0x20>
 801da44:	f04f 37ff 	mov.w	r7, #4294967295
 801da48:	e7f4      	b.n	801da34 <__swbuf_r+0x64>
	...

0801da4c <__swsetup_r>:
 801da4c:	b538      	push	{r3, r4, r5, lr}
 801da4e:	4b2a      	ldr	r3, [pc, #168]	; (801daf8 <__swsetup_r+0xac>)
 801da50:	4605      	mov	r5, r0
 801da52:	6818      	ldr	r0, [r3, #0]
 801da54:	460c      	mov	r4, r1
 801da56:	b118      	cbz	r0, 801da60 <__swsetup_r+0x14>
 801da58:	6a03      	ldr	r3, [r0, #32]
 801da5a:	b90b      	cbnz	r3, 801da60 <__swsetup_r+0x14>
 801da5c:	f7ff fa22 	bl	801cea4 <__sinit>
 801da60:	89a3      	ldrh	r3, [r4, #12]
 801da62:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801da66:	0718      	lsls	r0, r3, #28
 801da68:	d422      	bmi.n	801dab0 <__swsetup_r+0x64>
 801da6a:	06d9      	lsls	r1, r3, #27
 801da6c:	d407      	bmi.n	801da7e <__swsetup_r+0x32>
 801da6e:	2309      	movs	r3, #9
 801da70:	602b      	str	r3, [r5, #0]
 801da72:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801da76:	81a3      	strh	r3, [r4, #12]
 801da78:	f04f 30ff 	mov.w	r0, #4294967295
 801da7c:	e034      	b.n	801dae8 <__swsetup_r+0x9c>
 801da7e:	0758      	lsls	r0, r3, #29
 801da80:	d512      	bpl.n	801daa8 <__swsetup_r+0x5c>
 801da82:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801da84:	b141      	cbz	r1, 801da98 <__swsetup_r+0x4c>
 801da86:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801da8a:	4299      	cmp	r1, r3
 801da8c:	d002      	beq.n	801da94 <__swsetup_r+0x48>
 801da8e:	4628      	mov	r0, r5
 801da90:	f7ff fbd0 	bl	801d234 <_free_r>
 801da94:	2300      	movs	r3, #0
 801da96:	6363      	str	r3, [r4, #52]	; 0x34
 801da98:	89a3      	ldrh	r3, [r4, #12]
 801da9a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801da9e:	81a3      	strh	r3, [r4, #12]
 801daa0:	2300      	movs	r3, #0
 801daa2:	6063      	str	r3, [r4, #4]
 801daa4:	6923      	ldr	r3, [r4, #16]
 801daa6:	6023      	str	r3, [r4, #0]
 801daa8:	89a3      	ldrh	r3, [r4, #12]
 801daaa:	f043 0308 	orr.w	r3, r3, #8
 801daae:	81a3      	strh	r3, [r4, #12]
 801dab0:	6923      	ldr	r3, [r4, #16]
 801dab2:	b94b      	cbnz	r3, 801dac8 <__swsetup_r+0x7c>
 801dab4:	89a3      	ldrh	r3, [r4, #12]
 801dab6:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801daba:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801dabe:	d003      	beq.n	801dac8 <__swsetup_r+0x7c>
 801dac0:	4621      	mov	r1, r4
 801dac2:	4628      	mov	r0, r5
 801dac4:	f000 f840 	bl	801db48 <__smakebuf_r>
 801dac8:	89a0      	ldrh	r0, [r4, #12]
 801daca:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801dace:	f010 0301 	ands.w	r3, r0, #1
 801dad2:	d00a      	beq.n	801daea <__swsetup_r+0x9e>
 801dad4:	2300      	movs	r3, #0
 801dad6:	60a3      	str	r3, [r4, #8]
 801dad8:	6963      	ldr	r3, [r4, #20]
 801dada:	425b      	negs	r3, r3
 801dadc:	61a3      	str	r3, [r4, #24]
 801dade:	6923      	ldr	r3, [r4, #16]
 801dae0:	b943      	cbnz	r3, 801daf4 <__swsetup_r+0xa8>
 801dae2:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801dae6:	d1c4      	bne.n	801da72 <__swsetup_r+0x26>
 801dae8:	bd38      	pop	{r3, r4, r5, pc}
 801daea:	0781      	lsls	r1, r0, #30
 801daec:	bf58      	it	pl
 801daee:	6963      	ldrpl	r3, [r4, #20]
 801daf0:	60a3      	str	r3, [r4, #8]
 801daf2:	e7f4      	b.n	801dade <__swsetup_r+0x92>
 801daf4:	2000      	movs	r0, #0
 801daf6:	e7f7      	b.n	801dae8 <__swsetup_r+0x9c>
 801daf8:	24000120 	.word	0x24000120

0801dafc <__swhatbuf_r>:
 801dafc:	b570      	push	{r4, r5, r6, lr}
 801dafe:	460c      	mov	r4, r1
 801db00:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801db04:	2900      	cmp	r1, #0
 801db06:	b096      	sub	sp, #88	; 0x58
 801db08:	4615      	mov	r5, r2
 801db0a:	461e      	mov	r6, r3
 801db0c:	da0d      	bge.n	801db2a <__swhatbuf_r+0x2e>
 801db0e:	89a3      	ldrh	r3, [r4, #12]
 801db10:	f013 0f80 	tst.w	r3, #128	; 0x80
 801db14:	f04f 0100 	mov.w	r1, #0
 801db18:	bf0c      	ite	eq
 801db1a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 801db1e:	2340      	movne	r3, #64	; 0x40
 801db20:	2000      	movs	r0, #0
 801db22:	6031      	str	r1, [r6, #0]
 801db24:	602b      	str	r3, [r5, #0]
 801db26:	b016      	add	sp, #88	; 0x58
 801db28:	bd70      	pop	{r4, r5, r6, pc}
 801db2a:	466a      	mov	r2, sp
 801db2c:	f000 f848 	bl	801dbc0 <_fstat_r>
 801db30:	2800      	cmp	r0, #0
 801db32:	dbec      	blt.n	801db0e <__swhatbuf_r+0x12>
 801db34:	9901      	ldr	r1, [sp, #4]
 801db36:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 801db3a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 801db3e:	4259      	negs	r1, r3
 801db40:	4159      	adcs	r1, r3
 801db42:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801db46:	e7eb      	b.n	801db20 <__swhatbuf_r+0x24>

0801db48 <__smakebuf_r>:
 801db48:	898b      	ldrh	r3, [r1, #12]
 801db4a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801db4c:	079d      	lsls	r5, r3, #30
 801db4e:	4606      	mov	r6, r0
 801db50:	460c      	mov	r4, r1
 801db52:	d507      	bpl.n	801db64 <__smakebuf_r+0x1c>
 801db54:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801db58:	6023      	str	r3, [r4, #0]
 801db5a:	6123      	str	r3, [r4, #16]
 801db5c:	2301      	movs	r3, #1
 801db5e:	6163      	str	r3, [r4, #20]
 801db60:	b002      	add	sp, #8
 801db62:	bd70      	pop	{r4, r5, r6, pc}
 801db64:	ab01      	add	r3, sp, #4
 801db66:	466a      	mov	r2, sp
 801db68:	f7ff ffc8 	bl	801dafc <__swhatbuf_r>
 801db6c:	9900      	ldr	r1, [sp, #0]
 801db6e:	4605      	mov	r5, r0
 801db70:	4630      	mov	r0, r6
 801db72:	f7ff f871 	bl	801cc58 <_malloc_r>
 801db76:	b948      	cbnz	r0, 801db8c <__smakebuf_r+0x44>
 801db78:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801db7c:	059a      	lsls	r2, r3, #22
 801db7e:	d4ef      	bmi.n	801db60 <__smakebuf_r+0x18>
 801db80:	f023 0303 	bic.w	r3, r3, #3
 801db84:	f043 0302 	orr.w	r3, r3, #2
 801db88:	81a3      	strh	r3, [r4, #12]
 801db8a:	e7e3      	b.n	801db54 <__smakebuf_r+0xc>
 801db8c:	89a3      	ldrh	r3, [r4, #12]
 801db8e:	6020      	str	r0, [r4, #0]
 801db90:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801db94:	81a3      	strh	r3, [r4, #12]
 801db96:	9b00      	ldr	r3, [sp, #0]
 801db98:	6163      	str	r3, [r4, #20]
 801db9a:	9b01      	ldr	r3, [sp, #4]
 801db9c:	6120      	str	r0, [r4, #16]
 801db9e:	b15b      	cbz	r3, 801dbb8 <__smakebuf_r+0x70>
 801dba0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801dba4:	4630      	mov	r0, r6
 801dba6:	f000 f81d 	bl	801dbe4 <_isatty_r>
 801dbaa:	b128      	cbz	r0, 801dbb8 <__smakebuf_r+0x70>
 801dbac:	89a3      	ldrh	r3, [r4, #12]
 801dbae:	f023 0303 	bic.w	r3, r3, #3
 801dbb2:	f043 0301 	orr.w	r3, r3, #1
 801dbb6:	81a3      	strh	r3, [r4, #12]
 801dbb8:	89a3      	ldrh	r3, [r4, #12]
 801dbba:	431d      	orrs	r5, r3
 801dbbc:	81a5      	strh	r5, [r4, #12]
 801dbbe:	e7cf      	b.n	801db60 <__smakebuf_r+0x18>

0801dbc0 <_fstat_r>:
 801dbc0:	b538      	push	{r3, r4, r5, lr}
 801dbc2:	4d07      	ldr	r5, [pc, #28]	; (801dbe0 <_fstat_r+0x20>)
 801dbc4:	2300      	movs	r3, #0
 801dbc6:	4604      	mov	r4, r0
 801dbc8:	4608      	mov	r0, r1
 801dbca:	4611      	mov	r1, r2
 801dbcc:	602b      	str	r3, [r5, #0]
 801dbce:	f7e3 fa76 	bl	80010be <_fstat>
 801dbd2:	1c43      	adds	r3, r0, #1
 801dbd4:	d102      	bne.n	801dbdc <_fstat_r+0x1c>
 801dbd6:	682b      	ldr	r3, [r5, #0]
 801dbd8:	b103      	cbz	r3, 801dbdc <_fstat_r+0x1c>
 801dbda:	6023      	str	r3, [r4, #0]
 801dbdc:	bd38      	pop	{r3, r4, r5, pc}
 801dbde:	bf00      	nop
 801dbe0:	2400b2a0 	.word	0x2400b2a0

0801dbe4 <_isatty_r>:
 801dbe4:	b538      	push	{r3, r4, r5, lr}
 801dbe6:	4d06      	ldr	r5, [pc, #24]	; (801dc00 <_isatty_r+0x1c>)
 801dbe8:	2300      	movs	r3, #0
 801dbea:	4604      	mov	r4, r0
 801dbec:	4608      	mov	r0, r1
 801dbee:	602b      	str	r3, [r5, #0]
 801dbf0:	f7e3 fa6a 	bl	80010c8 <_isatty>
 801dbf4:	1c43      	adds	r3, r0, #1
 801dbf6:	d102      	bne.n	801dbfe <_isatty_r+0x1a>
 801dbf8:	682b      	ldr	r3, [r5, #0]
 801dbfa:	b103      	cbz	r3, 801dbfe <_isatty_r+0x1a>
 801dbfc:	6023      	str	r3, [r4, #0]
 801dbfe:	bd38      	pop	{r3, r4, r5, pc}
 801dc00:	2400b2a0 	.word	0x2400b2a0

0801dc04 <_init>:
 801dc04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dc06:	bf00      	nop
 801dc08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801dc0a:	bc08      	pop	{r3}
 801dc0c:	469e      	mov	lr, r3
 801dc0e:	4770      	bx	lr

0801dc10 <_fini>:
 801dc10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801dc12:	bf00      	nop
 801dc14:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801dc16:	bc08      	pop	{r3}
 801dc18:	469e      	mov	lr, r3
 801dc1a:	4770      	bx	lr
